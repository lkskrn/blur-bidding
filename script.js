(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([
    [888],
    {
        81556: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                Sg: function () {
                    return ForkEvent;
                },
                zt: function () {
                    return Provider;
                },
            });
            var bignumber = __webpack_require__(2593),
                lib_esm = __webpack_require__(6881),
                logger_lib_esm = __webpack_require__(1581);
            let logger = new logger_lib_esm.Yd("abstract-provider/5.6.0");
            class ForkEvent extends lib_esm.dk {
                static isForkEvent(value) {
                    return !!(value && value._isForkEvent);
                }
            }
            class Provider {
                constructor() {
                    logger.checkAbstract(new.target, Provider), (0, lib_esm.zG)(this, "_isProvider", !0);
                }
                getFeeData() {
                    var thisArg, _arguments, P, generator;
                    return (
                        (thisArg = this),
                        (_arguments = void 0),
                        (P = void 0),
                        (generator = function* () {
                            let { block, gasPrice } = yield (0, lib_esm.mE)({ block: this.getBlock("latest"), gasPrice: this.getGasPrice().catch((error) => null) }),
                                maxFeePerGas = null,
                                maxPriorityFeePerGas = null;
                            return (
                                block && block.baseFeePerGas && ((maxPriorityFeePerGas = bignumber.O$.from("1500000000")), (maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas))),
                                { maxFeePerGas, maxPriorityFeePerGas, gasPrice }
                            );
                        }),
                        new (P || (P = Promise))(function (resolve, reject) {
                            function fulfilled(value) {
                                try {
                                    step(generator.next(value));
                                } catch (e) {
                                    reject(e);
                                }
                            }
                            function rejected(value) {
                                try {
                                    step(generator.throw(value));
                                } catch (e) {
                                    reject(e);
                                }
                            }
                            function step(result) {
                                var value;
                                result.done
                                    ? resolve(result.value)
                                    : ((value = result.value) instanceof P
                                          ? value
                                          : new P(function (resolve) {
                                                resolve(value);
                                            })
                                      ).then(fulfilled, rejected);
                            }
                            step((generator = generator.apply(thisArg, _arguments || [])).next());
                        })
                    );
                }
                addListener(eventName, listener) {
                    return this.on(eventName, listener);
                }
                removeListener(eventName, listener) {
                    return this.off(eventName, listener);
                }
                static isProvider(value) {
                    return !!(value && value._isProvider);
                }
            }
        },
        48088: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                E: function () {
                    return Signer;
                },
                b: function () {
                    return VoidSigner;
                },
            });
            var lib_esm = __webpack_require__(6881),
                logger_lib_esm = __webpack_require__(1581),
                __awaiter = function (thisArg, _arguments, P, generator) {
                    return new (P || (P = Promise))(function (resolve, reject) {
                        function fulfilled(value) {
                            try {
                                step(generator.next(value));
                            } catch (e) {
                                reject(e);
                            }
                        }
                        function rejected(value) {
                            try {
                                step(generator.throw(value));
                            } catch (e) {
                                reject(e);
                            }
                        }
                        function step(result) {
                            var value;
                            result.done
                                ? resolve(result.value)
                                : ((value = result.value) instanceof P
                                      ? value
                                      : new P(function (resolve) {
                                            resolve(value);
                                        })
                                  ).then(fulfilled, rejected);
                        }
                        step((generator = generator.apply(thisArg, _arguments || [])).next());
                    });
                };
            let logger = new logger_lib_esm.Yd("abstract-signer/5.6.0"),
                allowedTransactionKeys = ["accessList", "ccipReadEnabled", "chainId", "customData", "data", "from", "gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "to", "type", "value"],
                forwardErrors = [logger_lib_esm.Yd.errors.INSUFFICIENT_FUNDS, logger_lib_esm.Yd.errors.NONCE_EXPIRED, logger_lib_esm.Yd.errors.REPLACEMENT_UNDERPRICED];
            class Signer {
                constructor() {
                    logger.checkAbstract(new.target, Signer), (0, lib_esm.zG)(this, "_isSigner", !0);
                }
                getBalance(blockTag) {
                    return __awaiter(this, void 0, void 0, function* () {
                        return this._checkProvider("getBalance"), yield this.provider.getBalance(this.getAddress(), blockTag);
                    });
                }
                getTransactionCount(blockTag) {
                    return __awaiter(this, void 0, void 0, function* () {
                        return this._checkProvider("getTransactionCount"), yield this.provider.getTransactionCount(this.getAddress(), blockTag);
                    });
                }
                estimateGas(transaction) {
                    return __awaiter(this, void 0, void 0, function* () {
                        this._checkProvider("estimateGas");
                        let tx = yield (0, lib_esm.mE)(this.checkTransaction(transaction));
                        return yield this.provider.estimateGas(tx);
                    });
                }
                call(transaction, blockTag) {
                    return __awaiter(this, void 0, void 0, function* () {
                        this._checkProvider("call");
                        let tx = yield (0, lib_esm.mE)(this.checkTransaction(transaction));
                        return yield this.provider.call(tx, blockTag);
                    });
                }
                sendTransaction(transaction) {
                    return __awaiter(this, void 0, void 0, function* () {
                        this._checkProvider("sendTransaction");
                        let tx = yield this.populateTransaction(transaction),
                            signedTx = yield this.signTransaction(tx);
                        return yield this.provider.sendTransaction(signedTx);
                    });
                }
                getChainId() {
                    return __awaiter(this, void 0, void 0, function* () {
                        this._checkProvider("getChainId");
                        let network = yield this.provider.getNetwork();
                        return network.chainId;
                    });
                }
                getGasPrice() {
                    return __awaiter(this, void 0, void 0, function* () {
                        return this._checkProvider("getGasPrice"), yield this.provider.getGasPrice();
                    });
                }
                getFeeData() {
                    return __awaiter(this, void 0, void 0, function* () {
                        return this._checkProvider("getFeeData"), yield this.provider.getFeeData();
                    });
                }
                resolveName(name) {
                    return __awaiter(this, void 0, void 0, function* () {
                        return this._checkProvider("resolveName"), yield this.provider.resolveName(name);
                    });
                }
                checkTransaction(transaction) {
                    for (let key in transaction) -1 === allowedTransactionKeys.indexOf(key) && logger.throwArgumentError("invalid transaction key: " + key, "transaction", transaction);
                    let tx = (0, lib_esm.DC)(transaction);
                    return (
                        null == tx.from
                            ? (tx.from = this.getAddress())
                            : (tx.from = Promise.all([Promise.resolve(tx.from), this.getAddress()]).then(
                                  (result) => (result[0].toLowerCase() !== result[1].toLowerCase() && logger.throwArgumentError("from address mismatch", "transaction", transaction), result[0])
                              )),
                        tx
                    );
                }
                populateTransaction(transaction) {
                    return __awaiter(this, void 0, void 0, function* () {
                        let tx = yield (0, lib_esm.mE)(this.checkTransaction(transaction));
                        null != tx.to &&
                            ((tx.to = Promise.resolve(tx.to).then((to) =>
                                __awaiter(this, void 0, void 0, function* () {
                                    if (null == to) return null;
                                    let address = yield this.resolveName(to);
                                    return null == address && logger.throwArgumentError("provided ENS name resolves to null", "tx.to", to), address;
                                })
                            )),
                            tx.to.catch((error) => {}));
                        let hasEip1559 = null != tx.maxFeePerGas || null != tx.maxPriorityFeePerGas;
                        if (
                            (null != tx.gasPrice && (2 === tx.type || hasEip1559)
                                ? logger.throwArgumentError("eip-1559 transaction do not support gasPrice", "transaction", transaction)
                                : (0 === tx.type || 1 === tx.type) && hasEip1559 && logger.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas", "transaction", transaction),
                            (2 === tx.type || null == tx.type) && null != tx.maxFeePerGas && null != tx.maxPriorityFeePerGas)
                        )
                            tx.type = 2;
                        else if (0 === tx.type || 1 === tx.type) null == tx.gasPrice && (tx.gasPrice = this.getGasPrice());
                        else {
                            let feeData = yield this.getFeeData();
                            if (null == tx.type) {
                                if (null != feeData.maxFeePerGas && null != feeData.maxPriorityFeePerGas) {
                                    if (((tx.type = 2), null != tx.gasPrice)) {
                                        let gasPrice = tx.gasPrice;
                                        delete tx.gasPrice, (tx.maxFeePerGas = gasPrice), (tx.maxPriorityFeePerGas = gasPrice);
                                    } else null == tx.maxFeePerGas && (tx.maxFeePerGas = feeData.maxFeePerGas), null == tx.maxPriorityFeePerGas && (tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas);
                                } else
                                    null != feeData.gasPrice
                                        ? (hasEip1559 && logger.throwError("network does not support EIP-1559", logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation: "populateTransaction" }),
                                          null == tx.gasPrice && (tx.gasPrice = feeData.gasPrice),
                                          (tx.type = 0))
                                        : logger.throwError("failed to get consistent fee data", logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation: "signer.getFeeData" });
                            } else 2 === tx.type && (null == tx.maxFeePerGas && (tx.maxFeePerGas = feeData.maxFeePerGas), null == tx.maxPriorityFeePerGas && (tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas));
                        }
                        return (
                            null == tx.nonce && (tx.nonce = this.getTransactionCount("pending")),
                            null == tx.gasLimit &&
                                (tx.gasLimit = this.estimateGas(tx).catch((error) => {
                                    if (forwardErrors.indexOf(error.code) >= 0) throw error;
                                    return logger.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", logger_lib_esm.Yd.errors.UNPREDICTABLE_GAS_LIMIT, { error: error, tx: tx });
                                })),
                            null == tx.chainId
                                ? (tx.chainId = this.getChainId())
                                : (tx.chainId = Promise.all([Promise.resolve(tx.chainId), this.getChainId()]).then(
                                      (results) => (0 !== results[1] && results[0] !== results[1] && logger.throwArgumentError("chainId address mismatch", "transaction", transaction), results[0])
                                  )),
                            yield (0, lib_esm.mE)(tx)
                        );
                    });
                }
                _checkProvider(operation) {
                    this.provider || logger.throwError("missing provider", logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation: operation || "_checkProvider" });
                }
                static isSigner(value) {
                    return !!(value && value._isSigner);
                }
            }
            class VoidSigner extends Signer {
                constructor(address, provider) {
                    logger.checkNew(new.target, VoidSigner), super(), (0, lib_esm.zG)(this, "address", address), (0, lib_esm.zG)(this, "provider", provider || null);
                }
                getAddress() {
                    return Promise.resolve(this.address);
                }
                _fail(message, operation) {
                    return Promise.resolve().then(() => {
                        logger.throwError(message, logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation: operation });
                    });
                }
                signMessage(message) {
                    return this._fail("VoidSigner cannot sign messages", "signMessage");
                }
                signTransaction(transaction) {
                    return this._fail("VoidSigner cannot sign transactions", "signTransaction");
                }
                _signTypedData(domain, types, value) {
                    return this._fail("VoidSigner cannot sign typed data", "signTypedData");
                }
                connect(provider) {
                    return new VoidSigner(this.address, provider);
                }
            }
        },
        19485: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                Kn: function () {
                    return getAddress;
                },
                CR: function () {
                    return getContractAddress;
                },
                UJ: function () {
                    return isAddress;
                },
            });
            var lib_esm = __webpack_require__(16441),
                bignumber = __webpack_require__(2593),
                keccak256_lib_esm = __webpack_require__(38197),
                rlp_lib_esm = __webpack_require__(59052),
                logger_lib_esm = __webpack_require__(1581);
            let logger = new logger_lib_esm.Yd("address/5.6.0");
            function getChecksumAddress(address) {
                (0, lib_esm.A7)(address, 20) || logger.throwArgumentError("invalid address", "address", address), (address = address.toLowerCase());
                let chars = address.substring(2).split(""),
                    expanded = new Uint8Array(40);
                for (let i = 0; i < 40; i++) expanded[i] = chars[i].charCodeAt(0);
                let hashed = (0, lib_esm.lE)((0, keccak256_lib_esm.w)(expanded));
                for (let i1 = 0; i1 < 40; i1 += 2) hashed[i1 >> 1] >> 4 >= 8 && (chars[i1] = chars[i1].toUpperCase()), (15 & hashed[i1 >> 1]) >= 8 && (chars[i1 + 1] = chars[i1 + 1].toUpperCase());
                return "0x" + chars.join("");
            }
            let ibanLookup = {};
            for (let i = 0; i < 10; i++) ibanLookup[String(i)] = String(i);
            for (let i1 = 0; i1 < 26; i1++) ibanLookup[String.fromCharCode(65 + i1)] = String(10 + i1);
            let safeDigits = Math.floor(Math.log10 ? Math.log10(9007199254740991) : Math.log(9007199254740991) / Math.LN10);
            function getAddress(address) {
                let result = null;
                if (("string" != typeof address && logger.throwArgumentError("invalid address", "address", address), address.match(/^(0x)?[0-9a-fA-F]{40}$/)))
                    "0x" !== address.substring(0, 2) && (address = "0x" + address),
                        (result = getChecksumAddress(address)),
                        address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address && logger.throwArgumentError("bad address checksum", "address", address);
                else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
                    for (
                        address.substring(2, 4) !==
                            (function (address) {
                                let expanded = (address = (address = address.toUpperCase()).substring(4) + address.substring(0, 2) + "00")
                                    .split("")
                                    .map((c) => ibanLookup[c])
                                    .join("");
                                for (; expanded.length >= safeDigits; ) {
                                    let block = expanded.substring(0, safeDigits);
                                    expanded = (parseInt(block, 10) % 97) + expanded.substring(block.length);
                                }
                                let checksum = String(98 - (parseInt(expanded, 10) % 97));
                                for (; checksum.length < 2; ) checksum = "0" + checksum;
                                return checksum;
                            })(address) && logger.throwArgumentError("bad icap checksum", "address", address),
                            result = (0, bignumber.g$)(address.substring(4));
                        result.length < 40;

                    )
                        result = "0" + result;
                    result = getChecksumAddress("0x" + result);
                } else logger.throwArgumentError("invalid address", "address", address);
                return result;
            }
            function isAddress(address) {
                try {
                    return getAddress(address), !0;
                } catch (error) {}
                return !1;
            }
            function getContractAddress(transaction) {
                let from = null;
                try {
                    from = getAddress(transaction.from);
                } catch (error) {
                    logger.throwArgumentError("missing from address", "transaction", transaction);
                }
                let nonce = (0, lib_esm.G1)((0, lib_esm.lE)(bignumber.O$.from(transaction.nonce).toHexString()));
                return getAddress((0, lib_esm.p3)((0, keccak256_lib_esm.w)((0, rlp_lib_esm.c)([from, nonce])), 12));
            }
        },
        48794: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                i: function () {
                    return version;
                },
            });
            let version = "bignumber/5.6.0";
        },
        2593: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                O$: function () {
                    return BigNumber;
                },
                Zm: function () {
                    return isBigNumberish;
                },
                g$: function () {
                    return _base36To16;
                },
            });
            var bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(13550),
                bn_js__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_0__),
                _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(16441),
                _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1581),
                _version__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(48794),
                BN = bn_js__WEBPACK_IMPORTED_MODULE_0___default().BN;
            let logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Yd(_version__WEBPACK_IMPORTED_MODULE_2__.i),
                _constructorGuard = {};
            function isBigNumberish(value) {
                return (
                    null != value &&
                    (BigNumber.isBigNumber(value) ||
                        ("number" == typeof value && value % 1 == 0) ||
                        ("string" == typeof value && !!value.match(/^-?[0-9]+$/)) ||
                        (0, _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.A7)(value) ||
                        "bigint" == typeof value ||
                        (0, _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__._t)(value))
                );
            }
            let _warnedToStringRadix = !1;
            class BigNumber {
                constructor(constructorGuard, hex) {
                    logger.checkNew(new.target, BigNumber),
                        constructorGuard !== _constructorGuard &&
                            logger.throwError("cannot call constructor directly; use BigNumber.from", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Yd.errors.UNSUPPORTED_OPERATION, { operation: "new (BigNumber)" }),
                        (this._hex = hex),
                        (this._isBigNumber = !0),
                        Object.freeze(this);
                }
                fromTwos(value) {
                    return toBigNumber(toBN(this).fromTwos(value));
                }
                toTwos(value) {
                    return toBigNumber(toBN(this).toTwos(value));
                }
                abs() {
                    return "-" === this._hex[0] ? BigNumber.from(this._hex.substring(1)) : this;
                }
                add(other) {
                    return toBigNumber(toBN(this).add(toBN(other)));
                }
                sub(other) {
                    return toBigNumber(toBN(this).sub(toBN(other)));
                }
                div(other) {
                    let o = BigNumber.from(other);
                    return o.isZero() && throwFault("division-by-zero", "div"), toBigNumber(toBN(this).div(toBN(other)));
                }
                mul(other) {
                    return toBigNumber(toBN(this).mul(toBN(other)));
                }
                mod(other) {
                    let value = toBN(other);
                    return value.isNeg() && throwFault("division-by-zero", "mod"), toBigNumber(toBN(this).umod(value));
                }
                pow(other) {
                    let value = toBN(other);
                    return value.isNeg() && throwFault("negative-power", "pow"), toBigNumber(toBN(this).pow(value));
                }
                and(other) {
                    let value = toBN(other);
                    return (this.isNegative() || value.isNeg()) && throwFault("unbound-bitwise-result", "and"), toBigNumber(toBN(this).and(value));
                }
                or(other) {
                    let value = toBN(other);
                    return (this.isNegative() || value.isNeg()) && throwFault("unbound-bitwise-result", "or"), toBigNumber(toBN(this).or(value));
                }
                xor(other) {
                    let value = toBN(other);
                    return (this.isNegative() || value.isNeg()) && throwFault("unbound-bitwise-result", "xor"), toBigNumber(toBN(this).xor(value));
                }
                mask(value) {
                    return (this.isNegative() || value < 0) && throwFault("negative-width", "mask"), toBigNumber(toBN(this).maskn(value));
                }
                shl(value) {
                    return (this.isNegative() || value < 0) && throwFault("negative-width", "shl"), toBigNumber(toBN(this).shln(value));
                }
                shr(value) {
                    return (this.isNegative() || value < 0) && throwFault("negative-width", "shr"), toBigNumber(toBN(this).shrn(value));
                }
                eq(other) {
                    return toBN(this).eq(toBN(other));
                }
                lt(other) {
                    return toBN(this).lt(toBN(other));
                }
                lte(other) {
                    return toBN(this).lte(toBN(other));
                }
                gt(other) {
                    return toBN(this).gt(toBN(other));
                }
                gte(other) {
                    return toBN(this).gte(toBN(other));
                }
                isNegative() {
                    return "-" === this._hex[0];
                }
                isZero() {
                    return toBN(this).isZero();
                }
                toNumber() {
                    try {
                        return toBN(this).toNumber();
                    } catch (error) {
                        throwFault("overflow", "toNumber", this.toString());
                    }
                    return null;
                }
                toBigInt() {
                    try {
                        return BigInt(this.toString());
                    } catch (e) {}
                    return logger.throwError("this platform does not support BigInt", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Yd.errors.UNSUPPORTED_OPERATION, { value: this.toString() });
                }
                toString() {
                    return (
                        arguments.length > 0 &&
                            (10 === arguments[0]
                                ? _warnedToStringRadix || ((_warnedToStringRadix = !0), logger.warn("BigNumber.toString does not accept any parameters; base-10 is assumed"))
                                : 16 === arguments[0]
                                ? logger.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Yd.errors.UNEXPECTED_ARGUMENT, {})
                                : logger.throwError("BigNumber.toString does not accept parameters", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Yd.errors.UNEXPECTED_ARGUMENT, {})),
                        toBN(this).toString(10)
                    );
                }
                toHexString() {
                    return this._hex;
                }
                toJSON(key) {
                    return { type: "BigNumber", hex: this.toHexString() };
                }
                static from(value) {
                    if (value instanceof BigNumber) return value;
                    if ("string" == typeof value)
                        return value.match(/^-?0x[0-9a-f]+$/i)
                            ? new BigNumber(_constructorGuard, toHex(value))
                            : value.match(/^-?[0-9]+$/)
                            ? new BigNumber(_constructorGuard, toHex(new BN(value)))
                            : logger.throwArgumentError("invalid BigNumber string", "value", value);
                    if ("number" == typeof value)
                        return value % 1 && throwFault("underflow", "BigNumber.from", value), (value >= 9007199254740991 || value <= -9007199254740991) && throwFault("overflow", "BigNumber.from", value), BigNumber.from(String(value));
                    if ("bigint" == typeof value) return BigNumber.from(value.toString());
                    if ((0, _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__._t)(value)) return BigNumber.from((0, _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.Dv)(value));
                    if (value) {
                        if (value.toHexString) {
                            let hex = value.toHexString();
                            if ("string" == typeof hex) return BigNumber.from(hex);
                        } else {
                            let hex1 = value._hex;
                            if (
                                (null == hex1 && "BigNumber" === value.type && (hex1 = value.hex),
                                "string" == typeof hex1 && ((0, _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.A7)(hex1) || ("-" === hex1[0] && (0, _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.A7)(hex1.substring(1)))))
                            )
                                return BigNumber.from(hex1);
                        }
                    }
                    return logger.throwArgumentError("invalid BigNumber value", "value", value);
                }
                static isBigNumber(value) {
                    return !!(value && value._isBigNumber);
                }
            }
            function toHex(value) {
                if ("string" != typeof value) return toHex(value.toString(16));
                if ("-" === value[0]) return ("-" === (value = value.substring(1))[0] && logger.throwArgumentError("invalid hex", "value", value), "0x00" === (value = toHex(value))) ? value : "-" + value;
                if (("0x" !== value.substring(0, 2) && (value = "0x" + value), "0x" === value)) return "0x00";
                for (value.length % 2 && (value = "0x0" + value.substring(2)); value.length > 4 && "0x00" === value.substring(0, 4); ) value = "0x" + value.substring(4);
                return value;
            }
            function toBigNumber(value) {
                return BigNumber.from(toHex(value));
            }
            function toBN(value) {
                let hex = BigNumber.from(value).toHexString();
                return "-" === hex[0] ? new BN("-" + hex.substring(3), 16) : new BN(hex.substring(2), 16);
            }
            function throwFault(fault, operation, value) {
                let params = { fault: fault, operation: operation };
                return null != value && (params.value = value), logger.throwError(fault, _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Yd.errors.NUMERIC_FAULT, params);
            }
            function _base36To16(value) {
                return new BN(value, 36).toString(16);
            }
        },
        16441: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                lE: function () {
                    return arrayify;
                },
                zo: function () {
                    return concat;
                },
                xs: function () {
                    return hexConcat;
                },
                E1: function () {
                    return hexDataLength;
                },
                p3: function () {
                    return hexDataSlice;
                },
                Ou: function () {
                    return hexStripZeros;
                },
                $P: function () {
                    return hexValue;
                },
                $m: function () {
                    return hexZeroPad;
                },
                Dv: function () {
                    return hexlify;
                },
                _t: function () {
                    return isBytes;
                },
                Zq: function () {
                    return isBytesLike;
                },
                A7: function () {
                    return isHexString;
                },
                N: function () {
                    return splitSignature;
                },
                G1: function () {
                    return stripZeros;
                },
            });
            var lib_esm = __webpack_require__(1581);
            let logger = new lib_esm.Yd("bytes/5.6.1");
            function isHexable(value) {
                return !!value.toHexString;
            }
            function addSlice(array) {
                return (
                    array.slice ||
                        (array.slice = function () {
                            let args = Array.prototype.slice.call(arguments);
                            return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));
                        }),
                    array
                );
            }
            function isBytesLike(value) {
                return (isHexString(value) && !(value.length % 2)) || isBytes(value);
            }
            function isInteger(value) {
                return "number" == typeof value && value == value && value % 1 == 0;
            }
            function isBytes(value) {
                if (null == value) return !1;
                if (value.constructor === Uint8Array) return !0;
                if ("string" == typeof value || !isInteger(value.length) || value.length < 0) return !1;
                for (let i = 0; i < value.length; i++) {
                    let v = value[i];
                    if (!isInteger(v) || v < 0 || v >= 256) return !1;
                }
                return !0;
            }
            function arrayify(value, options) {
                if ((options || (options = {}), "number" == typeof value)) {
                    logger.checkSafeUint53(value, "invalid arrayify value");
                    let result = [];
                    for (; value; ) result.unshift(255 & value), (value = parseInt(String(value / 256)));
                    return 0 === result.length && result.push(0), addSlice(new Uint8Array(result));
                }
                if ((options.allowMissingPrefix && "string" == typeof value && "0x" !== value.substring(0, 2) && (value = "0x" + value), isHexable(value) && (value = value.toHexString()), isHexString(value))) {
                    let hex = value.substring(2);
                    hex.length % 2 && ("left" === options.hexPad ? (hex = "0" + hex) : "right" === options.hexPad ? (hex += "0") : logger.throwArgumentError("hex data is odd-length", "value", value));
                    let result1 = [];
                    for (let i = 0; i < hex.length; i += 2) result1.push(parseInt(hex.substring(i, i + 2), 16));
                    return addSlice(new Uint8Array(result1));
                }
                return isBytes(value) ? addSlice(new Uint8Array(value)) : logger.throwArgumentError("invalid arrayify value", "value", value);
            }
            function concat(items) {
                let objects = items.map((item) => arrayify(item)),
                    length = objects.reduce((accum, item) => accum + item.length, 0),
                    result = new Uint8Array(length);
                return objects.reduce((offset, object) => (result.set(object, offset), offset + object.length), 0), addSlice(result);
            }
            function stripZeros(value) {
                let result = arrayify(value);
                if (0 === result.length) return result;
                let start = 0;
                for (; start < result.length && 0 === result[start]; ) start++;
                return start && (result = result.slice(start)), result;
            }
            function isHexString(value, length) {
                return "string" == typeof value && !!value.match(/^0x[0-9A-Fa-f]*$/) && (!length || value.length === 2 + 2 * length);
            }
            let HexCharacters = "0123456789abcdef";
            function hexlify(value, options) {
                if ((options || (options = {}), "number" == typeof value)) {
                    logger.checkSafeUint53(value, "invalid hexlify value");
                    let hex = "";
                    for (; value; ) (hex = HexCharacters[15 & value] + hex), (value = Math.floor(value / 16));
                    return hex.length ? (hex.length % 2 && (hex = "0" + hex), "0x" + hex) : "0x00";
                }
                if ("bigint" == typeof value) return (value = value.toString(16)).length % 2 ? "0x0" + value : "0x" + value;
                if ((options.allowMissingPrefix && "string" == typeof value && "0x" !== value.substring(0, 2) && (value = "0x" + value), isHexable(value))) return value.toHexString();
                if (isHexString(value))
                    return (
                        value.length % 2 && ("left" === options.hexPad ? (value = "0x0" + value.substring(2)) : "right" === options.hexPad ? (value += "0") : logger.throwArgumentError("hex data is odd-length", "value", value)),
                        value.toLowerCase()
                    );
                if (isBytes(value)) {
                    let result = "0x";
                    for (let i = 0; i < value.length; i++) {
                        let v = value[i];
                        result += HexCharacters[(240 & v) >> 4] + HexCharacters[15 & v];
                    }
                    return result;
                }
                return logger.throwArgumentError("invalid hexlify value", "value", value);
            }
            function hexDataLength(data) {
                if ("string" != typeof data) data = hexlify(data);
                else if (!isHexString(data) || data.length % 2) return null;
                return (data.length - 2) / 2;
            }
            function hexDataSlice(data, offset, endOffset) {
                return ("string" != typeof data ? (data = hexlify(data)) : (!isHexString(data) || data.length % 2) && logger.throwArgumentError("invalid hexData", "value", data), (offset = 2 + 2 * offset), null != endOffset)
                    ? "0x" + data.substring(offset, 2 + 2 * endOffset)
                    : "0x" + data.substring(offset);
            }
            function hexConcat(items) {
                let result = "0x";
                return (
                    items.forEach((item) => {
                        result += hexlify(item).substring(2);
                    }),
                    result
                );
            }
            function hexValue(value) {
                let trimmed = hexStripZeros(hexlify(value, { hexPad: "left" }));
                return "0x" === trimmed ? "0x0" : trimmed;
            }
            function hexStripZeros(value) {
                "string" != typeof value && (value = hexlify(value)), isHexString(value) || logger.throwArgumentError("invalid hex string", "value", value), (value = value.substring(2));
                let offset = 0;
                for (; offset < value.length && "0" === value[offset]; ) offset++;
                return "0x" + value.substring(offset);
            }
            function hexZeroPad(value, length) {
                for (
                    "string" != typeof value ? (value = hexlify(value)) : isHexString(value) || logger.throwArgumentError("invalid hex string", "value", value),
                        value.length > 2 * length + 2 && logger.throwArgumentError("value out of range", "value", arguments[1]);
                    value.length < 2 * length + 2;

                )
                    value = "0x0" + value.substring(2);
                return value;
            }
            function splitSignature(signature) {
                let result = { r: "0x", s: "0x", _vs: "0x", recoveryParam: 0, v: 0, yParityAndS: "0x", compact: "0x" };
                if (isBytesLike(signature)) {
                    let bytes = arrayify(signature);
                    64 === bytes.length
                        ? ((result.v = 27 + (bytes[32] >> 7)), (bytes[32] &= 127), (result.r = hexlify(bytes.slice(0, 32))), (result.s = hexlify(bytes.slice(32, 64))))
                        : 65 === bytes.length
                        ? ((result.r = hexlify(bytes.slice(0, 32))), (result.s = hexlify(bytes.slice(32, 64))), (result.v = bytes[64]))
                        : logger.throwArgumentError("invalid signature string", "signature", signature),
                        result.v < 27 && (0 === result.v || 1 === result.v ? (result.v += 27) : logger.throwArgumentError("signature invalid v byte", "signature", signature)),
                        (result.recoveryParam = 1 - (result.v % 2)),
                        result.recoveryParam && (bytes[32] |= 128),
                        (result._vs = hexlify(bytes.slice(32, 64)));
                } else {
                    if (((result.r = signature.r), (result.s = signature.s), (result.v = signature.v), (result.recoveryParam = signature.recoveryParam), (result._vs = signature._vs), null != result._vs)) {
                        let vs = (function (value, length) {
                            (value = arrayify(value)).length > length && logger.throwArgumentError("value out of range", "value", arguments[0]);
                            let result = new Uint8Array(length);
                            return result.set(value, length - value.length), addSlice(result);
                        })(arrayify(result._vs), 32);
                        result._vs = hexlify(vs);
                        let recoveryParam = vs[0] >= 128 ? 1 : 0;
                        null == result.recoveryParam ? (result.recoveryParam = recoveryParam) : result.recoveryParam !== recoveryParam && logger.throwArgumentError("signature recoveryParam mismatch _vs", "signature", signature),
                            (vs[0] &= 127);
                        let s = hexlify(vs);
                        null == result.s ? (result.s = s) : result.s !== s && logger.throwArgumentError("signature v mismatch _vs", "signature", signature);
                    }
                    if (null == result.recoveryParam)
                        null == result.v
                            ? logger.throwArgumentError("signature missing v and recoveryParam", "signature", signature)
                            : 0 === result.v || 1 === result.v
                            ? (result.recoveryParam = result.v)
                            : (result.recoveryParam = 1 - (result.v % 2));
                    else if (null == result.v) result.v = 27 + result.recoveryParam;
                    else {
                        let recId = 0 === result.v || 1 === result.v ? result.v : 1 - (result.v % 2);
                        result.recoveryParam !== recId && logger.throwArgumentError("signature recoveryParam mismatch v", "signature", signature);
                    }
                    null != result.r && isHexString(result.r) ? (result.r = hexZeroPad(result.r, 32)) : logger.throwArgumentError("signature missing or invalid r", "signature", signature),
                        null != result.s && isHexString(result.s) ? (result.s = hexZeroPad(result.s, 32)) : logger.throwArgumentError("signature missing or invalid s", "signature", signature);
                    let vs1 = arrayify(result.s);
                    vs1[0] >= 128 && logger.throwArgumentError("signature s out of range", "signature", signature), result.recoveryParam && (vs1[0] |= 128);
                    let _vs = hexlify(vs1);
                    result._vs && (isHexString(result._vs) || logger.throwArgumentError("signature invalid _vs", "signature", signature), (result._vs = hexZeroPad(result._vs, 32))),
                        null == result._vs ? (result._vs = _vs) : result._vs !== _vs && logger.throwArgumentError("signature _vs mismatch v and s", "signature", signature);
                }
                return (result.yParityAndS = result._vs), (result.compact = result.r + result.yParityAndS.substring(2)), result;
            }
        },
        21046: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                Bz: function () {
                    return MaxUint256;
                },
                _Y: function () {
                    return Zero;
                },
                fh: function () {
                    return One;
                },
                tL: function () {
                    return NegativeOne;
                },
            });
            var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2593);
            let NegativeOne = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__.O$.from(-1),
                Zero = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__.O$.from(0),
                One = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__.O$.from(1),
                MaxUint256 = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__.O$.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
        },
        32046: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                id: function () {
                    return id;
                },
            });
            var _ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(38197),
                _ethersproject_strings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(29251);
            function id(text) {
                return (0, _ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_0__.w)((0, _ethersproject_strings__WEBPACK_IMPORTED_MODULE_1__.Y0)(text));
            }
        },
        38197: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                w: function () {
                    return keccak256;
                },
            });
            var js_sha3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(91094),
                js_sha3__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(js_sha3__WEBPACK_IMPORTED_MODULE_0__),
                _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16441);
            function keccak256(data) {
                return "0x" + js_sha3__WEBPACK_IMPORTED_MODULE_0___default().keccak_256((0, _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__.lE)(data));
            }
        },
        1581: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            var LogLevel, ErrorCode, LogLevel1, ErrorCode1;
            __webpack_require__.d(__webpack_exports__, {
                Yd: function () {
                    return Logger;
                },
            });
            let _permanentCensorErrors = !1,
                _censorErrors = !1,
                LogLevels = { debug: 1, default: 2, info: 2, warning: 3, error: 4, off: 5 },
                _logLevel = LogLevels.default,
                _globalLogger = null,
                _normalizeError = (function () {
                    try {
                        let missing = [];
                        if (
                            (["NFD", "NFC", "NFKD", "NFKC"].forEach((form) => {
                                try {
                                    if ("test" !== "test".normalize(form)) throw Error("bad normalize");
                                } catch (error) {
                                    missing.push(form);
                                }
                            }),
                            missing.length)
                        )
                            throw Error("missing " + missing.join(", "));
                        if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw Error("broken implementation");
                    } catch (error) {
                        return error.message;
                    }
                    return null;
                })();
            ((LogLevel1 = LogLevel || (LogLevel = {})).DEBUG = "DEBUG"),
                (LogLevel1.INFO = "INFO"),
                (LogLevel1.WARNING = "WARNING"),
                (LogLevel1.ERROR = "ERROR"),
                (LogLevel1.OFF = "OFF"),
                ((ErrorCode1 = ErrorCode || (ErrorCode = {})).UNKNOWN_ERROR = "UNKNOWN_ERROR"),
                (ErrorCode1.NOT_IMPLEMENTED = "NOT_IMPLEMENTED"),
                (ErrorCode1.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION"),
                (ErrorCode1.NETWORK_ERROR = "NETWORK_ERROR"),
                (ErrorCode1.SERVER_ERROR = "SERVER_ERROR"),
                (ErrorCode1.TIMEOUT = "TIMEOUT"),
                (ErrorCode1.BUFFER_OVERRUN = "BUFFER_OVERRUN"),
                (ErrorCode1.NUMERIC_FAULT = "NUMERIC_FAULT"),
                (ErrorCode1.MISSING_NEW = "MISSING_NEW"),
                (ErrorCode1.INVALID_ARGUMENT = "INVALID_ARGUMENT"),
                (ErrorCode1.MISSING_ARGUMENT = "MISSING_ARGUMENT"),
                (ErrorCode1.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT"),
                (ErrorCode1.CALL_EXCEPTION = "CALL_EXCEPTION"),
                (ErrorCode1.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS"),
                (ErrorCode1.NONCE_EXPIRED = "NONCE_EXPIRED"),
                (ErrorCode1.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED"),
                (ErrorCode1.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT"),
                (ErrorCode1.TRANSACTION_REPLACED = "TRANSACTION_REPLACED");
            let HEX = "0123456789abcdef";
            class Logger {
                constructor(version) {
                    Object.defineProperty(this, "version", { enumerable: !0, value: version, writable: !1 });
                }
                _log(logLevel, args) {
                    let level = logLevel.toLowerCase();
                    null == LogLevels[level] && this.throwArgumentError("invalid log level name", "logLevel", logLevel), _logLevel > LogLevels[level] || console.log.apply(console, args);
                }
                debug(...args) {
                    this._log(Logger.levels.DEBUG, args);
                }
                info(...args) {
                    this._log(Logger.levels.INFO, args);
                }
                warn(...args) {
                    this._log(Logger.levels.WARNING, args);
                }
                makeError(message, code, params) {
                    if (_censorErrors) return this.makeError("censored error", code, {});
                    code || (code = Logger.errors.UNKNOWN_ERROR), params || (params = {});
                    let messageDetails = [];
                    Object.keys(params).forEach((key) => {
                        let value = params[key];
                        try {
                            if (value instanceof Uint8Array) {
                                let hex = "";
                                for (let i = 0; i < value.length; i++) hex = HEX[value[i] >> 4] + HEX[15 & value[i]];
                                messageDetails.push(key + "=Uint8Array(0x" + hex + ")");
                            } else messageDetails.push(key + "=" + JSON.stringify(value));
                        } catch (error) {
                            messageDetails.push(key + "=" + JSON.stringify(params[key].toString()));
                        }
                    }),
                        messageDetails.push(`code=${code}`),
                        messageDetails.push(`version=${this.version}`);
                    let reason = message,
                        url = "";
                    switch (code) {
                        case ErrorCode.NUMERIC_FAULT: {
                            url = "NUMERIC_FAULT";
                            let fault = message;
                            switch (fault) {
                                case "overflow":
                                case "underflow":
                                case "division-by-zero":
                                    url += "-" + fault;
                                    break;
                                case "negative-power":
                                case "negative-width":
                                    url += "-unsupported";
                                    break;
                                case "unbound-bitwise-result":
                                    url += "-unbound-result";
                            }
                            break;
                        }
                        case ErrorCode.CALL_EXCEPTION:
                        case ErrorCode.INSUFFICIENT_FUNDS:
                        case ErrorCode.MISSING_NEW:
                        case ErrorCode.NONCE_EXPIRED:
                        case ErrorCode.REPLACEMENT_UNDERPRICED:
                        case ErrorCode.TRANSACTION_REPLACED:
                        case ErrorCode.UNPREDICTABLE_GAS_LIMIT:
                            url = code;
                    }
                    url && (message += " [ See: https://links.ethers.org/v5-errors-" + url + " ]"), messageDetails.length && (message += " (" + messageDetails.join(", ") + ")");
                    let error = Error(message);
                    return (
                        (error.reason = reason),
                        (error.code = code),
                        Object.keys(params).forEach(function (key) {
                            error[key] = params[key];
                        }),
                        error
                    );
                }
                throwError(message, code, params) {
                    throw this.makeError(message, code, params);
                }
                throwArgumentError(message, name, value) {
                    return this.throwError(message, Logger.errors.INVALID_ARGUMENT, { argument: name, value: value });
                }
                assert(condition, message, code, params) {
                    condition || this.throwError(message, code, params);
                }
                assertArgument(condition, message, name, value) {
                    condition || this.throwArgumentError(message, name, value);
                }
                checkNormalize(message) {
                    null == message && (message = "platform missing String.prototype.normalize"),
                        _normalizeError && this.throwError("platform missing String.prototype.normalize", Logger.errors.UNSUPPORTED_OPERATION, { operation: "String.prototype.normalize", form: _normalizeError });
                }
                checkSafeUint53(value, message) {
                    "number" == typeof value &&
                        (null == message && (message = "value not safe"),
                        (value < 0 || value >= 9007199254740991) && this.throwError(message, Logger.errors.NUMERIC_FAULT, { operation: "checkSafeInteger", fault: "out-of-safe-range", value: value }),
                        value % 1 && this.throwError(message, Logger.errors.NUMERIC_FAULT, { operation: "checkSafeInteger", fault: "non-integer", value: value }));
                }
                checkArgumentCount(count, expectedCount, message) {
                    (message = message ? ": " + message : ""),
                        count < expectedCount && this.throwError("missing argument" + message, Logger.errors.MISSING_ARGUMENT, { count: count, expectedCount: expectedCount }),
                        count > expectedCount && this.throwError("too many arguments" + message, Logger.errors.UNEXPECTED_ARGUMENT, { count: count, expectedCount: expectedCount });
                }
                checkNew(target, kind) {
                    (target === Object || null == target) && this.throwError("missing new", Logger.errors.MISSING_NEW, { name: kind.name });
                }
                checkAbstract(target, kind) {
                    target === kind
                        ? this.throwError("cannot instantiate abstract class " + JSON.stringify(kind.name) + " directly; use a sub-class", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: "new" })
                        : (target === Object || null == target) && this.throwError("missing new", Logger.errors.MISSING_NEW, { name: kind.name });
                }
                static globalLogger() {
                    return _globalLogger || (_globalLogger = new Logger("logger/5.6.0")), _globalLogger;
                }
                static setCensorship(censorship, permanent) {
                    if ((!censorship && permanent && this.globalLogger().throwError("cannot permanently disable censorship", Logger.errors.UNSUPPORTED_OPERATION, { operation: "setCensorship" }), _permanentCensorErrors)) {
                        if (!censorship) return;
                        this.globalLogger().throwError("error censorship permanent", Logger.errors.UNSUPPORTED_OPERATION, { operation: "setCensorship" });
                    }
                    (_censorErrors = !!censorship), (_permanentCensorErrors = !!permanent);
                }
                static setLogLevel(logLevel) {
                    let level = LogLevels[logLevel.toLowerCase()];
                    if (null == level) {
                        Logger.globalLogger().warn("invalid log level - " + logLevel);
                        return;
                    }
                    _logLevel = level;
                }
                static from(version) {
                    return new Logger(version);
                }
            }
            (Logger.errors = ErrorCode), (Logger.levels = LogLevel);
        },
        6881: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                dk: function () {
                    return Description;
                },
                uj: function () {
                    return checkProperties;
                },
                p$: function () {
                    return deepCopy;
                },
                zG: function () {
                    return defineReadOnly;
                },
                tu: function () {
                    return getStatic;
                },
                mE: function () {
                    return resolveProperties;
                },
                DC: function () {
                    return shallowCopy;
                },
            });
            var lib_esm = __webpack_require__(1581);
            let logger = new lib_esm.Yd("properties/5.6.0");
            function defineReadOnly(object, name, value) {
                Object.defineProperty(object, name, { enumerable: !0, value: value, writable: !1 });
            }
            function getStatic(ctor, key) {
                for (let i = 0; i < 32; i++) {
                    if (ctor[key]) return ctor[key];
                    if (!ctor.prototype || "object" != typeof ctor.prototype) break;
                    ctor = Object.getPrototypeOf(ctor.prototype).constructor;
                }
                return null;
            }
            function resolveProperties(object) {
                var thisArg, _arguments, P, generator;
                return (
                    (thisArg = this),
                    (_arguments = void 0),
                    (P = void 0),
                    (generator = function* () {
                        let promises = Object.keys(object).map((key) => {
                                let value = object[key];
                                return Promise.resolve(value).then((v) => ({ key: key, value: v }));
                            }),
                            results = yield Promise.all(promises);
                        return results.reduce((accum, result) => ((accum[result.key] = result.value), accum), {});
                    }),
                    new (P || (P = Promise))(function (resolve, reject) {
                        function fulfilled(value) {
                            try {
                                step(generator.next(value));
                            } catch (e) {
                                reject(e);
                            }
                        }
                        function rejected(value) {
                            try {
                                step(generator.throw(value));
                            } catch (e) {
                                reject(e);
                            }
                        }
                        function step(result) {
                            var value;
                            result.done
                                ? resolve(result.value)
                                : ((value = result.value) instanceof P
                                      ? value
                                      : new P(function (resolve) {
                                            resolve(value);
                                        })
                                  ).then(fulfilled, rejected);
                        }
                        step((generator = generator.apply(thisArg, _arguments || [])).next());
                    })
                );
            }
            function checkProperties(object, properties) {
                (object && "object" == typeof object) || logger.throwArgumentError("invalid object", "object", object),
                    Object.keys(object).forEach((key) => {
                        properties[key] || logger.throwArgumentError("invalid object key - " + key, "transaction:" + key, object);
                    });
            }
            function shallowCopy(object) {
                let result = {};
                for (let key in object) result[key] = object[key];
                return result;
            }
            let opaque = { bigint: !0, boolean: !0, function: !0, number: !0, string: !0 };
            function deepCopy(object) {
                return (function (object) {
                    if (
                        (function _isFrozen(object) {
                            if (null == object || opaque[typeof object]) return !0;
                            if (Array.isArray(object) || "object" == typeof object) {
                                if (!Object.isFrozen(object)) return !1;
                                let keys = Object.keys(object);
                                for (let i = 0; i < keys.length; i++) {
                                    let value = null;
                                    try {
                                        value = object[keys[i]];
                                    } catch (error) {
                                        continue;
                                    }
                                    if (!_isFrozen(value)) return !1;
                                }
                                return !0;
                            }
                            return logger.throwArgumentError(`Cannot deepCopy ${typeof object}`, "object", object);
                        })(object)
                    )
                        return object;
                    if (Array.isArray(object)) return Object.freeze(object.map((item) => deepCopy(item)));
                    if ("object" == typeof object) {
                        let result = {};
                        for (let key in object) {
                            let value = object[key];
                            void 0 !== value && defineReadOnly(result, key, deepCopy(value));
                        }
                        return result;
                    }
                    return logger.throwArgumentError(`Cannot deepCopy ${typeof object}`, "object", object);
                })(object);
            }
            class Description {
                constructor(info) {
                    for (let key in info) this[key] = deepCopy(info[key]);
                }
            }
        },
        59052: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                J: function () {
                    return decode;
                },
                c: function () {
                    return encode;
                },
            });
            var lib_esm = __webpack_require__(16441),
                logger_lib_esm = __webpack_require__(1581);
            let logger = new logger_lib_esm.Yd("rlp/5.6.0");
            function arrayifyInteger(value) {
                let result = [];
                for (; value; ) result.unshift(255 & value), (value >>= 8);
                return result;
            }
            function unarrayifyInteger(data, offset, length) {
                let result = 0;
                for (let i = 0; i < length; i++) result = 256 * result + data[offset + i];
                return result;
            }
            function encode(object) {
                return (0, lib_esm.Dv)(
                    (function _encode(object) {
                        if (Array.isArray(object)) {
                            let payload = [];
                            if (
                                (object.forEach(function (child) {
                                    payload = payload.concat(_encode(child));
                                }),
                                payload.length <= 55)
                            )
                                return payload.unshift(192 + payload.length), payload;
                            let length = arrayifyInteger(payload.length);
                            return length.unshift(247 + length.length), length.concat(payload);
                        }
                        (0, lib_esm.Zq)(object) || logger.throwArgumentError("RLP object must be BytesLike", "object", object);
                        let data = Array.prototype.slice.call((0, lib_esm.lE)(object));
                        if (1 === data.length && data[0] <= 127) return data;
                        if (data.length <= 55) return data.unshift(128 + data.length), data;
                        let length1 = arrayifyInteger(data.length);
                        return length1.unshift(183 + length1.length), length1.concat(data);
                    })(object)
                );
            }
            function _decodeChildren(data, offset, childOffset, length) {
                let result = [];
                for (; childOffset < offset + 1 + length; ) {
                    let decoded = _decode(data, childOffset);
                    result.push(decoded.result), (childOffset += decoded.consumed) > offset + 1 + length && logger.throwError("child data too short", logger_lib_esm.Yd.errors.BUFFER_OVERRUN, {});
                }
                return { consumed: 1 + length, result: result };
            }
            function _decode(data, offset) {
                if ((0 === data.length && logger.throwError("data too short", logger_lib_esm.Yd.errors.BUFFER_OVERRUN, {}), data[offset] >= 248)) {
                    let lengthLength = data[offset] - 247;
                    offset + 1 + lengthLength > data.length && logger.throwError("data short segment too short", logger_lib_esm.Yd.errors.BUFFER_OVERRUN, {});
                    let length = unarrayifyInteger(data, offset + 1, lengthLength);
                    return (
                        offset + 1 + lengthLength + length > data.length && logger.throwError("data long segment too short", logger_lib_esm.Yd.errors.BUFFER_OVERRUN, {}),
                        _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length)
                    );
                }
                if (data[offset] >= 192) {
                    let length1 = data[offset] - 192;
                    return offset + 1 + length1 > data.length && logger.throwError("data array too short", logger_lib_esm.Yd.errors.BUFFER_OVERRUN, {}), _decodeChildren(data, offset, offset + 1, length1);
                }
                if (data[offset] >= 184) {
                    let lengthLength1 = data[offset] - 183;
                    offset + 1 + lengthLength1 > data.length && logger.throwError("data array too short", logger_lib_esm.Yd.errors.BUFFER_OVERRUN, {});
                    let length2 = unarrayifyInteger(data, offset + 1, lengthLength1);
                    offset + 1 + lengthLength1 + length2 > data.length && logger.throwError("data array too short", logger_lib_esm.Yd.errors.BUFFER_OVERRUN, {});
                    let result = (0, lib_esm.Dv)(data.slice(offset + 1 + lengthLength1, offset + 1 + lengthLength1 + length2));
                    return { consumed: 1 + lengthLength1 + length2, result: result };
                }
                if (data[offset] >= 128) {
                    let length3 = data[offset] - 128;
                    offset + 1 + length3 > data.length && logger.throwError("data too short", logger_lib_esm.Yd.errors.BUFFER_OVERRUN, {});
                    let result1 = (0, lib_esm.Dv)(data.slice(offset + 1, offset + 1 + length3));
                    return { consumed: 1 + length3, result: result1 };
                }
                return { consumed: 1, result: (0, lib_esm.Dv)(data[offset]) };
            }
            function decode(data) {
                let bytes = (0, lib_esm.lE)(data),
                    decoded = _decode(bytes, 0);
                return decoded.consumed !== bytes.length && logger.throwArgumentError("invalid rlp data", "data", data), decoded.result;
            }
        },
        29251: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                Uj: function () {
                    return UnicodeNormalizationForm1;
                },
                uu: function () {
                    return _toUtf8String;
                },
                Y0: function () {
                    return toUtf8Bytes;
                },
                XL: function () {
                    return toUtf8CodePoints;
                },
                ZN: function () {
                    return toUtf8String;
                },
            });
            var UnicodeNormalizationForm,
                Utf8ErrorReason,
                UnicodeNormalizationForm1,
                Utf8ErrorReason1,
                lib_esm = __webpack_require__(16441),
                logger_lib_esm = __webpack_require__(1581);
            let logger = new logger_lib_esm.Yd("strings/5.6.0");
            function ignoreFunc(reason, offset, bytes, output, badCodepoint) {
                if (reason === Utf8ErrorReason1.BAD_PREFIX || reason === Utf8ErrorReason1.UNEXPECTED_CONTINUE) {
                    let i = 0;
                    for (let o = offset + 1; o < bytes.length && bytes[o] >> 6 == 2; o++) i++;
                    return i;
                }
                return reason === Utf8ErrorReason1.OVERRUN ? bytes.length - offset - 1 : 0;
            }
            ((UnicodeNormalizationForm = UnicodeNormalizationForm1 || (UnicodeNormalizationForm1 = {})).current = ""),
                (UnicodeNormalizationForm.NFC = "NFC"),
                (UnicodeNormalizationForm.NFD = "NFD"),
                (UnicodeNormalizationForm.NFKC = "NFKC"),
                (UnicodeNormalizationForm.NFKD = "NFKD"),
                ((Utf8ErrorReason = Utf8ErrorReason1 || (Utf8ErrorReason1 = {})).UNEXPECTED_CONTINUE = "unexpected continuation byte"),
                (Utf8ErrorReason.BAD_PREFIX = "bad codepoint prefix"),
                (Utf8ErrorReason.OVERRUN = "string overrun"),
                (Utf8ErrorReason.MISSING_CONTINUE = "missing continuation byte"),
                (Utf8ErrorReason.OUT_OF_RANGE = "out of UTF-8 range"),
                (Utf8ErrorReason.UTF16_SURROGATE = "UTF-16 surrogate"),
                (Utf8ErrorReason.OVERLONG = "overlong representation");
            let Utf8ErrorFuncs = Object.freeze({
                error: function (reason, offset, bytes, output, badCodepoint) {
                    return logger.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`, "bytes", bytes);
                },
                ignore: ignoreFunc,
                replace: function (reason, offset, bytes, output, badCodepoint) {
                    return reason === Utf8ErrorReason1.OVERLONG ? (output.push(badCodepoint), 0) : (output.push(65533), ignoreFunc(reason, offset, bytes, output, badCodepoint));
                },
            });
            function getUtf8CodePoints(bytes, onError) {
                null == onError && (onError = Utf8ErrorFuncs.error), (bytes = (0, lib_esm.lE)(bytes));
                let result = [],
                    i = 0;
                for (; i < bytes.length; ) {
                    let c = bytes[i++];
                    if (c >> 7 == 0) {
                        result.push(c);
                        continue;
                    }
                    let extraLength = null,
                        overlongMask = null;
                    if ((224 & c) == 192) (extraLength = 1), (overlongMask = 127);
                    else if ((240 & c) == 224) (extraLength = 2), (overlongMask = 2047);
                    else if ((248 & c) == 240) (extraLength = 3), (overlongMask = 65535);
                    else {
                        (192 & c) == 128 ? (i += onError(Utf8ErrorReason1.UNEXPECTED_CONTINUE, i - 1, bytes, result)) : (i += onError(Utf8ErrorReason1.BAD_PREFIX, i - 1, bytes, result));
                        continue;
                    }
                    if (i - 1 + extraLength >= bytes.length) {
                        i += onError(Utf8ErrorReason1.OVERRUN, i - 1, bytes, result);
                        continue;
                    }
                    let res = c & ((1 << (8 - extraLength - 1)) - 1);
                    for (let j = 0; j < extraLength; j++) {
                        let nextChar = bytes[i];
                        if ((192 & nextChar) != 128) {
                            (i += onError(Utf8ErrorReason1.MISSING_CONTINUE, i, bytes, result)), (res = null);
                            break;
                        }
                        (res = (res << 6) | (63 & nextChar)), i++;
                    }
                    if (null !== res) {
                        if (res > 1114111) {
                            i += onError(Utf8ErrorReason1.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);
                            continue;
                        }
                        if (res >= 55296 && res <= 57343) {
                            i += onError(Utf8ErrorReason1.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);
                            continue;
                        }
                        if (res <= overlongMask) {
                            i += onError(Utf8ErrorReason1.OVERLONG, i - 1 - extraLength, bytes, result, res);
                            continue;
                        }
                        result.push(res);
                    }
                }
                return result;
            }
            function toUtf8Bytes(str, form = UnicodeNormalizationForm1.current) {
                form != UnicodeNormalizationForm1.current && (logger.checkNormalize(), (str = str.normalize(form)));
                let result = [];
                for (let i = 0; i < str.length; i++) {
                    let c = str.charCodeAt(i);
                    if (c < 128) result.push(c);
                    else if (c < 2048) result.push((c >> 6) | 192), result.push((63 & c) | 128);
                    else if ((64512 & c) == 55296) {
                        i++;
                        let c2 = str.charCodeAt(i);
                        if (i >= str.length || (64512 & c2) != 56320) throw Error("invalid utf-8 string");
                        let pair = 65536 + ((1023 & c) << 10) + (1023 & c2);
                        result.push((pair >> 18) | 240), result.push(((pair >> 12) & 63) | 128), result.push(((pair >> 6) & 63) | 128), result.push((63 & pair) | 128);
                    } else result.push((c >> 12) | 224), result.push(((c >> 6) & 63) | 128), result.push((63 & c) | 128);
                }
                return (0, lib_esm.lE)(result);
            }
            function _toUtf8String(codePoints) {
                return codePoints.map((codePoint) => (codePoint <= 65535 ? String.fromCharCode(codePoint) : String.fromCharCode((((codePoint -= 65536) >> 10) & 1023) + 55296, (1023 & codePoint) + 56320))).join("");
            }
            function toUtf8String(bytes, onError) {
                return _toUtf8String(getUtf8CodePoints(bytes, onError));
            }
            function toUtf8CodePoints(str, form = UnicodeNormalizationForm1.current) {
                return getUtf8CodePoints(toUtf8Bytes(str, form));
            }
        },
        639: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                z7: function () {
                    return accessListify;
                },
                Qc: function () {
                    return parse;
                },
            });
            var TransactionTypes,
                TransactionTypes1,
                lib_esm = __webpack_require__(19485),
                bignumber = __webpack_require__(2593),
                bytes_lib_esm = __webpack_require__(16441),
                bignumbers = __webpack_require__(21046),
                keccak256_lib_esm = __webpack_require__(38197),
                rlp_lib_esm = __webpack_require__(59052),
                bn = __webpack_require__(13550),
                bn_default = __webpack_require__.n(bn),
                hash = __webpack_require__(33715),
                hash_default = __webpack_require__.n(hash);
            function createCommonjsModule(fn, basedir, module) {
                return (
                    fn(
                        (module = {
                            path: basedir,
                            exports: {},
                            require: function (path, base) {
                                return (function () {
                                    throw Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
                                })(path, null == base ? module.path : base);
                            },
                        }),
                        module.exports
                    ),
                    module.exports
                );
            }
            function assert(val, msg) {
                if (!val) throw Error(msg || "Assertion failed");
            }
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : void 0 !== __webpack_require__.g ? __webpack_require__.g : "undefined" != typeof self && self,
                (assert.equal = function (l, r, msg) {
                    if (l != r) throw Error(msg || "Assertion failed: " + l + " != " + r);
                });
            var utils_1 = createCommonjsModule(function (module, exports) {
                    var utils = exports;
                    function zero2(word) {
                        return 1 === word.length ? "0" + word : word;
                    }
                    function toHex(msg) {
                        for (var res = "", i = 0; i < msg.length; i++) res += zero2(msg[i].toString(16));
                        return res;
                    }
                    (utils.toArray = function (msg, enc) {
                        if (Array.isArray(msg)) return msg.slice();
                        if (!msg) return [];
                        var res = [];
                        if ("string" != typeof msg) {
                            for (var i = 0; i < msg.length; i++) res[i] = 0 | msg[i];
                            return res;
                        }
                        if ("hex" === enc) {
                            (msg = msg.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (msg = "0" + msg);
                            for (var i = 0; i < msg.length; i += 2) res.push(parseInt(msg[i] + msg[i + 1], 16));
                        } else
                            for (var i = 0; i < msg.length; i++) {
                                var c = msg.charCodeAt(i),
                                    hi = c >> 8,
                                    lo = 255 & c;
                                hi ? res.push(hi, lo) : res.push(lo);
                            }
                        return res;
                    }),
                        (utils.zero2 = zero2),
                        (utils.toHex = toHex),
                        (utils.encode = function (arr, enc) {
                            return "hex" === enc ? toHex(arr) : arr;
                        });
                }),
                utils_1$1 = createCommonjsModule(function (module, exports) {
                    var utils = exports;
                    (utils.assert = assert),
                        (utils.toArray = utils_1.toArray),
                        (utils.zero2 = utils_1.zero2),
                        (utils.toHex = utils_1.toHex),
                        (utils.encode = utils_1.encode),
                        (utils.getNAF = function (num, w, bits) {
                            var naf = Array(Math.max(num.bitLength(), bits) + 1);
                            naf.fill(0);
                            for (var ws = 1 << (w + 1), k = num.clone(), i = 0; i < naf.length; i++) {
                                var z,
                                    mod = k.andln(ws - 1);
                                k.isOdd() ? ((z = mod > (ws >> 1) - 1 ? (ws >> 1) - mod : mod), k.isubn(z)) : (z = 0), (naf[i] = z), k.iushrn(1);
                            }
                            return naf;
                        }),
                        (utils.getJSF = function (k1, k2) {
                            var jsf = [[], []];
                            (k1 = k1.clone()), (k2 = k2.clone());
                            for (var d1 = 0, d2 = 0; k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0; ) {
                                var m8,
                                    u1,
                                    u2,
                                    m14 = (k1.andln(3) + d1) & 3,
                                    m24 = (k2.andln(3) + d2) & 3;
                                3 === m14 && (m14 = -1),
                                    3 === m24 && (m24 = -1),
                                    (u1 = (1 & m14) == 0 ? 0 : (3 == (m8 = (k1.andln(7) + d1) & 7) || 5 === m8) && 2 === m24 ? -m14 : m14),
                                    jsf[0].push(u1),
                                    (u2 = (1 & m24) == 0 ? 0 : (3 == (m8 = (k2.andln(7) + d2) & 7) || 5 === m8) && 2 === m14 ? -m24 : m24),
                                    jsf[1].push(u2),
                                    2 * d1 === u1 + 1 && (d1 = 1 - d1),
                                    2 * d2 === u2 + 1 && (d2 = 1 - d2),
                                    k1.iushrn(1),
                                    k2.iushrn(1);
                            }
                            return jsf;
                        }),
                        (utils.cachedProperty = function (obj, name, computer) {
                            var key = "_" + name;
                            obj.prototype[name] = function () {
                                return void 0 !== this[key] ? this[key] : (this[key] = computer.call(this));
                            };
                        }),
                        (utils.parseBytes = function (bytes) {
                            return "string" == typeof bytes ? utils.toArray(bytes, "hex") : bytes;
                        }),
                        (utils.intFromLE = function (bytes) {
                            return new (bn_default())(bytes, "hex", "le");
                        });
                }),
                getNAF = utils_1$1.getNAF,
                getJSF = utils_1$1.getJSF,
                assert$1 = utils_1$1.assert;
            function BaseCurve(type, conf) {
                (this.type = type),
                    (this.p = new (bn_default())(conf.p, 16)),
                    (this.red = conf.prime ? bn_default().red(conf.prime) : bn_default().mont(this.p)),
                    (this.zero = new (bn_default())(0).toRed(this.red)),
                    (this.one = new (bn_default())(1).toRed(this.red)),
                    (this.two = new (bn_default())(2).toRed(this.red)),
                    (this.n = conf.n && new (bn_default())(conf.n, 16)),
                    (this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed)),
                    (this._wnafT1 = [, , , ,]),
                    (this._wnafT2 = [, , , ,]),
                    (this._wnafT3 = [, , , ,]),
                    (this._wnafT4 = [, , , ,]),
                    (this._bitLength = this.n ? this.n.bitLength() : 0);
                var adjustCount = this.n && this.p.div(this.n);
                !adjustCount || adjustCount.cmpn(100) > 0 ? (this.redN = null) : ((this._maxwellTrick = !0), (this.redN = this.n.toRed(this.red)));
            }
            function BasePoint(curve, type) {
                (this.curve = curve), (this.type = type), (this.precomputed = null);
            }
            (BaseCurve.prototype.point = function () {
                throw Error("Not implemented");
            }),
                (BaseCurve.prototype.validate = function () {
                    throw Error("Not implemented");
                }),
                (BaseCurve.prototype._fixedNafMul = function (p, k) {
                    assert$1(p.precomputed);
                    var j,
                        nafW,
                        doubles = p._getDoubles(),
                        naf = getNAF(k, 1, this._bitLength),
                        I = (1 << (doubles.step + 1)) - (doubles.step % 2 == 0 ? 2 : 1);
                    I /= 3;
                    var repr = [];
                    for (j = 0; j < naf.length; j += doubles.step) {
                        nafW = 0;
                        for (var l = j + doubles.step - 1; l >= j; l--) nafW = (nafW << 1) + naf[l];
                        repr.push(nafW);
                    }
                    for (var a = this.jpoint(null, null, null), b = this.jpoint(null, null, null), i = I; i > 0; i--) {
                        for (j = 0; j < repr.length; j++) (nafW = repr[j]) === i ? (b = b.mixedAdd(doubles.points[j])) : nafW === -i && (b = b.mixedAdd(doubles.points[j].neg()));
                        a = a.add(b);
                    }
                    return a.toP();
                }),
                (BaseCurve.prototype._wnafMul = function (p, k) {
                    var w = 4,
                        nafPoints = p._getNAFPoints(w);
                    w = nafPoints.wnd;
                    for (var wnd = nafPoints.points, naf = getNAF(k, w, this._bitLength), acc = this.jpoint(null, null, null), i = naf.length - 1; i >= 0; i--) {
                        for (var l = 0; i >= 0 && 0 === naf[i]; i--) l++;
                        if ((i >= 0 && l++, (acc = acc.dblp(l)), i < 0)) break;
                        var z = naf[i];
                        assert$1(0 !== z), (acc = "affine" === p.type ? (z > 0 ? acc.mixedAdd(wnd[(z - 1) >> 1]) : acc.mixedAdd(wnd[(-z - 1) >> 1].neg())) : z > 0 ? acc.add(wnd[(z - 1) >> 1]) : acc.add(wnd[(-z - 1) >> 1].neg()));
                    }
                    return "affine" === p.type ? acc.toP() : acc;
                }),
                (BaseCurve.prototype._wnafMulAdd = function (defW, points, coeffs, len, jacobianResult) {
                    var i,
                        j,
                        p,
                        wndWidth = this._wnafT1,
                        wnd = this._wnafT2,
                        naf = this._wnafT3,
                        max = 0;
                    for (i = 0; i < len; i++) {
                        var nafPoints = (p = points[i])._getNAFPoints(defW);
                        (wndWidth[i] = nafPoints.wnd), (wnd[i] = nafPoints.points);
                    }
                    for (i = len - 1; i >= 1; i -= 2) {
                        var a = i - 1,
                            b = i;
                        if (1 !== wndWidth[a] || 1 !== wndWidth[b]) {
                            (naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength)), (naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength)), (max = Math.max(naf[a].length, max)), (max = Math.max(naf[b].length, max));
                            continue;
                        }
                        var comb = [points[a], null, null, points[b]];
                        0 === points[a].y.cmp(points[b].y)
                            ? ((comb[1] = points[a].add(points[b])), (comb[2] = points[a].toJ().mixedAdd(points[b].neg())))
                            : 0 === points[a].y.cmp(points[b].y.redNeg())
                            ? ((comb[1] = points[a].toJ().mixedAdd(points[b])), (comb[2] = points[a].add(points[b].neg())))
                            : ((comb[1] = points[a].toJ().mixedAdd(points[b])), (comb[2] = points[a].toJ().mixedAdd(points[b].neg())));
                        var index = [-3, -1, -5, -7, 0, 7, 5, 1, 3],
                            jsf = getJSF(coeffs[a], coeffs[b]);
                        for (j = 0, max = Math.max(jsf[0].length, max), naf[a] = Array(max), naf[b] = Array(max); j < max; j++) {
                            var ja = 0 | jsf[0][j],
                                jb = 0 | jsf[1][j];
                            (naf[a][j] = index[(ja + 1) * 3 + (jb + 1)]), (naf[b][j] = 0), (wnd[a] = comb);
                        }
                    }
                    var acc = this.jpoint(null, null, null),
                        tmp = this._wnafT4;
                    for (i = max; i >= 0; i--) {
                        for (var k = 0; i >= 0; ) {
                            var zero = !0;
                            for (j = 0; j < len; j++) (tmp[j] = 0 | naf[j][i]), 0 !== tmp[j] && (zero = !1);
                            if (!zero) break;
                            k++, i--;
                        }
                        if ((i >= 0 && k++, (acc = acc.dblp(k)), i < 0)) break;
                        for (j = 0; j < len; j++) {
                            var z = tmp[j];
                            0 !== z && (z > 0 ? (p = wnd[j][(z - 1) >> 1]) : z < 0 && (p = wnd[j][(-z - 1) >> 1].neg()), (acc = "affine" === p.type ? acc.mixedAdd(p) : acc.add(p)));
                        }
                    }
                    for (i = 0; i < len; i++) wnd[i] = null;
                    return jacobianResult ? acc : acc.toP();
                }),
                (BaseCurve.BasePoint = BasePoint),
                (BasePoint.prototype.eq = function () {
                    throw Error("Not implemented");
                }),
                (BasePoint.prototype.validate = function () {
                    return this.curve.validate(this);
                }),
                (BaseCurve.prototype.decodePoint = function (bytes, enc) {
                    bytes = utils_1$1.toArray(bytes, enc);
                    var len = this.p.byteLength();
                    if ((4 === bytes[0] || 6 === bytes[0] || 7 === bytes[0]) && bytes.length - 1 == 2 * len)
                        return 6 === bytes[0] ? assert$1(bytes[bytes.length - 1] % 2 == 0) : 7 === bytes[0] && assert$1(bytes[bytes.length - 1] % 2 == 1), this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));
                    if ((2 === bytes[0] || 3 === bytes[0]) && bytes.length - 1 === len) return this.pointFromX(bytes.slice(1, 1 + len), 3 === bytes[0]);
                    throw Error("Unknown point format");
                }),
                (BasePoint.prototype.encodeCompressed = function (enc) {
                    return this.encode(enc, !0);
                }),
                (BasePoint.prototype._encode = function (compact) {
                    var len = this.curve.p.byteLength(),
                        x = this.getX().toArray("be", len);
                    return compact ? [this.getY().isEven() ? 2 : 3].concat(x) : [4].concat(x, this.getY().toArray("be", len));
                }),
                (BasePoint.prototype.encode = function (enc, compact) {
                    return utils_1$1.encode(this._encode(compact), enc);
                }),
                (BasePoint.prototype.precompute = function (power) {
                    if (this.precomputed) return this;
                    var precomputed = { doubles: null, naf: null, beta: null };
                    return (precomputed.naf = this._getNAFPoints(8)), (precomputed.doubles = this._getDoubles(4, power)), (precomputed.beta = this._getBeta()), (this.precomputed = precomputed), this;
                }),
                (BasePoint.prototype._hasDoubles = function (k) {
                    if (!this.precomputed) return !1;
                    var doubles = this.precomputed.doubles;
                    return !!doubles && doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
                }),
                (BasePoint.prototype._getDoubles = function (step, power) {
                    if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
                    for (var doubles = [this], acc = this, i = 0; i < power; i += step) {
                        for (var j = 0; j < step; j++) acc = acc.dbl();
                        doubles.push(acc);
                    }
                    return { step: step, points: doubles };
                }),
                (BasePoint.prototype._getNAFPoints = function (wnd) {
                    if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
                    for (var res = [this], max = (1 << wnd) - 1, dbl = 1 === max ? null : this.dbl(), i = 1; i < max; i++) res[i] = res[i - 1].add(dbl);
                    return { wnd: wnd, points: res };
                }),
                (BasePoint.prototype._getBeta = function () {
                    return null;
                }),
                (BasePoint.prototype.dblp = function (k) {
                    for (var r = this, i = 0; i < k; i++) r = r.dbl();
                    return r;
                });
            var inherits_browser = createCommonjsModule(function (module) {
                    "function" == typeof Object.create
                        ? (module.exports = function (ctor, superCtor) {
                              superCtor && ((ctor.super_ = superCtor), (ctor.prototype = Object.create(superCtor.prototype, { constructor: { value: ctor, enumerable: !1, writable: !0, configurable: !0 } })));
                          })
                        : (module.exports = function (ctor, superCtor) {
                              if (superCtor) {
                                  ctor.super_ = superCtor;
                                  var TempCtor = function () {};
                                  (TempCtor.prototype = superCtor.prototype), (ctor.prototype = new TempCtor()), (ctor.prototype.constructor = ctor);
                              }
                          });
                }),
                assert$2 = utils_1$1.assert;
            function ShortCurve(conf) {
                BaseCurve.call(this, "short", conf),
                    (this.a = new (bn_default())(conf.a, 16).toRed(this.red)),
                    (this.b = new (bn_default())(conf.b, 16).toRed(this.red)),
                    (this.tinv = this.two.redInvm()),
                    (this.zeroA = 0 === this.a.fromRed().cmpn(0)),
                    (this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3)),
                    (this.endo = this._getEndomorphism(conf)),
                    (this._endoWnafT1 = [, , , ,]),
                    (this._endoWnafT2 = [, , , ,]);
            }
            function Point(curve, x, y, isRed) {
                BaseCurve.BasePoint.call(this, curve, "affine"),
                    null === x && null === y
                        ? ((this.x = null), (this.y = null), (this.inf = !0))
                        : ((this.x = new (bn_default())(x, 16)),
                          (this.y = new (bn_default())(y, 16)),
                          isRed && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)),
                          this.x.red || (this.x = this.x.toRed(this.curve.red)),
                          this.y.red || (this.y = this.y.toRed(this.curve.red)),
                          (this.inf = !1));
            }
            function JPoint(curve, x, y, z) {
                BaseCurve.BasePoint.call(this, curve, "jacobian"),
                    null === x && null === y && null === z
                        ? ((this.x = this.curve.one), (this.y = this.curve.one), (this.z = new (bn_default())(0)))
                        : ((this.x = new (bn_default())(x, 16)), (this.y = new (bn_default())(y, 16)), (this.z = new (bn_default())(z, 16))),
                    this.x.red || (this.x = this.x.toRed(this.curve.red)),
                    this.y.red || (this.y = this.y.toRed(this.curve.red)),
                    this.z.red || (this.z = this.z.toRed(this.curve.red)),
                    (this.zOne = this.z === this.curve.one);
            }
            inherits_browser(ShortCurve, BaseCurve),
                (ShortCurve.prototype._getEndomorphism = function (conf) {
                    if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
                        if (conf.beta) beta = new (bn_default())(conf.beta, 16).toRed(this.red);
                        else {
                            var beta,
                                lambda,
                                basis,
                                betas = this._getEndoRoots(this.p);
                            beta = (beta = 0 > betas[0].cmp(betas[1]) ? betas[0] : betas[1]).toRed(this.red);
                        }
                        if (conf.lambda) lambda = new (bn_default())(conf.lambda, 16);
                        else {
                            var lambdas = this._getEndoRoots(this.n);
                            0 === this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) ? (lambda = lambdas[0]) : ((lambda = lambdas[1]), assert$2(0 === this.g.mul(lambda).x.cmp(this.g.x.redMul(beta))));
                        }
                        return (
                            (basis = conf.basis
                                ? conf.basis.map(function (vec) {
                                      return { a: new (bn_default())(vec.a, 16), b: new (bn_default())(vec.b, 16) };
                                  })
                                : this._getEndoBasis(lambda)),
                            { beta: beta, lambda: lambda, basis: basis }
                        );
                    }
                }),
                (ShortCurve.prototype._getEndoRoots = function (num) {
                    var red = num === this.p ? this.red : bn_default().mont(num),
                        tinv = new (bn_default())(2).toRed(red).redInvm(),
                        ntinv = tinv.redNeg(),
                        s = new (bn_default())(3).toRed(red).redNeg().redSqrt().redMul(tinv);
                    return [ntinv.redAdd(s).fromRed(), ntinv.redSub(s).fromRed()];
                }),
                (ShortCurve.prototype._getEndoBasis = function (lambda) {
                    for (
                        var a0,
                            b0,
                            a1,
                            b1,
                            a2,
                            b2,
                            prevR,
                            r,
                            x,
                            aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2)),
                            u = lambda,
                            v = this.n.clone(),
                            x1 = new (bn_default())(1),
                            y1 = new (bn_default())(0),
                            x2 = new (bn_default())(0),
                            y2 = new (bn_default())(1),
                            i = 0;
                        0 !== u.cmpn(0);

                    ) {
                        var q = v.div(u);
                        (r = v.sub(q.mul(u))), (x = x2.sub(q.mul(x1)));
                        var y = y2.sub(q.mul(y1));
                        if (!a1 && 0 > r.cmp(aprxSqrt)) (a0 = prevR.neg()), (b0 = x1), (a1 = r.neg()), (b1 = x);
                        else if (a1 && 2 == ++i) break;
                        (prevR = r), (v = u), (u = r), (x2 = x1), (x1 = x), (y2 = y1), (y1 = y);
                    }
                    (a2 = r.neg()), (b2 = x);
                    var len1 = a1.sqr().add(b1.sqr());
                    return (
                        a2.sqr().add(b2.sqr()).cmp(len1) >= 0 && ((a2 = a0), (b2 = b0)),
                        a1.negative && ((a1 = a1.neg()), (b1 = b1.neg())),
                        a2.negative && ((a2 = a2.neg()), (b2 = b2.neg())),
                        [
                            { a: a1, b: b1 },
                            { a: a2, b: b2 },
                        ]
                    );
                }),
                (ShortCurve.prototype._endoSplit = function (k) {
                    var basis = this.endo.basis,
                        v1 = basis[0],
                        v2 = basis[1],
                        c1 = v2.b.mul(k).divRound(this.n),
                        c2 = v1.b.neg().mul(k).divRound(this.n),
                        p1 = c1.mul(v1.a),
                        p2 = c2.mul(v2.a),
                        q1 = c1.mul(v1.b),
                        q2 = c2.mul(v2.b);
                    return { k1: k.sub(p1).sub(p2), k2: q1.add(q2).neg() };
                }),
                (ShortCurve.prototype.pointFromX = function (x, odd) {
                    (x = new (bn_default())(x, 16)).red || (x = x.toRed(this.red));
                    var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b),
                        y = y2.redSqrt();
                    if (0 !== y.redSqr().redSub(y2).cmp(this.zero)) throw Error("invalid point");
                    var isOdd = y.fromRed().isOdd();
                    return ((odd && !isOdd) || (!odd && isOdd)) && (y = y.redNeg()), this.point(x, y);
                }),
                (ShortCurve.prototype.validate = function (point) {
                    if (point.inf) return !0;
                    var x = point.x,
                        y = point.y,
                        ax = this.a.redMul(x),
                        rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
                    return 0 === y.redSqr().redISub(rhs).cmpn(0);
                }),
                (ShortCurve.prototype._endoWnafMulAdd = function (points, coeffs, jacobianResult) {
                    for (var npoints = this._endoWnafT1, ncoeffs = this._endoWnafT2, i = 0; i < points.length; i++) {
                        var split = this._endoSplit(coeffs[i]),
                            p = points[i],
                            beta = p._getBeta();
                        split.k1.negative && (split.k1.ineg(), (p = p.neg(!0))),
                            split.k2.negative && (split.k2.ineg(), (beta = beta.neg(!0))),
                            (npoints[2 * i] = p),
                            (npoints[2 * i + 1] = beta),
                            (ncoeffs[2 * i] = split.k1),
                            (ncoeffs[2 * i + 1] = split.k2);
                    }
                    for (var res = this._wnafMulAdd(1, npoints, ncoeffs, 2 * i, jacobianResult), j = 0; j < 2 * i; j++) (npoints[j] = null), (ncoeffs[j] = null);
                    return res;
                }),
                inherits_browser(Point, BaseCurve.BasePoint),
                (ShortCurve.prototype.point = function (x, y, isRed) {
                    return new Point(this, x, y, isRed);
                }),
                (ShortCurve.prototype.pointFromJSON = function (obj, red) {
                    return Point.fromJSON(this, obj, red);
                }),
                (Point.prototype._getBeta = function () {
                    if (this.curve.endo) {
                        var pre = this.precomputed;
                        if (pre && pre.beta) return pre.beta;
                        var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
                        if (pre) {
                            var curve = this.curve,
                                endoMul = function (p) {
                                    return curve.point(p.x.redMul(curve.endo.beta), p.y);
                                };
                            (pre.beta = beta),
                                (beta.precomputed = { beta: null, naf: pre.naf && { wnd: pre.naf.wnd, points: pre.naf.points.map(endoMul) }, doubles: pre.doubles && { step: pre.doubles.step, points: pre.doubles.points.map(endoMul) } });
                        }
                        return beta;
                    }
                }),
                (Point.prototype.toJSON = function () {
                    return this.precomputed
                        ? [
                              this.x,
                              this.y,
                              this.precomputed && {
                                  doubles: this.precomputed.doubles && { step: this.precomputed.doubles.step, points: this.precomputed.doubles.points.slice(1) },
                                  naf: this.precomputed.naf && { wnd: this.precomputed.naf.wnd, points: this.precomputed.naf.points.slice(1) },
                              },
                          ]
                        : [this.x, this.y];
                }),
                (Point.fromJSON = function (curve, obj, red) {
                    "string" == typeof obj && (obj = JSON.parse(obj));
                    var res = curve.point(obj[0], obj[1], red);
                    if (!obj[2]) return res;
                    function obj2point(obj) {
                        return curve.point(obj[0], obj[1], red);
                    }
                    var pre = obj[2];
                    return (
                        (res.precomputed = {
                            beta: null,
                            doubles: pre.doubles && { step: pre.doubles.step, points: [res].concat(pre.doubles.points.map(obj2point)) },
                            naf: pre.naf && { wnd: pre.naf.wnd, points: [res].concat(pre.naf.points.map(obj2point)) },
                        }),
                        res
                    );
                }),
                (Point.prototype.inspect = function () {
                    return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
                }),
                (Point.prototype.isInfinity = function () {
                    return this.inf;
                }),
                (Point.prototype.add = function (p) {
                    if (this.inf) return p;
                    if (p.inf) return this;
                    if (this.eq(p)) return this.dbl();
                    if (this.neg().eq(p) || 0 === this.x.cmp(p.x)) return this.curve.point(null, null);
                    var c = this.y.redSub(p.y);
                    0 !== c.cmpn(0) && (c = c.redMul(this.x.redSub(p.x).redInvm()));
                    var nx = c.redSqr().redISub(this.x).redISub(p.x),
                        ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
                    return this.curve.point(nx, ny);
                }),
                (Point.prototype.dbl = function () {
                    if (this.inf) return this;
                    var ys1 = this.y.redAdd(this.y);
                    if (0 === ys1.cmpn(0)) return this.curve.point(null, null);
                    var a = this.curve.a,
                        x2 = this.x.redSqr(),
                        dyinv = ys1.redInvm(),
                        c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv),
                        nx = c.redSqr().redISub(this.x.redAdd(this.x)),
                        ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
                    return this.curve.point(nx, ny);
                }),
                (Point.prototype.getX = function () {
                    return this.x.fromRed();
                }),
                (Point.prototype.getY = function () {
                    return this.y.fromRed();
                }),
                (Point.prototype.mul = function (k) {
                    return ((k = new (bn_default())(k, 16)), this.isInfinity()) ? this : this._hasDoubles(k) ? this.curve._fixedNafMul(this, k) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [k]) : this.curve._wnafMul(this, k);
                }),
                (Point.prototype.mulAdd = function (k1, p2, k2) {
                    var points = [this, p2],
                        coeffs = [k1, k2];
                    return this.curve.endo ? this.curve._endoWnafMulAdd(points, coeffs) : this.curve._wnafMulAdd(1, points, coeffs, 2);
                }),
                (Point.prototype.jmulAdd = function (k1, p2, k2) {
                    var points = [this, p2],
                        coeffs = [k1, k2];
                    return this.curve.endo ? this.curve._endoWnafMulAdd(points, coeffs, !0) : this.curve._wnafMulAdd(1, points, coeffs, 2, !0);
                }),
                (Point.prototype.eq = function (p) {
                    return this === p || (this.inf === p.inf && (this.inf || (0 === this.x.cmp(p.x) && 0 === this.y.cmp(p.y))));
                }),
                (Point.prototype.neg = function (_precompute) {
                    if (this.inf) return this;
                    var res = this.curve.point(this.x, this.y.redNeg());
                    if (_precompute && this.precomputed) {
                        var pre = this.precomputed,
                            negate = function (p) {
                                return p.neg();
                            };
                        res.precomputed = { naf: pre.naf && { wnd: pre.naf.wnd, points: pre.naf.points.map(negate) }, doubles: pre.doubles && { step: pre.doubles.step, points: pre.doubles.points.map(negate) } };
                    }
                    return res;
                }),
                (Point.prototype.toJ = function () {
                    return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one);
                }),
                inherits_browser(JPoint, BaseCurve.BasePoint),
                (ShortCurve.prototype.jpoint = function (x, y, z) {
                    return new JPoint(this, x, y, z);
                }),
                (JPoint.prototype.toP = function () {
                    if (this.isInfinity()) return this.curve.point(null, null);
                    var zinv = this.z.redInvm(),
                        zinv2 = zinv.redSqr(),
                        ax = this.x.redMul(zinv2),
                        ay = this.y.redMul(zinv2).redMul(zinv);
                    return this.curve.point(ax, ay);
                }),
                (JPoint.prototype.neg = function () {
                    return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
                }),
                (JPoint.prototype.add = function (p) {
                    if (this.isInfinity()) return p;
                    if (p.isInfinity()) return this;
                    var pz2 = p.z.redSqr(),
                        z2 = this.z.redSqr(),
                        u1 = this.x.redMul(pz2),
                        u2 = p.x.redMul(z2),
                        s1 = this.y.redMul(pz2.redMul(p.z)),
                        s2 = p.y.redMul(z2.redMul(this.z)),
                        h = u1.redSub(u2),
                        r = s1.redSub(s2);
                    if (0 === h.cmpn(0)) return 0 !== r.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                    var h2 = h.redSqr(),
                        h3 = h2.redMul(h),
                        v = u1.redMul(h2),
                        nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v),
                        ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3)),
                        nz = this.z.redMul(p.z).redMul(h);
                    return this.curve.jpoint(nx, ny, nz);
                }),
                (JPoint.prototype.mixedAdd = function (p) {
                    if (this.isInfinity()) return p.toJ();
                    if (p.isInfinity()) return this;
                    var z2 = this.z.redSqr(),
                        u1 = this.x,
                        u2 = p.x.redMul(z2),
                        s1 = this.y,
                        s2 = p.y.redMul(z2).redMul(this.z),
                        h = u1.redSub(u2),
                        r = s1.redSub(s2);
                    if (0 === h.cmpn(0)) return 0 !== r.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                    var h2 = h.redSqr(),
                        h3 = h2.redMul(h),
                        v = u1.redMul(h2),
                        nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v),
                        ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3)),
                        nz = this.z.redMul(h);
                    return this.curve.jpoint(nx, ny, nz);
                }),
                (JPoint.prototype.dblp = function (pow) {
                    if (0 === pow || this.isInfinity()) return this;
                    if (!pow) return this.dbl();
                    if (this.curve.zeroA || this.curve.threeA) {
                        var i,
                            r = this;
                        for (i = 0; i < pow; i++) r = r.dbl();
                        return r;
                    }
                    var a = this.curve.a,
                        tinv = this.curve.tinv,
                        jx = this.x,
                        jy = this.y,
                        jz = this.z,
                        jz4 = jz.redSqr().redSqr(),
                        jyd = jy.redAdd(jy);
                    for (i = 0; i < pow; i++) {
                        var jx2 = jx.redSqr(),
                            jyd2 = jyd.redSqr(),
                            jyd4 = jyd2.redSqr(),
                            c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4)),
                            t1 = jx.redMul(jyd2),
                            nx = c.redSqr().redISub(t1.redAdd(t1)),
                            t2 = t1.redISub(nx),
                            dny = c.redMul(t2);
                        dny = dny.redIAdd(dny).redISub(jyd4);
                        var nz = jyd.redMul(jz);
                        i + 1 < pow && (jz4 = jz4.redMul(jyd4)), (jx = nx), (jz = nz), (jyd = dny);
                    }
                    return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
                }),
                (JPoint.prototype.dbl = function () {
                    return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
                }),
                (JPoint.prototype._zeroDbl = function () {
                    if (this.zOne) {
                        var nx,
                            ny,
                            nz,
                            xx = this.x.redSqr(),
                            yy = this.y.redSqr(),
                            yyyy = yy.redSqr(),
                            s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
                        s = s.redIAdd(s);
                        var m = xx.redAdd(xx).redIAdd(xx),
                            t = m.redSqr().redISub(s).redISub(s),
                            yyyy8 = yyyy.redIAdd(yyyy);
                        (yyyy8 = (yyyy8 = yyyy8.redIAdd(yyyy8)).redIAdd(yyyy8)), (nx = t), (ny = m.redMul(s.redISub(t)).redISub(yyyy8)), (nz = this.y.redAdd(this.y));
                    } else {
                        var a = this.x.redSqr(),
                            b = this.y.redSqr(),
                            c = b.redSqr(),
                            d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
                        d = d.redIAdd(d);
                        var e = a.redAdd(a).redIAdd(a),
                            f = e.redSqr(),
                            c8 = c.redIAdd(c);
                        (c8 = (c8 = c8.redIAdd(c8)).redIAdd(c8)), (nx = f.redISub(d).redISub(d)), (ny = e.redMul(d.redISub(nx)).redISub(c8)), (nz = (nz = this.y.redMul(this.z)).redIAdd(nz));
                    }
                    return this.curve.jpoint(nx, ny, nz);
                }),
                (JPoint.prototype._threeDbl = function () {
                    if (this.zOne) {
                        var nx,
                            ny,
                            nz,
                            xx = this.x.redSqr(),
                            yy = this.y.redSqr(),
                            yyyy = yy.redSqr(),
                            s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
                        s = s.redIAdd(s);
                        var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a),
                            t = m.redSqr().redISub(s).redISub(s);
                        nx = t;
                        var yyyy8 = yyyy.redIAdd(yyyy);
                        (yyyy8 = (yyyy8 = yyyy8.redIAdd(yyyy8)).redIAdd(yyyy8)), (ny = m.redMul(s.redISub(t)).redISub(yyyy8)), (nz = this.y.redAdd(this.y));
                    } else {
                        var delta = this.z.redSqr(),
                            gamma = this.y.redSqr(),
                            beta = this.x.redMul(gamma),
                            alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
                        alpha = alpha.redAdd(alpha).redIAdd(alpha);
                        var beta4 = beta.redIAdd(beta),
                            beta8 = (beta4 = beta4.redIAdd(beta4)).redAdd(beta4);
                        (nx = alpha.redSqr().redISub(beta8)), (nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta));
                        var ggamma8 = gamma.redSqr();
                        (ggamma8 = (ggamma8 = (ggamma8 = ggamma8.redIAdd(ggamma8)).redIAdd(ggamma8)).redIAdd(ggamma8)), (ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8));
                    }
                    return this.curve.jpoint(nx, ny, nz);
                }),
                (JPoint.prototype._dbl = function () {
                    var a = this.curve.a,
                        jx = this.x,
                        jy = this.y,
                        jz = this.z,
                        jz4 = jz.redSqr().redSqr(),
                        jx2 = jx.redSqr(),
                        jy2 = jy.redSqr(),
                        c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4)),
                        jxd4 = jx.redAdd(jx),
                        t1 = (jxd4 = jxd4.redIAdd(jxd4)).redMul(jy2),
                        nx = c.redSqr().redISub(t1.redAdd(t1)),
                        t2 = t1.redISub(nx),
                        jyd8 = jy2.redSqr();
                    jyd8 = (jyd8 = (jyd8 = jyd8.redIAdd(jyd8)).redIAdd(jyd8)).redIAdd(jyd8);
                    var ny = c.redMul(t2).redISub(jyd8),
                        nz = jy.redAdd(jy).redMul(jz);
                    return this.curve.jpoint(nx, ny, nz);
                }),
                (JPoint.prototype.trpl = function () {
                    if (!this.curve.zeroA) return this.dbl().add(this);
                    var xx = this.x.redSqr(),
                        yy = this.y.redSqr(),
                        zz = this.z.redSqr(),
                        yyyy = yy.redSqr(),
                        m = xx.redAdd(xx).redIAdd(xx),
                        mm = m.redSqr(),
                        e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy),
                        ee = (e = (e = (e = e.redIAdd(e)).redAdd(e).redIAdd(e)).redISub(mm)).redSqr(),
                        t = yyyy.redIAdd(yyyy);
                    t = (t = (t = t.redIAdd(t)).redIAdd(t)).redIAdd(t);
                    var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t),
                        yyu4 = yy.redMul(u);
                    yyu4 = (yyu4 = yyu4.redIAdd(yyu4)).redIAdd(yyu4);
                    var nx = this.x.redMul(ee).redISub(yyu4);
                    nx = (nx = nx.redIAdd(nx)).redIAdd(nx);
                    var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
                    ny = (ny = (ny = ny.redIAdd(ny)).redIAdd(ny)).redIAdd(ny);
                    var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);
                    return this.curve.jpoint(nx, ny, nz);
                }),
                (JPoint.prototype.mul = function (k, kbase) {
                    return (k = new (bn_default())(k, kbase)), this.curve._wnafMul(this, k);
                }),
                (JPoint.prototype.eq = function (p) {
                    if ("affine" === p.type) return this.eq(p.toJ());
                    if (this === p) return !0;
                    var z2 = this.z.redSqr(),
                        pz2 = p.z.redSqr();
                    if (0 !== this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0)) return !1;
                    var z3 = z2.redMul(this.z),
                        pz3 = pz2.redMul(p.z);
                    return 0 === this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0);
                }),
                (JPoint.prototype.eqXToP = function (x) {
                    var zs = this.z.redSqr(),
                        rx = x.toRed(this.curve.red).redMul(zs);
                    if (0 === this.x.cmp(rx)) return !0;
                    for (var xc = x.clone(), t = this.curve.redN.redMul(zs); ; ) {
                        if ((xc.iadd(this.curve.n), xc.cmp(this.curve.p) >= 0)) return !1;
                        if ((rx.redIAdd(t), 0 === this.x.cmp(rx))) return !0;
                    }
                }),
                (JPoint.prototype.inspect = function () {
                    return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
                }),
                (JPoint.prototype.isInfinity = function () {
                    return 0 === this.z.cmpn(0);
                });
            var curve_1 = createCommonjsModule(function (module, exports) {
                    var curve = exports;
                    (curve.base = BaseCurve), (curve.short = ShortCurve), (curve.mont = null), (curve.edwards = null);
                }),
                curves_1 = createCommonjsModule(function (module, exports) {
                    var pre,
                        curves = exports,
                        assert = utils_1$1.assert;
                    function PresetCurve(options) {
                        "short" === options.type ? (this.curve = new curve_1.short(options)) : "edwards" === options.type ? (this.curve = new curve_1.edwards(options)) : (this.curve = new curve_1.mont(options)),
                            (this.g = this.curve.g),
                            (this.n = this.curve.n),
                            (this.hash = options.hash),
                            assert(this.g.validate(), "Invalid curve"),
                            assert(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
                    }
                    function defineCurve(name, options) {
                        Object.defineProperty(curves, name, {
                            configurable: !0,
                            enumerable: !0,
                            get: function () {
                                var curve = new PresetCurve(options);
                                return Object.defineProperty(curves, name, { configurable: !0, enumerable: !0, value: curve }), curve;
                            },
                        });
                    }
                    (curves.PresetCurve = PresetCurve),
                        defineCurve("p192", {
                            type: "short",
                            prime: "p192",
                            p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
                            a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
                            b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
                            n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
                            hash: hash_default().sha256,
                            gRed: !1,
                            g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"],
                        }),
                        defineCurve("p224", {
                            type: "short",
                            prime: "p224",
                            p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
                            a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
                            b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
                            n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
                            hash: hash_default().sha256,
                            gRed: !1,
                            g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"],
                        }),
                        defineCurve("p256", {
                            type: "short",
                            prime: null,
                            p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
                            a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
                            b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
                            n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
                            hash: hash_default().sha256,
                            gRed: !1,
                            g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"],
                        }),
                        defineCurve("p384", {
                            type: "short",
                            prime: null,
                            p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
                            a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
                            b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
                            n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
                            hash: hash_default().sha384,
                            gRed: !1,
                            g: [
                                "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7",
                                "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f",
                            ],
                        }),
                        defineCurve("p521", {
                            type: "short",
                            prime: null,
                            p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
                            a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
                            b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
                            n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
                            hash: hash_default().sha512,
                            gRed: !1,
                            g: [
                                "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66",
                                "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650",
                            ],
                        }),
                        defineCurve("curve25519", {
                            type: "mont",
                            prime: "p25519",
                            p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                            a: "76d06",
                            b: "1",
                            n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                            hash: hash_default().sha256,
                            gRed: !1,
                            g: ["9"],
                        }),
                        defineCurve("ed25519", {
                            type: "edwards",
                            prime: "p25519",
                            p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                            a: "-1",
                            c: "1",
                            d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
                            n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                            hash: hash_default().sha256,
                            gRed: !1,
                            g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"],
                        });
                    try {
                        pre = null.crash();
                    } catch (e) {
                        pre = void 0;
                    }
                    defineCurve("secp256k1", {
                        type: "short",
                        prime: "k256",
                        p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
                        a: "0",
                        b: "7",
                        n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
                        h: "1",
                        hash: hash_default().sha256,
                        beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
                        lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
                        basis: [
                            { a: "3086d221a7d46bcde86c90e49284eb15", b: "-e4437ed6010e88286f547fa90abfe4c3" },
                            { a: "114ca50f7a8e2f3f657c1108d9d44cfd8", b: "3086d221a7d46bcde86c90e49284eb15" },
                        ],
                        gRed: !1,
                        g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", pre],
                    });
                });
            function HmacDRBG(options) {
                if (!(this instanceof HmacDRBG)) return new HmacDRBG(options);
                (this.hash = options.hash),
                    (this.predResist = !!options.predResist),
                    (this.outLen = this.hash.outSize),
                    (this.minEntropy = options.minEntropy || this.hash.hmacStrength),
                    (this._reseed = null),
                    (this.reseedInterval = null),
                    (this.K = null),
                    (this.V = null);
                var entropy = utils_1.toArray(options.entropy, options.entropyEnc || "hex"),
                    nonce = utils_1.toArray(options.nonce, options.nonceEnc || "hex"),
                    pers = utils_1.toArray(options.pers, options.persEnc || "hex");
                assert(entropy.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(entropy, nonce, pers);
            }
            (HmacDRBG.prototype._init = function (entropy, nonce, pers) {
                var seed = entropy.concat(nonce).concat(pers);
                (this.K = Array(this.outLen / 8)), (this.V = Array(this.outLen / 8));
                for (var i = 0; i < this.V.length; i++) (this.K[i] = 0), (this.V[i] = 1);
                this._update(seed), (this._reseed = 1), (this.reseedInterval = 281474976710656);
            }),
                (HmacDRBG.prototype._hmac = function () {
                    return new (hash_default().hmac)(this.hash, this.K);
                }),
                (HmacDRBG.prototype._update = function (seed) {
                    var kmac = this._hmac().update(this.V).update([0]);
                    seed && (kmac = kmac.update(seed)),
                        (this.K = kmac.digest()),
                        (this.V = this._hmac().update(this.V).digest()),
                        seed && ((this.K = this._hmac().update(this.V).update([1]).update(seed).digest()), (this.V = this._hmac().update(this.V).digest()));
                }),
                (HmacDRBG.prototype.reseed = function (entropy, entropyEnc, add, addEnc) {
                    "string" != typeof entropyEnc && ((addEnc = add), (add = entropyEnc), (entropyEnc = null)),
                        (entropy = utils_1.toArray(entropy, entropyEnc)),
                        (add = utils_1.toArray(add, addEnc)),
                        assert(entropy.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"),
                        this._update(entropy.concat(add || [])),
                        (this._reseed = 1);
                }),
                (HmacDRBG.prototype.generate = function (len, enc, add, addEnc) {
                    if (this._reseed > this.reseedInterval) throw Error("Reseed is required");
                    "string" != typeof enc && ((addEnc = add), (add = enc), (enc = null)), add && ((add = utils_1.toArray(add, addEnc || "hex")), this._update(add));
                    for (var temp = []; temp.length < len; ) (this.V = this._hmac().update(this.V).digest()), (temp = temp.concat(this.V));
                    var res = temp.slice(0, len);
                    return this._update(add), this._reseed++, utils_1.encode(res, enc);
                });
            var assert$3 = utils_1$1.assert;
            function KeyPair(ec, options) {
                (this.ec = ec), (this.priv = null), (this.pub = null), options.priv && this._importPrivate(options.priv, options.privEnc), options.pub && this._importPublic(options.pub, options.pubEnc);
            }
            (KeyPair.fromPublic = function (ec, pub, enc) {
                return pub instanceof KeyPair ? pub : new KeyPair(ec, { pub: pub, pubEnc: enc });
            }),
                (KeyPair.fromPrivate = function (ec, priv, enc) {
                    return priv instanceof KeyPair ? priv : new KeyPair(ec, { priv: priv, privEnc: enc });
                }),
                (KeyPair.prototype.validate = function () {
                    var pub = this.getPublic();
                    return pub.isInfinity()
                        ? { result: !1, reason: "Invalid public key" }
                        : pub.validate()
                        ? pub.mul(this.ec.curve.n).isInfinity()
                            ? { result: !0, reason: null }
                            : { result: !1, reason: "Public key * N != O" }
                        : { result: !1, reason: "Public key is not a point" };
                }),
                (KeyPair.prototype.getPublic = function (compact, enc) {
                    return ("string" == typeof compact && ((enc = compact), (compact = null)), this.pub || (this.pub = this.ec.g.mul(this.priv)), enc) ? this.pub.encode(enc, compact) : this.pub;
                }),
                (KeyPair.prototype.getPrivate = function (enc) {
                    return "hex" === enc ? this.priv.toString(16, 2) : this.priv;
                }),
                (KeyPair.prototype._importPrivate = function (key, enc) {
                    (this.priv = new (bn_default())(key, enc || 16)), (this.priv = this.priv.umod(this.ec.curve.n));
                }),
                (KeyPair.prototype._importPublic = function (key, enc) {
                    if (key.x || key.y) {
                        "mont" === this.ec.curve.type ? assert$3(key.x, "Need x coordinate") : ("short" === this.ec.curve.type || "edwards" === this.ec.curve.type) && assert$3(key.x && key.y, "Need both x and y coordinate"),
                            (this.pub = this.ec.curve.point(key.x, key.y));
                        return;
                    }
                    this.pub = this.ec.curve.decodePoint(key, enc);
                }),
                (KeyPair.prototype.derive = function (pub) {
                    return pub.validate() || assert$3(pub.validate(), "public point not validated"), pub.mul(this.priv).getX();
                }),
                (KeyPair.prototype.sign = function (msg, enc, options) {
                    return this.ec.sign(msg, this, enc, options);
                }),
                (KeyPair.prototype.verify = function (msg, signature) {
                    return this.ec.verify(msg, signature, this);
                }),
                (KeyPair.prototype.inspect = function () {
                    return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
                });
            var assert$4 = utils_1$1.assert;
            function Signature(options, enc) {
                if (options instanceof Signature) return options;
                this._importDER(options, enc) ||
                    (assert$4(options.r && options.s, "Signature without r or s"),
                    (this.r = new (bn_default())(options.r, 16)),
                    (this.s = new (bn_default())(options.s, 16)),
                    void 0 === options.recoveryParam ? (this.recoveryParam = null) : (this.recoveryParam = options.recoveryParam));
            }
            function Position() {
                this.place = 0;
            }
            function getLength(buf, p) {
                var initial = buf[p.place++];
                if (!(128 & initial)) return initial;
                var octetLen = 15 & initial;
                if (0 === octetLen || octetLen > 4) return !1;
                for (var val = 0, i = 0, off = p.place; i < octetLen; i++, off++) (val <<= 8), (val |= buf[off]), (val >>>= 0);
                return !(val <= 127) && ((p.place = off), val);
            }
            function rmPadding(buf) {
                for (var i = 0, len = buf.length - 1; !buf[i] && !(128 & buf[i + 1]) && i < len; ) i++;
                return 0 === i ? buf : buf.slice(i);
            }
            function constructLength(arr, len) {
                if (len < 128) {
                    arr.push(len);
                    return;
                }
                var octets = 1 + ((Math.log(len) / Math.LN2) >>> 3);
                for (arr.push(128 | octets); --octets; ) arr.push((len >>> (octets << 3)) & 255);
                arr.push(len);
            }
            (Signature.prototype._importDER = function (data, enc) {
                data = utils_1$1.toArray(data, enc);
                var p = new Position();
                if (48 !== data[p.place++]) return !1;
                var len = getLength(data, p);
                if (!1 === len || len + p.place !== data.length || 2 !== data[p.place++]) return !1;
                var rlen = getLength(data, p);
                if (!1 === rlen) return !1;
                var r = data.slice(p.place, rlen + p.place);
                if (((p.place += rlen), 2 !== data[p.place++])) return !1;
                var slen = getLength(data, p);
                if (!1 === slen || data.length !== slen + p.place) return !1;
                var s = data.slice(p.place, slen + p.place);
                if (0 === r[0]) {
                    if (!(128 & r[1])) return !1;
                    r = r.slice(1);
                }
                if (0 === s[0]) {
                    if (!(128 & s[1])) return !1;
                    s = s.slice(1);
                }
                return (this.r = new (bn_default())(r)), (this.s = new (bn_default())(s)), (this.recoveryParam = null), !0;
            }),
                (Signature.prototype.toDER = function (enc) {
                    var r = this.r.toArray(),
                        s = this.s.toArray();
                    for (128 & r[0] && (r = [0].concat(r)), 128 & s[0] && (s = [0].concat(s)), r = rmPadding(r), s = rmPadding(s); !s[0] && !(128 & s[1]); ) s = s.slice(1);
                    var arr = [2];
                    constructLength(arr, r.length), (arr = arr.concat(r)).push(2), constructLength(arr, s.length);
                    var backHalf = arr.concat(s),
                        res = [48];
                    return constructLength(res, backHalf.length), (res = res.concat(backHalf)), utils_1$1.encode(res, enc);
                });
            var rand = function () {
                    throw Error("unsupported");
                },
                assert$5 = utils_1$1.assert;
            function EC(options) {
                if (!(this instanceof EC)) return new EC(options);
                "string" == typeof options && (assert$5(Object.prototype.hasOwnProperty.call(curves_1, options), "Unknown curve " + options), (options = curves_1[options])),
                    options instanceof curves_1.PresetCurve && (options = { curve: options }),
                    (this.curve = options.curve.curve),
                    (this.n = this.curve.n),
                    (this.nh = this.n.ushrn(1)),
                    (this.g = this.curve.g),
                    (this.g = options.curve.g),
                    this.g.precompute(options.curve.n.bitLength() + 1),
                    (this.hash = options.hash || options.curve.hash);
            }
            (EC.prototype.keyPair = function (options) {
                return new KeyPair(this, options);
            }),
                (EC.prototype.keyFromPrivate = function (priv, enc) {
                    return KeyPair.fromPrivate(this, priv, enc);
                }),
                (EC.prototype.keyFromPublic = function (pub, enc) {
                    return KeyPair.fromPublic(this, pub, enc);
                }),
                (EC.prototype.genKeyPair = function (options) {
                    options || (options = {});
                    for (
                        var drbg = new HmacDRBG({
                                hash: this.hash,
                                pers: options.pers,
                                persEnc: options.persEnc || "utf8",
                                entropy: options.entropy || rand(this.hash.hmacStrength),
                                entropyEnc: (options.entropy && options.entropyEnc) || "utf8",
                                nonce: this.n.toArray(),
                            }),
                            bytes = this.n.byteLength(),
                            ns2 = this.n.sub(new (bn_default())(2));
                        ;

                    ) {
                        var priv = new (bn_default())(drbg.generate(bytes));
                        if (!(priv.cmp(ns2) > 0)) return priv.iaddn(1), this.keyFromPrivate(priv);
                    }
                }),
                (EC.prototype._truncateToN = function (msg, truncOnly) {
                    var delta = 8 * msg.byteLength() - this.n.bitLength();
                    return (delta > 0 && (msg = msg.ushrn(delta)), !truncOnly && msg.cmp(this.n) >= 0) ? msg.sub(this.n) : msg;
                }),
                (EC.prototype.sign = function (msg, key, enc, options) {
                    "object" == typeof enc && ((options = enc), (enc = null)), options || (options = {}), (key = this.keyFromPrivate(key, enc)), (msg = this._truncateToN(new (bn_default())(msg, 16)));
                    for (
                        var bytes = this.n.byteLength(),
                            bkey = key.getPrivate().toArray("be", bytes),
                            nonce = msg.toArray("be", bytes),
                            drbg = new HmacDRBG({ hash: this.hash, entropy: bkey, nonce: nonce, pers: options.pers, persEnc: options.persEnc || "utf8" }),
                            ns1 = this.n.sub(new (bn_default())(1)),
                            iter = 0;
                        ;
                        iter++
                    ) {
                        var k = options.k ? options.k(iter) : new (bn_default())(drbg.generate(this.n.byteLength()));
                        if (!(0 >= (k = this._truncateToN(k, !0)).cmpn(1) || k.cmp(ns1) >= 0)) {
                            var kp = this.g.mul(k);
                            if (!kp.isInfinity()) {
                                var kpX = kp.getX(),
                                    r = kpX.umod(this.n);
                                if (0 !== r.cmpn(0)) {
                                    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
                                    if (0 !== (s = s.umod(this.n)).cmpn(0)) {
                                        var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (0 !== kpX.cmp(r) ? 2 : 0);
                                        return options.canonical && s.cmp(this.nh) > 0 && ((s = this.n.sub(s)), (recoveryParam ^= 1)), new Signature({ r: r, s: s, recoveryParam: recoveryParam });
                                    }
                                }
                            }
                        }
                    }
                }),
                (EC.prototype.verify = function (msg, signature$1, key, enc) {
                    (msg = this._truncateToN(new (bn_default())(msg, 16))), (key = this.keyFromPublic(key, enc));
                    var p,
                        r = (signature$1 = new Signature(signature$1, "hex")).r,
                        s = signature$1.s;
                    if (0 > r.cmpn(1) || r.cmp(this.n) >= 0 || 0 > s.cmpn(1) || s.cmp(this.n) >= 0) return !1;
                    var sinv = s.invm(this.n),
                        u1 = sinv.mul(msg).umod(this.n),
                        u2 = sinv.mul(r).umod(this.n);
                    return this.curve._maxwellTrick ? !(p = this.g.jmulAdd(u1, key.getPublic(), u2)).isInfinity() && p.eqXToP(r) : !(p = this.g.mulAdd(u1, key.getPublic(), u2)).isInfinity() && 0 === p.getX().umod(this.n).cmp(r);
                }),
                (EC.prototype.recoverPubKey = function (msg, signature$1, j, enc) {
                    assert$5((3 & j) === j, "The recovery param is more than two bits"), (signature$1 = new Signature(signature$1, enc));
                    var n = this.n,
                        e = new (bn_default())(msg),
                        r = signature$1.r,
                        s = signature$1.s,
                        isYOdd = 1 & j,
                        isSecondKey = j >> 1;
                    if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey) throw Error("Unable to find sencond key candinate");
                    r = isSecondKey ? this.curve.pointFromX(r.add(this.curve.n), isYOdd) : this.curve.pointFromX(r, isYOdd);
                    var rInv = signature$1.r.invm(n),
                        s1 = n.sub(e).mul(rInv).umod(n),
                        s2 = s.mul(rInv).umod(n);
                    return this.g.mulAdd(s1, r, s2);
                }),
                (EC.prototype.getKeyRecoveryParam = function (e, signature$1, Q, enc) {
                    if (null !== (signature$1 = new Signature(signature$1, enc)).recoveryParam) return signature$1.recoveryParam;
                    for (var Qprime, i = 0; i < 4; i++) {
                        try {
                            Qprime = this.recoverPubKey(e, signature$1, i);
                        } catch (e1) {
                            continue;
                        }
                        if (Qprime.eq(Q)) return i;
                    }
                    throw Error("Unable to find valid recovery factor");
                });
            var EC$1 = createCommonjsModule(function (module, exports) {
                    var elliptic = exports;
                    (elliptic.version = "6.5.4"),
                        (elliptic.utils = utils_1$1),
                        (elliptic.rand = function () {
                            throw Error("unsupported");
                        }),
                        (elliptic.curve = curve_1),
                        (elliptic.curves = curves_1),
                        (elliptic.ec = EC),
                        (elliptic.eddsa = null);
                }).ec,
                properties_lib_esm = __webpack_require__(6881),
                logger_lib_esm = __webpack_require__(1581);
            let logger = new logger_lib_esm.Yd("signing-key/5.6.0"),
                _curve = null;
            function getCurve() {
                return _curve || (_curve = new EC$1("secp256k1")), _curve;
            }
            class SigningKey {
                constructor(privateKey) {
                    (0, properties_lib_esm.zG)(this, "curve", "secp256k1"), (0, properties_lib_esm.zG)(this, "privateKey", (0, bytes_lib_esm.Dv)(privateKey));
                    let keyPair = getCurve().keyFromPrivate((0, bytes_lib_esm.lE)(this.privateKey));
                    (0, properties_lib_esm.zG)(this, "publicKey", "0x" + keyPair.getPublic(!1, "hex")),
                        (0, properties_lib_esm.zG)(this, "compressedPublicKey", "0x" + keyPair.getPublic(!0, "hex")),
                        (0, properties_lib_esm.zG)(this, "_isSigningKey", !0);
                }
                _addPoint(other) {
                    let p0 = getCurve().keyFromPublic((0, bytes_lib_esm.lE)(this.publicKey)),
                        p1 = getCurve().keyFromPublic((0, bytes_lib_esm.lE)(other));
                    return "0x" + p0.pub.add(p1.pub).encodeCompressed("hex");
                }
                signDigest(digest) {
                    let keyPair = getCurve().keyFromPrivate((0, bytes_lib_esm.lE)(this.privateKey)),
                        digestBytes = (0, bytes_lib_esm.lE)(digest);
                    32 !== digestBytes.length && logger.throwArgumentError("bad digest length", "digest", digest);
                    let signature = keyPair.sign(digestBytes, { canonical: !0 });
                    return (0, bytes_lib_esm.N)({ recoveryParam: signature.recoveryParam, r: (0, bytes_lib_esm.$m)("0x" + signature.r.toString(16), 32), s: (0, bytes_lib_esm.$m)("0x" + signature.s.toString(16), 32) });
                }
                computeSharedSecret(otherKey) {
                    let keyPair = getCurve().keyFromPrivate((0, bytes_lib_esm.lE)(this.privateKey)),
                        otherKeyPair = getCurve().keyFromPublic((0, bytes_lib_esm.lE)(computePublicKey(otherKey)));
                    return (0, bytes_lib_esm.$m)("0x" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);
                }
                static isSigningKey(value) {
                    return !!(value && value._isSigningKey);
                }
            }
            function computePublicKey(key, compressed) {
                let bytes = (0, bytes_lib_esm.lE)(key);
                if (32 === bytes.length) {
                    let signingKey = new SigningKey(bytes);
                    return compressed ? "0x" + getCurve().keyFromPrivate(bytes).getPublic(!0, "hex") : signingKey.publicKey;
                }
                return 33 === bytes.length
                    ? compressed
                        ? (0, bytes_lib_esm.Dv)(bytes)
                        : "0x" + getCurve().keyFromPublic(bytes).getPublic(!1, "hex")
                    : 65 === bytes.length
                    ? compressed
                        ? "0x" + getCurve().keyFromPublic(bytes).getPublic(!0, "hex")
                        : (0, bytes_lib_esm.Dv)(bytes)
                    : logger.throwArgumentError("invalid public or private key", "key", "[REDACTED]");
            }
            let lib_esm_logger = new logger_lib_esm.Yd("transactions/5.6.0");
            function handleAddress(value) {
                return "0x" === value ? null : (0, lib_esm.Kn)(value);
            }
            function handleNumber(value) {
                return "0x" === value ? bignumbers._Y : bignumber.O$.from(value);
            }
            function recoverAddress(digest, signature) {
                return (function (key) {
                    let publicKey = computePublicKey(key);
                    return (0, lib_esm.Kn)((0, bytes_lib_esm.p3)((0, keccak256_lib_esm.w)((0, bytes_lib_esm.p3)(publicKey, 1)), 12));
                })(
                    (function (digest, signature) {
                        let sig = (0, bytes_lib_esm.N)(signature),
                            rs = { r: (0, bytes_lib_esm.lE)(sig.r), s: (0, bytes_lib_esm.lE)(sig.s) };
                        return (
                            "0x" +
                            getCurve()
                                .recoverPubKey((0, bytes_lib_esm.lE)(digest), rs, sig.recoveryParam)
                                .encode("hex", !1)
                        );
                    })((0, bytes_lib_esm.lE)(digest), signature)
                );
            }
            function formatNumber(value, name) {
                let result = (0, bytes_lib_esm.G1)(bignumber.O$.from(value).toHexString());
                return result.length > 32 && lib_esm_logger.throwArgumentError("invalid length for " + name, "transaction:" + name, value), result;
            }
            function accessSetify(addr, storageKeys) {
                return {
                    address: (0, lib_esm.Kn)(addr),
                    storageKeys: (storageKeys || []).map(
                        (storageKey, index) => (32 !== (0, bytes_lib_esm.E1)(storageKey) && lib_esm_logger.throwArgumentError("invalid access list storageKey", `accessList[${addr}:${index}]`, storageKey), storageKey.toLowerCase())
                    ),
                };
            }
            function accessListify(value) {
                if (Array.isArray(value))
                    return value.map((set, index) =>
                        Array.isArray(set)
                            ? (set.length > 2 && lib_esm_logger.throwArgumentError("access list expected to be [ address, storageKeys[] ]", `value[${index}]`, set), accessSetify(set[0], set[1]))
                            : accessSetify(set.address, set.storageKeys)
                    );
                let result = Object.keys(value).map((addr) => {
                    let storageKeys = value[addr].reduce((accum, storageKey) => ((accum[storageKey] = !0), accum), {});
                    return accessSetify(addr, Object.keys(storageKeys).sort());
                });
                return result.sort((a, b) => a.address.localeCompare(b.address)), result;
            }
            function formatAccessList(value) {
                return accessListify(value).map((set) => [set.address, set.storageKeys]);
            }
            function _serializeEip1559(transaction, signature) {
                if (null != transaction.gasPrice) {
                    let gasPrice = bignumber.O$.from(transaction.gasPrice),
                        maxFeePerGas = bignumber.O$.from(transaction.maxFeePerGas || 0);
                    gasPrice.eq(maxFeePerGas) || lib_esm_logger.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas", "tx", { gasPrice, maxFeePerGas });
                }
                let fields = [
                    formatNumber(transaction.chainId || 0, "chainId"),
                    formatNumber(transaction.nonce || 0, "nonce"),
                    formatNumber(transaction.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"),
                    formatNumber(transaction.maxFeePerGas || 0, "maxFeePerGas"),
                    formatNumber(transaction.gasLimit || 0, "gasLimit"),
                    null != transaction.to ? (0, lib_esm.Kn)(transaction.to) : "0x",
                    formatNumber(transaction.value || 0, "value"),
                    transaction.data || "0x",
                    formatAccessList(transaction.accessList || []),
                ];
                if (signature) {
                    let sig = (0, bytes_lib_esm.N)(signature);
                    fields.push(formatNumber(sig.recoveryParam, "recoveryParam")), fields.push((0, bytes_lib_esm.G1)(sig.r)), fields.push((0, bytes_lib_esm.G1)(sig.s));
                }
                return (0, bytes_lib_esm.xs)(["0x02", rlp_lib_esm.c(fields)]);
            }
            function _serializeEip2930(transaction, signature) {
                let fields = [
                    formatNumber(transaction.chainId || 0, "chainId"),
                    formatNumber(transaction.nonce || 0, "nonce"),
                    formatNumber(transaction.gasPrice || 0, "gasPrice"),
                    formatNumber(transaction.gasLimit || 0, "gasLimit"),
                    null != transaction.to ? (0, lib_esm.Kn)(transaction.to) : "0x",
                    formatNumber(transaction.value || 0, "value"),
                    transaction.data || "0x",
                    formatAccessList(transaction.accessList || []),
                ];
                if (signature) {
                    let sig = (0, bytes_lib_esm.N)(signature);
                    fields.push(formatNumber(sig.recoveryParam, "recoveryParam")), fields.push((0, bytes_lib_esm.G1)(sig.r)), fields.push((0, bytes_lib_esm.G1)(sig.s));
                }
                return (0, bytes_lib_esm.xs)(["0x01", rlp_lib_esm.c(fields)]);
            }
            function _parseEipSignature(tx, fields, serialize) {
                try {
                    let recid = handleNumber(fields[0]).toNumber();
                    if (0 !== recid && 1 !== recid) throw Error("bad recid");
                    tx.v = recid;
                } catch (error) {
                    lib_esm_logger.throwArgumentError("invalid v for transaction type: 1", "v", fields[0]);
                }
                (tx.r = (0, bytes_lib_esm.$m)(fields[1], 32)), (tx.s = (0, bytes_lib_esm.$m)(fields[2], 32));
                try {
                    let digest = (0, keccak256_lib_esm.w)(serialize(tx));
                    tx.from = recoverAddress(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });
                } catch (error1) {
                    console.log(error1);
                }
            }
            function parse(rawTransaction) {
                let payload = (0, bytes_lib_esm.lE)(rawTransaction);
                if (payload[0] > 127)
                    return (function (rawTransaction) {
                        let transaction = rlp_lib_esm.J(rawTransaction);
                        9 !== transaction.length && 6 !== transaction.length && lib_esm_logger.throwArgumentError("invalid raw transaction", "rawTransaction", rawTransaction);
                        let tx = {
                            nonce: handleNumber(transaction[0]).toNumber(),
                            gasPrice: handleNumber(transaction[1]),
                            gasLimit: handleNumber(transaction[2]),
                            to: handleAddress(transaction[3]),
                            value: handleNumber(transaction[4]),
                            data: transaction[5],
                            chainId: 0,
                        };
                        if (6 === transaction.length) return tx;
                        try {
                            tx.v = bignumber.O$.from(transaction[6]).toNumber();
                        } catch (error) {
                            return console.log(error), tx;
                        }
                        if (((tx.r = (0, bytes_lib_esm.$m)(transaction[7], 32)), (tx.s = (0, bytes_lib_esm.$m)(transaction[8], 32)), bignumber.O$.from(tx.r).isZero() && bignumber.O$.from(tx.s).isZero())) (tx.chainId = tx.v), (tx.v = 0);
                        else {
                            (tx.chainId = Math.floor((tx.v - 35) / 2)), tx.chainId < 0 && (tx.chainId = 0);
                            let recoveryParam = tx.v - 27,
                                raw = transaction.slice(0, 6);
                            0 !== tx.chainId && (raw.push((0, bytes_lib_esm.Dv)(tx.chainId)), raw.push("0x"), raw.push("0x"), (recoveryParam -= 2 * tx.chainId + 8));
                            let digest = (0, keccak256_lib_esm.w)(rlp_lib_esm.c(raw));
                            try {
                                tx.from = recoverAddress(digest, { r: (0, bytes_lib_esm.Dv)(tx.r), s: (0, bytes_lib_esm.Dv)(tx.s), recoveryParam: recoveryParam });
                            } catch (error1) {
                                console.log(error1);
                            }
                            tx.hash = (0, keccak256_lib_esm.w)(rawTransaction);
                        }
                        return (tx.type = null), tx;
                    })(payload);
                switch (payload[0]) {
                    case 1:
                        return (function (payload) {
                            let transaction = rlp_lib_esm.J(payload.slice(1));
                            8 !== transaction.length && 11 !== transaction.length && lib_esm_logger.throwArgumentError("invalid component count for transaction type: 1", "payload", (0, bytes_lib_esm.Dv)(payload));
                            let tx = {
                                type: 1,
                                chainId: handleNumber(transaction[0]).toNumber(),
                                nonce: handleNumber(transaction[1]).toNumber(),
                                gasPrice: handleNumber(transaction[2]),
                                gasLimit: handleNumber(transaction[3]),
                                to: handleAddress(transaction[4]),
                                value: handleNumber(transaction[5]),
                                data: transaction[6],
                                accessList: accessListify(transaction[7]),
                            };
                            return 8 === transaction.length || ((tx.hash = (0, keccak256_lib_esm.w)(payload)), _parseEipSignature(tx, transaction.slice(8), _serializeEip2930)), tx;
                        })(payload);
                    case 2:
                        return (function (payload) {
                            let transaction = rlp_lib_esm.J(payload.slice(1));
                            9 !== transaction.length && 12 !== transaction.length && lib_esm_logger.throwArgumentError("invalid component count for transaction type: 2", "payload", (0, bytes_lib_esm.Dv)(payload));
                            let maxPriorityFeePerGas = handleNumber(transaction[2]),
                                maxFeePerGas = handleNumber(transaction[3]),
                                tx = {
                                    type: 2,
                                    chainId: handleNumber(transaction[0]).toNumber(),
                                    nonce: handleNumber(transaction[1]).toNumber(),
                                    maxPriorityFeePerGas: maxPriorityFeePerGas,
                                    maxFeePerGas: maxFeePerGas,
                                    gasPrice: null,
                                    gasLimit: handleNumber(transaction[4]),
                                    to: handleAddress(transaction[5]),
                                    value: handleNumber(transaction[6]),
                                    data: transaction[7],
                                    accessList: accessListify(transaction[8]),
                                };
                            return 9 === transaction.length || ((tx.hash = (0, keccak256_lib_esm.w)(payload)), _parseEipSignature(tx, transaction.slice(9), _serializeEip1559)), tx;
                        })(payload);
                }
                return lib_esm_logger.throwError(`unsupported transaction type: ${payload[0]}`, logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation: "parseTransaction", transactionType: payload[0] });
            }
            ((TransactionTypes = TransactionTypes1 || (TransactionTypes1 = {}))[(TransactionTypes.legacy = 0)] = "legacy"),
                (TransactionTypes[(TransactionTypes.eip2930 = 1)] = "eip2930"),
                (TransactionTypes[(TransactionTypes.eip1559 = 2)] = "eip1559");
        },
        35553: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                dF: function () {
                    return formatEther;
                },
                bM: function () {
                    return formatUnits;
                },
                fi: function () {
                    return parseEther;
                },
                vz: function () {
                    return parseUnits;
                },
            });
            var lib_esm = __webpack_require__(16441),
                logger_lib_esm = __webpack_require__(1581),
                _version = __webpack_require__(48794),
                bignumber = __webpack_require__(2593);
            let logger = new logger_lib_esm.Yd(_version.i),
                _constructorGuard = {},
                Zero = bignumber.O$.from(0),
                NegativeOne = bignumber.O$.from(-1);
            function throwFault(message, fault, operation, value) {
                let params = { fault: fault, operation: operation };
                return void 0 !== value && (params.value = value), logger.throwError(message, logger_lib_esm.Yd.errors.NUMERIC_FAULT, params);
            }
            let zeros = "0";
            for (; zeros.length < 256; ) zeros += zeros;
            function getMultiplier(decimals) {
                if ("number" != typeof decimals)
                    try {
                        decimals = bignumber.O$.from(decimals).toNumber();
                    } catch (e) {}
                return "number" == typeof decimals && decimals >= 0 && decimals <= 256 && !(decimals % 1) ? "1" + zeros.substring(0, decimals) : logger.throwArgumentError("invalid decimal size", "decimals", decimals);
            }
            function formatFixed(value, decimals) {
                null == decimals && (decimals = 0);
                let multiplier = getMultiplier(decimals);
                value = bignumber.O$.from(value);
                let negative = value.lt(Zero);
                negative && (value = value.mul(NegativeOne));
                let fraction = value.mod(multiplier).toString();
                for (; fraction.length < multiplier.length - 1; ) fraction = "0" + fraction;
                fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];
                let whole = value.div(multiplier).toString();
                return (value = 1 === multiplier.length ? whole : whole + "." + fraction), negative && (value = "-" + value), value;
            }
            function parseFixed(value, decimals) {
                null == decimals && (decimals = 0);
                let multiplier = getMultiplier(decimals);
                ("string" == typeof value && value.match(/^-?[0-9.]+$/)) || logger.throwArgumentError("invalid decimal value", "value", value);
                let negative = "-" === value.substring(0, 1);
                negative && (value = value.substring(1)), "." === value && logger.throwArgumentError("missing value", "value", value);
                let comps = value.split(".");
                comps.length > 2 && logger.throwArgumentError("too many decimal points", "value", value);
                let whole = comps[0],
                    fraction = comps[1];
                for (whole || (whole = "0"), fraction || (fraction = "0"); "0" === fraction[fraction.length - 1]; ) fraction = fraction.substring(0, fraction.length - 1);
                for (fraction.length > multiplier.length - 1 && throwFault("fractional component exceeds decimals", "underflow", "parseFixed"), "" === fraction && (fraction = "0"); fraction.length < multiplier.length - 1; ) fraction += "0";
                let wholeValue = bignumber.O$.from(whole),
                    fractionValue = bignumber.O$.from(fraction),
                    wei = wholeValue.mul(multiplier).add(fractionValue);
                return negative && (wei = wei.mul(NegativeOne)), wei;
            }
            class FixedFormat {
                constructor(constructorGuard, signed, width, decimals) {
                    constructorGuard !== _constructorGuard && logger.throwError("cannot use FixedFormat constructor; use FixedFormat.from", logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation: "new FixedFormat" }),
                        (this.signed = signed),
                        (this.width = width),
                        (this.decimals = decimals),
                        (this.name = (signed ? "" : "u") + "fixed" + String(width) + "x" + String(decimals)),
                        (this._multiplier = getMultiplier(decimals)),
                        Object.freeze(this);
                }
                static from(value) {
                    if (value instanceof FixedFormat) return value;
                    "number" == typeof value && (value = `fixed128x${value}`);
                    let signed = !0,
                        width = 128,
                        decimals = 18;
                    if ("string" == typeof value) {
                        if ("fixed" === value);
                        else if ("ufixed" === value) signed = !1;
                        else {
                            let match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);
                            match || logger.throwArgumentError("invalid fixed format", "format", value), (signed = "u" !== match[1]), (width = parseInt(match[2])), (decimals = parseInt(match[3]));
                        }
                    } else if (value) {
                        let check = (key, type, defaultValue) =>
                            null == value[key] ? defaultValue : (typeof value[key] !== type && logger.throwArgumentError("invalid fixed format (" + key + " not " + type + ")", "format." + key, value[key]), value[key]);
                        (signed = check("signed", "boolean", signed)), (width = check("width", "number", width)), (decimals = check("decimals", "number", decimals));
                    }
                    return (
                        width % 8 && logger.throwArgumentError("invalid fixed format width (not byte aligned)", "format.width", width),
                        decimals > 80 && logger.throwArgumentError("invalid fixed format (decimals too large)", "format.decimals", decimals),
                        new FixedFormat(_constructorGuard, signed, width, decimals)
                    );
                }
            }
            class FixedNumber {
                constructor(constructorGuard, hex, value, format) {
                    logger.checkNew(new.target, FixedNumber),
                        constructorGuard !== _constructorGuard && logger.throwError("cannot use FixedNumber constructor; use FixedNumber.from", logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation: "new FixedFormat" }),
                        (this.format = format),
                        (this._hex = hex),
                        (this._value = value),
                        (this._isFixedNumber = !0),
                        Object.freeze(this);
                }
                _checkFormat(other) {
                    this.format.name !== other.format.name && logger.throwArgumentError("incompatible format; use fixedNumber.toFormat", "other", other);
                }
                addUnsafe(other) {
                    this._checkFormat(other);
                    let a = parseFixed(this._value, this.format.decimals),
                        b = parseFixed(other._value, other.format.decimals);
                    return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);
                }
                subUnsafe(other) {
                    this._checkFormat(other);
                    let a = parseFixed(this._value, this.format.decimals),
                        b = parseFixed(other._value, other.format.decimals);
                    return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);
                }
                mulUnsafe(other) {
                    this._checkFormat(other);
                    let a = parseFixed(this._value, this.format.decimals),
                        b = parseFixed(other._value, other.format.decimals);
                    return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);
                }
                divUnsafe(other) {
                    this._checkFormat(other);
                    let a = parseFixed(this._value, this.format.decimals),
                        b = parseFixed(other._value, other.format.decimals);
                    return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);
                }
                floor() {
                    let comps = this.toString().split(".");
                    1 === comps.length && comps.push("0");
                    let result = FixedNumber.from(comps[0], this.format),
                        hasFraction = !comps[1].match(/^(0*)$/);
                    return this.isNegative() && hasFraction && (result = result.subUnsafe(ONE.toFormat(result.format))), result;
                }
                ceiling() {
                    let comps = this.toString().split(".");
                    1 === comps.length && comps.push("0");
                    let result = FixedNumber.from(comps[0], this.format),
                        hasFraction = !comps[1].match(/^(0*)$/);
                    return !this.isNegative() && hasFraction && (result = result.addUnsafe(ONE.toFormat(result.format))), result;
                }
                round(decimals) {
                    null == decimals && (decimals = 0);
                    let comps = this.toString().split(".");
                    if ((1 === comps.length && comps.push("0"), (decimals < 0 || decimals > 80 || decimals % 1) && logger.throwArgumentError("invalid decimal count", "decimals", decimals), comps[1].length <= decimals)) return this;
                    let factor = FixedNumber.from("1" + zeros.substring(0, decimals), this.format),
                        bump = BUMP.toFormat(this.format);
                    return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);
                }
                isZero() {
                    return "0.0" === this._value || "0" === this._value;
                }
                isNegative() {
                    return "-" === this._value[0];
                }
                toString() {
                    return this._value;
                }
                toHexString(width) {
                    if (null == width) return this._hex;
                    width % 8 && logger.throwArgumentError("invalid byte width", "width", width);
                    let hex = bignumber.O$.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();
                    return (0, lib_esm.$m)(hex, width / 8);
                }
                toUnsafeFloat() {
                    return parseFloat(this.toString());
                }
                toFormat(format) {
                    return FixedNumber.fromString(this._value, format);
                }
                static fromValue(value, decimals, format) {
                    return (
                        null != format || null == decimals || (0, bignumber.Zm)(decimals) || ((format = decimals), (decimals = null)),
                        null == decimals && (decimals = 0),
                        null == format && (format = "fixed"),
                        FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format))
                    );
                }
                static fromString(value, format) {
                    null == format && (format = "fixed");
                    let fixedFormat = FixedFormat.from(format),
                        numeric = parseFixed(value, fixedFormat.decimals);
                    !fixedFormat.signed && numeric.lt(Zero) && throwFault("unsigned value cannot be negative", "overflow", "value", value);
                    let hex = null;
                    fixedFormat.signed ? (hex = numeric.toTwos(fixedFormat.width).toHexString()) : ((hex = numeric.toHexString()), (hex = (0, lib_esm.$m)(hex, fixedFormat.width / 8)));
                    let decimal = formatFixed(numeric, fixedFormat.decimals);
                    return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);
                }
                static fromBytes(value, format) {
                    null == format && (format = "fixed");
                    let fixedFormat = FixedFormat.from(format);
                    if ((0, lib_esm.lE)(value).length > fixedFormat.width / 8) throw Error("overflow");
                    let numeric = bignumber.O$.from(value);
                    fixedFormat.signed && (numeric = numeric.fromTwos(fixedFormat.width));
                    let hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString(),
                        decimal = formatFixed(numeric, fixedFormat.decimals);
                    return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);
                }
                static from(value, format) {
                    if ("string" == typeof value) return FixedNumber.fromString(value, format);
                    if ((0, lib_esm._t)(value)) return FixedNumber.fromBytes(value, format);
                    try {
                        return FixedNumber.fromValue(value, 0, format);
                    } catch (error) {
                        if (error.code !== logger_lib_esm.Yd.errors.INVALID_ARGUMENT) throw error;
                    }
                    return logger.throwArgumentError("invalid FixedNumber value", "value", value);
                }
                static isFixedNumber(value) {
                    return !!(value && value._isFixedNumber);
                }
            }
            let ONE = FixedNumber.from(1),
                BUMP = FixedNumber.from("0.5"),
                lib_esm_logger = new logger_lib_esm.Yd("units/5.6.0"),
                names = ["wei", "kwei", "mwei", "gwei", "szabo", "finney", "ether"];
            function formatUnits(value, unitName) {
                if ("string" == typeof unitName) {
                    let index = names.indexOf(unitName);
                    -1 !== index && (unitName = 3 * index);
                }
                return formatFixed(value, null != unitName ? unitName : 18);
            }
            function parseUnits(value, unitName) {
                if (("string" != typeof value && lib_esm_logger.throwArgumentError("value must be a string", "value", value), "string" == typeof unitName)) {
                    let index = names.indexOf(unitName);
                    -1 !== index && (unitName = 3 * index);
                }
                return parseFixed(value, null != unitName ? unitName : 18);
            }
            function formatEther(wei) {
                return formatUnits(wei, 18);
            }
            function parseEther(ether) {
                return parseUnits(ether, 18);
            }
        },
        19394: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 });
            let events_1 = __webpack_require__(17187);
            function safeApply(handler, context, args) {
                try {
                    Reflect.apply(handler, context, args);
                } catch (err) {
                    setTimeout(() => {
                        throw err;
                    });
                }
            }
            class SafeEventEmitter extends events_1.EventEmitter {
                emit(type, ...args) {
                    let doError = "error" === type,
                        events = this._events;
                    if (void 0 !== events) doError = doError && void 0 === events.error;
                    else if (!doError) return !1;
                    if (doError) {
                        let er;
                        if ((args.length > 0 && ([er] = args), er instanceof Error)) throw er;
                        let err = Error(`Unhandled error.${er ? ` (${er.message})` : ""}`);
                        throw ((err.context = er), err);
                    }
                    let handler = events[type];
                    if (void 0 === handler) return !1;
                    if ("function" == typeof handler) safeApply(handler, this, args);
                    else {
                        let len = handler.length,
                            listeners = (function (arr) {
                                let n = arr.length,
                                    copy = Array(n);
                                for (let i = 0; i < n; i += 1) copy[i] = arr[i];
                                return copy;
                            })(handler);
                        for (let i = 0; i < len; i += 1) safeApply(listeners[i], this, args);
                    }
                    return !0;
                }
            }
            exports.default = SafeEventEmitter;
        },
        43063: function (__unused_webpack_module, exports) {
            function Emitter(obj) {
                if (obj)
                    return (function (obj) {
                        for (var key in Emitter.prototype) obj[key] = Emitter.prototype[key];
                        return obj;
                    })(obj);
            }
            (exports.Q = Emitter),
                (Emitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {
                    return (this._callbacks = this._callbacks || {}), (this._callbacks["$" + event] = this._callbacks["$" + event] || []).push(fn), this;
                }),
                (Emitter.prototype.once = function (event, fn) {
                    function on() {
                        this.off(event, on), fn.apply(this, arguments);
                    }
                    return (on.fn = fn), this.on(event, on), this;
                }),
                (Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {
                    if (((this._callbacks = this._callbacks || {}), 0 == arguments.length)) return (this._callbacks = {}), this;
                    var cb,
                        callbacks = this._callbacks["$" + event];
                    if (!callbacks) return this;
                    if (1 == arguments.length) return delete this._callbacks["$" + event], this;
                    for (var i = 0; i < callbacks.length; i++)
                        if ((cb = callbacks[i]) === fn || cb.fn === fn) {
                            callbacks.splice(i, 1);
                            break;
                        }
                    return 0 === callbacks.length && delete this._callbacks["$" + event], this;
                }),
                (Emitter.prototype.emit = function (event) {
                    this._callbacks = this._callbacks || {};
                    for (var args = Array(arguments.length - 1), callbacks = this._callbacks["$" + event], i = 1; i < arguments.length; i++) args[i - 1] = arguments[i];
                    if (callbacks) {
                        callbacks = callbacks.slice(0);
                        for (var i = 0, len = callbacks.length; i < len; ++i) callbacks[i].apply(this, args);
                    }
                    return this;
                }),
                (Emitter.prototype.emitReserved = Emitter.prototype.emit),
                (Emitter.prototype.listeners = function (event) {
                    return (this._callbacks = this._callbacks || {}), this._callbacks["$" + event] || [];
                }),
                (Emitter.prototype.hasListeners = function (event) {
                    return !!this.listeners(event).length;
                });
        },
        62470: function (__unused_webpack_module, exports, __webpack_require__) {
            !(function (e, t) {
                "use strict";
                var n,
                    o = (function (e) {
                        if (e && e.__esModule) return e;
                        var t = Object.create(null);
                        return (
                            e &&
                                Object.keys(e).forEach(function (s) {
                                    if ("default" !== s) {
                                        var n = Object.getOwnPropertyDescriptor(e, s);
                                        Object.defineProperty(
                                            t,
                                            s,
                                            n.get
                                                ? n
                                                : {
                                                      enumerable: !0,
                                                      get: function () {
                                                          return e[s];
                                                      },
                                                  }
                                        );
                                    }
                                }),
                            (t.default = e),
                            Object.freeze(t)
                        );
                    })(t),
                    i = ["bottom", "height", "left", "right", "top", "width"],
                    l = new Map(),
                    r = function e() {
                        var t = [];
                        l.forEach(function (e, s) {
                            var n,
                                o,
                                l = s.getBoundingClientRect();
                            (n = l),
                                (o = e.rect),
                                void 0 === n && (n = {}),
                                void 0 === o && (o = {}),
                                i.some(function (e) {
                                    return n[e] !== o[e];
                                }) && ((e.rect = l), t.push(e));
                        }),
                            t.forEach(function (e) {
                                e.callbacks.forEach(function (t) {
                                    return t(e.rect);
                                });
                            }),
                            (n = window.requestAnimationFrame(e));
                    };
                /**
                 * virtual-core
                 *
                 * Copyright (c) TanStack
                 *
                 * This source code is licensed under the MIT license found in the
                 * LICENSE.md file in the root directory of this source tree.
                 *
                 * @license MIT
                 */ function a(e, t, s) {
                    let n,
                        o = [];
                    return () => {
                        let i, r;
                        s.key && null != s.debug && s.debug() && (i = Date.now());
                        let l = e();
                        if (!(l.length !== o.length || l.some((e, t) => o[t] !== e))) return n;
                        if (((o = l), s.key && null != s.debug && s.debug() && (r = Date.now()), (n = t(...l)), null == s || null == s.onChange || s.onChange(n), s.key && null != s.debug && s.debug())) {
                            let e1 = Math.round(100 * (Date.now() - i)) / 100,
                                t1 = Math.round(100 * (Date.now() - r)) / 100,
                                o1 = (e, t) => {
                                    for (e = String(e); e.length < t; ) e = " " + e;
                                    return e;
                                };
                            console.info(
                                "%c⏱ " + o1(t1, 5) + " /" + o1(e1, 5) + " ms",
                                "\n            font-size: .6rem;\n            font-weight: bold;\n            color: hsl(" + Math.max(0, Math.min(120 - 120 * (t1 / 16), 120)) + "deg 100% 31%);",
                                null == s ? void 0 : s.key
                            );
                        }
                        return n;
                    };
                }
                let c = (e) => e,
                    h = (e) => {
                        let t = Math.max(e.startIndex - e.overscan, 0),
                            s = Math.min(e.endIndex + e.overscan, e.count - 1),
                            n = [];
                        for (let e1 = t; e1 <= s; e1++) n.push(e1);
                        return n;
                    },
                    u = (e, t) => {
                        let s = { height: -1, width: -1 };
                        return (n) => {
                            (e.options.horizontal ? n.width !== s.width : n.height !== s.height) && t(n), (s = n);
                        };
                    },
                    d = (e, t) => {
                        var e1, t1;
                        let s = u(e, t),
                            o =
                                ((e1 = e.scrollElement),
                                (t1 = (e) => {
                                    s(e);
                                }),
                                {
                                    observe: function () {
                                        var s = 0 === l.size;
                                        l.has(e1) ? l.get(e1).callbacks.push(t1) : l.set(e1, { rect: void 0, hasRectChanged: !1, callbacks: [t1] }), s && r();
                                    },
                                    unobserve: function () {
                                        var s = l.get(e1);
                                        if (s) {
                                            var o = s.callbacks.indexOf(t1);
                                            o >= 0 && s.callbacks.splice(o, 1), s.callbacks.length || l.delete(e1), l.size || cancelAnimationFrame(n);
                                        }
                                    },
                                });
                        if (e.scrollElement)
                            return (
                                s(e.scrollElement.getBoundingClientRect()),
                                o.observe(),
                                () => {
                                    o.unobserve();
                                }
                            );
                    },
                    f = (e, t) => {
                        let s = u(e, t),
                            n = () => s({ width: e.scrollElement.innerWidth, height: e.scrollElement.innerHeight });
                        if (e.scrollElement)
                            return (
                                n(),
                                e.scrollElement.addEventListener("resize", n, { capture: !1, passive: !0 }),
                                () => {
                                    e.scrollElement.removeEventListener("resize", n);
                                }
                            );
                    },
                    m = { element: ["scrollLeft", "scrollTop"], window: ["scrollX", "scrollY"] },
                    g = (e) => (t, s) => {
                        if (!t.scrollElement) return;
                        let n = m[e][0],
                            o = m[e][1],
                            i = t.scrollElement[n],
                            l = t.scrollElement[o],
                            r = () => {
                                s(t.scrollElement[t.options.horizontal ? n : o]);
                            };
                        r();
                        let a = (e) => {
                            let s = e.currentTarget,
                                a = s[n],
                                c = s[o];
                            (t.options.horizontal ? i - a : l - c) && r(), (i = a), (l = c);
                        };
                        return (
                            t.scrollElement.addEventListener("scroll", a, { capture: !1, passive: !0 }),
                            () => {
                                t.scrollElement.removeEventListener("scroll", a);
                            }
                        );
                    },
                    p = g("element"),
                    E = g("window"),
                    v = (e, t) => e.getBoundingClientRect()[t.options.horizontal ? "width" : "height"],
                    b = (e, t, s) => {
                        var n;
                        null == (n = s.scrollElement) || n.scrollTo({ [s.options.horizontal ? "left" : "top"]: e, behavior: t ? "smooth" : void 0 });
                    },
                    O = (e, t, s) => {
                        var n;
                        null == (n = s.scrollElement) || n.scrollTo({ [s.options.horizontal ? "left" : "top"]: e, behavior: t ? "smooth" : void 0 });
                    };
                class w {
                    constructor(e) {
                        var t = this;
                        (this.unsubs = []),
                            (this.scrollElement = null),
                            (this.measurementsCache = []),
                            (this.itemMeasurementsCache = {}),
                            (this.pendingMeasuredCacheIndexes = []),
                            (this.measureElementCache = {}),
                            (this.setOptions = (e) => {
                                Object.entries(e).forEach((t) => {
                                    let [s, n] = t;
                                    void 0 === n && delete e[s];
                                }),
                                    (this.options = {
                                        debug: !1,
                                        initialOffset: 0,
                                        overscan: 1,
                                        paddingStart: 0,
                                        paddingEnd: 0,
                                        scrollPaddingStart: 0,
                                        scrollPaddingEnd: 0,
                                        horizontal: !1,
                                        getItemKey: c,
                                        rangeExtractor: h,
                                        enableSmoothScroll: !0,
                                        onChange() {},
                                        measureElement: v,
                                        initialRect: { width: 0, height: 0 },
                                        ...e,
                                    });
                            }),
                            (this.notify = () => {
                                var e, t;
                                null == (e = (t = this.options).onChange) || e.call(t, this);
                            }),
                            (this.cleanup = () => {
                                this.unsubs.filter(Boolean).forEach((e) => e()), (this.unsubs = []), (this.scrollElement = null);
                            }),
                            (this._didMount = () => () => {
                                this.cleanup();
                            }),
                            (this._willUpdate = () => {
                                let e = this.options.getScrollElement();
                                this.scrollElement !== e &&
                                    (this.cleanup(),
                                    (this.scrollElement = e),
                                    this.unsubs.push(
                                        this.options.observeElementRect(this, (e) => {
                                            (this.scrollRect = e), this.notify();
                                        })
                                    ),
                                    this.unsubs.push(
                                        this.options.observeElementOffset(this, (e) => {
                                            (this.scrollOffset = e), this.notify();
                                        })
                                    ));
                            }),
                            (this.getSize = () => this.scrollRect[this.options.horizontal ? "width" : "height"]),
                            (this.getMeasurements = a(
                                () => [this.options.count, this.options.paddingStart, this.options.getItemKey, this.itemMeasurementsCache],
                                (e, t, s, n) => {
                                    let o = this.pendingMeasuredCacheIndexes.length > 0 ? Math.min(...this.pendingMeasuredCacheIndexes) : 0;
                                    this.pendingMeasuredCacheIndexes = [];
                                    let i = this.measurementsCache.slice(0, o);
                                    for (let l = o; l < e; l++) {
                                        let e1 = s(l),
                                            o1 = n[e1],
                                            r = i[l - 1] ? i[l - 1].end : t,
                                            a = "number" == typeof o1 ? o1 : this.options.estimateSize(l),
                                            c = r + a;
                                        i[l] = { index: l, start: r, size: a, end: c, key: e1 };
                                    }
                                    return (this.measurementsCache = i), i;
                                },
                                { key: !1, debug: () => this.options.debug }
                            )),
                            (this.calculateRange = a(
                                () => [this.getMeasurements(), this.getSize(), this.scrollOffset],
                                (e, t, s) =>
                                    (function (e) {
                                        let { measurements: t, outerSize: s, scrollOffset: n } = e,
                                            o = t.length - 1,
                                            i = ((e, t, s, n) => {
                                                for (; e <= t; ) {
                                                    let o = ((e + t) / 2) | 0,
                                                        i = s(o);
                                                    if (i < n) e = o + 1;
                                                    else {
                                                        if (!(i > n)) return o;
                                                        t = o - 1;
                                                    }
                                                }
                                                return e > 0 ? e - 1 : 0;
                                            })(0, o, (e) => t[e].start, n),
                                            l = i;
                                        for (; l < o && t[l].end < n + s; ) l++;
                                        return { startIndex: i, endIndex: l };
                                    })({ measurements: e, outerSize: t, scrollOffset: s }),
                                { key: !1, debug: () => this.options.debug }
                            )),
                            (this.getIndexes = a(
                                () => [this.options.rangeExtractor, this.calculateRange(), this.options.overscan, this.options.count],
                                (e, t, s, n) => e({ ...t, overscan: s, count: n }),
                                { key: !1 }
                            )),
                            (this.getVirtualItems = a(
                                () => [this.getIndexes(), this.getMeasurements(), this.options.measureElement],
                                (e, t, s) => {
                                    let n = (e) => (t) => {
                                            var n;
                                            let o = this.measurementsCache[e];
                                            if (!t) return;
                                            let i = s(t, this),
                                                l = null != (n = this.itemMeasurementsCache[o.key]) ? n : o.size;
                                            i !== l &&
                                                (o.start < this.scrollOffset && (this.destinationOffset || this._scrollToOffset(this.scrollOffset + (i - l), !1)),
                                                this.pendingMeasuredCacheIndexes.push(e),
                                                (this.itemMeasurementsCache = { ...this.itemMeasurementsCache, [o.key]: i }),
                                                this.notify());
                                        },
                                        o = [],
                                        i = {};
                                    for (let s1 = 0, r = e.length; s1 < r; s1++) {
                                        var l;
                                        let r1 = e[s1],
                                            a = { ...t[r1], measureElement: (i[r1] = null != (l = this.measureElementCache[r1]) ? l : n(r1)) };
                                        o.push(a);
                                    }
                                    return (this.measureElementCache = i), o;
                                },
                                { key: !1 }
                            )),
                            (this.scrollToOffset = function (e, s) {
                                let { align: n } = void 0 === s ? { align: "start" } : s,
                                    o = () => {
                                        let s = t.scrollOffset,
                                            o = t.getSize();
                                        "auto" === n && (n = e <= s ? "start" : e >= s + o ? "end" : "start"),
                                            "start" === n ? t._scrollToOffset(e, !0) : "end" === n ? t._scrollToOffset(e - o, !0) : "center" === n && t._scrollToOffset(e - o / 2, !0);
                                    };
                                o(),
                                    requestAnimationFrame(() => {
                                        o();
                                    });
                            }),
                            (this.scrollToIndex = function (e, s) {
                                let { align: n, ...o } = void 0 === s ? { align: "auto" } : s,
                                    i = t.getMeasurements(),
                                    l = t.scrollOffset,
                                    r = t.getSize(),
                                    { count: a } = t.options,
                                    c = i[Math.max(0, Math.min(e, a - 1))];
                                if (!c) return;
                                if ("auto" === n) {
                                    if (c.end >= l + r - t.options.scrollPaddingEnd) n = "end";
                                    else {
                                        if (!(c.start <= l + t.options.scrollPaddingStart)) return;
                                        n = "start";
                                    }
                                }
                                let h = "end" === n ? c.end + t.options.scrollPaddingEnd : c.start - t.options.scrollPaddingStart;
                                t.scrollToOffset(h, { align: n, ...o });
                            }),
                            (this.getTotalSize = () => {
                                var e;
                                return ((null == (e = this.getMeasurements()[this.options.count - 1]) ? void 0 : e.end) || this.options.paddingStart) + this.options.paddingEnd;
                            }),
                            (this._scrollToOffset = (e, t) => {
                                let s;
                                clearTimeout(this.scrollCheckFrame), (this.destinationOffset = e), this.options.scrollToFn(e, this.options.enableSmoothScroll && t, this);
                                let n = () => {
                                    let e = this.scrollOffset;
                                    this.scrollCheckFrame = s = setTimeout(() => {
                                        this.scrollCheckFrame === s && (this.scrollOffset !== e ? ((e = this.scrollOffset), n()) : (this.destinationOffset = void 0));
                                    }, 100);
                                };
                                n();
                            }),
                            (this.measure = () => {
                                (this.itemMeasurementsCache = {}), this.notify();
                            }),
                            this.setOptions(e),
                            (this.scrollRect = this.options.initialRect),
                            (this.scrollOffset = this.options.initialOffset);
                    }
                }
                let C = "undefined" != typeof window ? o.useLayoutEffect : o.useEffect;
                function y(e) {
                    let t = o.useReducer(() => ({}), {})[1],
                        s = {
                            ...e,
                            onChange(s) {
                                t(), null == e.onChange || e.onChange(s);
                            },
                        },
                        [n] = o.useState(() => new w(s));
                    return n.setOptions(s), o.useEffect(() => n._didMount(), []), C(() => n._willUpdate()), n;
                }
                (e.Virtualizer = w),
                    (e.defaultKeyExtractor = c),
                    (e.defaultRangeExtractor = h),
                    (e.elementScroll = O),
                    (e.measureElement = v),
                    (e.memo = a),
                    (e.observeElementOffset = p),
                    (e.observeElementRect = d),
                    (e.observeWindowOffset = E),
                    (e.observeWindowRect = f),
                    (e.useVirtualizer = function (e) {
                        return y({ observeElementRect: d, observeElementOffset: p, scrollToFn: O, ...e });
                    }),
                    (e.useWindowVirtualizer = function (e) {
                        return y({ getScrollElement: () => ("undefined" != typeof window ? window : null), observeElementRect: f, observeElementOffset: E, scrollToFn: b, ...e });
                    }),
                    (e.windowScroll = b),
                    Object.defineProperty(e, "__esModule", { value: !0 });
            })(exports, __webpack_require__(67294));
        },
        21445: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.r(__webpack_exports__),
                __webpack_require__.d(__webpack_exports__, {
                    detectEnv: function () {
                        return detectEnv;
                    },
                    detectOS: function () {
                        return browser_detectOS;
                    },
                    formatIOSMobile: function () {
                        return formatIOSMobile;
                    },
                    formatMobileRegistry: function () {
                        return formatMobileRegistry;
                    },
                    formatMobileRegistryEntry: function () {
                        return formatMobileRegistryEntry;
                    },
                    getClientMeta: function () {
                        return getClientMeta;
                    },
                    getCrypto: function () {
                        return getCrypto;
                    },
                    getCryptoOrThrow: function () {
                        return getCryptoOrThrow;
                    },
                    getDappRegistryUrl: function () {
                        return getDappRegistryUrl;
                    },
                    getDocument: function () {
                        return getDocument;
                    },
                    getDocumentOrThrow: function () {
                        return getDocumentOrThrow;
                    },
                    getFromWindow: function () {
                        return getFromWindow;
                    },
                    getFromWindowOrThrow: function () {
                        return getFromWindowOrThrow;
                    },
                    getLocal: function () {
                        return getLocal;
                    },
                    getLocalStorage: function () {
                        return getLocalStorage;
                    },
                    getLocalStorageOrThrow: function () {
                        return getLocalStorageOrThrow;
                    },
                    getLocation: function () {
                        return getLocation;
                    },
                    getLocationOrThrow: function () {
                        return getLocationOrThrow;
                    },
                    getMobileLinkRegistry: function () {
                        return getMobileLinkRegistry;
                    },
                    getMobileRegistryEntry: function () {
                        return getMobileRegistryEntry;
                    },
                    getNavigator: function () {
                        return getNavigator;
                    },
                    getNavigatorOrThrow: function () {
                        return getNavigatorOrThrow;
                    },
                    getWalletRegistryUrl: function () {
                        return getWalletRegistryUrl;
                    },
                    isAndroid: function () {
                        return isAndroid;
                    },
                    isBrowser: function () {
                        return isBrowser;
                    },
                    isIOS: function () {
                        return isIOS;
                    },
                    isMobile: function () {
                        return isMobile;
                    },
                    isNode: function () {
                        return isNode;
                    },
                    mobileLinkChoiceKey: function () {
                        return mobileLinkChoiceKey;
                    },
                    removeLocal: function () {
                        return removeLocal;
                    },
                    safeJsonParse: function () {
                        return json_safeJsonParse;
                    },
                    safeJsonStringify: function () {
                        return json_safeJsonStringify;
                    },
                    saveMobileLinkInfo: function () {
                        return saveMobileLinkInfo;
                    },
                    setLocal: function () {
                        return setLocal;
                    },
                });
            var cjs = __webpack_require__(65755),
                dist_cjs = __webpack_require__(62873),
                process = __webpack_require__(34155),
                __spreadArrays = function () {
                    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
                    for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];
                    return r;
                },
                BrowserInfo = function (name, version, os) {
                    (this.name = name), (this.version = version), (this.os = os), (this.type = "browser");
                },
                NodeInfo = function (version) {
                    (this.version = version), (this.type = "node"), (this.name = "node"), (this.os = process.platform);
                },
                SearchBotDeviceInfo = function (name, version, os, bot) {
                    (this.name = name), (this.version = version), (this.os = os), (this.bot = bot), (this.type = "bot-device");
                },
                BotInfo = function () {
                    (this.type = "bot"), (this.bot = !0), (this.name = "bot"), (this.version = null), (this.os = null);
                },
                ReactNativeInfo = function () {
                    (this.type = "react-native"), (this.name = "react-native"), (this.version = null), (this.os = null);
                },
                SEARCHBOT_OS_REGEX = /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/,
                userAgentRules = [
                    ["aol", /AOLShield\/([0-9\._]+)/],
                    ["edge", /Edge\/([0-9\._]+)/],
                    ["edge-ios", /EdgiOS\/([0-9\._]+)/],
                    ["yandexbrowser", /YaBrowser\/([0-9\._]+)/],
                    ["kakaotalk", /KAKAOTALK\s([0-9\.]+)/],
                    ["samsung", /SamsungBrowser\/([0-9\.]+)/],
                    ["silk", /\bSilk\/([0-9._-]+)\b/],
                    ["miui", /MiuiBrowser\/([0-9\.]+)$/],
                    ["beaker", /BeakerBrowser\/([0-9\.]+)/],
                    ["edge-chromium", /EdgA?\/([0-9\.]+)/],
                    ["chromium-webview", /(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
                    ["chrome", /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
                    ["phantomjs", /PhantomJS\/([0-9\.]+)(:?\s|$)/],
                    ["crios", /CriOS\/([0-9\.]+)(:?\s|$)/],
                    ["firefox", /Firefox\/([0-9\.]+)(?:\s|$)/],
                    ["fxios", /FxiOS\/([0-9\.]+)/],
                    ["opera-mini", /Opera Mini.*Version\/([0-9\.]+)/],
                    ["opera", /Opera\/([0-9\.]+)(?:\s|$)/],
                    ["opera", /OPR\/([0-9\.]+)(:?\s|$)/],
                    ["ie", /Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],
                    ["ie", /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],
                    ["ie", /MSIE\s(7\.0)/],
                    ["bb10", /BB10;\sTouch.*Version\/([0-9\.]+)/],
                    ["android", /Android\s([0-9\.]+)/],
                    ["ios", /Version\/([0-9\._]+).*Mobile.*Safari.*/],
                    ["safari", /Version\/([0-9\._]+).*Safari/],
                    ["facebook", /FBAV\/([0-9\.]+)/],
                    ["instagram", /Instagram\s([0-9\.]+)/],
                    ["ios-webview", /AppleWebKit\/([0-9\.]+).*Mobile/],
                    ["ios-webview", /AppleWebKit\/([0-9\.]+).*Gecko\)$/],
                    ["searchbot", /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/],
                ],
                operatingSystemRules = [
                    ["iOS", /iP(hone|od|ad)/],
                    ["Android OS", /Android/],
                    ["BlackBerry OS", /BlackBerry|BB10/],
                    ["Windows Mobile", /IEMobile/],
                    ["Amazon OS", /Kindle/],
                    ["Windows 3.11", /Win16/],
                    ["Windows 95", /(Windows 95)|(Win95)|(Windows_95)/],
                    ["Windows 98", /(Windows 98)|(Win98)/],
                    ["Windows 2000", /(Windows NT 5.0)|(Windows 2000)/],
                    ["Windows XP", /(Windows NT 5.1)|(Windows XP)/],
                    ["Windows Server 2003", /(Windows NT 5.2)/],
                    ["Windows Vista", /(Windows NT 6.0)/],
                    ["Windows 7", /(Windows NT 6.1)/],
                    ["Windows 8", /(Windows NT 6.2)/],
                    ["Windows 8.1", /(Windows NT 6.3)/],
                    ["Windows 10", /(Windows NT 10.0)/],
                    ["Windows ME", /Windows ME/],
                    ["Open BSD", /OpenBSD/],
                    ["Sun OS", /SunOS/],
                    ["Chrome OS", /CrOS/],
                    ["Linux", /(Linux)|(X11)/],
                    ["Mac OS", /(Mac_PowerPC)|(Macintosh)/],
                    ["QNX", /QNX/],
                    ["BeOS", /BeOS/],
                    ["OS/2", /OS\/2/],
                ];
            function parseUserAgent(ua) {
                var matchedRule =
                    "" !== ua &&
                    userAgentRules.reduce(function (matched, _a) {
                        var browser = _a[0],
                            regex = _a[1];
                        if (matched) return matched;
                        var uaMatch = regex.exec(ua);
                        return !!uaMatch && [browser, uaMatch];
                    }, !1);
                if (!matchedRule) return null;
                var name = matchedRule[0],
                    match = matchedRule[1];
                if ("searchbot" === name) return new BotInfo();
                var versionParts = match[1] && match[1].split(/[._]/).slice(0, 3);
                versionParts
                    ? versionParts.length < 3 &&
                      (versionParts = __spreadArrays(
                          versionParts,
                          (function (count) {
                              for (var output = [], ii = 0; ii < count; ii++) output.push("0");
                              return output;
                          })(3 - versionParts.length)
                      ))
                    : (versionParts = []);
                var version = versionParts.join("."),
                    os = (function (ua) {
                        for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {
                            var _a = operatingSystemRules[ii],
                                os = _a[0];
                            if (_a[1].exec(ua)) return os;
                        }
                        return null;
                    })(ua),
                    searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);
                return searchBotMatch && searchBotMatch[1] ? new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]) : new BrowserInfo(name, version, os);
            }
            function detectEnv(userAgent) {
                return userAgent
                    ? parseUserAgent(userAgent)
                    : "undefined" == typeof document && "undefined" != typeof navigator && "ReactNative" === navigator.product
                    ? new ReactNativeInfo()
                    : "undefined" != typeof navigator
                    ? parseUserAgent(navigator.userAgent)
                    : void 0 !== process && process.version
                    ? new NodeInfo(process.version.slice(1))
                    : null;
            }
            function browser_detectOS() {
                let env = detectEnv();
                return env && env.os ? env.os : void 0;
            }
            function isAndroid() {
                let os = browser_detectOS();
                return !!os && os.toLowerCase().includes("android");
            }
            function isIOS() {
                let os = browser_detectOS();
                return !!os && (os.toLowerCase().includes("ios") || (os.toLowerCase().includes("mac") && navigator.maxTouchPoints > 1));
            }
            function isMobile() {
                let os = browser_detectOS();
                return !!os && (isAndroid() || isIOS());
            }
            function isNode() {
                let env = detectEnv(),
                    result = !!env && !!env.name && "node" === env.name.toLowerCase();
                return result;
            }
            function isBrowser() {
                let result = !isNode() && !!getNavigator();
                return result;
            }
            let getFromWindow = dist_cjs.getFromWindow,
                getFromWindowOrThrow = dist_cjs.getFromWindowOrThrow,
                getDocumentOrThrow = dist_cjs.getDocumentOrThrow,
                getDocument = dist_cjs.getDocument,
                getNavigatorOrThrow = dist_cjs.getNavigatorOrThrow,
                getNavigator = dist_cjs.getNavigator,
                getLocationOrThrow = dist_cjs.getLocationOrThrow,
                getLocation = dist_cjs.getLocation,
                getCryptoOrThrow = dist_cjs.getCryptoOrThrow,
                getCrypto = dist_cjs.getCrypto,
                getLocalStorageOrThrow = dist_cjs.getLocalStorageOrThrow,
                getLocalStorage = dist_cjs.getLocalStorage;
            function getClientMeta() {
                return cjs.D();
            }
            let json_safeJsonParse = function (value) {
                    if ("string" != typeof value) throw Error(`Cannot safe json parse value of type ${typeof value}`);
                    try {
                        return JSON.parse(value);
                    } catch (_a) {
                        return value;
                    }
                },
                json_safeJsonStringify = function (value) {
                    return "string" == typeof value ? value : JSON.stringify(value);
                };
            function setLocal(key, data) {
                let raw = json_safeJsonStringify(data),
                    local = getLocalStorage();
                local && local.setItem(key, raw);
            }
            function getLocal(key) {
                let raw = null,
                    local = getLocalStorage();
                return local && (raw = local.getItem(key)), raw ? json_safeJsonParse(raw) : raw;
            }
            function removeLocal(key) {
                let local = getLocalStorage();
                local && local.removeItem(key);
            }
            let mobileLinkChoiceKey = "WALLETCONNECT_DEEPLINK_CHOICE";
            function formatIOSMobile(uri, entry) {
                let encodedUri = encodeURIComponent(uri);
                return entry.universalLink ? `${entry.universalLink}/wc?uri=${encodedUri}` : entry.deepLink ? `${entry.deepLink}${entry.deepLink.endsWith(":") ? "//" : "/"}wc?uri=${encodedUri}` : "";
            }
            function saveMobileLinkInfo(data) {
                let focusUri = data.href.split("?")[0];
                setLocal(mobileLinkChoiceKey, Object.assign(Object.assign({}, data), { href: focusUri }));
            }
            function getMobileRegistryEntry(registry, name) {
                return registry.filter((entry) => entry.name.toLowerCase().includes(name.toLowerCase()))[0];
            }
            function getMobileLinkRegistry(registry, whitelist) {
                let links = registry;
                return whitelist && (links = whitelist.map((name) => getMobileRegistryEntry(registry, name)).filter(Boolean)), links;
            }
            let API_URL = "https://registry.walletconnect.com";
            function getWalletRegistryUrl() {
                return API_URL + "/api/v2/wallets";
            }
            function getDappRegistryUrl() {
                return API_URL + "/api/v2/dapps";
            }
            function formatMobileRegistryEntry(entry, platform = "mobile") {
                var _a;
                return {
                    name: entry.name || "",
                    shortName: entry.metadata.shortName || "",
                    color: entry.metadata.colors.primary || "",
                    logo: null !== (_a = entry.image_url.sm) && void 0 !== _a ? _a : "",
                    universalLink: entry[platform].universal || "",
                    deepLink: entry[platform].native || "",
                };
            }
            function formatMobileRegistry(registry, platform = "mobile") {
                return Object.values(registry)
                    .filter((entry) => !!entry[platform].universal || !!entry[platform].native)
                    .map((entry) => formatMobileRegistryEntry(entry, platform));
            }
        },
        40926: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            function getBrowerCrypto() {
                return (
                    (null === __webpack_require__.g || void 0 === __webpack_require__.g ? void 0 : __webpack_require__.g.crypto) ||
                    (null === __webpack_require__.g || void 0 === __webpack_require__.g ? void 0 : __webpack_require__.g.msCrypto) ||
                    {}
                );
            }
            function getSubtleCrypto() {
                let browserCrypto = getBrowerCrypto();
                return browserCrypto.subtle || browserCrypto.webkitSubtle;
            }
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.isBrowserCryptoAvailable = exports.getSubtleCrypto = exports.getBrowerCrypto = void 0),
                (exports.getBrowerCrypto = getBrowerCrypto),
                (exports.getSubtleCrypto = getSubtleCrypto),
                (exports.isBrowserCryptoAvailable = function () {
                    return !!getBrowerCrypto() && !!getSubtleCrypto();
                });
        },
        88618: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var process = __webpack_require__(34155);
            function isReactNative() {
                return "undefined" == typeof document && "undefined" != typeof navigator && "ReactNative" === navigator.product;
            }
            function isNode() {
                return void 0 !== process && void 0 !== process.versions && void 0 !== process.versions.node;
            }
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.isBrowser = exports.isNode = exports.isReactNative = void 0),
                (exports.isReactNative = isReactNative),
                (exports.isNode = isNode),
                (exports.isBrowser = function () {
                    return !isReactNative() && !isNode();
                });
        },
        1468: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var __createBinding =
                    (this && this.__createBinding) ||
                    (Object.create
                        ? function (o, m, k, k2) {
                              void 0 === k2 && (k2 = k),
                                  Object.defineProperty(o, k2, {
                                      enumerable: !0,
                                      get: function () {
                                          return m[k];
                                      },
                                  });
                          }
                        : function (o, m, k, k2) {
                              void 0 === k2 && (k2 = k), (o[k2] = m[k]);
                          }),
                __exportStar =
                    (this && this.__exportStar) ||
                    function (m, exports) {
                        for (var p in m) "default" === p || exports.hasOwnProperty(p) || __createBinding(exports, m, p);
                    };
            Object.defineProperty(exports, "__esModule", { value: !0 }), __exportStar(__webpack_require__(40926), exports), __exportStar(__webpack_require__(88618), exports);
        },
        4337: function (module, __unused_webpack_exports, __webpack_require__) {
            var process = __webpack_require__(34155);
            function _interopDefault(ex) {
                return ex && "object" == typeof ex && "default" in ex ? ex.default : ex;
            }
            var browserUtils = __webpack_require__(21445),
                QRCode = _interopDefault(__webpack_require__(92592)),
                copy = _interopDefault(__webpack_require__(20640)),
                React = __webpack_require__(57423);
            "undefined" != typeof Symbol && (Symbol.iterator || (Symbol.iterator = Symbol("Symbol.iterator"))), "undefined" != typeof Symbol && (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol("Symbol.asyncIterator")));
            var WALLETCONNECT_WRAPPER_ID = "walletconnect-wrapper",
                WALLETCONNECT_STYLE_ID = "walletconnect-style-sheet",
                WALLETCONNECT_MODAL_ID = "walletconnect-qrcode-modal",
                WALLETCONNECT_CTA_TEXT_ID = "walletconnect-qrcode-text";
            function Header(props) {
                return React.createElement(
                    "div",
                    { className: "walletconnect-modal__header" },
                    React.createElement("img", {
                        src:
                            "data:image/svg+xml,%3Csvg height='185' viewBox='0 0 300 185' width='300' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='m61.4385429 36.2562612c48.9112241-47.8881663 128.2119871-47.8881663 177.1232091 0l5.886545 5.7634174c2.445561 2.3944081 2.445561 6.2765112 0 8.6709204l-20.136695 19.715503c-1.222781 1.1972051-3.2053 1.1972051-4.428081 0l-8.100584-7.9311479c-34.121692-33.4079817-89.443886-33.4079817-123.5655788 0l-8.6750562 8.4936051c-1.2227816 1.1972041-3.205301 1.1972041-4.4280806 0l-20.1366949-19.7155031c-2.4455612-2.3944092-2.4455612-6.2765122 0-8.6709204zm218.7677961 40.7737449 17.921697 17.546897c2.445549 2.3943969 2.445563 6.2764769.000031 8.6708899l-80.810171 79.121134c-2.445544 2.394426-6.410582 2.394453-8.85616.000062-.00001-.00001-.000022-.000022-.000032-.000032l-57.354143-56.154572c-.61139-.598602-1.60265-.598602-2.21404 0-.000004.000004-.000007.000008-.000011.000011l-57.3529212 56.154531c-2.4455368 2.394432-6.4105755 2.394472-8.8561612.000087-.0000143-.000014-.0000296-.000028-.0000449-.000044l-80.81241943-79.122185c-2.44556021-2.394408-2.44556021-6.2765115 0-8.6709197l17.92172963-17.5468673c2.4455602-2.3944082 6.4105989-2.3944082 8.8561602 0l57.3549775 56.155357c.6113908.598602 1.602649.598602 2.2140398 0 .0000092-.000009.0000174-.000017.0000265-.000024l57.3521031-56.155333c2.445505-2.3944633 6.410544-2.3945531 8.856161-.0002.000034.0000336.000068.0000673.000101.000101l57.354902 56.155432c.61139.598601 1.60265.598601 2.21404 0l57.353975-56.1543249c2.445561-2.3944092 6.410599-2.3944092 8.85616 0z' fill='%233b99fc'/%3E%3C/svg%3E",
                        className: "walletconnect-modal__headerLogo",
                    }),
                    React.createElement("p", null, "WalletConnect"),
                    React.createElement(
                        "div",
                        { className: "walletconnect-modal__close__wrapper", onClick: props.onClose },
                        React.createElement(
                            "div",
                            { id: "walletconnect-qrcode-close", className: "walletconnect-modal__close__icon" },
                            React.createElement("div", { className: "walletconnect-modal__close__line1" }),
                            React.createElement("div", { className: "walletconnect-modal__close__line2" })
                        )
                    )
                );
            }
            function ConnectButton(props) {
                return React.createElement(
                    "a",
                    {
                        className: "walletconnect-connect__button",
                        href: props.href,
                        id: "walletconnect-connect-button-" + props.name,
                        onClick: props.onClick,
                        rel: "noopener noreferrer",
                        style: { backgroundColor: props.color },
                        target: "_blank",
                    },
                    props.name
                );
            }
            function WalletButton(props) {
                var color = props.color,
                    href = props.href,
                    name = props.name,
                    logo = props.logo,
                    onClick = props.onClick;
                return React.createElement(
                    "a",
                    { className: "walletconnect-modal__base__row", href: href, onClick: onClick, rel: "noopener noreferrer", target: "_blank" },
                    React.createElement("h3", { className: "walletconnect-modal__base__row__h3" }, name),
                    React.createElement(
                        "div",
                        { className: "walletconnect-modal__base__row__right" },
                        React.createElement("div", { className: "walletconnect-modal__base__row__right__app-icon", style: { background: "url('" + logo + "') " + color, backgroundSize: "100%" } }),
                        React.createElement("img", {
                            src:
                                "data:image/svg+xml,%3Csvg fill='none' height='18' viewBox='0 0 8 18' width='8' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath clip-rule='evenodd' d='m.586301.213898c-.435947.33907-.5144813.967342-.175411 1.403292l4.87831 6.27212c.28087.36111.28087.86677 0 1.22788l-4.878311 6.27211c-.33907.436-.260536 1.0642.175412 1.4033.435949.3391 1.064219.2605 1.403289-.1754l4.87832-6.2721c.84259-1.08336.84259-2.60034 0-3.68367l-4.87832-6.27212c-.33907-.4359474-.96734-.514482-1.403289-.175412z' fill='%233c4252' fill-rule='evenodd'/%3E%3C/svg%3E",
                            className: "walletconnect-modal__base__row__right__caret",
                        })
                    )
                );
            }
            function WalletIcon(props) {
                var color = props.color,
                    href = props.href,
                    name = props.name,
                    logo = props.logo,
                    onClick = props.onClick,
                    fontSize = window.innerWidth < 768 ? (name.length > 8 ? 2.5 : 2.7) + "vw" : "inherit";
                return React.createElement(
                    "a",
                    { className: "walletconnect-connect__button__icon_anchor", href: href, onClick: onClick, rel: "noopener noreferrer", target: "_blank" },
                    React.createElement("div", { className: "walletconnect-connect__button__icon", style: { background: "url('" + logo + "') " + color, backgroundSize: "100%" } }),
                    React.createElement("div", { style: { fontSize: fontSize }, className: "walletconnect-connect__button__text" }, name)
                );
            }
            function LinkDisplay(props) {
                var android = browserUtils.isAndroid(),
                    ref = React.useState(""),
                    input = ref[0],
                    setInput = ref[1],
                    ref$1 = React.useState(""),
                    filter = ref$1[0],
                    setFilter = ref$1[1],
                    ref$2 = React.useState(1),
                    page = ref$2[0],
                    setPage = ref$2[1],
                    links = filter
                        ? props.links.filter(function (link) {
                              return link.name.toLowerCase().includes(filter.toLowerCase());
                          })
                        : props.links,
                    errorMessage = props.errorMessage,
                    grid = filter || links.length > 5,
                    pages = Math.ceil(links.length / 12),
                    range = [(page - 1) * 12 + 1, 12 * page],
                    pageLinks = links.length
                        ? links.filter(function (_, index) {
                              return index + 1 >= range[0] && index + 1 <= range[1];
                          })
                        : [],
                    filterTimeout = void 0;
                return React.createElement(
                    "div",
                    null,
                    React.createElement("p", { id: WALLETCONNECT_CTA_TEXT_ID, className: "walletconnect-qrcode__text" }, android ? props.text.connect_mobile_wallet : props.text.choose_preferred_wallet),
                    !android &&
                        React.createElement("input", {
                            className: "walletconnect-search__input",
                            placeholder: "Search",
                            value: input,
                            onChange: function (e) {
                                setInput(e.target.value),
                                    clearTimeout(filterTimeout),
                                    e.target.value
                                        ? (filterTimeout = setTimeout(function () {
                                              setFilter(e.target.value), setPage(1);
                                          }, 1e3))
                                        : (setInput(""), setFilter(""), setPage(1));
                            },
                        }),
                    React.createElement(
                        "div",
                        { className: "walletconnect-connect__buttons__wrapper" + (android ? "__android" : grid && links.length ? "__wrap" : "") },
                        android
                            ? React.createElement(ConnectButton, {
                                  name: props.text.connect,
                                  color: "rgb(64, 153, 255)",
                                  href: props.uri,
                                  onClick: React.useCallback(function () {
                                      browserUtils.saveMobileLinkInfo({ name: "Unknown", href: props.uri });
                                  }, []),
                              })
                            : pageLinks.length
                            ? pageLinks.map(function (entry) {
                                  var color = entry.color,
                                      name = entry.name,
                                      shortName = entry.shortName,
                                      logo = entry.logo,
                                      href = browserUtils.formatIOSMobile(props.uri, entry),
                                      handleClickIOS = React.useCallback(
                                          function () {
                                              browserUtils.saveMobileLinkInfo({ name: name, href: href });
                                          },
                                          [pageLinks]
                                      );
                                  return grid
                                      ? React.createElement(WalletIcon, { color: color, href: href, name: shortName || name, logo: logo, onClick: handleClickIOS })
                                      : React.createElement(WalletButton, { color: color, href: href, name: name, logo: logo, onClick: handleClickIOS });
                              })
                            : React.createElement(React.Fragment, null, React.createElement("p", null, errorMessage.length ? props.errorMessage : props.links.length && !links.length ? props.text.no_wallets_found : props.text.loading))
                    ),
                    !!(!android && pages > 1) &&
                        React.createElement(
                            "div",
                            { className: "walletconnect-modal__footer" },
                            Array(pages)
                                .fill(0)
                                .map(function (_, index) {
                                    var pageNumber = index + 1;
                                    return React.createElement(
                                        "a",
                                        {
                                            style: { margin: "auto 10px", fontWeight: page === pageNumber ? "bold" : "normal" },
                                            onClick: function () {
                                                return setPage(pageNumber);
                                            },
                                        },
                                        pageNumber
                                    );
                                })
                        )
                );
            }
            function Notification(props) {
                var show = !!props.message.trim();
                return React.createElement("div", { className: "walletconnect-qrcode__notification" + (show ? " notification__show" : "") }, props.message);
            }
            var formatQRCodeImage = function (data) {
                try {
                    var result = "";
                    return Promise.resolve(QRCode.toString(data, { margin: 0, type: "svg" })).then(function (dataString) {
                        return "string" == typeof dataString && (result = dataString.replace("<svg", '<svg class="walletconnect-qrcode__image"')), result;
                    });
                } catch (e) {
                    return Promise.reject(e);
                }
            };
            function QRCodeDisplay(props) {
                var ref = React.useState(""),
                    notification = ref[0],
                    setNotification = ref[1],
                    ref$1 = React.useState(""),
                    svg = ref$1[0],
                    setSvg = ref$1[1];
                return (
                    React.useEffect(function () {
                        try {
                            return Promise.resolve(formatQRCodeImage(props.uri)).then(function (_formatQRCodeImage) {
                                setSvg(_formatQRCodeImage);
                            });
                        } catch (e) {
                            Promise.reject(e);
                        }
                    }, []),
                    React.createElement(
                        "div",
                        null,
                        React.createElement("p", { id: WALLETCONNECT_CTA_TEXT_ID, className: "walletconnect-qrcode__text" }, props.text.scan_qrcode_with_wallet),
                        React.createElement("div", { dangerouslySetInnerHTML: { __html: svg } }),
                        React.createElement(
                            "div",
                            { className: "walletconnect-modal__footer" },
                            React.createElement(
                                "a",
                                {
                                    onClick: function () {
                                        copy(props.uri)
                                            ? (setNotification(props.text.copied_to_clipboard),
                                              setInterval(function () {
                                                  return setNotification("");
                                              }, 1200))
                                            : (setNotification("Error"),
                                              setInterval(function () {
                                                  return setNotification("");
                                              }, 1200));
                                    },
                                },
                                props.text.copy_to_clipboard
                            )
                        ),
                        React.createElement(Notification, { message: notification })
                    )
                );
            }
            function Modal(props) {
                var android = browserUtils.isAndroid(),
                    mobile = browserUtils.isMobile(),
                    whitelist = mobile
                        ? props.qrcodeModalOptions && props.qrcodeModalOptions.mobileLinks
                            ? props.qrcodeModalOptions.mobileLinks
                            : void 0
                        : props.qrcodeModalOptions && props.qrcodeModalOptions.desktopLinks
                        ? props.qrcodeModalOptions.desktopLinks
                        : void 0,
                    ref = React.useState(!1),
                    loading = ref[0],
                    setLoading = ref[1],
                    ref$1 = React.useState(!1),
                    fetched = ref$1[0],
                    setFetched = ref$1[1],
                    ref$2 = React.useState(!mobile),
                    displayQRCode = ref$2[0],
                    setDisplayQRCode = ref$2[1],
                    displayProps = { mobile: mobile, text: props.text, uri: props.uri, qrcodeModalOptions: props.qrcodeModalOptions },
                    ref$3 = React.useState(""),
                    singleLinkHref = ref$3[0],
                    setSingleLinkHref = ref$3[1],
                    ref$4 = React.useState(!1),
                    hasSingleLink = ref$4[0],
                    setHasSingleLink = ref$4[1],
                    ref$5 = React.useState([]),
                    links = ref$5[0],
                    setLinks = ref$5[1],
                    ref$6 = React.useState(""),
                    errorMessage = ref$6[0],
                    setErrorMessage = ref$6[1],
                    getLinksIfNeeded = function () {
                        fetched ||
                            loading ||
                            (whitelist && !whitelist.length) ||
                            links.length > 0 ||
                            React.useEffect(function () {
                                !(function () {
                                    try {
                                        if (android) return Promise.resolve();
                                        setLoading(!0);
                                        var _temp = (function (body, recover) {
                                            try {
                                                var result = body();
                                            } catch (e) {
                                                return recover(e);
                                            }
                                            return result && result.then ? result.then(void 0, recover) : result;
                                        })(
                                            function () {
                                                var url = props.qrcodeModalOptions && props.qrcodeModalOptions.registryUrl ? props.qrcodeModalOptions.registryUrl : browserUtils.getWalletRegistryUrl();
                                                return Promise.resolve(fetch(url)).then(function (registryResponse) {
                                                    return Promise.resolve(registryResponse.json()).then(function (_registryResponse$jso) {
                                                        var registry = _registryResponse$jso.listings,
                                                            _links = browserUtils.getMobileLinkRegistry(browserUtils.formatMobileRegistry(registry, mobile ? "mobile" : "desktop"), whitelist);
                                                        setLoading(!1), setFetched(!0), setErrorMessage(_links.length ? "" : props.text.no_supported_wallets), setLinks(_links);
                                                        var hasSingleLink = 1 === _links.length;
                                                        hasSingleLink && (setSingleLinkHref(browserUtils.formatIOSMobile(props.uri, _links[0])), setDisplayQRCode(!0)), setHasSingleLink(hasSingleLink);
                                                    });
                                                });
                                            },
                                            function (e) {
                                                setLoading(!1), setFetched(!0), setErrorMessage(props.text.something_went_wrong), console.error(e);
                                            }
                                        );
                                        Promise.resolve(_temp && _temp.then ? _temp.then(function () {}) : void 0);
                                    } catch (e) {
                                        return Promise.reject(e);
                                    }
                                })();
                            });
                    };
                return (
                    getLinksIfNeeded(),
                    React.createElement(
                        "div",
                        { id: WALLETCONNECT_MODAL_ID, className: "walletconnect-qrcode__base animated fadeIn" },
                        React.createElement(
                            "div",
                            { className: "walletconnect-modal__base" },
                            React.createElement(Header, { onClose: props.onClose }),
                            hasSingleLink && displayQRCode
                                ? React.createElement(
                                      "div",
                                      { className: "walletconnect-modal__single_wallet" },
                                      React.createElement(
                                          "a",
                                          {
                                              onClick: function () {
                                                  return browserUtils.saveMobileLinkInfo({ name: links[0].name, href: singleLinkHref });
                                              },
                                              href: singleLinkHref,
                                              rel: "noopener noreferrer",
                                              target: "_blank",
                                          },
                                          props.text.connect_with + " " + (hasSingleLink ? links[0].name : "") + " ›"
                                      )
                                  )
                                : android || loading || (!loading && links.length)
                                ? React.createElement(
                                      "div",
                                      { className: "walletconnect-modal__mobile__toggle" + ((mobile ? displayQRCode : !displayQRCode) ? " right__selected" : "") },
                                      React.createElement("div", { className: "walletconnect-modal__mobile__toggle_selector" }),
                                      mobile
                                          ? React.createElement(
                                                React.Fragment,
                                                null,
                                                React.createElement(
                                                    "a",
                                                    {
                                                        onClick: function () {
                                                            return setDisplayQRCode(!1), getLinksIfNeeded();
                                                        },
                                                    },
                                                    props.text.mobile
                                                ),
                                                React.createElement(
                                                    "a",
                                                    {
                                                        onClick: function () {
                                                            return setDisplayQRCode(!0);
                                                        },
                                                    },
                                                    props.text.qrcode
                                                )
                                            )
                                          : React.createElement(
                                                React.Fragment,
                                                null,
                                                React.createElement(
                                                    "a",
                                                    {
                                                        onClick: function () {
                                                            return setDisplayQRCode(!0);
                                                        },
                                                    },
                                                    props.text.qrcode
                                                ),
                                                React.createElement(
                                                    "a",
                                                    {
                                                        onClick: function () {
                                                            return setDisplayQRCode(!1), getLinksIfNeeded();
                                                        },
                                                    },
                                                    props.text.desktop
                                                )
                                            )
                                  )
                                : null,
                            React.createElement(
                                "div",
                                null,
                                !displayQRCode && (android || loading || links.length)
                                    ? React.createElement(LinkDisplay, Object.assign({}, displayProps, { links: links, errorMessage: errorMessage }))
                                    : React.createElement(QRCodeDisplay, Object.assign({}, displayProps))
                            )
                        )
                    )
                );
            }
            var languages = {
                de: {
                    choose_preferred_wallet: "W\xe4hle bevorzugte Wallet",
                    connect_mobile_wallet: "Verbinde mit Mobile Wallet",
                    scan_qrcode_with_wallet: "Scanne den QR-code mit einer WalletConnect kompatiblen Wallet",
                    connect: "Verbinden",
                    qrcode: "QR-Code",
                    mobile: "Mobile",
                    desktop: "Desktop",
                    copy_to_clipboard: "In die Zwischenablage kopieren",
                    copied_to_clipboard: "In die Zwischenablage kopiert!",
                    connect_with: "Verbinden mit Hilfe von",
                    loading: "Laden...",
                    something_went_wrong: "Etwas ist schief gelaufen",
                    no_supported_wallets: "Es gibt noch keine unterst\xfctzten Wallet",
                    no_wallets_found: "keine Wallet gefunden",
                },
                en: {
                    choose_preferred_wallet: "Choose your preferred wallet",
                    connect_mobile_wallet: "Connect to Mobile Wallet",
                    scan_qrcode_with_wallet: "Scan QR code with a WalletConnect-compatible wallet",
                    connect: "Connect",
                    qrcode: "QR Code",
                    mobile: "Mobile",
                    desktop: "Desktop",
                    copy_to_clipboard: "Copy to clipboard",
                    copied_to_clipboard: "Copied to clipboard!",
                    connect_with: "Connect with",
                    loading: "Loading...",
                    something_went_wrong: "Something went wrong",
                    no_supported_wallets: "There are no supported wallets yet",
                    no_wallets_found: "No wallets found",
                },
                es: {
                    choose_preferred_wallet: "Elige tu billetera preferida",
                    connect_mobile_wallet: "Conectar a billetera m\xf3vil",
                    scan_qrcode_with_wallet: "Escanea el c\xf3digo QR con una billetera compatible con WalletConnect",
                    connect: "Conectar",
                    qrcode: "C\xf3digo QR",
                    mobile: "M\xf3vil",
                    desktop: "Desktop",
                    copy_to_clipboard: "Copiar",
                    copied_to_clipboard: "Copiado!",
                    connect_with: "Conectar mediante",
                    loading: "Cargando...",
                    something_went_wrong: "Algo sali\xf3 mal",
                    no_supported_wallets: "Todav\xeda no hay billeteras compatibles",
                    no_wallets_found: "No se encontraron billeteras",
                },
                fr: {
                    choose_preferred_wallet: "Choisissez votre portefeuille pr\xe9f\xe9r\xe9",
                    connect_mobile_wallet: "Se connecter au portefeuille mobile",
                    scan_qrcode_with_wallet: "Scannez le QR code avec un portefeuille compatible WalletConnect",
                    connect: "Se connecter",
                    qrcode: "QR Code",
                    mobile: "Mobile",
                    desktop: "Desktop",
                    copy_to_clipboard: "Copier",
                    copied_to_clipboard: "Copi\xe9!",
                    connect_with: "Connectez-vous \xe0 l'aide de",
                    loading: "Chargement...",
                    something_went_wrong: "Quelque chose a mal tourn\xe9",
                    no_supported_wallets: "Il n'y a pas encore de portefeuilles pris en charge",
                    no_wallets_found: "Aucun portefeuille trouv\xe9",
                },
                ko: {
                    choose_preferred_wallet: "원하는 지갑을 선택하세요",
                    connect_mobile_wallet: "모바일 지갑과 연결",
                    scan_qrcode_with_wallet: "WalletConnect 지원 지갑에서 QR코드를 스캔하세요",
                    connect: "연결",
                    qrcode: "QR 코드",
                    mobile: "모바일",
                    desktop: "데스크탑",
                    copy_to_clipboard: "클립보드에 복사",
                    copied_to_clipboard: "클립보드에 복사되었습니다!",
                    connect_with: "와 연결하다",
                    loading: "로드 중...",
                    something_went_wrong: "문제가 발생했습니다.",
                    no_supported_wallets: "아직 지원되는 지갑이 없습니다",
                    no_wallets_found: "지갑을 찾을 수 없습니다",
                },
                pt: {
                    choose_preferred_wallet: "Escolha sua carteira preferida",
                    connect_mobile_wallet: "Conectar-se \xe0 carteira m\xf3vel",
                    scan_qrcode_with_wallet: "Ler o c\xf3digo QR com uma carteira compat\xedvel com WalletConnect",
                    connect: "Conectar",
                    qrcode: "C\xf3digo QR",
                    mobile: "M\xf3vel",
                    desktop: "Desktop",
                    copy_to_clipboard: "Copiar",
                    copied_to_clipboard: "Copiado!",
                    connect_with: "Ligar por meio de",
                    loading: "Carregamento...",
                    something_went_wrong: "Algo correu mal",
                    no_supported_wallets: "Ainda n\xe3o h\xe1 carteiras suportadas",
                    no_wallets_found: "Nenhuma carteira encontrada",
                },
                zh: {
                    choose_preferred_wallet: "选择你的钱包",
                    connect_mobile_wallet: "连接至移动端钱包",
                    scan_qrcode_with_wallet: "使用兼容 WalletConnect 的钱包扫描二维码",
                    connect: "连接",
                    qrcode: "二维码",
                    mobile: "移动",
                    desktop: "桌面",
                    copy_to_clipboard: "复制到剪贴板",
                    copied_to_clipboard: "复制到剪贴板成功！",
                    connect_with: "通过以下方式连接",
                    loading: "正在加载...",
                    something_went_wrong: "出了问题",
                    no_supported_wallets: "目前还没有支持的钱包",
                    no_wallets_found: "没有找到钱包",
                },
                fa: {
                    choose_preferred_wallet: "کیف پول مورد نظر خود را انتخاب کنید",
                    connect_mobile_wallet: "به کیف پول موبایل وصل شوید",
                    scan_qrcode_with_wallet: "کد QR را با یک کیف پول سازگار با WalletConnect اسکن کنید",
                    connect: "اتصال",
                    qrcode: "کد QR",
                    mobile: "سیار",
                    desktop: "دسکتاپ",
                    copy_to_clipboard: "کپی به کلیپ بورد",
                    copied_to_clipboard: "در کلیپ بورد کپی شد!",
                    connect_with: "ارتباط با",
                    loading: "...بارگذاری",
                    something_went_wrong: "مشکلی پیش آمد",
                    no_supported_wallets: "هنوز هیچ کیف پول پشتیبانی شده ای وجود ندارد",
                    no_wallets_found: "هیچ کیف پولی پیدا نشد",
                },
            };
            function triggerCloseAnimation() {
                var doc = browserUtils.getDocumentOrThrow(),
                    modal = doc.getElementById(WALLETCONNECT_MODAL_ID);
                modal &&
                    ((modal.className = modal.className.replace("fadeIn", "fadeOut")),
                    setTimeout(function () {
                        var wrapper = doc.getElementById(WALLETCONNECT_WRAPPER_ID);
                        wrapper && doc.body.removeChild(wrapper);
                    }, 300));
            }
            var isNode = function () {
                return void 0 !== process && void 0 !== process.versions && void 0 !== process.versions.node;
            };
            module.exports = {
                open: function (uri, cb, qrcodeModalOptions) {
                    if ((console.log(uri), isNode()))
                        !(function (uri) {
                            QRCode.toString(uri, { type: "terminal" }).then(console.log);
                        })(uri);
                    else {
                        var doc, prev, style, doc1, wrapper;
                        (prev = (doc = browserUtils.getDocumentOrThrow()).getElementById(WALLETCONNECT_STYLE_ID)) && doc.head.removeChild(prev),
                            (style = doc.createElement("style")).setAttribute("id", WALLETCONNECT_STYLE_ID),
                            (style.innerText =
                                ':root {\n  --animation-duration: 300ms;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes fadeOut {\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n  }\n}\n\n.animated {\n  animation-duration: var(--animation-duration);\n  animation-fill-mode: both;\n}\n\n.fadeIn {\n  animation-name: fadeIn;\n}\n\n.fadeOut {\n  animation-name: fadeOut;\n}\n\n#walletconnect-wrapper {\n  -webkit-user-select: none;\n  align-items: center;\n  display: flex;\n  height: 100%;\n  justify-content: center;\n  left: 0;\n  pointer-events: none;\n  position: fixed;\n  top: 0;\n  user-select: none;\n  width: 100%;\n  z-index: 99999999999999;\n}\n\n.walletconnect-modal__headerLogo {\n  height: 21px;\n}\n\n.walletconnect-modal__header p {\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n  margin: 0;\n  align-items: flex-start;\n  display: flex;\n  flex: 1;\n  margin-left: 5px;\n}\n\n.walletconnect-modal__close__wrapper {\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  z-index: 10000;\n  background: white;\n  border-radius: 26px;\n  padding: 6px;\n  box-sizing: border-box;\n  width: 26px;\n  height: 26px;\n  cursor: pointer;\n}\n\n.walletconnect-modal__close__icon {\n  position: relative;\n  top: 7px;\n  right: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transform: rotate(45deg);\n}\n\n.walletconnect-modal__close__line1 {\n  position: absolute;\n  width: 100%;\n  border: 1px solid rgb(48, 52, 59);\n}\n\n.walletconnect-modal__close__line2 {\n  position: absolute;\n  width: 100%;\n  border: 1px solid rgb(48, 52, 59);\n  transform: rotate(90deg);\n}\n\n.walletconnect-qrcode__base {\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  background: rgba(37, 41, 46, 0.95);\n  height: 100%;\n  left: 0;\n  pointer-events: auto;\n  position: fixed;\n  top: 0;\n  transition: 0.4s cubic-bezier(0.19, 1, 0.22, 1);\n  width: 100%;\n  will-change: opacity;\n  padding: 40px;\n  box-sizing: border-box;\n}\n\n.walletconnect-qrcode__text {\n  color: rgba(60, 66, 82, 0.6);\n  font-size: 16px;\n  font-weight: 600;\n  letter-spacing: 0;\n  line-height: 1.1875em;\n  margin: 10px 0 20px 0;\n  text-align: center;\n  width: 100%;\n}\n\n@media only screen and (max-width: 768px) {\n  .walletconnect-qrcode__text {\n    font-size: 4vw;\n  }\n}\n\n@media only screen and (max-width: 320px) {\n  .walletconnect-qrcode__text {\n    font-size: 14px;\n  }\n}\n\n.walletconnect-qrcode__image {\n  width: calc(100% - 30px);\n  box-sizing: border-box;\n  cursor: none;\n  margin: 0 auto;\n}\n\n.walletconnect-qrcode__notification {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  font-size: 16px;\n  padding: 16px 20px;\n  border-radius: 16px;\n  text-align: center;\n  transition: all 0.1s ease-in-out;\n  background: white;\n  color: black;\n  margin-bottom: -60px;\n  opacity: 0;\n}\n\n.walletconnect-qrcode__notification.notification__show {\n  opacity: 1;\n}\n\n@media only screen and (max-width: 768px) {\n  .walletconnect-modal__header {\n    height: 130px;\n  }\n  .walletconnect-modal__base {\n    overflow: auto;\n  }\n}\n\n@media only screen and (min-device-width: 415px) and (max-width: 768px) {\n  #content {\n    max-width: 768px;\n    box-sizing: border-box;\n  }\n}\n\n@media only screen and (min-width: 375px) and (max-width: 415px) {\n  #content {\n    max-width: 414px;\n    box-sizing: border-box;\n  }\n}\n\n@media only screen and (min-width: 320px) and (max-width: 375px) {\n  #content {\n    max-width: 375px;\n    box-sizing: border-box;\n  }\n}\n\n@media only screen and (max-width: 320px) {\n  #content {\n    max-width: 320px;\n    box-sizing: border-box;\n  }\n}\n\n.walletconnect-modal__base {\n  -webkit-font-smoothing: antialiased;\n  background: #ffffff;\n  border-radius: 24px;\n  box-shadow: 0 10px 50px 5px rgba(0, 0, 0, 0.4);\n  font-family: ui-rounded, "SF Pro Rounded", "SF Pro Text", medium-content-sans-serif-font,\n    -apple-system, BlinkMacSystemFont, ui-sans-serif, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell,\n    "Open Sans", "Helvetica Neue", sans-serif;\n  margin-top: 41px;\n  padding: 24px 24px 22px;\n  pointer-events: auto;\n  position: relative;\n  text-align: center;\n  transition: 0.4s cubic-bezier(0.19, 1, 0.22, 1);\n  will-change: transform;\n  overflow: visible;\n  transform: translateY(-50%);\n  top: 50%;\n  max-width: 500px;\n  margin: auto;\n}\n\n@media only screen and (max-width: 320px) {\n  .walletconnect-modal__base {\n    padding: 24px 12px;\n  }\n}\n\n.walletconnect-modal__base .hidden {\n  transform: translateY(150%);\n  transition: 0.125s cubic-bezier(0.4, 0, 1, 1);\n}\n\n.walletconnect-modal__header {\n  align-items: center;\n  display: flex;\n  height: 26px;\n  left: 0;\n  justify-content: space-between;\n  position: absolute;\n  top: -42px;\n  width: 100%;\n}\n\n.walletconnect-modal__base .wc-logo {\n  align-items: center;\n  display: flex;\n  height: 26px;\n  margin-top: 15px;\n  padding-bottom: 15px;\n  pointer-events: auto;\n}\n\n.walletconnect-modal__base .wc-logo div {\n  background-color: #3399ff;\n  height: 21px;\n  margin-right: 5px;\n  mask-image: url("images/wc-logo.svg") center no-repeat;\n  width: 32px;\n}\n\n.walletconnect-modal__base .wc-logo p {\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n  margin: 0;\n}\n\n.walletconnect-modal__base h2 {\n  color: rgba(60, 66, 82, 0.6);\n  font-size: 16px;\n  font-weight: 600;\n  letter-spacing: 0;\n  line-height: 1.1875em;\n  margin: 0 0 19px 0;\n  text-align: center;\n  width: 100%;\n}\n\n.walletconnect-modal__base__row {\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  align-items: center;\n  border-radius: 20px;\n  cursor: pointer;\n  display: flex;\n  height: 56px;\n  justify-content: space-between;\n  padding: 0 15px;\n  position: relative;\n  margin: 0px 0px 8px;\n  text-align: left;\n  transition: 0.15s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  will-change: transform;\n  text-decoration: none;\n}\n\n.walletconnect-modal__base__row:hover {\n  background: rgba(60, 66, 82, 0.06);\n}\n\n.walletconnect-modal__base__row:active {\n  background: rgba(60, 66, 82, 0.06);\n  transform: scale(0.975);\n  transition: 0.1s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n}\n\n.walletconnect-modal__base__row__h3 {\n  color: #25292e;\n  font-size: 20px;\n  font-weight: 700;\n  margin: 0;\n  padding-bottom: 3px;\n}\n\n.walletconnect-modal__base__row__right {\n  align-items: center;\n  display: flex;\n  justify-content: center;\n}\n\n.walletconnect-modal__base__row__right__app-icon {\n  border-radius: 8px;\n  height: 34px;\n  margin: 0 11px 2px 0;\n  width: 34px;\n  background-size: 100%;\n  box-shadow: 0 4px 12px 0 rgba(37, 41, 46, 0.25);\n}\n\n.walletconnect-modal__base__row__right__caret {\n  height: 18px;\n  opacity: 0.3;\n  transition: 0.1s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  width: 8px;\n  will-change: opacity;\n}\n\n.walletconnect-modal__base__row:hover .caret,\n.walletconnect-modal__base__row:active .caret {\n  opacity: 0.6;\n}\n\n.walletconnect-modal__mobile__toggle {\n  width: 80%;\n  display: flex;\n  margin: 0 auto;\n  position: relative;\n  overflow: hidden;\n  border-radius: 8px;\n  margin-bottom: 18px;\n  background: #d4d5d9;\n}\n\n.walletconnect-modal__single_wallet {\n  display: flex;\n  justify-content: center;\n  margin-top: 7px;\n  margin-bottom: 18px;\n}\n\n.walletconnect-modal__single_wallet a {\n  cursor: pointer;\n  color: rgb(64, 153, 255);\n  font-size: 21px;\n  font-weight: 800;\n  text-decoration: none !important;\n  margin: 0 auto;\n}\n\n.walletconnect-modal__mobile__toggle_selector {\n  width: calc(50% - 8px);\n  background: white;\n  position: absolute;\n  border-radius: 5px;\n  height: calc(100% - 8px);\n  top: 4px;\n  transition: all 0.2s ease-in-out;\n  transform: translate3d(4px, 0, 0);\n}\n\n.walletconnect-modal__mobile__toggle.right__selected .walletconnect-modal__mobile__toggle_selector {\n  transform: translate3d(calc(100% + 12px), 0, 0);\n}\n\n.walletconnect-modal__mobile__toggle a {\n  font-size: 12px;\n  width: 50%;\n  text-align: center;\n  padding: 8px;\n  margin: 0;\n  font-weight: 600;\n  z-index: 1;\n}\n\n.walletconnect-modal__footer {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n\n@media only screen and (max-width: 768px) {\n  .walletconnect-modal__footer {\n    margin-top: 5vw;\n  }\n}\n\n.walletconnect-modal__footer a {\n  cursor: pointer;\n  color: #898d97;\n  font-size: 15px;\n  margin: 0 auto;\n}\n\n@media only screen and (max-width: 320px) {\n  .walletconnect-modal__footer a {\n    font-size: 14px;\n  }\n}\n\n.walletconnect-connect__buttons__wrapper {\n  max-height: 44vh;\n}\n\n.walletconnect-connect__buttons__wrapper__android {\n  margin: 50% 0;\n}\n\n.walletconnect-connect__buttons__wrapper__wrap {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  margin: 10px 0;\n}\n\n@media only screen and (min-width: 768px) {\n  .walletconnect-connect__buttons__wrapper__wrap {\n    margin-top: 40px;\n  }\n}\n\n.walletconnect-connect__button {\n  background-color: rgb(64, 153, 255);\n  padding: 12px;\n  border-radius: 8px;\n  text-decoration: none;\n  color: rgb(255, 255, 255);\n  font-weight: 500;\n}\n\n.walletconnect-connect__button__icon_anchor {\n  cursor: pointer;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  margin: 8px;\n  width: 42px;\n  justify-self: center;\n  flex-direction: column;\n  text-decoration: none !important;\n}\n\n@media only screen and (max-width: 320px) {\n  .walletconnect-connect__button__icon_anchor {\n    margin: 4px;\n  }\n}\n\n.walletconnect-connect__button__icon {\n  border-radius: 10px;\n  height: 42px;\n  margin: 0;\n  width: 42px;\n  background-size: cover !important;\n  box-shadow: 0 4px 12px 0 rgba(37, 41, 46, 0.25);\n}\n\n.walletconnect-connect__button__text {\n  color: #424952;\n  font-size: 2.7vw;\n  text-decoration: none !important;\n  padding: 0;\n  margin-top: 1.8vw;\n  font-weight: 600;\n}\n\n@media only screen and (min-width: 768px) {\n  .walletconnect-connect__button__text {\n    font-size: 16px;\n    margin-top: 12px;\n  }\n}\n\n.walletconnect-search__input {\n  border: none;\n  background: #d4d5d9;\n  border-style: none;\n  padding: 8px 16px;\n  outline: none;\n  font-style: normal;\n  font-stretch: normal;\n  font-size: 16px;\n  font-style: normal;\n  font-stretch: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  text-align: left;\n  border-radius: 8px;\n  width: calc(100% - 16px);\n  margin: 0;\n  margin-bottom: 8px;\n}\n'),
                            doc.head.appendChild(style),
                            (wrapper = (doc1 = browserUtils.getDocumentOrThrow()).createElement("div")).setAttribute("id", WALLETCONNECT_WRAPPER_ID),
                            doc1.body.appendChild(wrapper),
                            React.render(
                                React.createElement(Modal, {
                                    text: languages[browserUtils.getNavigatorOrThrow().language.split("-")[0] || "en"] || languages.en,
                                    uri: uri,
                                    onClose: function () {
                                        triggerCloseAnimation(), cb && cb();
                                    },
                                    qrcodeModalOptions: qrcodeModalOptions,
                                }),
                                wrapper
                            );
                    }
                },
                close: function () {
                    isNode() || triggerCloseAnimation();
                },
            };
        },
        68007: function (module) {
            "use strict";
            module.exports = function () {
                throw Error("ws does not work in the browser. Browser clients must use the native WebSocket object");
            };
        },
        11460: function (module, __unused_webpack_exports, __webpack_require__) {
            !(function (module, exports) {
                "use strict";
                function assert(val, msg) {
                    if (!val) throw Error(msg || "Assertion failed");
                }
                function inherits(ctor, superCtor) {
                    ctor.super_ = superCtor;
                    var TempCtor = function () {};
                    (TempCtor.prototype = superCtor.prototype), (ctor.prototype = new TempCtor()), (ctor.prototype.constructor = ctor);
                }
                function BN(number, base, endian) {
                    if (BN.isBN(number)) return number;
                    (this.negative = 0),
                        (this.words = null),
                        (this.length = 0),
                        (this.red = null),
                        null !== number && (("le" === base || "be" === base) && ((endian = base), (base = 10)), this._init(number || 0, base || 10, endian || "be"));
                }
                "object" == typeof module ? (module.exports = BN) : (exports.BN = BN), (BN.BN = BN), (BN.wordSize = 26);
                try {
                    Buffer = __webpack_require__(36563).Buffer;
                } catch (e) {}
                function parseHex(str, start, end) {
                    for (var r = 0, len = Math.min(str.length, end), i = start; i < len; i++) {
                        var c = str.charCodeAt(i) - 48;
                        (r <<= 4), c >= 49 && c <= 54 ? (r |= c - 49 + 10) : c >= 17 && c <= 22 ? (r |= c - 17 + 10) : (r |= 15 & c);
                    }
                    return r;
                }
                function parseBase(str, start, end, mul) {
                    for (var r = 0, len = Math.min(str.length, end), i = start; i < len; i++) {
                        var c = str.charCodeAt(i) - 48;
                        (r *= mul), c >= 49 ? (r += c - 49 + 10) : c >= 17 ? (r += c - 17 + 10) : (r += c);
                    }
                    return r;
                }
                (BN.isBN = function (num) {
                    return num instanceof BN || (null !== num && "object" == typeof num && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words));
                }),
                    (BN.max = function (left, right) {
                        return left.cmp(right) > 0 ? left : right;
                    }),
                    (BN.min = function (left, right) {
                        return 0 > left.cmp(right) ? left : right;
                    }),
                    (BN.prototype._init = function (number, base, endian) {
                        if ("number" == typeof number) return this._initNumber(number, base, endian);
                        if ("object" == typeof number) return this._initArray(number, base, endian);
                        "hex" === base && (base = 16), assert(base === (0 | base) && base >= 2 && base <= 36);
                        var start = 0;
                        "-" === (number = number.toString().replace(/\s+/g, ""))[0] && start++,
                            16 === base ? this._parseHex(number, start) : this._parseBase(number, base, start),
                            "-" === number[0] && (this.negative = 1),
                            this.strip(),
                            "le" === endian && this._initArray(this.toArray(), base, endian);
                    }),
                    (BN.prototype._initNumber = function (number, base, endian) {
                        number < 0 && ((this.negative = 1), (number = -number)),
                            number < 67108864
                                ? ((this.words = [67108863 & number]), (this.length = 1))
                                : number < 4503599627370496
                                ? ((this.words = [67108863 & number, (number / 67108864) & 67108863]), (this.length = 2))
                                : (assert(number < 9007199254740992), (this.words = [67108863 & number, (number / 67108864) & 67108863, 1]), (this.length = 3)),
                            "le" === endian && this._initArray(this.toArray(), base, endian);
                    }),
                    (BN.prototype._initArray = function (number, base, endian) {
                        if ((assert("number" == typeof number.length), number.length <= 0)) return (this.words = [0]), (this.length = 1), this;
                        (this.length = Math.ceil(number.length / 3)), (this.words = Array(this.length));
                        for (var j, w, i = 0; i < this.length; i++) this.words[i] = 0;
                        var off = 0;
                        if ("be" === endian)
                            for (i = number.length - 1, j = 0; i >= 0; i -= 3)
                                (w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16)), (this.words[j] |= (w << off) & 67108863), (this.words[j + 1] = (w >>> (26 - off)) & 67108863), (off += 24) >= 26 && ((off -= 26), j++);
                        else if ("le" === endian)
                            for (i = 0, j = 0; i < number.length; i += 3)
                                (w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16)), (this.words[j] |= (w << off) & 67108863), (this.words[j + 1] = (w >>> (26 - off)) & 67108863), (off += 24) >= 26 && ((off -= 26), j++);
                        return this.strip();
                    }),
                    (BN.prototype._parseHex = function (number, start) {
                        (this.length = Math.ceil((number.length - start) / 6)), (this.words = Array(this.length));
                        for (var j, w, i = 0; i < this.length; i++) this.words[i] = 0;
                        var off = 0;
                        for (i = number.length - 6, j = 0; i >= start; i -= 6)
                            (w = parseHex(number, i, i + 6)), (this.words[j] |= (w << off) & 67108863), (this.words[j + 1] |= (w >>> (26 - off)) & 4194303), (off += 24) >= 26 && ((off -= 26), j++);
                        i + 6 !== start && ((w = parseHex(number, start, i + 6)), (this.words[j] |= (w << off) & 67108863), (this.words[j + 1] |= (w >>> (26 - off)) & 4194303)), this.strip();
                    }),
                    (BN.prototype._parseBase = function (number, base, start) {
                        (this.words = [0]), (this.length = 1);
                        for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base) limbLen++;
                        limbLen--, (limbPow = (limbPow / base) | 0);
                        for (var total = number.length - start, mod = total % limbLen, end = Math.min(total, total - mod) + start, word = 0, i = start; i < end; i += limbLen)
                            (word = parseBase(number, i, i + limbLen, base)), this.imuln(limbPow), this.words[0] + word < 67108864 ? (this.words[0] += word) : this._iaddn(word);
                        if (0 !== mod) {
                            var pow = 1;
                            for (word = parseBase(number, i, number.length, base), i = 0; i < mod; i++) pow *= base;
                            this.imuln(pow), this.words[0] + word < 67108864 ? (this.words[0] += word) : this._iaddn(word);
                        }
                    }),
                    (BN.prototype.copy = function (dest) {
                        dest.words = Array(this.length);
                        for (var i = 0; i < this.length; i++) dest.words[i] = this.words[i];
                        (dest.length = this.length), (dest.negative = this.negative), (dest.red = this.red);
                    }),
                    (BN.prototype.clone = function () {
                        var r = new BN(null);
                        return this.copy(r), r;
                    }),
                    (BN.prototype._expand = function (size) {
                        for (; this.length < size; ) this.words[this.length++] = 0;
                        return this;
                    }),
                    (BN.prototype.strip = function () {
                        for (; this.length > 1 && 0 === this.words[this.length - 1]; ) this.length--;
                        return this._normSign();
                    }),
                    (BN.prototype._normSign = function () {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
                    }),
                    (BN.prototype.inspect = function () {
                        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
                    });
                var Buffer,
                    zeros = [
                        "",
                        "0",
                        "00",
                        "000",
                        "0000",
                        "00000",
                        "000000",
                        "0000000",
                        "00000000",
                        "000000000",
                        "0000000000",
                        "00000000000",
                        "000000000000",
                        "0000000000000",
                        "00000000000000",
                        "000000000000000",
                        "0000000000000000",
                        "00000000000000000",
                        "000000000000000000",
                        "0000000000000000000",
                        "00000000000000000000",
                        "000000000000000000000",
                        "0000000000000000000000",
                        "00000000000000000000000",
                        "000000000000000000000000",
                        "0000000000000000000000000",
                    ],
                    groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                    groupBases = [
                        0,
                        0,
                        33554432,
                        43046721,
                        16777216,
                        48828125,
                        60466176,
                        40353607,
                        16777216,
                        43046721,
                        1e7,
                        19487171,
                        35831808,
                        62748517,
                        7529536,
                        11390625,
                        16777216,
                        24137569,
                        34012224,
                        47045881,
                        64e6,
                        4084101,
                        5153632,
                        6436343,
                        7962624,
                        9765625,
                        11881376,
                        14348907,
                        17210368,
                        20511149,
                        243e5,
                        28629151,
                        33554432,
                        39135393,
                        45435424,
                        52521875,
                        60466176,
                    ];
                function smallMulTo(self1, num, out) {
                    out.negative = num.negative ^ self1.negative;
                    var len = (self1.length + num.length) | 0;
                    (out.length = len), (len = (len - 1) | 0);
                    var a = 0 | self1.words[0],
                        b = 0 | num.words[0],
                        r = a * b,
                        lo = 67108863 & r,
                        carry = (r / 67108864) | 0;
                    out.words[0] = lo;
                    for (var k = 1; k < len; k++) {
                        for (var ncarry = carry >>> 26, rword = 67108863 & carry, maxJ = Math.min(k, num.length - 1), j = Math.max(0, k - self1.length + 1); j <= maxJ; j++) {
                            var i = (k - j) | 0;
                            (ncarry += ((r = (a = 0 | self1.words[i]) * (b = 0 | num.words[j]) + rword) / 67108864) | 0), (rword = 67108863 & r);
                        }
                        (out.words[k] = 0 | rword), (carry = 0 | ncarry);
                    }
                    return 0 !== carry ? (out.words[k] = 0 | carry) : out.length--, out.strip();
                }
                (BN.prototype.toString = function (base, padding) {
                    if (((padding = 0 | padding || 1), 16 === (base = base || 10) || "hex" === base)) {
                        out = "";
                        for (var out, off = 0, carry = 0, i = 0; i < this.length; i++) {
                            var w = this.words[i],
                                word = (((w << off) | carry) & 16777215).toString(16);
                            (out = 0 != (carry = (w >>> (24 - off)) & 16777215) || i !== this.length - 1 ? zeros[6 - word.length] + word + out : word + out), (off += 2) >= 26 && ((off -= 26), i--);
                        }
                        for (0 !== carry && (out = carry.toString(16) + out); out.length % padding != 0; ) out = "0" + out;
                        return 0 !== this.negative && (out = "-" + out), out;
                    }
                    if (base === (0 | base) && base >= 2 && base <= 36) {
                        var groupSize = groupSizes[base],
                            groupBase = groupBases[base];
                        out = "";
                        var c = this.clone();
                        for (c.negative = 0; !c.isZero(); ) {
                            var r = c.modn(groupBase).toString(base);
                            out = (c = c.idivn(groupBase)).isZero() ? r + out : zeros[groupSize - r.length] + r + out;
                        }
                        for (this.isZero() && (out = "0" + out); out.length % padding != 0; ) out = "0" + out;
                        return 0 !== this.negative && (out = "-" + out), out;
                    }
                    assert(!1, "Base should be between 2 and 36");
                }),
                    (BN.prototype.toNumber = function () {
                        var ret = this.words[0];
                        return (
                            2 === this.length
                                ? (ret += 67108864 * this.words[1])
                                : 3 === this.length && 1 === this.words[2]
                                ? (ret += 4503599627370496 + 67108864 * this.words[1])
                                : this.length > 2 && assert(!1, "Number can only safely store up to 53 bits"),
                            0 !== this.negative ? -ret : ret
                        );
                    }),
                    (BN.prototype.toJSON = function () {
                        return this.toString(16);
                    }),
                    (BN.prototype.toBuffer = function (endian, length) {
                        return assert(void 0 !== Buffer), this.toArrayLike(Buffer, endian, length);
                    }),
                    (BN.prototype.toArray = function (endian, length) {
                        return this.toArrayLike(Array, endian, length);
                    }),
                    (BN.prototype.toArrayLike = function (ArrayType, endian, length) {
                        var b,
                            i,
                            byteLength = this.byteLength(),
                            reqLength = length || Math.max(1, byteLength);
                        assert(byteLength <= reqLength, "byte array longer than desired length"), assert(reqLength > 0, "Requested array length <= 0"), this.strip();
                        var res = new ArrayType(reqLength),
                            q = this.clone();
                        if ("le" === endian) {
                            for (i = 0; !q.isZero(); i++) (b = q.andln(255)), q.iushrn(8), (res[i] = b);
                            for (; i < reqLength; i++) res[i] = 0;
                        } else {
                            for (i = 0; i < reqLength - byteLength; i++) res[i] = 0;
                            for (i = 0; !q.isZero(); i++) (b = q.andln(255)), q.iushrn(8), (res[reqLength - i - 1] = b);
                        }
                        return res;
                    }),
                    Math.clz32
                        ? (BN.prototype._countBits = function (w) {
                              return 32 - Math.clz32(w);
                          })
                        : (BN.prototype._countBits = function (w) {
                              var t = w,
                                  r = 0;
                              return t >= 4096 && ((r += 13), (t >>>= 13)), t >= 64 && ((r += 7), (t >>>= 7)), t >= 8 && ((r += 4), (t >>>= 4)), t >= 2 && ((r += 2), (t >>>= 2)), r + t;
                          }),
                    (BN.prototype._zeroBits = function (w) {
                        if (0 === w) return 26;
                        var t = w,
                            r = 0;
                        return (8191 & t) == 0 && ((r += 13), (t >>>= 13)), (127 & t) == 0 && ((r += 7), (t >>>= 7)), (15 & t) == 0 && ((r += 4), (t >>>= 4)), (3 & t) == 0 && ((r += 2), (t >>>= 2)), (1 & t) == 0 && r++, r;
                    }),
                    (BN.prototype.bitLength = function () {
                        var w = this.words[this.length - 1],
                            hi = this._countBits(w);
                        return (this.length - 1) * 26 + hi;
                    }),
                    (BN.prototype.zeroBits = function () {
                        if (this.isZero()) return 0;
                        for (var r = 0, i = 0; i < this.length; i++) {
                            var b = this._zeroBits(this.words[i]);
                            if (((r += b), 26 !== b)) break;
                        }
                        return r;
                    }),
                    (BN.prototype.byteLength = function () {
                        return Math.ceil(this.bitLength() / 8);
                    }),
                    (BN.prototype.toTwos = function (width) {
                        return 0 !== this.negative ? this.abs().inotn(width).iaddn(1) : this.clone();
                    }),
                    (BN.prototype.fromTwos = function (width) {
                        return this.testn(width - 1) ? this.notn(width).iaddn(1).ineg() : this.clone();
                    }),
                    (BN.prototype.isNeg = function () {
                        return 0 !== this.negative;
                    }),
                    (BN.prototype.neg = function () {
                        return this.clone().ineg();
                    }),
                    (BN.prototype.ineg = function () {
                        return this.isZero() || (this.negative ^= 1), this;
                    }),
                    (BN.prototype.iuor = function (num) {
                        for (; this.length < num.length; ) this.words[this.length++] = 0;
                        for (var i = 0; i < num.length; i++) this.words[i] = this.words[i] | num.words[i];
                        return this.strip();
                    }),
                    (BN.prototype.ior = function (num) {
                        return assert((this.negative | num.negative) == 0), this.iuor(num);
                    }),
                    (BN.prototype.or = function (num) {
                        return this.length > num.length ? this.clone().ior(num) : num.clone().ior(this);
                    }),
                    (BN.prototype.uor = function (num) {
                        return this.length > num.length ? this.clone().iuor(num) : num.clone().iuor(this);
                    }),
                    (BN.prototype.iuand = function (num) {
                        var b;
                        b = this.length > num.length ? num : this;
                        for (var i = 0; i < b.length; i++) this.words[i] = this.words[i] & num.words[i];
                        return (this.length = b.length), this.strip();
                    }),
                    (BN.prototype.iand = function (num) {
                        return assert((this.negative | num.negative) == 0), this.iuand(num);
                    }),
                    (BN.prototype.and = function (num) {
                        return this.length > num.length ? this.clone().iand(num) : num.clone().iand(this);
                    }),
                    (BN.prototype.uand = function (num) {
                        return this.length > num.length ? this.clone().iuand(num) : num.clone().iuand(this);
                    }),
                    (BN.prototype.iuxor = function (num) {
                        this.length > num.length ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var a, b, i = 0; i < b.length; i++) this.words[i] = a.words[i] ^ b.words[i];
                        if (this !== a) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return (this.length = a.length), this.strip();
                    }),
                    (BN.prototype.ixor = function (num) {
                        return assert((this.negative | num.negative) == 0), this.iuxor(num);
                    }),
                    (BN.prototype.xor = function (num) {
                        return this.length > num.length ? this.clone().ixor(num) : num.clone().ixor(this);
                    }),
                    (BN.prototype.uxor = function (num) {
                        return this.length > num.length ? this.clone().iuxor(num) : num.clone().iuxor(this);
                    }),
                    (BN.prototype.inotn = function (width) {
                        assert("number" == typeof width && width >= 0);
                        var bytesNeeded = 0 | Math.ceil(width / 26),
                            bitsLeft = width % 26;
                        this._expand(bytesNeeded), bitsLeft > 0 && bytesNeeded--;
                        for (var i = 0; i < bytesNeeded; i++) this.words[i] = 67108863 & ~this.words[i];
                        return bitsLeft > 0 && (this.words[i] = ~this.words[i] & (67108863 >> (26 - bitsLeft))), this.strip();
                    }),
                    (BN.prototype.notn = function (width) {
                        return this.clone().inotn(width);
                    }),
                    (BN.prototype.setn = function (bit, val) {
                        assert("number" == typeof bit && bit >= 0);
                        var off = (bit / 26) | 0,
                            wbit = bit % 26;
                        return this._expand(off + 1), val ? (this.words[off] = this.words[off] | (1 << wbit)) : (this.words[off] = this.words[off] & ~(1 << wbit)), this.strip();
                    }),
                    (BN.prototype.iadd = function (num) {
                        if (0 !== this.negative && 0 === num.negative) return (this.negative = 0), (r = this.isub(num)), (this.negative ^= 1), this._normSign();
                        if (0 === this.negative && 0 !== num.negative) return (num.negative = 0), (r = this.isub(num)), (num.negative = 1), r._normSign();
                        this.length > num.length ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var r, a, b, carry = 0, i = 0; i < b.length; i++) (r = (0 | a.words[i]) + (0 | b.words[i]) + carry), (this.words[i] = 67108863 & r), (carry = r >>> 26);
                        for (; 0 !== carry && i < a.length; i++) (r = (0 | a.words[i]) + carry), (this.words[i] = 67108863 & r), (carry = r >>> 26);
                        if (((this.length = a.length), 0 !== carry)) (this.words[this.length] = carry), this.length++;
                        else if (a !== this) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return this;
                    }),
                    (BN.prototype.add = function (num) {
                        var res;
                        return 0 !== num.negative && 0 === this.negative
                            ? ((num.negative = 0), (res = this.sub(num)), (num.negative ^= 1), res)
                            : 0 === num.negative && 0 !== this.negative
                            ? ((this.negative = 0), (res = num.sub(this)), (this.negative = 1), res)
                            : this.length > num.length
                            ? this.clone().iadd(num)
                            : num.clone().iadd(this);
                    }),
                    (BN.prototype.isub = function (num) {
                        if (0 !== num.negative) {
                            num.negative = 0;
                            var a,
                                b,
                                r = this.iadd(num);
                            return (num.negative = 1), r._normSign();
                        }
                        if (0 !== this.negative) return (this.negative = 0), this.iadd(num), (this.negative = 1), this._normSign();
                        var cmp = this.cmp(num);
                        if (0 === cmp) return (this.negative = 0), (this.length = 1), (this.words[0] = 0), this;
                        cmp > 0 ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var carry = 0, i = 0; i < b.length; i++) (carry = (r = (0 | a.words[i]) - (0 | b.words[i]) + carry) >> 26), (this.words[i] = 67108863 & r);
                        for (; 0 !== carry && i < a.length; i++) (carry = (r = (0 | a.words[i]) + carry) >> 26), (this.words[i] = 67108863 & r);
                        if (0 === carry && i < a.length && a !== this) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return (this.length = Math.max(this.length, i)), a !== this && (this.negative = 1), this.strip();
                    }),
                    (BN.prototype.sub = function (num) {
                        return this.clone().isub(num);
                    });
                var comb10MulTo = function (self1, num, out) {
                    var lo,
                        mid,
                        hi,
                        a = self1.words,
                        b = num.words,
                        o = out.words,
                        c = 0,
                        a0 = 0 | a[0],
                        al0 = 8191 & a0,
                        ah0 = a0 >>> 13,
                        a1 = 0 | a[1],
                        al1 = 8191 & a1,
                        ah1 = a1 >>> 13,
                        a2 = 0 | a[2],
                        al2 = 8191 & a2,
                        ah2 = a2 >>> 13,
                        a3 = 0 | a[3],
                        al3 = 8191 & a3,
                        ah3 = a3 >>> 13,
                        a4 = 0 | a[4],
                        al4 = 8191 & a4,
                        ah4 = a4 >>> 13,
                        a5 = 0 | a[5],
                        al5 = 8191 & a5,
                        ah5 = a5 >>> 13,
                        a6 = 0 | a[6],
                        al6 = 8191 & a6,
                        ah6 = a6 >>> 13,
                        a7 = 0 | a[7],
                        al7 = 8191 & a7,
                        ah7 = a7 >>> 13,
                        a8 = 0 | a[8],
                        al8 = 8191 & a8,
                        ah8 = a8 >>> 13,
                        a9 = 0 | a[9],
                        al9 = 8191 & a9,
                        ah9 = a9 >>> 13,
                        b0 = 0 | b[0],
                        bl0 = 8191 & b0,
                        bh0 = b0 >>> 13,
                        b1 = 0 | b[1],
                        bl1 = 8191 & b1,
                        bh1 = b1 >>> 13,
                        b2 = 0 | b[2],
                        bl2 = 8191 & b2,
                        bh2 = b2 >>> 13,
                        b3 = 0 | b[3],
                        bl3 = 8191 & b3,
                        bh3 = b3 >>> 13,
                        b4 = 0 | b[4],
                        bl4 = 8191 & b4,
                        bh4 = b4 >>> 13,
                        b5 = 0 | b[5],
                        bl5 = 8191 & b5,
                        bh5 = b5 >>> 13,
                        b6 = 0 | b[6],
                        bl6 = 8191 & b6,
                        bh6 = b6 >>> 13,
                        b7 = 0 | b[7],
                        bl7 = 8191 & b7,
                        bh7 = b7 >>> 13,
                        b8 = 0 | b[8],
                        bl8 = 8191 & b8,
                        bh8 = b8 >>> 13,
                        b9 = 0 | b[9],
                        bl9 = 8191 & b9,
                        bh9 = b9 >>> 13;
                    (out.negative = self1.negative ^ num.negative), (out.length = 19);
                    var w0 = (((c + (lo = Math.imul(al0, bl0))) | 0) + ((8191 & (mid = ((mid = Math.imul(al0, bh0)) + Math.imul(ah0, bl0)) | 0)) << 13)) | 0;
                    (c = ((((hi = Math.imul(ah0, bh0)) + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0), (w0 &= 67108863), (lo = Math.imul(al1, bl0)), (mid = ((mid = Math.imul(al1, bh0)) + Math.imul(ah1, bl0)) | 0), (hi = Math.imul(ah1, bh0));
                    var w1 = (((c + (lo = (lo + Math.imul(al0, bl1)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh1)) | 0) + Math.imul(ah0, bl1)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh1)) | 0) + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0),
                        (w1 &= 67108863),
                        (lo = Math.imul(al2, bl0)),
                        (mid = ((mid = Math.imul(al2, bh0)) + Math.imul(ah2, bl0)) | 0),
                        (hi = Math.imul(ah2, bh0)),
                        (lo = (lo + Math.imul(al1, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh1)) | 0) + Math.imul(ah1, bl1)) | 0),
                        (hi = (hi + Math.imul(ah1, bh1)) | 0);
                    var w2 = (((c + (lo = (lo + Math.imul(al0, bl2)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh2)) | 0) + Math.imul(ah0, bl2)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh2)) | 0) + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0),
                        (w2 &= 67108863),
                        (lo = Math.imul(al3, bl0)),
                        (mid = ((mid = Math.imul(al3, bh0)) + Math.imul(ah3, bl0)) | 0),
                        (hi = Math.imul(ah3, bh0)),
                        (lo = (lo + Math.imul(al2, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh1)) | 0) + Math.imul(ah2, bl1)) | 0),
                        (hi = (hi + Math.imul(ah2, bh1)) | 0),
                        (lo = (lo + Math.imul(al1, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh2)) | 0) + Math.imul(ah1, bl2)) | 0),
                        (hi = (hi + Math.imul(ah1, bh2)) | 0);
                    var w3 = (((c + (lo = (lo + Math.imul(al0, bl3)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh3)) | 0) + Math.imul(ah0, bl3)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh3)) | 0) + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0),
                        (w3 &= 67108863),
                        (lo = Math.imul(al4, bl0)),
                        (mid = ((mid = Math.imul(al4, bh0)) + Math.imul(ah4, bl0)) | 0),
                        (hi = Math.imul(ah4, bh0)),
                        (lo = (lo + Math.imul(al3, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh1)) | 0) + Math.imul(ah3, bl1)) | 0),
                        (hi = (hi + Math.imul(ah3, bh1)) | 0),
                        (lo = (lo + Math.imul(al2, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh2)) | 0) + Math.imul(ah2, bl2)) | 0),
                        (hi = (hi + Math.imul(ah2, bh2)) | 0),
                        (lo = (lo + Math.imul(al1, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh3)) | 0) + Math.imul(ah1, bl3)) | 0),
                        (hi = (hi + Math.imul(ah1, bh3)) | 0);
                    var w4 = (((c + (lo = (lo + Math.imul(al0, bl4)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh4)) | 0) + Math.imul(ah0, bl4)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh4)) | 0) + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0),
                        (w4 &= 67108863),
                        (lo = Math.imul(al5, bl0)),
                        (mid = ((mid = Math.imul(al5, bh0)) + Math.imul(ah5, bl0)) | 0),
                        (hi = Math.imul(ah5, bh0)),
                        (lo = (lo + Math.imul(al4, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh1)) | 0) + Math.imul(ah4, bl1)) | 0),
                        (hi = (hi + Math.imul(ah4, bh1)) | 0),
                        (lo = (lo + Math.imul(al3, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh2)) | 0) + Math.imul(ah3, bl2)) | 0),
                        (hi = (hi + Math.imul(ah3, bh2)) | 0),
                        (lo = (lo + Math.imul(al2, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh3)) | 0) + Math.imul(ah2, bl3)) | 0),
                        (hi = (hi + Math.imul(ah2, bh3)) | 0),
                        (lo = (lo + Math.imul(al1, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh4)) | 0) + Math.imul(ah1, bl4)) | 0),
                        (hi = (hi + Math.imul(ah1, bh4)) | 0);
                    var w5 = (((c + (lo = (lo + Math.imul(al0, bl5)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh5)) | 0) + Math.imul(ah0, bl5)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh5)) | 0) + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0),
                        (w5 &= 67108863),
                        (lo = Math.imul(al6, bl0)),
                        (mid = ((mid = Math.imul(al6, bh0)) + Math.imul(ah6, bl0)) | 0),
                        (hi = Math.imul(ah6, bh0)),
                        (lo = (lo + Math.imul(al5, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh1)) | 0) + Math.imul(ah5, bl1)) | 0),
                        (hi = (hi + Math.imul(ah5, bh1)) | 0),
                        (lo = (lo + Math.imul(al4, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh2)) | 0) + Math.imul(ah4, bl2)) | 0),
                        (hi = (hi + Math.imul(ah4, bh2)) | 0),
                        (lo = (lo + Math.imul(al3, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh3)) | 0) + Math.imul(ah3, bl3)) | 0),
                        (hi = (hi + Math.imul(ah3, bh3)) | 0),
                        (lo = (lo + Math.imul(al2, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh4)) | 0) + Math.imul(ah2, bl4)) | 0),
                        (hi = (hi + Math.imul(ah2, bh4)) | 0),
                        (lo = (lo + Math.imul(al1, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh5)) | 0) + Math.imul(ah1, bl5)) | 0),
                        (hi = (hi + Math.imul(ah1, bh5)) | 0);
                    var w6 = (((c + (lo = (lo + Math.imul(al0, bl6)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh6)) | 0) + Math.imul(ah0, bl6)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh6)) | 0) + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0),
                        (w6 &= 67108863),
                        (lo = Math.imul(al7, bl0)),
                        (mid = ((mid = Math.imul(al7, bh0)) + Math.imul(ah7, bl0)) | 0),
                        (hi = Math.imul(ah7, bh0)),
                        (lo = (lo + Math.imul(al6, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh1)) | 0) + Math.imul(ah6, bl1)) | 0),
                        (hi = (hi + Math.imul(ah6, bh1)) | 0),
                        (lo = (lo + Math.imul(al5, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh2)) | 0) + Math.imul(ah5, bl2)) | 0),
                        (hi = (hi + Math.imul(ah5, bh2)) | 0),
                        (lo = (lo + Math.imul(al4, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh3)) | 0) + Math.imul(ah4, bl3)) | 0),
                        (hi = (hi + Math.imul(ah4, bh3)) | 0),
                        (lo = (lo + Math.imul(al3, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh4)) | 0) + Math.imul(ah3, bl4)) | 0),
                        (hi = (hi + Math.imul(ah3, bh4)) | 0),
                        (lo = (lo + Math.imul(al2, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh5)) | 0) + Math.imul(ah2, bl5)) | 0),
                        (hi = (hi + Math.imul(ah2, bh5)) | 0),
                        (lo = (lo + Math.imul(al1, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh6)) | 0) + Math.imul(ah1, bl6)) | 0),
                        (hi = (hi + Math.imul(ah1, bh6)) | 0);
                    var w7 = (((c + (lo = (lo + Math.imul(al0, bl7)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh7)) | 0) + Math.imul(ah0, bl7)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh7)) | 0) + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0),
                        (w7 &= 67108863),
                        (lo = Math.imul(al8, bl0)),
                        (mid = ((mid = Math.imul(al8, bh0)) + Math.imul(ah8, bl0)) | 0),
                        (hi = Math.imul(ah8, bh0)),
                        (lo = (lo + Math.imul(al7, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh1)) | 0) + Math.imul(ah7, bl1)) | 0),
                        (hi = (hi + Math.imul(ah7, bh1)) | 0),
                        (lo = (lo + Math.imul(al6, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh2)) | 0) + Math.imul(ah6, bl2)) | 0),
                        (hi = (hi + Math.imul(ah6, bh2)) | 0),
                        (lo = (lo + Math.imul(al5, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh3)) | 0) + Math.imul(ah5, bl3)) | 0),
                        (hi = (hi + Math.imul(ah5, bh3)) | 0),
                        (lo = (lo + Math.imul(al4, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh4)) | 0) + Math.imul(ah4, bl4)) | 0),
                        (hi = (hi + Math.imul(ah4, bh4)) | 0),
                        (lo = (lo + Math.imul(al3, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh5)) | 0) + Math.imul(ah3, bl5)) | 0),
                        (hi = (hi + Math.imul(ah3, bh5)) | 0),
                        (lo = (lo + Math.imul(al2, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh6)) | 0) + Math.imul(ah2, bl6)) | 0),
                        (hi = (hi + Math.imul(ah2, bh6)) | 0),
                        (lo = (lo + Math.imul(al1, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh7)) | 0) + Math.imul(ah1, bl7)) | 0),
                        (hi = (hi + Math.imul(ah1, bh7)) | 0);
                    var w8 = (((c + (lo = (lo + Math.imul(al0, bl8)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh8)) | 0) + Math.imul(ah0, bl8)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh8)) | 0) + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0),
                        (w8 &= 67108863),
                        (lo = Math.imul(al9, bl0)),
                        (mid = ((mid = Math.imul(al9, bh0)) + Math.imul(ah9, bl0)) | 0),
                        (hi = Math.imul(ah9, bh0)),
                        (lo = (lo + Math.imul(al8, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh1)) | 0) + Math.imul(ah8, bl1)) | 0),
                        (hi = (hi + Math.imul(ah8, bh1)) | 0),
                        (lo = (lo + Math.imul(al7, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh2)) | 0) + Math.imul(ah7, bl2)) | 0),
                        (hi = (hi + Math.imul(ah7, bh2)) | 0),
                        (lo = (lo + Math.imul(al6, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh3)) | 0) + Math.imul(ah6, bl3)) | 0),
                        (hi = (hi + Math.imul(ah6, bh3)) | 0),
                        (lo = (lo + Math.imul(al5, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh4)) | 0) + Math.imul(ah5, bl4)) | 0),
                        (hi = (hi + Math.imul(ah5, bh4)) | 0),
                        (lo = (lo + Math.imul(al4, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh5)) | 0) + Math.imul(ah4, bl5)) | 0),
                        (hi = (hi + Math.imul(ah4, bh5)) | 0),
                        (lo = (lo + Math.imul(al3, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh6)) | 0) + Math.imul(ah3, bl6)) | 0),
                        (hi = (hi + Math.imul(ah3, bh6)) | 0),
                        (lo = (lo + Math.imul(al2, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh7)) | 0) + Math.imul(ah2, bl7)) | 0),
                        (hi = (hi + Math.imul(ah2, bh7)) | 0),
                        (lo = (lo + Math.imul(al1, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh8)) | 0) + Math.imul(ah1, bl8)) | 0),
                        (hi = (hi + Math.imul(ah1, bh8)) | 0);
                    var w9 = (((c + (lo = (lo + Math.imul(al0, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh9)) | 0) + Math.imul(ah0, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh9)) | 0) + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0),
                        (w9 &= 67108863),
                        (lo = Math.imul(al9, bl1)),
                        (mid = ((mid = Math.imul(al9, bh1)) + Math.imul(ah9, bl1)) | 0),
                        (hi = Math.imul(ah9, bh1)),
                        (lo = (lo + Math.imul(al8, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh2)) | 0) + Math.imul(ah8, bl2)) | 0),
                        (hi = (hi + Math.imul(ah8, bh2)) | 0),
                        (lo = (lo + Math.imul(al7, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh3)) | 0) + Math.imul(ah7, bl3)) | 0),
                        (hi = (hi + Math.imul(ah7, bh3)) | 0),
                        (lo = (lo + Math.imul(al6, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh4)) | 0) + Math.imul(ah6, bl4)) | 0),
                        (hi = (hi + Math.imul(ah6, bh4)) | 0),
                        (lo = (lo + Math.imul(al5, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh5)) | 0) + Math.imul(ah5, bl5)) | 0),
                        (hi = (hi + Math.imul(ah5, bh5)) | 0),
                        (lo = (lo + Math.imul(al4, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh6)) | 0) + Math.imul(ah4, bl6)) | 0),
                        (hi = (hi + Math.imul(ah4, bh6)) | 0),
                        (lo = (lo + Math.imul(al3, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh7)) | 0) + Math.imul(ah3, bl7)) | 0),
                        (hi = (hi + Math.imul(ah3, bh7)) | 0),
                        (lo = (lo + Math.imul(al2, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh8)) | 0) + Math.imul(ah2, bl8)) | 0),
                        (hi = (hi + Math.imul(ah2, bh8)) | 0);
                    var w10 = (((c + (lo = (lo + Math.imul(al1, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al1, bh9)) | 0) + Math.imul(ah1, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah1, bh9)) | 0) + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0),
                        (w10 &= 67108863),
                        (lo = Math.imul(al9, bl2)),
                        (mid = ((mid = Math.imul(al9, bh2)) + Math.imul(ah9, bl2)) | 0),
                        (hi = Math.imul(ah9, bh2)),
                        (lo = (lo + Math.imul(al8, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh3)) | 0) + Math.imul(ah8, bl3)) | 0),
                        (hi = (hi + Math.imul(ah8, bh3)) | 0),
                        (lo = (lo + Math.imul(al7, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh4)) | 0) + Math.imul(ah7, bl4)) | 0),
                        (hi = (hi + Math.imul(ah7, bh4)) | 0),
                        (lo = (lo + Math.imul(al6, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh5)) | 0) + Math.imul(ah6, bl5)) | 0),
                        (hi = (hi + Math.imul(ah6, bh5)) | 0),
                        (lo = (lo + Math.imul(al5, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh6)) | 0) + Math.imul(ah5, bl6)) | 0),
                        (hi = (hi + Math.imul(ah5, bh6)) | 0),
                        (lo = (lo + Math.imul(al4, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh7)) | 0) + Math.imul(ah4, bl7)) | 0),
                        (hi = (hi + Math.imul(ah4, bh7)) | 0),
                        (lo = (lo + Math.imul(al3, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh8)) | 0) + Math.imul(ah3, bl8)) | 0),
                        (hi = (hi + Math.imul(ah3, bh8)) | 0);
                    var w11 = (((c + (lo = (lo + Math.imul(al2, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al2, bh9)) | 0) + Math.imul(ah2, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah2, bh9)) | 0) + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0),
                        (w11 &= 67108863),
                        (lo = Math.imul(al9, bl3)),
                        (mid = ((mid = Math.imul(al9, bh3)) + Math.imul(ah9, bl3)) | 0),
                        (hi = Math.imul(ah9, bh3)),
                        (lo = (lo + Math.imul(al8, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh4)) | 0) + Math.imul(ah8, bl4)) | 0),
                        (hi = (hi + Math.imul(ah8, bh4)) | 0),
                        (lo = (lo + Math.imul(al7, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh5)) | 0) + Math.imul(ah7, bl5)) | 0),
                        (hi = (hi + Math.imul(ah7, bh5)) | 0),
                        (lo = (lo + Math.imul(al6, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh6)) | 0) + Math.imul(ah6, bl6)) | 0),
                        (hi = (hi + Math.imul(ah6, bh6)) | 0),
                        (lo = (lo + Math.imul(al5, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh7)) | 0) + Math.imul(ah5, bl7)) | 0),
                        (hi = (hi + Math.imul(ah5, bh7)) | 0),
                        (lo = (lo + Math.imul(al4, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh8)) | 0) + Math.imul(ah4, bl8)) | 0),
                        (hi = (hi + Math.imul(ah4, bh8)) | 0);
                    var w12 = (((c + (lo = (lo + Math.imul(al3, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al3, bh9)) | 0) + Math.imul(ah3, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah3, bh9)) | 0) + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0),
                        (w12 &= 67108863),
                        (lo = Math.imul(al9, bl4)),
                        (mid = ((mid = Math.imul(al9, bh4)) + Math.imul(ah9, bl4)) | 0),
                        (hi = Math.imul(ah9, bh4)),
                        (lo = (lo + Math.imul(al8, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh5)) | 0) + Math.imul(ah8, bl5)) | 0),
                        (hi = (hi + Math.imul(ah8, bh5)) | 0),
                        (lo = (lo + Math.imul(al7, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh6)) | 0) + Math.imul(ah7, bl6)) | 0),
                        (hi = (hi + Math.imul(ah7, bh6)) | 0),
                        (lo = (lo + Math.imul(al6, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh7)) | 0) + Math.imul(ah6, bl7)) | 0),
                        (hi = (hi + Math.imul(ah6, bh7)) | 0),
                        (lo = (lo + Math.imul(al5, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh8)) | 0) + Math.imul(ah5, bl8)) | 0),
                        (hi = (hi + Math.imul(ah5, bh8)) | 0);
                    var w13 = (((c + (lo = (lo + Math.imul(al4, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al4, bh9)) | 0) + Math.imul(ah4, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah4, bh9)) | 0) + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0),
                        (w13 &= 67108863),
                        (lo = Math.imul(al9, bl5)),
                        (mid = ((mid = Math.imul(al9, bh5)) + Math.imul(ah9, bl5)) | 0),
                        (hi = Math.imul(ah9, bh5)),
                        (lo = (lo + Math.imul(al8, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh6)) | 0) + Math.imul(ah8, bl6)) | 0),
                        (hi = (hi + Math.imul(ah8, bh6)) | 0),
                        (lo = (lo + Math.imul(al7, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh7)) | 0) + Math.imul(ah7, bl7)) | 0),
                        (hi = (hi + Math.imul(ah7, bh7)) | 0),
                        (lo = (lo + Math.imul(al6, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh8)) | 0) + Math.imul(ah6, bl8)) | 0),
                        (hi = (hi + Math.imul(ah6, bh8)) | 0);
                    var w14 = (((c + (lo = (lo + Math.imul(al5, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al5, bh9)) | 0) + Math.imul(ah5, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah5, bh9)) | 0) + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0),
                        (w14 &= 67108863),
                        (lo = Math.imul(al9, bl6)),
                        (mid = ((mid = Math.imul(al9, bh6)) + Math.imul(ah9, bl6)) | 0),
                        (hi = Math.imul(ah9, bh6)),
                        (lo = (lo + Math.imul(al8, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh7)) | 0) + Math.imul(ah8, bl7)) | 0),
                        (hi = (hi + Math.imul(ah8, bh7)) | 0),
                        (lo = (lo + Math.imul(al7, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh8)) | 0) + Math.imul(ah7, bl8)) | 0),
                        (hi = (hi + Math.imul(ah7, bh8)) | 0);
                    var w15 = (((c + (lo = (lo + Math.imul(al6, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al6, bh9)) | 0) + Math.imul(ah6, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah6, bh9)) | 0) + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0),
                        (w15 &= 67108863),
                        (lo = Math.imul(al9, bl7)),
                        (mid = ((mid = Math.imul(al9, bh7)) + Math.imul(ah9, bl7)) | 0),
                        (hi = Math.imul(ah9, bh7)),
                        (lo = (lo + Math.imul(al8, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh8)) | 0) + Math.imul(ah8, bl8)) | 0),
                        (hi = (hi + Math.imul(ah8, bh8)) | 0);
                    var w16 = (((c + (lo = (lo + Math.imul(al7, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al7, bh9)) | 0) + Math.imul(ah7, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah7, bh9)) | 0) + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0),
                        (w16 &= 67108863),
                        (lo = Math.imul(al9, bl8)),
                        (mid = ((mid = Math.imul(al9, bh8)) + Math.imul(ah9, bl8)) | 0),
                        (hi = Math.imul(ah9, bh8));
                    var w17 = (((c + (lo = (lo + Math.imul(al8, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al8, bh9)) | 0) + Math.imul(ah8, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah8, bh9)) | 0) + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0), (w17 &= 67108863);
                    var w18 = (((c + (lo = Math.imul(al9, bl9))) | 0) + ((8191 & (mid = ((mid = Math.imul(al9, bh9)) + Math.imul(ah9, bl9)) | 0)) << 13)) | 0;
                    return (
                        (c = ((((hi = Math.imul(ah9, bh9)) + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0),
                        (w18 &= 67108863),
                        (o[0] = w0),
                        (o[1] = w1),
                        (o[2] = w2),
                        (o[3] = w3),
                        (o[4] = w4),
                        (o[5] = w5),
                        (o[6] = w6),
                        (o[7] = w7),
                        (o[8] = w8),
                        (o[9] = w9),
                        (o[10] = w10),
                        (o[11] = w11),
                        (o[12] = w12),
                        (o[13] = w13),
                        (o[14] = w14),
                        (o[15] = w15),
                        (o[16] = w16),
                        (o[17] = w17),
                        (o[18] = w18),
                        0 !== c && ((o[19] = c), out.length++),
                        out
                    );
                };
                function jumboMulTo(self1, num, out) {
                    return new FFTM().mulp(self1, num, out);
                }
                function FFTM(x, y) {
                    (this.x = x), (this.y = y);
                }
                Math.imul || (comb10MulTo = smallMulTo),
                    (BN.prototype.mulTo = function (num, out) {
                        var len = this.length + num.length;
                        return 10 === this.length && 10 === num.length
                            ? comb10MulTo(this, num, out)
                            : len < 63
                            ? smallMulTo(this, num, out)
                            : len < 1024
                            ? (function (self1, num, out) {
                                  (out.negative = num.negative ^ self1.negative), (out.length = self1.length + num.length);
                                  for (var carry = 0, hncarry = 0, k = 0; k < out.length - 1; k++) {
                                      var ncarry = hncarry;
                                      hncarry = 0;
                                      for (var rword = 67108863 & carry, maxJ = Math.min(k, num.length - 1), j = Math.max(0, k - self1.length + 1); j <= maxJ; j++) {
                                          var i = k - j,
                                              r = (0 | self1.words[i]) * (0 | num.words[j]),
                                              lo = 67108863 & r;
                                          (ncarry = (ncarry + ((r / 67108864) | 0)) | 0), (rword = 67108863 & (lo = (lo + rword) | 0)), (hncarry += (ncarry = (ncarry + (lo >>> 26)) | 0) >>> 26), (ncarry &= 67108863);
                                      }
                                      (out.words[k] = rword), (carry = ncarry), (ncarry = hncarry);
                                  }
                                  return 0 !== carry ? (out.words[k] = carry) : out.length--, out.strip();
                              })(this, num, out)
                            : jumboMulTo(this, num, out);
                    }),
                    (FFTM.prototype.makeRBT = function (N) {
                        for (var t = Array(N), l = BN.prototype._countBits(N) - 1, i = 0; i < N; i++) t[i] = this.revBin(i, l, N);
                        return t;
                    }),
                    (FFTM.prototype.revBin = function (x, l, N) {
                        if (0 === x || x === N - 1) return x;
                        for (var rb = 0, i = 0; i < l; i++) (rb |= (1 & x) << (l - i - 1)), (x >>= 1);
                        return rb;
                    }),
                    (FFTM.prototype.permute = function (rbt, rws, iws, rtws, itws, N) {
                        for (var i = 0; i < N; i++) (rtws[i] = rws[rbt[i]]), (itws[i] = iws[rbt[i]]);
                    }),
                    (FFTM.prototype.transform = function (rws, iws, rtws, itws, N, rbt) {
                        this.permute(rbt, rws, iws, rtws, itws, N);
                        for (var s = 1; s < N; s <<= 1)
                            for (var l = s << 1, rtwdf = Math.cos((2 * Math.PI) / l), itwdf = Math.sin((2 * Math.PI) / l), p = 0; p < N; p += l)
                                for (var rtwdf_ = rtwdf, itwdf_ = itwdf, j = 0; j < s; j++) {
                                    var re = rtws[p + j],
                                        ie = itws[p + j],
                                        ro = rtws[p + j + s],
                                        io = itws[p + j + s],
                                        rx = rtwdf_ * ro - itwdf_ * io;
                                    (io = rtwdf_ * io + itwdf_ * ro),
                                        (ro = rx),
                                        (rtws[p + j] = re + ro),
                                        (itws[p + j] = ie + io),
                                        (rtws[p + j + s] = re - ro),
                                        (itws[p + j + s] = ie - io),
                                        j !== l && ((rx = rtwdf * rtwdf_ - itwdf * itwdf_), (itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_), (rtwdf_ = rx));
                                }
                    }),
                    (FFTM.prototype.guessLen13b = function (n, m) {
                        var N = 1 | Math.max(m, n),
                            odd = 1 & N,
                            i = 0;
                        for (N = (N / 2) | 0; N; N >>>= 1) i++;
                        return 1 << (i + 1 + odd);
                    }),
                    (FFTM.prototype.conjugate = function (rws, iws, N) {
                        if (!(N <= 1))
                            for (var i = 0; i < N / 2; i++) {
                                var t = rws[i];
                                (rws[i] = rws[N - i - 1]), (rws[N - i - 1] = t), (t = iws[i]), (iws[i] = -iws[N - i - 1]), (iws[N - i - 1] = -t);
                            }
                    }),
                    (FFTM.prototype.normalize13b = function (ws, N) {
                        for (var carry = 0, i = 0; i < N / 2; i++) {
                            var w = 8192 * Math.round(ws[2 * i + 1] / N) + Math.round(ws[2 * i] / N) + carry;
                            (ws[i] = 67108863 & w), (carry = w < 67108864 ? 0 : (w / 67108864) | 0);
                        }
                        return ws;
                    }),
                    (FFTM.prototype.convert13b = function (ws, len, rws, N) {
                        for (var carry = 0, i = 0; i < len; i++) (carry += 0 | ws[i]), (rws[2 * i] = 8191 & carry), (carry >>>= 13), (rws[2 * i + 1] = 8191 & carry), (carry >>>= 13);
                        for (i = 2 * len; i < N; ++i) rws[i] = 0;
                        assert(0 === carry), assert((-8192 & carry) == 0);
                    }),
                    (FFTM.prototype.stub = function (N) {
                        for (var ph = Array(N), i = 0; i < N; i++) ph[i] = 0;
                        return ph;
                    }),
                    (FFTM.prototype.mulp = function (x, y, out) {
                        var N = 2 * this.guessLen13b(x.length, y.length),
                            rbt = this.makeRBT(N),
                            _ = this.stub(N),
                            rws = Array(N),
                            rwst = Array(N),
                            iwst = Array(N),
                            nrws = Array(N),
                            nrwst = Array(N),
                            niwst = Array(N),
                            rmws = out.words;
                        (rmws.length = N), this.convert13b(x.words, x.length, rws, N), this.convert13b(y.words, y.length, nrws, N), this.transform(rws, _, rwst, iwst, N, rbt), this.transform(nrws, _, nrwst, niwst, N, rbt);
                        for (var i = 0; i < N; i++) {
                            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
                            (iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i]), (rwst[i] = rx);
                        }
                        return (
                            this.conjugate(rwst, iwst, N),
                            this.transform(rwst, iwst, rmws, _, N, rbt),
                            this.conjugate(rmws, _, N),
                            this.normalize13b(rmws, N),
                            (out.negative = x.negative ^ y.negative),
                            (out.length = x.length + y.length),
                            out.strip()
                        );
                    }),
                    (BN.prototype.mul = function (num) {
                        var out = new BN(null);
                        return (out.words = Array(this.length + num.length)), this.mulTo(num, out);
                    }),
                    (BN.prototype.mulf = function (num) {
                        var out = new BN(null);
                        return (out.words = Array(this.length + num.length)), jumboMulTo(this, num, out);
                    }),
                    (BN.prototype.imul = function (num) {
                        return this.clone().mulTo(num, this);
                    }),
                    (BN.prototype.imuln = function (num) {
                        assert("number" == typeof num), assert(num < 67108864);
                        for (var carry = 0, i = 0; i < this.length; i++) {
                            var w = (0 | this.words[i]) * num,
                                lo = (67108863 & w) + (67108863 & carry);
                            (carry >>= 26), (carry = ((w / 67108864) | 0) + (lo >>> 26)), (this.words[i] = 67108863 & lo);
                        }
                        return 0 !== carry && ((this.words[i] = carry), this.length++), this;
                    }),
                    (BN.prototype.muln = function (num) {
                        return this.clone().imuln(num);
                    }),
                    (BN.prototype.sqr = function () {
                        return this.mul(this);
                    }),
                    (BN.prototype.isqr = function () {
                        return this.imul(this.clone());
                    }),
                    (BN.prototype.pow = function (num) {
                        var w = (function (num) {
                            for (var w = Array(num.bitLength()), bit = 0; bit < w.length; bit++) {
                                var off = (bit / 26) | 0,
                                    wbit = bit % 26;
                                w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
                            }
                            return w;
                        })(num);
                        if (0 === w.length) return new BN(1);
                        for (var res = this, i = 0; i < w.length && 0 === w[i]; i++, res = res.sqr());
                        if (++i < w.length) for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) 0 !== w[i] && (res = res.mul(q));
                        return res;
                    }),
                    (BN.prototype.iushln = function (bits) {
                        assert("number" == typeof bits && bits >= 0);
                        var i,
                            r = bits % 26,
                            s = (bits - r) / 26,
                            carryMask = (67108863 >>> (26 - r)) << (26 - r);
                        if (0 !== r) {
                            var carry = 0;
                            for (i = 0; i < this.length; i++) {
                                var newCarry = this.words[i] & carryMask,
                                    c = ((0 | this.words[i]) - newCarry) << r;
                                (this.words[i] = c | carry), (carry = newCarry >>> (26 - r));
                            }
                            carry && ((this.words[i] = carry), this.length++);
                        }
                        if (0 !== s) {
                            for (i = this.length - 1; i >= 0; i--) this.words[i + s] = this.words[i];
                            for (i = 0; i < s; i++) this.words[i] = 0;
                            this.length += s;
                        }
                        return this.strip();
                    }),
                    (BN.prototype.ishln = function (bits) {
                        return assert(0 === this.negative), this.iushln(bits);
                    }),
                    (BN.prototype.iushrn = function (bits, hint, extended) {
                        assert("number" == typeof bits && bits >= 0), (h = hint ? (hint - (hint % 26)) / 26 : 0);
                        var h,
                            r = bits % 26,
                            s = Math.min((bits - r) / 26, this.length),
                            mask = 67108863 ^ ((67108863 >>> r) << r),
                            maskedWords = extended;
                        if (((h -= s), (h = Math.max(0, h)), maskedWords)) {
                            for (var i = 0; i < s; i++) maskedWords.words[i] = this.words[i];
                            maskedWords.length = s;
                        }
                        if (0 === s);
                        else if (this.length > s) for (this.length -= s, i = 0; i < this.length; i++) this.words[i] = this.words[i + s];
                        else (this.words[0] = 0), (this.length = 1);
                        var carry = 0;
                        for (i = this.length - 1; i >= 0 && (0 !== carry || i >= h); i--) {
                            var word = 0 | this.words[i];
                            (this.words[i] = (carry << (26 - r)) | (word >>> r)), (carry = word & mask);
                        }
                        return maskedWords && 0 !== carry && (maskedWords.words[maskedWords.length++] = carry), 0 === this.length && ((this.words[0] = 0), (this.length = 1)), this.strip();
                    }),
                    (BN.prototype.ishrn = function (bits, hint, extended) {
                        return assert(0 === this.negative), this.iushrn(bits, hint, extended);
                    }),
                    (BN.prototype.shln = function (bits) {
                        return this.clone().ishln(bits);
                    }),
                    (BN.prototype.ushln = function (bits) {
                        return this.clone().iushln(bits);
                    }),
                    (BN.prototype.shrn = function (bits) {
                        return this.clone().ishrn(bits);
                    }),
                    (BN.prototype.ushrn = function (bits) {
                        return this.clone().iushrn(bits);
                    }),
                    (BN.prototype.testn = function (bit) {
                        assert("number" == typeof bit && bit >= 0);
                        var r = bit % 26,
                            s = (bit - r) / 26;
                        return !(this.length <= s) && !!(this.words[s] & (1 << r));
                    }),
                    (BN.prototype.imaskn = function (bits) {
                        assert("number" == typeof bits && bits >= 0);
                        var r = bits % 26,
                            s = (bits - r) / 26;
                        return (assert(0 === this.negative, "imaskn works only with positive numbers"), this.length <= s)
                            ? this
                            : (0 !== r && s++, (this.length = Math.min(s, this.length)), 0 !== r && (this.words[this.length - 1] &= 67108863 ^ ((67108863 >>> r) << r)), this.strip());
                    }),
                    (BN.prototype.maskn = function (bits) {
                        return this.clone().imaskn(bits);
                    }),
                    (BN.prototype.iaddn = function (num) {
                        return (assert("number" == typeof num), assert(num < 67108864), num < 0)
                            ? this.isubn(-num)
                            : 0 !== this.negative
                            ? 1 === this.length && (0 | this.words[0]) < num
                                ? ((this.words[0] = num - (0 | this.words[0])), (this.negative = 0), this)
                                : ((this.negative = 0), this.isubn(num), (this.negative = 1), this)
                            : this._iaddn(num);
                    }),
                    (BN.prototype._iaddn = function (num) {
                        this.words[0] += num;
                        for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) (this.words[i] -= 67108864), i === this.length - 1 ? (this.words[i + 1] = 1) : this.words[i + 1]++;
                        return (this.length = Math.max(this.length, i + 1)), this;
                    }),
                    (BN.prototype.isubn = function (num) {
                        if ((assert("number" == typeof num), assert(num < 67108864), num < 0)) return this.iaddn(-num);
                        if (0 !== this.negative) return (this.negative = 0), this.iaddn(num), (this.negative = 1), this;
                        if (((this.words[0] -= num), 1 === this.length && this.words[0] < 0)) (this.words[0] = -this.words[0]), (this.negative = 1);
                        else for (var i = 0; i < this.length && this.words[i] < 0; i++) (this.words[i] += 67108864), (this.words[i + 1] -= 1);
                        return this.strip();
                    }),
                    (BN.prototype.addn = function (num) {
                        return this.clone().iaddn(num);
                    }),
                    (BN.prototype.subn = function (num) {
                        return this.clone().isubn(num);
                    }),
                    (BN.prototype.iabs = function () {
                        return (this.negative = 0), this;
                    }),
                    (BN.prototype.abs = function () {
                        return this.clone().iabs();
                    }),
                    (BN.prototype._ishlnsubmul = function (num, mul, shift) {
                        var i,
                            w,
                            len = num.length + shift;
                        this._expand(len);
                        var carry = 0;
                        for (i = 0; i < num.length; i++) {
                            w = (0 | this.words[i + shift]) + carry;
                            var right = (0 | num.words[i]) * mul;
                            (w -= 67108863 & right), (carry = (w >> 26) - ((right / 67108864) | 0)), (this.words[i + shift] = 67108863 & w);
                        }
                        for (; i < this.length - shift; i++) (carry = (w = (0 | this.words[i + shift]) + carry) >> 26), (this.words[i + shift] = 67108863 & w);
                        if (0 === carry) return this.strip();
                        for (assert(-1 === carry), carry = 0, i = 0; i < this.length; i++) (carry = (w = -(0 | this.words[i]) + carry) >> 26), (this.words[i] = 67108863 & w);
                        return (this.negative = 1), this.strip();
                    }),
                    (BN.prototype._wordDiv = function (num, mode) {
                        var q,
                            shift = this.length - num.length,
                            a = this.clone(),
                            b = num,
                            bhi = 0 | b.words[b.length - 1];
                        0 != (shift = 26 - this._countBits(bhi)) && ((b = b.ushln(shift)), a.iushln(shift), (bhi = 0 | b.words[b.length - 1]));
                        var m = a.length - b.length;
                        if ("mod" !== mode) {
                            ((q = new BN(null)).length = m + 1), (q.words = Array(q.length));
                            for (var i = 0; i < q.length; i++) q.words[i] = 0;
                        }
                        var diff = a.clone()._ishlnsubmul(b, 1, m);
                        0 === diff.negative && ((a = diff), q && (q.words[m] = 1));
                        for (var j = m - 1; j >= 0; j--) {
                            var qj = (0 | a.words[b.length + j]) * 67108864 + (0 | a.words[b.length + j - 1]);
                            for (qj = Math.min((qj / bhi) | 0, 67108863), a._ishlnsubmul(b, qj, j); 0 !== a.negative; ) qj--, (a.negative = 0), a._ishlnsubmul(b, 1, j), a.isZero() || (a.negative ^= 1);
                            q && (q.words[j] = qj);
                        }
                        return q && q.strip(), a.strip(), "div" !== mode && 0 !== shift && a.iushrn(shift), { div: q || null, mod: a };
                    }),
                    (BN.prototype.divmod = function (num, mode, positive) {
                        var div, mod, res;
                        return (assert(!num.isZero()), this.isZero())
                            ? { div: new BN(0), mod: new BN(0) }
                            : 0 !== this.negative && 0 === num.negative
                            ? ((res = this.neg().divmod(num, mode)), "mod" !== mode && (div = res.div.neg()), "div" !== mode && ((mod = res.mod.neg()), positive && 0 !== mod.negative && mod.iadd(num)), { div: div, mod: mod })
                            : 0 === this.negative && 0 !== num.negative
                            ? ((res = this.divmod(num.neg(), mode)), "mod" !== mode && (div = res.div.neg()), { div: div, mod: res.mod })
                            : (this.negative & num.negative) != 0
                            ? ((res = this.neg().divmod(num.neg(), mode)), "div" !== mode && ((mod = res.mod.neg()), positive && 0 !== mod.negative && mod.isub(num)), { div: res.div, mod: mod })
                            : num.length > this.length || 0 > this.cmp(num)
                            ? { div: new BN(0), mod: this }
                            : 1 === num.length
                            ? "div" === mode
                                ? { div: this.divn(num.words[0]), mod: null }
                                : "mod" === mode
                                ? { div: null, mod: new BN(this.modn(num.words[0])) }
                                : { div: this.divn(num.words[0]), mod: new BN(this.modn(num.words[0])) }
                            : this._wordDiv(num, mode);
                    }),
                    (BN.prototype.div = function (num) {
                        return this.divmod(num, "div", !1).div;
                    }),
                    (BN.prototype.mod = function (num) {
                        return this.divmod(num, "mod", !1).mod;
                    }),
                    (BN.prototype.umod = function (num) {
                        return this.divmod(num, "mod", !0).mod;
                    }),
                    (BN.prototype.divRound = function (num) {
                        var dm = this.divmod(num);
                        if (dm.mod.isZero()) return dm.div;
                        var mod = 0 !== dm.div.negative ? dm.mod.isub(num) : dm.mod,
                            half = num.ushrn(1),
                            r2 = num.andln(1),
                            cmp = mod.cmp(half);
                        return cmp < 0 || (1 === r2 && 0 === cmp) ? dm.div : 0 !== dm.div.negative ? dm.div.isubn(1) : dm.div.iaddn(1);
                    }),
                    (BN.prototype.modn = function (num) {
                        assert(num <= 67108863);
                        for (var p = 67108864 % num, acc = 0, i = this.length - 1; i >= 0; i--) acc = (p * acc + (0 | this.words[i])) % num;
                        return acc;
                    }),
                    (BN.prototype.idivn = function (num) {
                        assert(num <= 67108863);
                        for (var carry = 0, i = this.length - 1; i >= 0; i--) {
                            var w = (0 | this.words[i]) + 67108864 * carry;
                            (this.words[i] = (w / num) | 0), (carry = w % num);
                        }
                        return this.strip();
                    }),
                    (BN.prototype.divn = function (num) {
                        return this.clone().idivn(num);
                    }),
                    (BN.prototype.egcd = function (p) {
                        assert(0 === p.negative), assert(!p.isZero());
                        var x = this,
                            y = p.clone();
                        x = 0 !== x.negative ? x.umod(p) : x.clone();
                        for (var A = new BN(1), B = new BN(0), C = new BN(0), D = new BN(1), g = 0; x.isEven() && y.isEven(); ) x.iushrn(1), y.iushrn(1), ++g;
                        for (var yp = y.clone(), xp = x.clone(); !x.isZero(); ) {
                            for (var i = 0, im = 1; (x.words[0] & im) == 0 && i < 26; ++i, im <<= 1);
                            if (i > 0) for (x.iushrn(i); i-- > 0; ) (A.isOdd() || B.isOdd()) && (A.iadd(yp), B.isub(xp)), A.iushrn(1), B.iushrn(1);
                            for (var j = 0, jm = 1; (y.words[0] & jm) == 0 && j < 26; ++j, jm <<= 1);
                            if (j > 0) for (y.iushrn(j); j-- > 0; ) (C.isOdd() || D.isOdd()) && (C.iadd(yp), D.isub(xp)), C.iushrn(1), D.iushrn(1);
                            x.cmp(y) >= 0 ? (x.isub(y), A.isub(C), B.isub(D)) : (y.isub(x), C.isub(A), D.isub(B));
                        }
                        return { a: C, b: D, gcd: y.iushln(g) };
                    }),
                    (BN.prototype._invmp = function (p) {
                        assert(0 === p.negative), assert(!p.isZero());
                        var res,
                            a = this,
                            b = p.clone();
                        a = 0 !== a.negative ? a.umod(p) : a.clone();
                        for (var x1 = new BN(1), x2 = new BN(0), delta = b.clone(); a.cmpn(1) > 0 && b.cmpn(1) > 0; ) {
                            for (var i = 0, im = 1; (a.words[0] & im) == 0 && i < 26; ++i, im <<= 1);
                            if (i > 0) for (a.iushrn(i); i-- > 0; ) x1.isOdd() && x1.iadd(delta), x1.iushrn(1);
                            for (var j = 0, jm = 1; (b.words[0] & jm) == 0 && j < 26; ++j, jm <<= 1);
                            if (j > 0) for (b.iushrn(j); j-- > 0; ) x2.isOdd() && x2.iadd(delta), x2.iushrn(1);
                            a.cmp(b) >= 0 ? (a.isub(b), x1.isub(x2)) : (b.isub(a), x2.isub(x1));
                        }
                        return 0 > (res = 0 === a.cmpn(1) ? x1 : x2).cmpn(0) && res.iadd(p), res;
                    }),
                    (BN.prototype.gcd = function (num) {
                        if (this.isZero()) return num.abs();
                        if (num.isZero()) return this.abs();
                        var a = this.clone(),
                            b = num.clone();
                        (a.negative = 0), (b.negative = 0);
                        for (var shift = 0; a.isEven() && b.isEven(); shift++) a.iushrn(1), b.iushrn(1);
                        for (;;) {
                            for (; a.isEven(); ) a.iushrn(1);
                            for (; b.isEven(); ) b.iushrn(1);
                            var r = a.cmp(b);
                            if (r < 0) {
                                var t = a;
                                (a = b), (b = t);
                            } else if (0 === r || 0 === b.cmpn(1)) break;
                            a.isub(b);
                        }
                        return b.iushln(shift);
                    }),
                    (BN.prototype.invm = function (num) {
                        return this.egcd(num).a.umod(num);
                    }),
                    (BN.prototype.isEven = function () {
                        return (1 & this.words[0]) == 0;
                    }),
                    (BN.prototype.isOdd = function () {
                        return (1 & this.words[0]) == 1;
                    }),
                    (BN.prototype.andln = function (num) {
                        return this.words[0] & num;
                    }),
                    (BN.prototype.bincn = function (bit) {
                        assert("number" == typeof bit);
                        var r = bit % 26,
                            s = (bit - r) / 26,
                            q = 1 << r;
                        if (this.length <= s) return this._expand(s + 1), (this.words[s] |= q), this;
                        for (var carry = q, i = s; 0 !== carry && i < this.length; i++) {
                            var w = 0 | this.words[i];
                            (w += carry), (carry = w >>> 26), (w &= 67108863), (this.words[i] = w);
                        }
                        return 0 !== carry && ((this.words[i] = carry), this.length++), this;
                    }),
                    (BN.prototype.isZero = function () {
                        return 1 === this.length && 0 === this.words[0];
                    }),
                    (BN.prototype.cmpn = function (num) {
                        var res,
                            negative = num < 0;
                        if (0 !== this.negative && !negative) return -1;
                        if (0 === this.negative && negative) return 1;
                        if ((this.strip(), this.length > 1)) res = 1;
                        else {
                            negative && (num = -num), assert(num <= 67108863, "Number is too big");
                            var w = 0 | this.words[0];
                            res = w === num ? 0 : w < num ? -1 : 1;
                        }
                        return 0 !== this.negative ? 0 | -res : res;
                    }),
                    (BN.prototype.cmp = function (num) {
                        if (0 !== this.negative && 0 === num.negative) return -1;
                        if (0 === this.negative && 0 !== num.negative) return 1;
                        var res = this.ucmp(num);
                        return 0 !== this.negative ? 0 | -res : res;
                    }),
                    (BN.prototype.ucmp = function (num) {
                        if (this.length > num.length) return 1;
                        if (this.length < num.length) return -1;
                        for (var res = 0, i = this.length - 1; i >= 0; i--) {
                            var a = 0 | this.words[i],
                                b = 0 | num.words[i];
                            if (a !== b) {
                                a < b ? (res = -1) : a > b && (res = 1);
                                break;
                            }
                        }
                        return res;
                    }),
                    (BN.prototype.gtn = function (num) {
                        return 1 === this.cmpn(num);
                    }),
                    (BN.prototype.gt = function (num) {
                        return 1 === this.cmp(num);
                    }),
                    (BN.prototype.gten = function (num) {
                        return this.cmpn(num) >= 0;
                    }),
                    (BN.prototype.gte = function (num) {
                        return this.cmp(num) >= 0;
                    }),
                    (BN.prototype.ltn = function (num) {
                        return -1 === this.cmpn(num);
                    }),
                    (BN.prototype.lt = function (num) {
                        return -1 === this.cmp(num);
                    }),
                    (BN.prototype.lten = function (num) {
                        return 0 >= this.cmpn(num);
                    }),
                    (BN.prototype.lte = function (num) {
                        return 0 >= this.cmp(num);
                    }),
                    (BN.prototype.eqn = function (num) {
                        return 0 === this.cmpn(num);
                    }),
                    (BN.prototype.eq = function (num) {
                        return 0 === this.cmp(num);
                    }),
                    (BN.red = function (num) {
                        return new Red(num);
                    }),
                    (BN.prototype.toRed = function (ctx) {
                        return assert(!this.red, "Already a number in reduction context"), assert(0 === this.negative, "red works only with positives"), ctx.convertTo(this)._forceRed(ctx);
                    }),
                    (BN.prototype.fromRed = function () {
                        return assert(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
                    }),
                    (BN.prototype._forceRed = function (ctx) {
                        return (this.red = ctx), this;
                    }),
                    (BN.prototype.forceRed = function (ctx) {
                        return assert(!this.red, "Already a number in reduction context"), this._forceRed(ctx);
                    }),
                    (BN.prototype.redAdd = function (num) {
                        return assert(this.red, "redAdd works only with red numbers"), this.red.add(this, num);
                    }),
                    (BN.prototype.redIAdd = function (num) {
                        return assert(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, num);
                    }),
                    (BN.prototype.redSub = function (num) {
                        return assert(this.red, "redSub works only with red numbers"), this.red.sub(this, num);
                    }),
                    (BN.prototype.redISub = function (num) {
                        return assert(this.red, "redISub works only with red numbers"), this.red.isub(this, num);
                    }),
                    (BN.prototype.redShl = function (num) {
                        return assert(this.red, "redShl works only with red numbers"), this.red.shl(this, num);
                    }),
                    (BN.prototype.redMul = function (num) {
                        return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, num), this.red.mul(this, num);
                    }),
                    (BN.prototype.redIMul = function (num) {
                        return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, num), this.red.imul(this, num);
                    }),
                    (BN.prototype.redSqr = function () {
                        return assert(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
                    }),
                    (BN.prototype.redISqr = function () {
                        return assert(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
                    }),
                    (BN.prototype.redSqrt = function () {
                        return assert(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
                    }),
                    (BN.prototype.redInvm = function () {
                        return assert(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
                    }),
                    (BN.prototype.redNeg = function () {
                        return assert(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
                    }),
                    (BN.prototype.redPow = function (num) {
                        return assert(this.red && !num.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, num);
                    });
                var primes = { k256: null, p224: null, p192: null, p25519: null };
                function MPrime(name, p) {
                    (this.name = name), (this.p = new BN(p, 16)), (this.n = this.p.bitLength()), (this.k = new BN(1).iushln(this.n).isub(this.p)), (this.tmp = this._tmp());
                }
                function K256() {
                    MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
                }
                function P224() {
                    MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
                }
                function P192() {
                    MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
                }
                function P25519() {
                    MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
                }
                function Red(m) {
                    if ("string" == typeof m) {
                        var prime = BN._prime(m);
                        (this.m = prime.p), (this.prime = prime);
                    } else assert(m.gtn(1), "modulus must be greater than 1"), (this.m = m), (this.prime = null);
                }
                function Mont(m) {
                    Red.call(this, m),
                        (this.shift = this.m.bitLength()),
                        this.shift % 26 != 0 && (this.shift += 26 - (this.shift % 26)),
                        (this.r = new BN(1).iushln(this.shift)),
                        (this.r2 = this.imod(this.r.sqr())),
                        (this.rinv = this.r._invmp(this.m)),
                        (this.minv = this.rinv.mul(this.r).isubn(1).div(this.m)),
                        (this.minv = this.minv.umod(this.r)),
                        (this.minv = this.r.sub(this.minv));
                }
                (MPrime.prototype._tmp = function () {
                    var tmp = new BN(null);
                    return (tmp.words = Array(Math.ceil(this.n / 13))), tmp;
                }),
                    (MPrime.prototype.ireduce = function (num) {
                        var rlen,
                            r = num;
                        do this.split(r, this.tmp), (rlen = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength());
                        while (rlen > this.n);
                        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
                        return 0 === cmp ? ((r.words[0] = 0), (r.length = 1)) : cmp > 0 ? r.isub(this.p) : r.strip(), r;
                    }),
                    (MPrime.prototype.split = function (input, out) {
                        input.iushrn(this.n, 0, out);
                    }),
                    (MPrime.prototype.imulK = function (num) {
                        return num.imul(this.k);
                    }),
                    inherits(K256, MPrime),
                    (K256.prototype.split = function (input, output) {
                        for (var outLen = Math.min(input.length, 9), i = 0; i < outLen; i++) output.words[i] = input.words[i];
                        if (((output.length = outLen), input.length <= 9)) {
                            (input.words[0] = 0), (input.length = 1);
                            return;
                        }
                        var prev = input.words[9];
                        for (i = 10, output.words[output.length++] = 4194303 & prev; i < input.length; i++) {
                            var next = 0 | input.words[i];
                            (input.words[i - 10] = ((4194303 & next) << 4) | (prev >>> 22)), (prev = next);
                        }
                        (prev >>>= 22), (input.words[i - 10] = prev), 0 === prev && input.length > 10 ? (input.length -= 10) : (input.length -= 9);
                    }),
                    (K256.prototype.imulK = function (num) {
                        (num.words[num.length] = 0), (num.words[num.length + 1] = 0), (num.length += 2);
                        for (var lo = 0, i = 0; i < num.length; i++) {
                            var w = 0 | num.words[i];
                            (lo += 977 * w), (num.words[i] = 67108863 & lo), (lo = 64 * w + ((lo / 67108864) | 0));
                        }
                        return 0 === num.words[num.length - 1] && (num.length--, 0 === num.words[num.length - 1] && num.length--), num;
                    }),
                    inherits(P224, MPrime),
                    inherits(P192, MPrime),
                    inherits(P25519, MPrime),
                    (P25519.prototype.imulK = function (num) {
                        for (var carry = 0, i = 0; i < num.length; i++) {
                            var hi = (0 | num.words[i]) * 19 + carry,
                                lo = 67108863 & hi;
                            (hi >>>= 26), (num.words[i] = lo), (carry = hi);
                        }
                        return 0 !== carry && (num.words[num.length++] = carry), num;
                    }),
                    (BN._prime = function (name) {
                        var prime;
                        if (primes[name]) return primes[name];
                        if ("k256" === name) prime = new K256();
                        else if ("p224" === name) prime = new P224();
                        else if ("p192" === name) prime = new P192();
                        else if ("p25519" === name) prime = new P25519();
                        else throw Error("Unknown prime " + name);
                        return (primes[name] = prime), prime;
                    }),
                    (Red.prototype._verify1 = function (a) {
                        assert(0 === a.negative, "red works only with positives"), assert(a.red, "red works only with red numbers");
                    }),
                    (Red.prototype._verify2 = function (a, b) {
                        assert((a.negative | b.negative) == 0, "red works only with positives"), assert(a.red && a.red === b.red, "red works only with red numbers");
                    }),
                    (Red.prototype.imod = function (a) {
                        return this.prime ? this.prime.ireduce(a)._forceRed(this) : a.umod(this.m)._forceRed(this);
                    }),
                    (Red.prototype.neg = function (a) {
                        return a.isZero() ? a.clone() : this.m.sub(a)._forceRed(this);
                    }),
                    (Red.prototype.add = function (a, b) {
                        this._verify2(a, b);
                        var res = a.add(b);
                        return res.cmp(this.m) >= 0 && res.isub(this.m), res._forceRed(this);
                    }),
                    (Red.prototype.iadd = function (a, b) {
                        this._verify2(a, b);
                        var res = a.iadd(b);
                        return res.cmp(this.m) >= 0 && res.isub(this.m), res;
                    }),
                    (Red.prototype.sub = function (a, b) {
                        this._verify2(a, b);
                        var res = a.sub(b);
                        return 0 > res.cmpn(0) && res.iadd(this.m), res._forceRed(this);
                    }),
                    (Red.prototype.isub = function (a, b) {
                        this._verify2(a, b);
                        var res = a.isub(b);
                        return 0 > res.cmpn(0) && res.iadd(this.m), res;
                    }),
                    (Red.prototype.shl = function (a, num) {
                        return this._verify1(a), this.imod(a.ushln(num));
                    }),
                    (Red.prototype.imul = function (a, b) {
                        return this._verify2(a, b), this.imod(a.imul(b));
                    }),
                    (Red.prototype.mul = function (a, b) {
                        return this._verify2(a, b), this.imod(a.mul(b));
                    }),
                    (Red.prototype.isqr = function (a) {
                        return this.imul(a, a.clone());
                    }),
                    (Red.prototype.sqr = function (a) {
                        return this.mul(a, a);
                    }),
                    (Red.prototype.sqrt = function (a) {
                        if (a.isZero()) return a.clone();
                        var mod3 = this.m.andln(3);
                        if ((assert(mod3 % 2 == 1), 3 === mod3)) {
                            var pow = this.m.add(new BN(1)).iushrn(2);
                            return this.pow(a, pow);
                        }
                        for (var q = this.m.subn(1), s = 0; !q.isZero() && 0 === q.andln(1); ) s++, q.iushrn(1);
                        assert(!q.isZero());
                        var one = new BN(1).toRed(this),
                            nOne = one.redNeg(),
                            lpow = this.m.subn(1).iushrn(1),
                            z = this.m.bitLength();
                        for (z = new BN(2 * z * z).toRed(this); 0 !== this.pow(z, lpow).cmp(nOne); ) z.redIAdd(nOne);
                        for (var c = this.pow(z, q), r = this.pow(a, q.addn(1).iushrn(1)), t = this.pow(a, q), m = s; 0 !== t.cmp(one); ) {
                            for (var tmp = t, i = 0; 0 !== tmp.cmp(one); i++) tmp = tmp.redSqr();
                            assert(i < m);
                            var b = this.pow(c, new BN(1).iushln(m - i - 1));
                            (r = r.redMul(b)), (c = b.redSqr()), (t = t.redMul(c)), (m = i);
                        }
                        return r;
                    }),
                    (Red.prototype.invm = function (a) {
                        var inv = a._invmp(this.m);
                        return 0 !== inv.negative ? ((inv.negative = 0), this.imod(inv).redNeg()) : this.imod(inv);
                    }),
                    (Red.prototype.pow = function (a, num) {
                        if (num.isZero()) return new BN(1).toRed(this);
                        if (0 === num.cmpn(1)) return a.clone();
                        var wnd = Array(16);
                        (wnd[0] = new BN(1).toRed(this)), (wnd[1] = a);
                        for (var i = 2; i < wnd.length; i++) wnd[i] = this.mul(wnd[i - 1], a);
                        var res = wnd[0],
                            current = 0,
                            currentLen = 0,
                            start = num.bitLength() % 26;
                        for (0 === start && (start = 26), i = num.length - 1; i >= 0; i--) {
                            for (var word = num.words[i], j = start - 1; j >= 0; j--) {
                                var bit = (word >> j) & 1;
                                if ((res !== wnd[0] && (res = this.sqr(res)), 0 === bit && 0 === current)) {
                                    currentLen = 0;
                                    continue;
                                }
                                (current <<= 1), (current |= bit), (4 == ++currentLen || (0 === i && 0 === j)) && ((res = this.mul(res, wnd[current])), (currentLen = 0), (current = 0));
                            }
                            start = 26;
                        }
                        return res;
                    }),
                    (Red.prototype.convertTo = function (num) {
                        var r = num.umod(this.m);
                        return r === num ? r.clone() : r;
                    }),
                    (Red.prototype.convertFrom = function (num) {
                        var res = num.clone();
                        return (res.red = null), res;
                    }),
                    (BN.mont = function (num) {
                        return new Mont(num);
                    }),
                    inherits(Mont, Red),
                    (Mont.prototype.convertTo = function (num) {
                        return this.imod(num.ushln(this.shift));
                    }),
                    (Mont.prototype.convertFrom = function (num) {
                        var r = this.imod(num.mul(this.rinv));
                        return (r.red = null), r;
                    }),
                    (Mont.prototype.imul = function (a, b) {
                        if (a.isZero() || b.isZero()) return (a.words[0] = 0), (a.length = 1), a;
                        var t = a.imul(b),
                            c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            u = t.isub(c).iushrn(this.shift),
                            res = u;
                        return u.cmp(this.m) >= 0 ? (res = u.isub(this.m)) : 0 > u.cmpn(0) && (res = u.iadd(this.m)), res._forceRed(this);
                    }),
                    (Mont.prototype.mul = function (a, b) {
                        if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
                        var t = a.mul(b),
                            c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            u = t.isub(c).iushrn(this.shift),
                            res = u;
                        return u.cmp(this.m) >= 0 ? (res = u.isub(this.m)) : 0 > u.cmpn(0) && (res = u.iadd(this.m)), res._forceRed(this);
                    }),
                    (Mont.prototype.invm = function (a) {
                        return this.imod(a._invmp(this.m).mul(this.r2))._forceRed(this);
                    });
            })((module = __webpack_require__.nmd(module)), this);
        },
        62873: function (__unused_webpack_module, exports) {
            "use strict";
            function getFromWindow(name) {
                let res;
                return "undefined" != typeof window && void 0 !== window[name] && (res = window[name]), res;
            }
            function getFromWindowOrThrow(name) {
                let res = getFromWindow(name);
                if (!res) throw Error(`${name} is not defined in Window`);
                return res;
            }
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.getLocalStorage = exports.getLocalStorageOrThrow = exports.getCrypto = exports.getCryptoOrThrow = exports.getLocation = exports.getLocationOrThrow = exports.getNavigator = exports.getNavigatorOrThrow = exports.getDocument = exports.getDocumentOrThrow = exports.getFromWindowOrThrow = exports.getFromWindow = void 0),
                (exports.getFromWindow = getFromWindow),
                (exports.getFromWindowOrThrow = getFromWindowOrThrow),
                (exports.getDocumentOrThrow = function () {
                    return getFromWindowOrThrow("document");
                }),
                (exports.getDocument = function () {
                    return getFromWindow("document");
                }),
                (exports.getNavigatorOrThrow = function () {
                    return getFromWindowOrThrow("navigator");
                }),
                (exports.getNavigator = function () {
                    return getFromWindow("navigator");
                }),
                (exports.getLocationOrThrow = function () {
                    return getFromWindowOrThrow("location");
                }),
                (exports.getLocation = function () {
                    return getFromWindow("location");
                }),
                (exports.getCryptoOrThrow = function () {
                    return getFromWindowOrThrow("crypto");
                }),
                (exports.getCrypto = function () {
                    return getFromWindow("crypto");
                }),
                (exports.getLocalStorageOrThrow = function () {
                    return getFromWindowOrThrow("localStorage");
                }),
                (exports.getLocalStorage = function () {
                    return getFromWindow("localStorage");
                });
        },
        65755: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            exports.D = void 0;
            let window_getters_1 = __webpack_require__(62873);
            exports.D = function () {
                let doc, loc, name;
                try {
                    (doc = window_getters_1.getDocumentOrThrow()), (loc = window_getters_1.getLocationOrThrow());
                } catch (e) {
                    return null;
                }
                function getWindowMetadataOfAny(...args) {
                    let metaTags = doc.getElementsByTagName("meta");
                    for (let i = 0; i < metaTags.length; i++) {
                        let tag = metaTags[i],
                            attributes = ["itemprop", "property", "name"].map((target) => tag.getAttribute(target)).filter((attr) => !!attr && args.includes(attr));
                        if (attributes.length && attributes) {
                            let content = tag.getAttribute("content");
                            if (content) return content;
                        }
                    }
                    return "";
                }
                let name1 = ((name = getWindowMetadataOfAny("name", "og:site_name", "og:title", "twitter:title")) || (name = doc.title), name),
                    description = (function () {
                        let description = getWindowMetadataOfAny("description", "og:description", "twitter:description", "keywords");
                        return description;
                    })(),
                    url = loc.origin,
                    icons = (function () {
                        let links = doc.getElementsByTagName("link"),
                            icons = [];
                        for (let i = 0; i < links.length; i++) {
                            let link = links[i],
                                rel = link.getAttribute("rel");
                            if (rel && rel.toLowerCase().indexOf("icon") > -1) {
                                let href = link.getAttribute("href");
                                if (href) {
                                    if (-1 === href.toLowerCase().indexOf("https:") && -1 === href.toLowerCase().indexOf("http:") && 0 !== href.indexOf("//")) {
                                        let absoluteHref = loc.protocol + "//" + loc.host;
                                        if (0 === href.indexOf("/")) absoluteHref += href;
                                        else {
                                            let path = loc.pathname.split("/");
                                            path.pop();
                                            let finalPath = path.join("/");
                                            absoluteHref += finalPath + "/" + href;
                                        }
                                        icons.push(absoluteHref);
                                    } else if (0 === href.indexOf("//")) {
                                        let absoluteUrl = loc.protocol + href;
                                        icons.push(absoluteUrl);
                                    } else icons.push(href);
                                }
                            }
                        }
                        return icons;
                    })();
                return { description, url, icons, name: name1 };
            };
        },
        85078: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 });
            var tslib_1 = __webpack_require__(64778),
                Semaphore_1 = __webpack_require__(2403),
                Mutex = (function () {
                    function Mutex() {
                        this._semaphore = new Semaphore_1.default(1);
                    }
                    return (
                        (Mutex.prototype.acquire = function () {
                            return tslib_1.__awaiter(this, void 0, void 0, function () {
                                return tslib_1.__generator(this, function (_b) {
                                    switch (_b.label) {
                                        case 0:
                                            return [4, this._semaphore.acquire()];
                                        case 1:
                                            return [2, _b.sent()[1]];
                                    }
                                });
                            });
                        }),
                        (Mutex.prototype.runExclusive = function (callback) {
                            return this._semaphore.runExclusive(function () {
                                return callback();
                            });
                        }),
                        (Mutex.prototype.isLocked = function () {
                            return this._semaphore.isLocked();
                        }),
                        (Mutex.prototype.release = function () {
                            this._semaphore.release();
                        }),
                        Mutex
                    );
                })();
            exports.default = Mutex;
        },
        2403: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 });
            var tslib_1 = __webpack_require__(64778),
                Semaphore = (function () {
                    function Semaphore(_maxConcurrency) {
                        if (((this._maxConcurrency = _maxConcurrency), (this._queue = []), _maxConcurrency <= 0)) throw Error("semaphore must be initialized to a positive value");
                        this._value = _maxConcurrency;
                    }
                    return (
                        (Semaphore.prototype.acquire = function () {
                            var _this = this,
                                locked = this.isLocked(),
                                ticket = new Promise(function (r) {
                                    return _this._queue.push(r);
                                });
                            return locked || this._dispatch(), ticket;
                        }),
                        (Semaphore.prototype.runExclusive = function (callback) {
                            return tslib_1.__awaiter(this, void 0, void 0, function () {
                                var _a, value, release;
                                return tslib_1.__generator(this, function (_b) {
                                    switch (_b.label) {
                                        case 0:
                                            return [4, this.acquire()];
                                        case 1:
                                            (value = (_a = _b.sent())[0]), (release = _a[1]), (_b.label = 2);
                                        case 2:
                                            return _b.trys.push([2, , 4, 5]), [4, callback(value)];
                                        case 3:
                                            return [2, _b.sent()];
                                        case 4:
                                            return release(), [7];
                                        case 5:
                                            return [2];
                                    }
                                });
                            });
                        }),
                        (Semaphore.prototype.isLocked = function () {
                            return this._value <= 0;
                        }),
                        (Semaphore.prototype.release = function () {
                            if (this._maxConcurrency > 1) throw Error("this method is unavailabel on semaphores with concurrency > 1; use the scoped release returned by acquire instead");
                            if (this._currentReleaser) {
                                var releaser = this._currentReleaser;
                                (this._currentReleaser = void 0), releaser();
                            }
                        }),
                        (Semaphore.prototype._dispatch = function () {
                            var _this = this,
                                nextConsumer = this._queue.shift();
                            if (nextConsumer) {
                                var released = !1;
                                (this._currentReleaser = function () {
                                    released || ((released = !0), _this._value++, _this._dispatch());
                                }),
                                    nextConsumer([this._value--, this._currentReleaser]);
                            }
                        }),
                        Semaphore
                    );
                })();
            exports.default = Semaphore;
        },
        48125: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            exports.WU = void 0;
            var Mutex_1 = __webpack_require__(85078);
            Object.defineProperty(exports, "WU", {
                enumerable: !0,
                get: function () {
                    return Mutex_1.default;
                },
            }),
                __webpack_require__(2403),
                __webpack_require__(41960);
        },
        41960: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.withTimeout = void 0);
            var tslib_1 = __webpack_require__(64778);
            exports.withTimeout = function (sync, timeout, timeoutError) {
                var _this = this;
                return (
                    void 0 === timeoutError && (timeoutError = Error("timeout")),
                    {
                        acquire: function () {
                            return new Promise(function (resolve, reject) {
                                return tslib_1.__awaiter(_this, void 0, void 0, function () {
                                    var isTimeout, ticket;
                                    return tslib_1.__generator(this, function (_a) {
                                        switch (_a.label) {
                                            case 0:
                                                return (
                                                    (isTimeout = !1),
                                                    setTimeout(function () {
                                                        (isTimeout = !0), reject(timeoutError);
                                                    }, timeout),
                                                    [4, sync.acquire()]
                                                );
                                            case 1:
                                                return (ticket = _a.sent()), isTimeout ? (Array.isArray(ticket) ? ticket[1] : ticket)() : resolve(ticket), [2];
                                        }
                                    });
                                });
                            });
                        },
                        runExclusive: function (callback) {
                            return tslib_1.__awaiter(this, void 0, void 0, function () {
                                var release, ticket;
                                return tslib_1.__generator(this, function (_a) {
                                    switch (_a.label) {
                                        case 0:
                                            (release = function () {}), (_a.label = 1);
                                        case 1:
                                            return _a.trys.push([1, , 7, 8]), [4, this.acquire()];
                                        case 2:
                                            if (!Array.isArray((ticket = _a.sent()))) return [3, 4];
                                            return (release = ticket[1]), [4, callback(ticket[0])];
                                        case 3:
                                        case 5:
                                            return [2, _a.sent()];
                                        case 4:
                                            return (release = ticket), [4, callback()];
                                        case 6:
                                            return [3, 8];
                                        case 7:
                                            return release(), [7];
                                        case 8:
                                            return [2];
                                    }
                                });
                            });
                        },
                        release: function () {
                            sync.release();
                        },
                        isLocked: function () {
                            return sync.isLocked();
                        },
                    }
                );
            };
        },
        64778: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.r(__webpack_exports__),
                __webpack_require__.d(__webpack_exports__, {
                    __assign: function () {
                        return __assign;
                    },
                    __asyncDelegator: function () {
                        return __asyncDelegator;
                    },
                    __asyncGenerator: function () {
                        return __asyncGenerator;
                    },
                    __asyncValues: function () {
                        return __asyncValues;
                    },
                    __await: function () {
                        return __await;
                    },
                    __awaiter: function () {
                        return __awaiter;
                    },
                    __classPrivateFieldGet: function () {
                        return __classPrivateFieldGet;
                    },
                    __classPrivateFieldSet: function () {
                        return __classPrivateFieldSet;
                    },
                    __createBinding: function () {
                        return __createBinding;
                    },
                    __decorate: function () {
                        return __decorate;
                    },
                    __exportStar: function () {
                        return __exportStar;
                    },
                    __extends: function () {
                        return __extends;
                    },
                    __generator: function () {
                        return __generator;
                    },
                    __importDefault: function () {
                        return __importDefault;
                    },
                    __importStar: function () {
                        return __importStar;
                    },
                    __makeTemplateObject: function () {
                        return __makeTemplateObject;
                    },
                    __metadata: function () {
                        return __metadata;
                    },
                    __param: function () {
                        return __param;
                    },
                    __read: function () {
                        return __read;
                    },
                    __rest: function () {
                        return __rest;
                    },
                    __spread: function () {
                        return __spread;
                    },
                    __spreadArray: function () {
                        return __spreadArray;
                    },
                    __spreadArrays: function () {
                        return __spreadArrays;
                    },
                    __values: function () {
                        return __values;
                    },
                });
            /*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ var extendStatics = function (
                d,
                b
            ) {
                return (extendStatics =
                    Object.setPrototypeOf ||
                    ({ __proto__: [] } instanceof Array &&
                        function (d, b) {
                            d.__proto__ = b;
                        }) ||
                    function (d, b) {
                        for (var p in b) Object.prototype.hasOwnProperty.call(b, p) && (d[p] = b[p]);
                    })(d, b);
            };
            function __extends(d, b) {
                if ("function" != typeof b && null !== b) throw TypeError("Class extends value " + String(b) + " is not a constructor or null");
                function __() {
                    this.constructor = d;
                }
                extendStatics(d, b), (d.prototype = null === b ? Object.create(b) : ((__.prototype = b.prototype), new __()));
            }
            var __assign = function () {
                return (__assign =
                    Object.assign ||
                    function (t) {
                        for (var s, i = 1, n = arguments.length; i < n; i++) for (var p in (s = arguments[i])) Object.prototype.hasOwnProperty.call(s, p) && (t[p] = s[p]);
                        return t;
                    }).apply(this, arguments);
            };
            function __rest(s, e) {
                var t = {};
                for (var p in s) Object.prototype.hasOwnProperty.call(s, p) && 0 > e.indexOf(p) && (t[p] = s[p]);
                if (null != s && "function" == typeof Object.getOwnPropertySymbols)
                    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) 0 > e.indexOf(p[i]) && Object.prototype.propertyIsEnumerable.call(s, p[i]) && (t[p[i]] = s[p[i]]);
                return t;
            }
            function __decorate(decorators, target, key, desc) {
                var d,
                    c = arguments.length,
                    r = c < 3 ? target : null === desc ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            }
            function __param(paramIndex, decorator) {
                return function (target, key) {
                    decorator(target, key, paramIndex);
                };
            }
            function __metadata(metadataKey, metadataValue) {
                if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(metadataKey, metadataValue);
            }
            function __awaiter(thisArg, _arguments, P, generator) {
                return new (P || (P = Promise))(function (resolve, reject) {
                    function fulfilled(value) {
                        try {
                            step(generator.next(value));
                        } catch (e) {
                            reject(e);
                        }
                    }
                    function rejected(value) {
                        try {
                            step(generator.throw(value));
                        } catch (e) {
                            reject(e);
                        }
                    }
                    function step(result) {
                        var value;
                        result.done
                            ? resolve(result.value)
                            : ((value = result.value) instanceof P
                                  ? value
                                  : new P(function (resolve) {
                                        resolve(value);
                                    })
                              ).then(fulfilled, rejected);
                    }
                    step((generator = generator.apply(thisArg, _arguments || [])).next());
                });
            }
            function __generator(thisArg, body) {
                var f,
                    y,
                    t,
                    g,
                    _ = {
                        label: 0,
                        sent: function () {
                            if (1 & t[0]) throw t[1];
                            return t[1];
                        },
                        trys: [],
                        ops: [],
                    };
                return (
                    (g = { next: verb(0), throw: verb(1), return: verb(2) }),
                    "function" == typeof Symbol &&
                        (g[Symbol.iterator] = function () {
                            return this;
                        }),
                    g
                );
                function verb(n) {
                    return function (v) {
                        return (function (op) {
                            if (f) throw TypeError("Generator is already executing.");
                            for (; _; )
                                try {
                                    if (((f = 1), y && (t = 2 & op[0] ? y.return : op[0] ? y.throw || ((t = y.return) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)) return t;
                                    switch (((y = 0), t && (op = [2 & op[0], t.value]), op[0])) {
                                        case 0:
                                        case 1:
                                            t = op;
                                            break;
                                        case 4:
                                            return _.label++, { value: op[1], done: !1 };
                                        case 5:
                                            _.label++, (y = op[1]), (op = [0]);
                                            continue;
                                        case 7:
                                            (op = _.ops.pop()), _.trys.pop();
                                            continue;
                                        default:
                                            if (!(t = (t = _.trys).length > 0 && t[t.length - 1]) && (6 === op[0] || 2 === op[0])) {
                                                _ = 0;
                                                continue;
                                            }
                                            if (3 === op[0] && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                                _.label = op[1];
                                                break;
                                            }
                                            if (6 === op[0] && _.label < t[1]) {
                                                (_.label = t[1]), (t = op);
                                                break;
                                            }
                                            if (t && _.label < t[2]) {
                                                (_.label = t[2]), _.ops.push(op);
                                                break;
                                            }
                                            t[2] && _.ops.pop(), _.trys.pop();
                                            continue;
                                    }
                                    op = body.call(thisArg, _);
                                } catch (e) {
                                    (op = [6, e]), (y = 0);
                                } finally {
                                    f = t = 0;
                                }
                            if (5 & op[0]) throw op[1];
                            return { value: op[0] ? op[1] : void 0, done: !0 };
                        })([n, v]);
                    };
                }
            }
            var __createBinding = Object.create
                ? function (o, m, k, k2) {
                      void 0 === k2 && (k2 = k),
                          Object.defineProperty(o, k2, {
                              enumerable: !0,
                              get: function () {
                                  return m[k];
                              },
                          });
                  }
                : function (o, m, k, k2) {
                      void 0 === k2 && (k2 = k), (o[k2] = m[k]);
                  };
            function __exportStar(m, o) {
                for (var p in m) "default" === p || Object.prototype.hasOwnProperty.call(o, p) || __createBinding(o, m, p);
            }
            function __values(o) {
                var s = "function" == typeof Symbol && Symbol.iterator,
                    m = s && o[s],
                    i = 0;
                if (m) return m.call(o);
                if (o && "number" == typeof o.length)
                    return {
                        next: function () {
                            return o && i >= o.length && (o = void 0), { value: o && o[i++], done: !o };
                        },
                    };
                throw TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
            }
            function __read(o, n) {
                var m = "function" == typeof Symbol && o[Symbol.iterator];
                if (!m) return o;
                var r,
                    e,
                    i = m.call(o),
                    ar = [];
                try {
                    for (; (void 0 === n || n-- > 0) && !(r = i.next()).done; ) ar.push(r.value);
                } catch (error) {
                    e = { error: error };
                } finally {
                    try {
                        r && !r.done && (m = i.return) && m.call(i);
                    } finally {
                        if (e) throw e.error;
                    }
                }
                return ar;
            }
            function __spread() {
                for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
                return ar;
            }
            function __spreadArrays() {
                for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
                for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];
                return r;
            }
            function __spreadArray(to, from, pack) {
                if (pack || 2 == arguments.length) for (var ar, i = 0, l = from.length; i < l; i++) (!ar && i in from) || (ar || (ar = Array.prototype.slice.call(from, 0, i)), (ar[i] = from[i]));
                return to.concat(ar || Array.prototype.slice.call(from));
            }
            function __await(v) {
                return this instanceof __await ? ((this.v = v), this) : new __await(v);
            }
            function __asyncGenerator(thisArg, _arguments, generator) {
                if (!Symbol.asyncIterator) throw TypeError("Symbol.asyncIterator is not defined.");
                var i,
                    g = generator.apply(thisArg, _arguments || []),
                    q = [];
                return (
                    (i = {}),
                    verb("next"),
                    verb("throw"),
                    verb("return"),
                    (i[Symbol.asyncIterator] = function () {
                        return this;
                    }),
                    i
                );
                function verb(n) {
                    g[n] &&
                        (i[n] = function (v) {
                            return new Promise(function (a, b) {
                                q.push([n, v, a, b]) > 1 || resume(n, v);
                            });
                        });
                }
                function resume(n, v) {
                    try {
                        var r;
                        (r = g[n](v)).value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
                    } catch (e) {
                        settle(q[0][3], e);
                    }
                }
                function fulfill(value) {
                    resume("next", value);
                }
                function reject(value) {
                    resume("throw", value);
                }
                function settle(f, v) {
                    f(v), q.shift(), q.length && resume(q[0][0], q[0][1]);
                }
            }
            function __asyncDelegator(o) {
                var i, p;
                return (
                    (i = {}),
                    verb("next"),
                    verb("throw", function (e) {
                        throw e;
                    }),
                    verb("return"),
                    (i[Symbol.iterator] = function () {
                        return this;
                    }),
                    i
                );
                function verb(n, f) {
                    i[n] = o[n]
                        ? function (v) {
                              return (p = !p) ? { value: __await(o[n](v)), done: "return" === n } : f ? f(v) : v;
                          }
                        : f;
                }
            }
            function __asyncValues(o) {
                if (!Symbol.asyncIterator) throw TypeError("Symbol.asyncIterator is not defined.");
                var i,
                    m = o[Symbol.asyncIterator];
                return m
                    ? m.call(o)
                    : ((o = __values(o)),
                      (i = {}),
                      verb("next"),
                      verb("throw"),
                      verb("return"),
                      (i[Symbol.asyncIterator] = function () {
                          return this;
                      }),
                      i);
                function verb(n) {
                    i[n] =
                        o[n] &&
                        function (v) {
                            return new Promise(function (resolve, reject) {
                                !(function (resolve, reject, d, v) {
                                    Promise.resolve(v).then(function (v) {
                                        resolve({ value: v, done: d });
                                    }, reject);
                                })(resolve, reject, (v = o[n](v)).done, v.value);
                            });
                        };
                }
            }
            function __makeTemplateObject(cooked, raw) {
                return Object.defineProperty ? Object.defineProperty(cooked, "raw", { value: raw }) : (cooked.raw = raw), cooked;
            }
            var __setModuleDefault = Object.create
                ? function (o, v) {
                      Object.defineProperty(o, "default", { enumerable: !0, value: v });
                  }
                : function (o, v) {
                      o.default = v;
                  };
            function __importStar(mod) {
                if (mod && mod.__esModule) return mod;
                var result = {};
                if (null != mod) for (var k in mod) "default" !== k && Object.prototype.hasOwnProperty.call(mod, k) && __createBinding(result, mod, k);
                return __setModuleDefault(result, mod), result;
            }
            function __importDefault(mod) {
                return mod && mod.__esModule ? mod : { default: mod };
            }
            function __classPrivateFieldGet(receiver, state, kind, f) {
                if ("a" === kind && !f) throw TypeError("Private accessor was defined without a getter");
                if ("function" == typeof state ? receiver !== state || !f : !state.has(receiver)) throw TypeError("Cannot read private member from an object whose class did not declare it");
                return "m" === kind ? f : "a" === kind ? f.call(receiver) : f ? f.value : state.get(receiver);
            }
            function __classPrivateFieldSet(receiver, state, value, kind, f) {
                if ("m" === kind) throw TypeError("Private method is not writable");
                if ("a" === kind && !f) throw TypeError("Private accessor was defined without a setter");
                if ("function" == typeof state ? receiver !== state || !f : !state.has(receiver)) throw TypeError("Cannot write private member to an object whose class did not declare it");
                return "a" === kind ? f.call(receiver, value) : f ? (f.value = value) : state.set(receiver, value), value;
            }
        },
        44409: function (module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.default = function (func) {
                    return (0, _initialParams2.default)(function (args, callback) {
                        var result;
                        try {
                            result = func.apply(this, args);
                        } catch (e) {
                            return callback(e);
                        }
                        (0, _isObject2.default)(result) && "function" == typeof result.then
                            ? result.then(
                                  function (value) {
                                      invokeCallback(callback, null, value);
                                  },
                                  function (err) {
                                      invokeCallback(callback, err.message ? err : Error(err));
                                  }
                              )
                            : callback(null, result);
                    });
                });
            var _isObject2 = _interopRequireDefault(__webpack_require__(13218)),
                _initialParams2 = _interopRequireDefault(__webpack_require__(43519)),
                _setImmediate2 = _interopRequireDefault(__webpack_require__(3111));
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
            }
            function invokeCallback(callback, error, value) {
                try {
                    callback(error, value);
                } catch (e) {
                    (0, _setImmediate2.default)(rethrow, e);
                }
            }
            function rethrow(error) {
                throw error;
            }
            module.exports = exports.default;
        },
        14338: function (module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.default = function (coll, limit, iteratee, callback) {
                    (0, _eachOfLimit2.default)(limit)(coll, (0, _withoutIndex2.default)((0, _wrapAsync2.default)(iteratee)), callback);
                });
            var _eachOfLimit2 = _interopRequireDefault(__webpack_require__(56954)),
                _withoutIndex2 = _interopRequireDefault(__webpack_require__(36529)),
                _wrapAsync2 = _interopRequireDefault(__webpack_require__(28993));
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
            }
            module.exports = exports.default;
        },
        71846: function (module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.default = function (coll, iteratee, callback) {
                    ((0, _isArrayLike2.default)(coll) ? eachOfArrayLike : eachOfGeneric)(coll, (0, _wrapAsync2.default)(iteratee), callback);
                });
            var _isArrayLike2 = _interopRequireDefault(__webpack_require__(98612)),
                _breakLoop2 = _interopRequireDefault(__webpack_require__(1605)),
                _eachOfLimit2 = _interopRequireDefault(__webpack_require__(97388)),
                _doLimit2 = _interopRequireDefault(__webpack_require__(53875)),
                _noop2 = _interopRequireDefault(__webpack_require__(50308)),
                _once2 = _interopRequireDefault(__webpack_require__(46979)),
                _onlyOnce2 = _interopRequireDefault(__webpack_require__(13362)),
                _wrapAsync2 = _interopRequireDefault(__webpack_require__(28993));
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
            }
            function eachOfArrayLike(coll, iteratee, callback) {
                callback = (0, _once2.default)(callback || _noop2.default);
                var index = 0,
                    completed = 0,
                    length = coll.length;
                function iteratorCallback(err, value) {
                    err ? callback(err) : (++completed === length || value === _breakLoop2.default) && callback(null);
                }
                for (0 === length && callback(null); index < length; index++) iteratee(coll[index], index, (0, _onlyOnce2.default)(iteratorCallback));
            }
            var eachOfGeneric = (0, _doLimit2.default)(_eachOfLimit2.default, 1 / 0);
            module.exports = exports.default;
        },
        97388: function (module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.default = function (coll, limit, iteratee, callback) {
                    (0, _eachOfLimit3.default)(limit)(coll, (0, _wrapAsync2.default)(iteratee), callback);
                });
            var _eachOfLimit3 = _interopRequireDefault(__webpack_require__(56954)),
                _wrapAsync2 = _interopRequireDefault(__webpack_require__(28993));
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
            }
            module.exports = exports.default;
        },
        94282: function (module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 });
            var _eachLimit2 = _interopRequireDefault(__webpack_require__(14338)),
                _doLimit2 = _interopRequireDefault(__webpack_require__(53875));
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
            }
            (exports.default = (0, _doLimit2.default)(_eachLimit2.default, 1)), (module.exports = exports.default);
        },
        1605: function (module, exports) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.default = {}), (module.exports = exports.default);
        },
        53875: function (module, exports) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.default = function (fn, limit) {
                    return function (iterable, iteratee, callback) {
                        return fn(iterable, limit, iteratee, callback);
                    };
                }),
                (module.exports = exports.default);
        },
        68468: function (module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.default = function (fn) {
                    return function (obj, iteratee, callback) {
                        return fn(_eachOf2.default, obj, (0, _wrapAsync2.default)(iteratee), callback);
                    };
                });
            var _eachOf2 = _interopRequireDefault(__webpack_require__(71846)),
                _wrapAsync2 = _interopRequireDefault(__webpack_require__(28993));
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
            }
            module.exports = exports.default;
        },
        56954: function (module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.default = function (limit) {
                    return function (obj, iteratee, callback) {
                        if (((callback = (0, _once2.default)(callback || _noop2.default)), limit <= 0 || !obj)) return callback(null);
                        var nextElem = (0, _iterator2.default)(obj),
                            done = !1,
                            running = 0,
                            looping = !1;
                        function iterateeCallback(err, value) {
                            if (((running -= 1), err)) (done = !0), callback(err);
                            else {
                                if (value === _breakLoop2.default || (done && running <= 0)) return (done = !0), callback(null);
                                looping || replenish();
                            }
                        }
                        function replenish() {
                            for (looping = !0; running < limit && !done; ) {
                                var elem = nextElem();
                                if (null === elem) {
                                    (done = !0), running <= 0 && callback(null);
                                    return;
                                }
                                (running += 1), iteratee(elem.value, elem.key, (0, _onlyOnce2.default)(iterateeCallback));
                            }
                            looping = !1;
                        }
                        replenish();
                    };
                });
            var _noop2 = _interopRequireDefault(__webpack_require__(50308)),
                _once2 = _interopRequireDefault(__webpack_require__(46979)),
                _iterator2 = _interopRequireDefault(__webpack_require__(9733)),
                _onlyOnce2 = _interopRequireDefault(__webpack_require__(13362)),
                _breakLoop2 = _interopRequireDefault(__webpack_require__(1605));
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
            }
            module.exports = exports.default;
        },
        37818: function (module, exports) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.default = function (coll) {
                    return iteratorSymbol && coll[iteratorSymbol] && coll[iteratorSymbol]();
                });
            var iteratorSymbol = "function" == typeof Symbol && Symbol.iterator;
            module.exports = exports.default;
        },
        43519: function (module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.default = function (fn) {
                    return function () {
                        var args = (0, _slice2.default)(arguments),
                            callback = args.pop();
                        fn.call(this, args, callback);
                    };
                });
            var obj,
                _slice2 = (obj = __webpack_require__(63033)) && obj.__esModule ? obj : { default: obj };
            module.exports = exports.default;
        },
        9733: function (module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.default = function (coll) {
                    if ((0, _isArrayLike2.default)(coll))
                        return (
                            (i = -1),
                            (len = coll.length),
                            function () {
                                return ++i < len ? { value: coll[i], key: i } : null;
                            }
                        );
                    var i,
                        len,
                        i1,
                        okeys,
                        i2,
                        len1,
                        iterator = (0, _getIterator2.default)(coll);
                    return iterator
                        ? ((i1 = -1),
                          function () {
                              var item = iterator.next();
                              return item.done ? null : (i1++, { value: item.value, key: i1 });
                          })
                        : ((okeys = (0, _keys2.default)(coll)),
                          (i2 = -1),
                          (len1 = okeys.length),
                          function () {
                              var key = okeys[++i2];
                              return i2 < len1 ? { value: coll[key], key: key } : null;
                          });
                });
            var _isArrayLike2 = _interopRequireDefault(__webpack_require__(98612)),
                _getIterator2 = _interopRequireDefault(__webpack_require__(37818)),
                _keys2 = _interopRequireDefault(__webpack_require__(3674));
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
            }
            module.exports = exports.default;
        },
        47662: function (module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.default = function (eachfn, arr, iteratee, callback) {
                    (callback = callback || _noop2.default), (arr = arr || []);
                    var results = [],
                        counter = 0,
                        _iteratee = (0, _wrapAsync2.default)(iteratee);
                    eachfn(
                        arr,
                        function (value, _, callback) {
                            var index = counter++;
                            _iteratee(value, function (err, v) {
                                (results[index] = v), callback(err);
                            });
                        },
                        function (err) {
                            callback(err, results);
                        }
                    );
                });
            var _noop2 = _interopRequireDefault(__webpack_require__(50308)),
                _wrapAsync2 = _interopRequireDefault(__webpack_require__(28993));
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
            }
            module.exports = exports.default;
        },
        46979: function (module, exports) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.default = function (fn) {
                    return function () {
                        if (null !== fn) {
                            var callFn = fn;
                            (fn = null), callFn.apply(this, arguments);
                        }
                    };
                }),
                (module.exports = exports.default);
        },
        13362: function (module, exports) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.default = function (fn) {
                    return function () {
                        if (null === fn) throw Error("Callback was already called.");
                        var callFn = fn;
                        (fn = null), callFn.apply(this, arguments);
                    };
                }),
                (module.exports = exports.default);
        },
        73409: function (module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.default = function (eachfn, tasks, callback) {
                    callback = callback || _noop2.default;
                    var results = (0, _isArrayLike2.default)(tasks) ? [] : {};
                    eachfn(
                        tasks,
                        function (task, key, callback) {
                            (0, _wrapAsync2.default)(task)(function (err, result) {
                                arguments.length > 2 && (result = (0, _slice2.default)(arguments, 1)), (results[key] = result), callback(err);
                            });
                        },
                        function (err) {
                            callback(err, results);
                        }
                    );
                });
            var _noop2 = _interopRequireDefault(__webpack_require__(50308)),
                _isArrayLike2 = _interopRequireDefault(__webpack_require__(98612)),
                _slice2 = _interopRequireDefault(__webpack_require__(63033)),
                _wrapAsync2 = _interopRequireDefault(__webpack_require__(28993));
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
            }
            module.exports = exports.default;
        },
        3111: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var obj,
                _defer,
                process = __webpack_require__(34155);
            Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.hasNextTick = exports.hasSetImmediate = void 0), (exports.fallback = fallback), (exports.wrap = wrap);
            var _slice2 = (obj = __webpack_require__(63033)) && obj.__esModule ? obj : { default: obj },
                hasSetImmediate = (exports.hasSetImmediate = "function" == typeof setImmediate && setImmediate),
                hasNextTick = (exports.hasNextTick = "object" == typeof process && "function" == typeof process.nextTick);
            function fallback(fn) {
                setTimeout(fn, 0);
            }
            function wrap(defer) {
                return function (fn) {
                    var args = (0, _slice2.default)(arguments, 1);
                    defer(function () {
                        fn.apply(null, args);
                    });
                };
            }
            (_defer = hasSetImmediate ? setImmediate : hasNextTick ? process.nextTick : fallback), (exports.default = wrap(_defer));
        },
        63033: function (module, exports) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.default = function (arrayLike, start) {
                    start |= 0;
                    for (var newLen = Math.max(arrayLike.length - start, 0), newArr = Array(newLen), idx = 0; idx < newLen; idx++) newArr[idx] = arrayLike[start + idx];
                    return newArr;
                }),
                (module.exports = exports.default);
        },
        36529: function (module, exports) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.default = function (iteratee) {
                    return function (value, index, callback) {
                        return iteratee(value, callback);
                    };
                }),
                (module.exports = exports.default);
        },
        28993: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.isAsync = void 0);
            var obj,
                _asyncify2 = (obj = __webpack_require__(44409)) && obj.__esModule ? obj : { default: obj },
                supportsSymbol = "function" == typeof Symbol;
            function isAsync(fn) {
                return supportsSymbol && "AsyncFunction" === fn[Symbol.toStringTag];
            }
            (exports.default = function (asyncFn) {
                return isAsync(asyncFn) ? (0, _asyncify2.default)(asyncFn) : asyncFn;
            }),
                (exports.isAsync = isAsync);
        },
        94005: function (module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 });
            var _doParallel2 = _interopRequireDefault(__webpack_require__(68468)),
                _map2 = _interopRequireDefault(__webpack_require__(47662));
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
            }
            (exports.default = (0, _doParallel2.default)(_map2.default)), (module.exports = exports.default);
        },
        80047: function (module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.default = function (tasks, callback) {
                    (0, _parallel2.default)(_eachOf2.default, tasks, callback);
                });
            var _eachOf2 = _interopRequireDefault(__webpack_require__(71846)),
                _parallel2 = _interopRequireDefault(__webpack_require__(73409));
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
            }
            module.exports = exports.default;
        },
        7879: function (module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.default = function (tasks, callback) {
                    if (((callback = (0, _once2.default)(callback || _noop2.default)), !(0, _isArray2.default)(tasks))) return callback(Error("First argument to waterfall must be an array of functions"));
                    if (!tasks.length) return callback();
                    var taskIndex = 0;
                    function nextTask(args) {
                        var task = (0, _wrapAsync2.default)(tasks[taskIndex++]);
                        args.push((0, _onlyOnce2.default)(next)), task.apply(null, args);
                    }
                    function next(err) {
                        if (err || taskIndex === tasks.length) return callback.apply(null, arguments);
                        nextTask((0, _slice2.default)(arguments, 1));
                    }
                    nextTask([]);
                });
            var _isArray2 = _interopRequireDefault(__webpack_require__(1469)),
                _noop2 = _interopRequireDefault(__webpack_require__(50308)),
                _once2 = _interopRequireDefault(__webpack_require__(46979)),
                _slice2 = _interopRequireDefault(__webpack_require__(63033)),
                _onlyOnce2 = _interopRequireDefault(__webpack_require__(13362)),
                _wrapAsync2 = _interopRequireDefault(__webpack_require__(28993));
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
            }
            module.exports = exports.default;
        },
        43010: function (module) {
            function Backoff(opts) {
                (opts = opts || {}), (this.ms = opts.min || 100), (this.max = opts.max || 1e4), (this.factor = opts.factor || 2), (this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0), (this.attempts = 0);
            }
            (module.exports = Backoff),
                (Backoff.prototype.duration = function () {
                    var ms = this.ms * Math.pow(this.factor, this.attempts++);
                    if (this.jitter) {
                        var rand = Math.random(),
                            deviation = Math.floor(rand * this.jitter * ms);
                        ms = (1 & Math.floor(10 * rand)) == 0 ? ms - deviation : ms + deviation;
                    }
                    return 0 | Math.min(ms, this.max);
                }),
                (Backoff.prototype.reset = function () {
                    this.attempts = 0;
                }),
                (Backoff.prototype.setMin = function (min) {
                    this.ms = min;
                }),
                (Backoff.prototype.setMax = function (max) {
                    this.max = max;
                }),
                (Backoff.prototype.setJitter = function (jitter) {
                    this.jitter = jitter;
                });
        },
        79742: function (__unused_webpack_module, exports) {
            "use strict";
            (exports.byteLength = function (b64) {
                var lens = getLens(b64),
                    validLen = lens[0],
                    placeHoldersLen = lens[1];
                return ((validLen + placeHoldersLen) * 3) / 4 - placeHoldersLen;
            }),
                (exports.toByteArray = function (b64) {
                    var tmp,
                        i,
                        lens = getLens(b64),
                        validLen = lens[0],
                        placeHoldersLen = lens[1],
                        arr = new Arr(((validLen + placeHoldersLen) * 3) / 4 - placeHoldersLen),
                        curByte = 0,
                        len = placeHoldersLen > 0 ? validLen - 4 : validLen;
                    for (i = 0; i < len; i += 4)
                        (tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]),
                            (arr[curByte++] = (tmp >> 16) & 255),
                            (arr[curByte++] = (tmp >> 8) & 255),
                            (arr[curByte++] = 255 & tmp);
                    return (
                        2 === placeHoldersLen && ((tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)), (arr[curByte++] = 255 & tmp)),
                        1 === placeHoldersLen &&
                            ((tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)), (arr[curByte++] = (tmp >> 8) & 255), (arr[curByte++] = 255 & tmp)),
                        arr
                    );
                }),
                (exports.fromByteArray = function (uint8) {
                    for (var tmp, len = uint8.length, extraBytes = len % 3, parts = [], i = 0, len2 = len - extraBytes; i < len2; i += 16383)
                        parts.push(
                            (function (uint8, start, end) {
                                for (var tmp, output = [], i = start; i < end; i += 3)
                                    output.push(lookup[((tmp = ((uint8[i] << 16) & 16711680) + ((uint8[i + 1] << 8) & 65280) + (255 & uint8[i + 2])) >> 18) & 63] + lookup[(tmp >> 12) & 63] + lookup[(tmp >> 6) & 63] + lookup[63 & tmp]);
                                return output.join("");
                            })(uint8, i, i + 16383 > len2 ? len2 : i + 16383)
                        );
                    return (
                        1 === extraBytes
                            ? parts.push(lookup[(tmp = uint8[len - 1]) >> 2] + lookup[(tmp << 4) & 63] + "==")
                            : 2 === extraBytes && parts.push(lookup[(tmp = (uint8[len - 2] << 8) + uint8[len - 1]) >> 10] + lookup[(tmp >> 4) & 63] + lookup[(tmp << 2) & 63] + "="),
                        parts.join("")
                    );
                });
            for (var lookup = [], revLookup = [], Arr = "undefined" != typeof Uint8Array ? Uint8Array : Array, code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", i = 0, len = code.length; i < len; ++i)
                (lookup[i] = code[i]), (revLookup[code.charCodeAt(i)] = i);
            function getLens(b64) {
                var len = b64.length;
                if (len % 4 > 0) throw Error("Invalid string. Length must be a multiple of 4");
                var validLen = b64.indexOf("=");
                -1 === validLen && (validLen = len);
                var placeHoldersLen = validLen === len ? 0 : 4 - (validLen % 4);
                return [validLen, placeHoldersLen];
            }
            (revLookup["-".charCodeAt(0)] = 62), (revLookup["_".charCodeAt(0)] = 63);
        },
        92882: function (module) {
            "use strict";
            for (var ALPHABET = "qpzry9x8gf2tvdw0s3jn54khce6mua7l", ALPHABET_MAP = {}, z = 0; z < ALPHABET.length; z++) {
                var x = ALPHABET.charAt(z);
                if (void 0 !== ALPHABET_MAP[x]) throw TypeError(x + " is ambiguous");
                ALPHABET_MAP[x] = z;
            }
            function polymodStep(pre) {
                var b = pre >> 25;
                return ((33554431 & pre) << 5) ^ (996825010 & -((b >> 0) & 1)) ^ (642813549 & -((b >> 1) & 1)) ^ (513874426 & -((b >> 2) & 1)) ^ (1027748829 & -((b >> 3) & 1)) ^ (705979059 & -((b >> 4) & 1));
            }
            function prefixChk(prefix) {
                for (var chk = 1, i = 0; i < prefix.length; ++i) {
                    var c = prefix.charCodeAt(i);
                    if (c < 33 || c > 126) return "Invalid prefix (" + prefix + ")";
                    chk = polymodStep(chk) ^ (c >> 5);
                }
                for (i = 0, chk = polymodStep(chk); i < prefix.length; ++i) {
                    var v = prefix.charCodeAt(i);
                    chk = polymodStep(chk) ^ (31 & v);
                }
                return chk;
            }
            function __decode(str, LIMIT) {
                if (((LIMIT = LIMIT || 90), str.length < 8)) return str + " too short";
                if (str.length > LIMIT) return "Exceeds length limit";
                var lowered = str.toLowerCase(),
                    uppered = str.toUpperCase();
                if (str !== lowered && str !== uppered) return "Mixed-case string " + str;
                var split = (str = lowered).lastIndexOf("1");
                if (-1 === split) return "No separator character for " + str;
                if (0 === split) return "Missing prefix for " + str;
                var prefix = str.slice(0, split),
                    wordChars = str.slice(split + 1);
                if (wordChars.length < 6) return "Data too short";
                var chk = prefixChk(prefix);
                if ("string" == typeof chk) return chk;
                for (var words = [], i = 0; i < wordChars.length; ++i) {
                    var c = wordChars.charAt(i),
                        v = ALPHABET_MAP[c];
                    if (void 0 === v) return "Unknown character " + c;
                    (chk = polymodStep(chk) ^ v), i + 6 >= wordChars.length || words.push(v);
                }
                return 1 !== chk ? "Invalid checksum for " + str : { prefix: prefix, words: words };
            }
            function convert(data, inBits, outBits, pad) {
                for (var value = 0, bits = 0, maxV = (1 << outBits) - 1, result = [], i = 0; i < data.length; ++i)
                    for (value = (value << inBits) | data[i], bits += inBits; bits >= outBits; ) result.push((value >> (bits -= outBits)) & maxV);
                if (pad) bits > 0 && result.push((value << (outBits - bits)) & maxV);
                else {
                    if (bits >= inBits) return "Excess padding";
                    if ((value << (outBits - bits)) & maxV) return "Non-zero padding";
                }
                return result;
            }
            module.exports = {
                decodeUnsafe: function () {
                    var res = __decode.apply(null, arguments);
                    if ("object" == typeof res) return res;
                },
                decode: function (str) {
                    var res = __decode.apply(null, arguments);
                    if ("object" == typeof res) return res;
                    throw Error(res);
                },
                encode: function (prefix, words, LIMIT) {
                    if (((LIMIT = LIMIT || 90), prefix.length + 7 + words.length > LIMIT)) throw TypeError("Exceeds length limit");
                    var chk = prefixChk((prefix = prefix.toLowerCase()));
                    if ("string" == typeof chk) throw Error(chk);
                    for (var result = prefix + "1", i = 0; i < words.length; ++i) {
                        var x = words[i];
                        if (x >> 5 != 0) throw Error("Non 5-bit word");
                        (chk = polymodStep(chk) ^ x), (result += ALPHABET.charAt(x));
                    }
                    for (i = 0; i < 6; ++i) chk = polymodStep(chk);
                    for (chk ^= 1, i = 0; i < 6; ++i) {
                        var v = (chk >> ((5 - i) * 5)) & 31;
                        result += ALPHABET.charAt(v);
                    }
                    return result;
                },
                toWordsUnsafe: function (bytes) {
                    var res = convert(bytes, 8, 5, !0);
                    if (Array.isArray(res)) return res;
                },
                toWords: function (bytes) {
                    var res = convert(bytes, 8, 5, !0);
                    if (Array.isArray(res)) return res;
                    throw Error(res);
                },
                fromWordsUnsafe: function (words) {
                    var res = convert(words, 5, 8, !1);
                    if (Array.isArray(res)) return res;
                },
                fromWords: function (words) {
                    var res = convert(words, 5, 8, !1);
                    if (Array.isArray(res)) return res;
                    throw Error(res);
                },
            };
        },
        13550: function (module, __unused_webpack_exports, __webpack_require__) {
            !(function (module, exports) {
                "use strict";
                function assert(val, msg) {
                    if (!val) throw Error(msg || "Assertion failed");
                }
                function inherits(ctor, superCtor) {
                    ctor.super_ = superCtor;
                    var TempCtor = function () {};
                    (TempCtor.prototype = superCtor.prototype), (ctor.prototype = new TempCtor()), (ctor.prototype.constructor = ctor);
                }
                function BN(number, base, endian) {
                    if (BN.isBN(number)) return number;
                    (this.negative = 0),
                        (this.words = null),
                        (this.length = 0),
                        (this.red = null),
                        null !== number && (("le" === base || "be" === base) && ((endian = base), (base = 10)), this._init(number || 0, base || 10, endian || "be"));
                }
                "object" == typeof module ? (module.exports = BN) : (exports.BN = BN), (BN.BN = BN), (BN.wordSize = 26);
                try {
                    Buffer = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : __webpack_require__(46601).Buffer;
                } catch (e) {}
                function parseHex4Bits(string, index) {
                    var c = string.charCodeAt(index);
                    return c >= 65 && c <= 70 ? c - 55 : c >= 97 && c <= 102 ? c - 87 : (c - 48) & 15;
                }
                function parseHexByte(string, lowerBound, index) {
                    var r = parseHex4Bits(string, index);
                    return index - 1 >= lowerBound && (r |= parseHex4Bits(string, index - 1) << 4), r;
                }
                function parseBase(str, start, end, mul) {
                    for (var r = 0, len = Math.min(str.length, end), i = start; i < len; i++) {
                        var c = str.charCodeAt(i) - 48;
                        (r *= mul), c >= 49 ? (r += c - 49 + 10) : c >= 17 ? (r += c - 17 + 10) : (r += c);
                    }
                    return r;
                }
                (BN.isBN = function (num) {
                    return num instanceof BN || (null !== num && "object" == typeof num && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words));
                }),
                    (BN.max = function (left, right) {
                        return left.cmp(right) > 0 ? left : right;
                    }),
                    (BN.min = function (left, right) {
                        return 0 > left.cmp(right) ? left : right;
                    }),
                    (BN.prototype._init = function (number, base, endian) {
                        if ("number" == typeof number) return this._initNumber(number, base, endian);
                        if ("object" == typeof number) return this._initArray(number, base, endian);
                        "hex" === base && (base = 16), assert(base === (0 | base) && base >= 2 && base <= 36);
                        var start = 0;
                        "-" === (number = number.toString().replace(/\s+/g, ""))[0] && (start++, (this.negative = 1)),
                            start < number.length && (16 === base ? this._parseHex(number, start, endian) : (this._parseBase(number, base, start), "le" === endian && this._initArray(this.toArray(), base, endian)));
                    }),
                    (BN.prototype._initNumber = function (number, base, endian) {
                        number < 0 && ((this.negative = 1), (number = -number)),
                            number < 67108864
                                ? ((this.words = [67108863 & number]), (this.length = 1))
                                : number < 4503599627370496
                                ? ((this.words = [67108863 & number, (number / 67108864) & 67108863]), (this.length = 2))
                                : (assert(number < 9007199254740992), (this.words = [67108863 & number, (number / 67108864) & 67108863, 1]), (this.length = 3)),
                            "le" === endian && this._initArray(this.toArray(), base, endian);
                    }),
                    (BN.prototype._initArray = function (number, base, endian) {
                        if ((assert("number" == typeof number.length), number.length <= 0)) return (this.words = [0]), (this.length = 1), this;
                        (this.length = Math.ceil(number.length / 3)), (this.words = Array(this.length));
                        for (var j, w, i = 0; i < this.length; i++) this.words[i] = 0;
                        var off = 0;
                        if ("be" === endian)
                            for (i = number.length - 1, j = 0; i >= 0; i -= 3)
                                (w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16)), (this.words[j] |= (w << off) & 67108863), (this.words[j + 1] = (w >>> (26 - off)) & 67108863), (off += 24) >= 26 && ((off -= 26), j++);
                        else if ("le" === endian)
                            for (i = 0, j = 0; i < number.length; i += 3)
                                (w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16)), (this.words[j] |= (w << off) & 67108863), (this.words[j + 1] = (w >>> (26 - off)) & 67108863), (off += 24) >= 26 && ((off -= 26), j++);
                        return this.strip();
                    }),
                    (BN.prototype._parseHex = function (number, start, endian) {
                        (this.length = Math.ceil((number.length - start) / 6)), (this.words = Array(this.length));
                        for (var w, i = 0; i < this.length; i++) this.words[i] = 0;
                        var off = 0,
                            j = 0;
                        if ("be" === endian)
                            for (i = number.length - 1; i >= start; i -= 2) (w = parseHexByte(number, start, i) << off), (this.words[j] |= 67108863 & w), off >= 18 ? ((off -= 18), (j += 1), (this.words[j] |= w >>> 26)) : (off += 8);
                        else
                            for (i = (number.length - start) % 2 == 0 ? start + 1 : start; i < number.length; i += 2)
                                (w = parseHexByte(number, start, i) << off), (this.words[j] |= 67108863 & w), off >= 18 ? ((off -= 18), (j += 1), (this.words[j] |= w >>> 26)) : (off += 8);
                        this.strip();
                    }),
                    (BN.prototype._parseBase = function (number, base, start) {
                        (this.words = [0]), (this.length = 1);
                        for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base) limbLen++;
                        limbLen--, (limbPow = (limbPow / base) | 0);
                        for (var total = number.length - start, mod = total % limbLen, end = Math.min(total, total - mod) + start, word = 0, i = start; i < end; i += limbLen)
                            (word = parseBase(number, i, i + limbLen, base)), this.imuln(limbPow), this.words[0] + word < 67108864 ? (this.words[0] += word) : this._iaddn(word);
                        if (0 !== mod) {
                            var pow = 1;
                            for (word = parseBase(number, i, number.length, base), i = 0; i < mod; i++) pow *= base;
                            this.imuln(pow), this.words[0] + word < 67108864 ? (this.words[0] += word) : this._iaddn(word);
                        }
                        this.strip();
                    }),
                    (BN.prototype.copy = function (dest) {
                        dest.words = Array(this.length);
                        for (var i = 0; i < this.length; i++) dest.words[i] = this.words[i];
                        (dest.length = this.length), (dest.negative = this.negative), (dest.red = this.red);
                    }),
                    (BN.prototype.clone = function () {
                        var r = new BN(null);
                        return this.copy(r), r;
                    }),
                    (BN.prototype._expand = function (size) {
                        for (; this.length < size; ) this.words[this.length++] = 0;
                        return this;
                    }),
                    (BN.prototype.strip = function () {
                        for (; this.length > 1 && 0 === this.words[this.length - 1]; ) this.length--;
                        return this._normSign();
                    }),
                    (BN.prototype._normSign = function () {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
                    }),
                    (BN.prototype.inspect = function () {
                        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
                    });
                var Buffer,
                    zeros = [
                        "",
                        "0",
                        "00",
                        "000",
                        "0000",
                        "00000",
                        "000000",
                        "0000000",
                        "00000000",
                        "000000000",
                        "0000000000",
                        "00000000000",
                        "000000000000",
                        "0000000000000",
                        "00000000000000",
                        "000000000000000",
                        "0000000000000000",
                        "00000000000000000",
                        "000000000000000000",
                        "0000000000000000000",
                        "00000000000000000000",
                        "000000000000000000000",
                        "0000000000000000000000",
                        "00000000000000000000000",
                        "000000000000000000000000",
                        "0000000000000000000000000",
                    ],
                    groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                    groupBases = [
                        0,
                        0,
                        33554432,
                        43046721,
                        16777216,
                        48828125,
                        60466176,
                        40353607,
                        16777216,
                        43046721,
                        1e7,
                        19487171,
                        35831808,
                        62748517,
                        7529536,
                        11390625,
                        16777216,
                        24137569,
                        34012224,
                        47045881,
                        64e6,
                        4084101,
                        5153632,
                        6436343,
                        7962624,
                        9765625,
                        11881376,
                        14348907,
                        17210368,
                        20511149,
                        243e5,
                        28629151,
                        33554432,
                        39135393,
                        45435424,
                        52521875,
                        60466176,
                    ];
                function smallMulTo(self1, num, out) {
                    out.negative = num.negative ^ self1.negative;
                    var len = (self1.length + num.length) | 0;
                    (out.length = len), (len = (len - 1) | 0);
                    var a = 0 | self1.words[0],
                        b = 0 | num.words[0],
                        r = a * b,
                        lo = 67108863 & r,
                        carry = (r / 67108864) | 0;
                    out.words[0] = lo;
                    for (var k = 1; k < len; k++) {
                        for (var ncarry = carry >>> 26, rword = 67108863 & carry, maxJ = Math.min(k, num.length - 1), j = Math.max(0, k - self1.length + 1); j <= maxJ; j++) {
                            var i = (k - j) | 0;
                            (ncarry += ((r = (a = 0 | self1.words[i]) * (b = 0 | num.words[j]) + rword) / 67108864) | 0), (rword = 67108863 & r);
                        }
                        (out.words[k] = 0 | rword), (carry = 0 | ncarry);
                    }
                    return 0 !== carry ? (out.words[k] = 0 | carry) : out.length--, out.strip();
                }
                (BN.prototype.toString = function (base, padding) {
                    if (((padding = 0 | padding || 1), 16 === (base = base || 10) || "hex" === base)) {
                        out = "";
                        for (var out, off = 0, carry = 0, i = 0; i < this.length; i++) {
                            var w = this.words[i],
                                word = (((w << off) | carry) & 16777215).toString(16);
                            (out = 0 != (carry = (w >>> (24 - off)) & 16777215) || i !== this.length - 1 ? zeros[6 - word.length] + word + out : word + out), (off += 2) >= 26 && ((off -= 26), i--);
                        }
                        for (0 !== carry && (out = carry.toString(16) + out); out.length % padding != 0; ) out = "0" + out;
                        return 0 !== this.negative && (out = "-" + out), out;
                    }
                    if (base === (0 | base) && base >= 2 && base <= 36) {
                        var groupSize = groupSizes[base],
                            groupBase = groupBases[base];
                        out = "";
                        var c = this.clone();
                        for (c.negative = 0; !c.isZero(); ) {
                            var r = c.modn(groupBase).toString(base);
                            out = (c = c.idivn(groupBase)).isZero() ? r + out : zeros[groupSize - r.length] + r + out;
                        }
                        for (this.isZero() && (out = "0" + out); out.length % padding != 0; ) out = "0" + out;
                        return 0 !== this.negative && (out = "-" + out), out;
                    }
                    assert(!1, "Base should be between 2 and 36");
                }),
                    (BN.prototype.toNumber = function () {
                        var ret = this.words[0];
                        return (
                            2 === this.length
                                ? (ret += 67108864 * this.words[1])
                                : 3 === this.length && 1 === this.words[2]
                                ? (ret += 4503599627370496 + 67108864 * this.words[1])
                                : this.length > 2 && assert(!1, "Number can only safely store up to 53 bits"),
                            0 !== this.negative ? -ret : ret
                        );
                    }),
                    (BN.prototype.toJSON = function () {
                        return this.toString(16);
                    }),
                    (BN.prototype.toBuffer = function (endian, length) {
                        return assert(void 0 !== Buffer), this.toArrayLike(Buffer, endian, length);
                    }),
                    (BN.prototype.toArray = function (endian, length) {
                        return this.toArrayLike(Array, endian, length);
                    }),
                    (BN.prototype.toArrayLike = function (ArrayType, endian, length) {
                        var b,
                            i,
                            byteLength = this.byteLength(),
                            reqLength = length || Math.max(1, byteLength);
                        assert(byteLength <= reqLength, "byte array longer than desired length"), assert(reqLength > 0, "Requested array length <= 0"), this.strip();
                        var res = new ArrayType(reqLength),
                            q = this.clone();
                        if ("le" === endian) {
                            for (i = 0; !q.isZero(); i++) (b = q.andln(255)), q.iushrn(8), (res[i] = b);
                            for (; i < reqLength; i++) res[i] = 0;
                        } else {
                            for (i = 0; i < reqLength - byteLength; i++) res[i] = 0;
                            for (i = 0; !q.isZero(); i++) (b = q.andln(255)), q.iushrn(8), (res[reqLength - i - 1] = b);
                        }
                        return res;
                    }),
                    Math.clz32
                        ? (BN.prototype._countBits = function (w) {
                              return 32 - Math.clz32(w);
                          })
                        : (BN.prototype._countBits = function (w) {
                              var t = w,
                                  r = 0;
                              return t >= 4096 && ((r += 13), (t >>>= 13)), t >= 64 && ((r += 7), (t >>>= 7)), t >= 8 && ((r += 4), (t >>>= 4)), t >= 2 && ((r += 2), (t >>>= 2)), r + t;
                          }),
                    (BN.prototype._zeroBits = function (w) {
                        if (0 === w) return 26;
                        var t = w,
                            r = 0;
                        return (8191 & t) == 0 && ((r += 13), (t >>>= 13)), (127 & t) == 0 && ((r += 7), (t >>>= 7)), (15 & t) == 0 && ((r += 4), (t >>>= 4)), (3 & t) == 0 && ((r += 2), (t >>>= 2)), (1 & t) == 0 && r++, r;
                    }),
                    (BN.prototype.bitLength = function () {
                        var w = this.words[this.length - 1],
                            hi = this._countBits(w);
                        return (this.length - 1) * 26 + hi;
                    }),
                    (BN.prototype.zeroBits = function () {
                        if (this.isZero()) return 0;
                        for (var r = 0, i = 0; i < this.length; i++) {
                            var b = this._zeroBits(this.words[i]);
                            if (((r += b), 26 !== b)) break;
                        }
                        return r;
                    }),
                    (BN.prototype.byteLength = function () {
                        return Math.ceil(this.bitLength() / 8);
                    }),
                    (BN.prototype.toTwos = function (width) {
                        return 0 !== this.negative ? this.abs().inotn(width).iaddn(1) : this.clone();
                    }),
                    (BN.prototype.fromTwos = function (width) {
                        return this.testn(width - 1) ? this.notn(width).iaddn(1).ineg() : this.clone();
                    }),
                    (BN.prototype.isNeg = function () {
                        return 0 !== this.negative;
                    }),
                    (BN.prototype.neg = function () {
                        return this.clone().ineg();
                    }),
                    (BN.prototype.ineg = function () {
                        return this.isZero() || (this.negative ^= 1), this;
                    }),
                    (BN.prototype.iuor = function (num) {
                        for (; this.length < num.length; ) this.words[this.length++] = 0;
                        for (var i = 0; i < num.length; i++) this.words[i] = this.words[i] | num.words[i];
                        return this.strip();
                    }),
                    (BN.prototype.ior = function (num) {
                        return assert((this.negative | num.negative) == 0), this.iuor(num);
                    }),
                    (BN.prototype.or = function (num) {
                        return this.length > num.length ? this.clone().ior(num) : num.clone().ior(this);
                    }),
                    (BN.prototype.uor = function (num) {
                        return this.length > num.length ? this.clone().iuor(num) : num.clone().iuor(this);
                    }),
                    (BN.prototype.iuand = function (num) {
                        var b;
                        b = this.length > num.length ? num : this;
                        for (var i = 0; i < b.length; i++) this.words[i] = this.words[i] & num.words[i];
                        return (this.length = b.length), this.strip();
                    }),
                    (BN.prototype.iand = function (num) {
                        return assert((this.negative | num.negative) == 0), this.iuand(num);
                    }),
                    (BN.prototype.and = function (num) {
                        return this.length > num.length ? this.clone().iand(num) : num.clone().iand(this);
                    }),
                    (BN.prototype.uand = function (num) {
                        return this.length > num.length ? this.clone().iuand(num) : num.clone().iuand(this);
                    }),
                    (BN.prototype.iuxor = function (num) {
                        this.length > num.length ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var a, b, i = 0; i < b.length; i++) this.words[i] = a.words[i] ^ b.words[i];
                        if (this !== a) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return (this.length = a.length), this.strip();
                    }),
                    (BN.prototype.ixor = function (num) {
                        return assert((this.negative | num.negative) == 0), this.iuxor(num);
                    }),
                    (BN.prototype.xor = function (num) {
                        return this.length > num.length ? this.clone().ixor(num) : num.clone().ixor(this);
                    }),
                    (BN.prototype.uxor = function (num) {
                        return this.length > num.length ? this.clone().iuxor(num) : num.clone().iuxor(this);
                    }),
                    (BN.prototype.inotn = function (width) {
                        assert("number" == typeof width && width >= 0);
                        var bytesNeeded = 0 | Math.ceil(width / 26),
                            bitsLeft = width % 26;
                        this._expand(bytesNeeded), bitsLeft > 0 && bytesNeeded--;
                        for (var i = 0; i < bytesNeeded; i++) this.words[i] = 67108863 & ~this.words[i];
                        return bitsLeft > 0 && (this.words[i] = ~this.words[i] & (67108863 >> (26 - bitsLeft))), this.strip();
                    }),
                    (BN.prototype.notn = function (width) {
                        return this.clone().inotn(width);
                    }),
                    (BN.prototype.setn = function (bit, val) {
                        assert("number" == typeof bit && bit >= 0);
                        var off = (bit / 26) | 0,
                            wbit = bit % 26;
                        return this._expand(off + 1), val ? (this.words[off] = this.words[off] | (1 << wbit)) : (this.words[off] = this.words[off] & ~(1 << wbit)), this.strip();
                    }),
                    (BN.prototype.iadd = function (num) {
                        if (0 !== this.negative && 0 === num.negative) return (this.negative = 0), (r = this.isub(num)), (this.negative ^= 1), this._normSign();
                        if (0 === this.negative && 0 !== num.negative) return (num.negative = 0), (r = this.isub(num)), (num.negative = 1), r._normSign();
                        this.length > num.length ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var r, a, b, carry = 0, i = 0; i < b.length; i++) (r = (0 | a.words[i]) + (0 | b.words[i]) + carry), (this.words[i] = 67108863 & r), (carry = r >>> 26);
                        for (; 0 !== carry && i < a.length; i++) (r = (0 | a.words[i]) + carry), (this.words[i] = 67108863 & r), (carry = r >>> 26);
                        if (((this.length = a.length), 0 !== carry)) (this.words[this.length] = carry), this.length++;
                        else if (a !== this) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return this;
                    }),
                    (BN.prototype.add = function (num) {
                        var res;
                        return 0 !== num.negative && 0 === this.negative
                            ? ((num.negative = 0), (res = this.sub(num)), (num.negative ^= 1), res)
                            : 0 === num.negative && 0 !== this.negative
                            ? ((this.negative = 0), (res = num.sub(this)), (this.negative = 1), res)
                            : this.length > num.length
                            ? this.clone().iadd(num)
                            : num.clone().iadd(this);
                    }),
                    (BN.prototype.isub = function (num) {
                        if (0 !== num.negative) {
                            num.negative = 0;
                            var a,
                                b,
                                r = this.iadd(num);
                            return (num.negative = 1), r._normSign();
                        }
                        if (0 !== this.negative) return (this.negative = 0), this.iadd(num), (this.negative = 1), this._normSign();
                        var cmp = this.cmp(num);
                        if (0 === cmp) return (this.negative = 0), (this.length = 1), (this.words[0] = 0), this;
                        cmp > 0 ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var carry = 0, i = 0; i < b.length; i++) (carry = (r = (0 | a.words[i]) - (0 | b.words[i]) + carry) >> 26), (this.words[i] = 67108863 & r);
                        for (; 0 !== carry && i < a.length; i++) (carry = (r = (0 | a.words[i]) + carry) >> 26), (this.words[i] = 67108863 & r);
                        if (0 === carry && i < a.length && a !== this) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return (this.length = Math.max(this.length, i)), a !== this && (this.negative = 1), this.strip();
                    }),
                    (BN.prototype.sub = function (num) {
                        return this.clone().isub(num);
                    });
                var comb10MulTo = function (self1, num, out) {
                    var lo,
                        mid,
                        hi,
                        a = self1.words,
                        b = num.words,
                        o = out.words,
                        c = 0,
                        a0 = 0 | a[0],
                        al0 = 8191 & a0,
                        ah0 = a0 >>> 13,
                        a1 = 0 | a[1],
                        al1 = 8191 & a1,
                        ah1 = a1 >>> 13,
                        a2 = 0 | a[2],
                        al2 = 8191 & a2,
                        ah2 = a2 >>> 13,
                        a3 = 0 | a[3],
                        al3 = 8191 & a3,
                        ah3 = a3 >>> 13,
                        a4 = 0 | a[4],
                        al4 = 8191 & a4,
                        ah4 = a4 >>> 13,
                        a5 = 0 | a[5],
                        al5 = 8191 & a5,
                        ah5 = a5 >>> 13,
                        a6 = 0 | a[6],
                        al6 = 8191 & a6,
                        ah6 = a6 >>> 13,
                        a7 = 0 | a[7],
                        al7 = 8191 & a7,
                        ah7 = a7 >>> 13,
                        a8 = 0 | a[8],
                        al8 = 8191 & a8,
                        ah8 = a8 >>> 13,
                        a9 = 0 | a[9],
                        al9 = 8191 & a9,
                        ah9 = a9 >>> 13,
                        b0 = 0 | b[0],
                        bl0 = 8191 & b0,
                        bh0 = b0 >>> 13,
                        b1 = 0 | b[1],
                        bl1 = 8191 & b1,
                        bh1 = b1 >>> 13,
                        b2 = 0 | b[2],
                        bl2 = 8191 & b2,
                        bh2 = b2 >>> 13,
                        b3 = 0 | b[3],
                        bl3 = 8191 & b3,
                        bh3 = b3 >>> 13,
                        b4 = 0 | b[4],
                        bl4 = 8191 & b4,
                        bh4 = b4 >>> 13,
                        b5 = 0 | b[5],
                        bl5 = 8191 & b5,
                        bh5 = b5 >>> 13,
                        b6 = 0 | b[6],
                        bl6 = 8191 & b6,
                        bh6 = b6 >>> 13,
                        b7 = 0 | b[7],
                        bl7 = 8191 & b7,
                        bh7 = b7 >>> 13,
                        b8 = 0 | b[8],
                        bl8 = 8191 & b8,
                        bh8 = b8 >>> 13,
                        b9 = 0 | b[9],
                        bl9 = 8191 & b9,
                        bh9 = b9 >>> 13;
                    (out.negative = self1.negative ^ num.negative), (out.length = 19);
                    var w0 = (((c + (lo = Math.imul(al0, bl0))) | 0) + ((8191 & (mid = ((mid = Math.imul(al0, bh0)) + Math.imul(ah0, bl0)) | 0)) << 13)) | 0;
                    (c = ((((hi = Math.imul(ah0, bh0)) + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0), (w0 &= 67108863), (lo = Math.imul(al1, bl0)), (mid = ((mid = Math.imul(al1, bh0)) + Math.imul(ah1, bl0)) | 0), (hi = Math.imul(ah1, bh0));
                    var w1 = (((c + (lo = (lo + Math.imul(al0, bl1)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh1)) | 0) + Math.imul(ah0, bl1)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh1)) | 0) + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0),
                        (w1 &= 67108863),
                        (lo = Math.imul(al2, bl0)),
                        (mid = ((mid = Math.imul(al2, bh0)) + Math.imul(ah2, bl0)) | 0),
                        (hi = Math.imul(ah2, bh0)),
                        (lo = (lo + Math.imul(al1, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh1)) | 0) + Math.imul(ah1, bl1)) | 0),
                        (hi = (hi + Math.imul(ah1, bh1)) | 0);
                    var w2 = (((c + (lo = (lo + Math.imul(al0, bl2)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh2)) | 0) + Math.imul(ah0, bl2)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh2)) | 0) + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0),
                        (w2 &= 67108863),
                        (lo = Math.imul(al3, bl0)),
                        (mid = ((mid = Math.imul(al3, bh0)) + Math.imul(ah3, bl0)) | 0),
                        (hi = Math.imul(ah3, bh0)),
                        (lo = (lo + Math.imul(al2, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh1)) | 0) + Math.imul(ah2, bl1)) | 0),
                        (hi = (hi + Math.imul(ah2, bh1)) | 0),
                        (lo = (lo + Math.imul(al1, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh2)) | 0) + Math.imul(ah1, bl2)) | 0),
                        (hi = (hi + Math.imul(ah1, bh2)) | 0);
                    var w3 = (((c + (lo = (lo + Math.imul(al0, bl3)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh3)) | 0) + Math.imul(ah0, bl3)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh3)) | 0) + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0),
                        (w3 &= 67108863),
                        (lo = Math.imul(al4, bl0)),
                        (mid = ((mid = Math.imul(al4, bh0)) + Math.imul(ah4, bl0)) | 0),
                        (hi = Math.imul(ah4, bh0)),
                        (lo = (lo + Math.imul(al3, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh1)) | 0) + Math.imul(ah3, bl1)) | 0),
                        (hi = (hi + Math.imul(ah3, bh1)) | 0),
                        (lo = (lo + Math.imul(al2, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh2)) | 0) + Math.imul(ah2, bl2)) | 0),
                        (hi = (hi + Math.imul(ah2, bh2)) | 0),
                        (lo = (lo + Math.imul(al1, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh3)) | 0) + Math.imul(ah1, bl3)) | 0),
                        (hi = (hi + Math.imul(ah1, bh3)) | 0);
                    var w4 = (((c + (lo = (lo + Math.imul(al0, bl4)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh4)) | 0) + Math.imul(ah0, bl4)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh4)) | 0) + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0),
                        (w4 &= 67108863),
                        (lo = Math.imul(al5, bl0)),
                        (mid = ((mid = Math.imul(al5, bh0)) + Math.imul(ah5, bl0)) | 0),
                        (hi = Math.imul(ah5, bh0)),
                        (lo = (lo + Math.imul(al4, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh1)) | 0) + Math.imul(ah4, bl1)) | 0),
                        (hi = (hi + Math.imul(ah4, bh1)) | 0),
                        (lo = (lo + Math.imul(al3, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh2)) | 0) + Math.imul(ah3, bl2)) | 0),
                        (hi = (hi + Math.imul(ah3, bh2)) | 0),
                        (lo = (lo + Math.imul(al2, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh3)) | 0) + Math.imul(ah2, bl3)) | 0),
                        (hi = (hi + Math.imul(ah2, bh3)) | 0),
                        (lo = (lo + Math.imul(al1, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh4)) | 0) + Math.imul(ah1, bl4)) | 0),
                        (hi = (hi + Math.imul(ah1, bh4)) | 0);
                    var w5 = (((c + (lo = (lo + Math.imul(al0, bl5)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh5)) | 0) + Math.imul(ah0, bl5)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh5)) | 0) + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0),
                        (w5 &= 67108863),
                        (lo = Math.imul(al6, bl0)),
                        (mid = ((mid = Math.imul(al6, bh0)) + Math.imul(ah6, bl0)) | 0),
                        (hi = Math.imul(ah6, bh0)),
                        (lo = (lo + Math.imul(al5, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh1)) | 0) + Math.imul(ah5, bl1)) | 0),
                        (hi = (hi + Math.imul(ah5, bh1)) | 0),
                        (lo = (lo + Math.imul(al4, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh2)) | 0) + Math.imul(ah4, bl2)) | 0),
                        (hi = (hi + Math.imul(ah4, bh2)) | 0),
                        (lo = (lo + Math.imul(al3, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh3)) | 0) + Math.imul(ah3, bl3)) | 0),
                        (hi = (hi + Math.imul(ah3, bh3)) | 0),
                        (lo = (lo + Math.imul(al2, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh4)) | 0) + Math.imul(ah2, bl4)) | 0),
                        (hi = (hi + Math.imul(ah2, bh4)) | 0),
                        (lo = (lo + Math.imul(al1, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh5)) | 0) + Math.imul(ah1, bl5)) | 0),
                        (hi = (hi + Math.imul(ah1, bh5)) | 0);
                    var w6 = (((c + (lo = (lo + Math.imul(al0, bl6)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh6)) | 0) + Math.imul(ah0, bl6)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh6)) | 0) + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0),
                        (w6 &= 67108863),
                        (lo = Math.imul(al7, bl0)),
                        (mid = ((mid = Math.imul(al7, bh0)) + Math.imul(ah7, bl0)) | 0),
                        (hi = Math.imul(ah7, bh0)),
                        (lo = (lo + Math.imul(al6, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh1)) | 0) + Math.imul(ah6, bl1)) | 0),
                        (hi = (hi + Math.imul(ah6, bh1)) | 0),
                        (lo = (lo + Math.imul(al5, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh2)) | 0) + Math.imul(ah5, bl2)) | 0),
                        (hi = (hi + Math.imul(ah5, bh2)) | 0),
                        (lo = (lo + Math.imul(al4, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh3)) | 0) + Math.imul(ah4, bl3)) | 0),
                        (hi = (hi + Math.imul(ah4, bh3)) | 0),
                        (lo = (lo + Math.imul(al3, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh4)) | 0) + Math.imul(ah3, bl4)) | 0),
                        (hi = (hi + Math.imul(ah3, bh4)) | 0),
                        (lo = (lo + Math.imul(al2, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh5)) | 0) + Math.imul(ah2, bl5)) | 0),
                        (hi = (hi + Math.imul(ah2, bh5)) | 0),
                        (lo = (lo + Math.imul(al1, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh6)) | 0) + Math.imul(ah1, bl6)) | 0),
                        (hi = (hi + Math.imul(ah1, bh6)) | 0);
                    var w7 = (((c + (lo = (lo + Math.imul(al0, bl7)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh7)) | 0) + Math.imul(ah0, bl7)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh7)) | 0) + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0),
                        (w7 &= 67108863),
                        (lo = Math.imul(al8, bl0)),
                        (mid = ((mid = Math.imul(al8, bh0)) + Math.imul(ah8, bl0)) | 0),
                        (hi = Math.imul(ah8, bh0)),
                        (lo = (lo + Math.imul(al7, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh1)) | 0) + Math.imul(ah7, bl1)) | 0),
                        (hi = (hi + Math.imul(ah7, bh1)) | 0),
                        (lo = (lo + Math.imul(al6, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh2)) | 0) + Math.imul(ah6, bl2)) | 0),
                        (hi = (hi + Math.imul(ah6, bh2)) | 0),
                        (lo = (lo + Math.imul(al5, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh3)) | 0) + Math.imul(ah5, bl3)) | 0),
                        (hi = (hi + Math.imul(ah5, bh3)) | 0),
                        (lo = (lo + Math.imul(al4, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh4)) | 0) + Math.imul(ah4, bl4)) | 0),
                        (hi = (hi + Math.imul(ah4, bh4)) | 0),
                        (lo = (lo + Math.imul(al3, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh5)) | 0) + Math.imul(ah3, bl5)) | 0),
                        (hi = (hi + Math.imul(ah3, bh5)) | 0),
                        (lo = (lo + Math.imul(al2, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh6)) | 0) + Math.imul(ah2, bl6)) | 0),
                        (hi = (hi + Math.imul(ah2, bh6)) | 0),
                        (lo = (lo + Math.imul(al1, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh7)) | 0) + Math.imul(ah1, bl7)) | 0),
                        (hi = (hi + Math.imul(ah1, bh7)) | 0);
                    var w8 = (((c + (lo = (lo + Math.imul(al0, bl8)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh8)) | 0) + Math.imul(ah0, bl8)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh8)) | 0) + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0),
                        (w8 &= 67108863),
                        (lo = Math.imul(al9, bl0)),
                        (mid = ((mid = Math.imul(al9, bh0)) + Math.imul(ah9, bl0)) | 0),
                        (hi = Math.imul(ah9, bh0)),
                        (lo = (lo + Math.imul(al8, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh1)) | 0) + Math.imul(ah8, bl1)) | 0),
                        (hi = (hi + Math.imul(ah8, bh1)) | 0),
                        (lo = (lo + Math.imul(al7, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh2)) | 0) + Math.imul(ah7, bl2)) | 0),
                        (hi = (hi + Math.imul(ah7, bh2)) | 0),
                        (lo = (lo + Math.imul(al6, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh3)) | 0) + Math.imul(ah6, bl3)) | 0),
                        (hi = (hi + Math.imul(ah6, bh3)) | 0),
                        (lo = (lo + Math.imul(al5, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh4)) | 0) + Math.imul(ah5, bl4)) | 0),
                        (hi = (hi + Math.imul(ah5, bh4)) | 0),
                        (lo = (lo + Math.imul(al4, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh5)) | 0) + Math.imul(ah4, bl5)) | 0),
                        (hi = (hi + Math.imul(ah4, bh5)) | 0),
                        (lo = (lo + Math.imul(al3, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh6)) | 0) + Math.imul(ah3, bl6)) | 0),
                        (hi = (hi + Math.imul(ah3, bh6)) | 0),
                        (lo = (lo + Math.imul(al2, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh7)) | 0) + Math.imul(ah2, bl7)) | 0),
                        (hi = (hi + Math.imul(ah2, bh7)) | 0),
                        (lo = (lo + Math.imul(al1, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh8)) | 0) + Math.imul(ah1, bl8)) | 0),
                        (hi = (hi + Math.imul(ah1, bh8)) | 0);
                    var w9 = (((c + (lo = (lo + Math.imul(al0, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh9)) | 0) + Math.imul(ah0, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh9)) | 0) + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0),
                        (w9 &= 67108863),
                        (lo = Math.imul(al9, bl1)),
                        (mid = ((mid = Math.imul(al9, bh1)) + Math.imul(ah9, bl1)) | 0),
                        (hi = Math.imul(ah9, bh1)),
                        (lo = (lo + Math.imul(al8, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh2)) | 0) + Math.imul(ah8, bl2)) | 0),
                        (hi = (hi + Math.imul(ah8, bh2)) | 0),
                        (lo = (lo + Math.imul(al7, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh3)) | 0) + Math.imul(ah7, bl3)) | 0),
                        (hi = (hi + Math.imul(ah7, bh3)) | 0),
                        (lo = (lo + Math.imul(al6, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh4)) | 0) + Math.imul(ah6, bl4)) | 0),
                        (hi = (hi + Math.imul(ah6, bh4)) | 0),
                        (lo = (lo + Math.imul(al5, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh5)) | 0) + Math.imul(ah5, bl5)) | 0),
                        (hi = (hi + Math.imul(ah5, bh5)) | 0),
                        (lo = (lo + Math.imul(al4, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh6)) | 0) + Math.imul(ah4, bl6)) | 0),
                        (hi = (hi + Math.imul(ah4, bh6)) | 0),
                        (lo = (lo + Math.imul(al3, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh7)) | 0) + Math.imul(ah3, bl7)) | 0),
                        (hi = (hi + Math.imul(ah3, bh7)) | 0),
                        (lo = (lo + Math.imul(al2, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh8)) | 0) + Math.imul(ah2, bl8)) | 0),
                        (hi = (hi + Math.imul(ah2, bh8)) | 0);
                    var w10 = (((c + (lo = (lo + Math.imul(al1, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al1, bh9)) | 0) + Math.imul(ah1, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah1, bh9)) | 0) + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0),
                        (w10 &= 67108863),
                        (lo = Math.imul(al9, bl2)),
                        (mid = ((mid = Math.imul(al9, bh2)) + Math.imul(ah9, bl2)) | 0),
                        (hi = Math.imul(ah9, bh2)),
                        (lo = (lo + Math.imul(al8, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh3)) | 0) + Math.imul(ah8, bl3)) | 0),
                        (hi = (hi + Math.imul(ah8, bh3)) | 0),
                        (lo = (lo + Math.imul(al7, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh4)) | 0) + Math.imul(ah7, bl4)) | 0),
                        (hi = (hi + Math.imul(ah7, bh4)) | 0),
                        (lo = (lo + Math.imul(al6, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh5)) | 0) + Math.imul(ah6, bl5)) | 0),
                        (hi = (hi + Math.imul(ah6, bh5)) | 0),
                        (lo = (lo + Math.imul(al5, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh6)) | 0) + Math.imul(ah5, bl6)) | 0),
                        (hi = (hi + Math.imul(ah5, bh6)) | 0),
                        (lo = (lo + Math.imul(al4, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh7)) | 0) + Math.imul(ah4, bl7)) | 0),
                        (hi = (hi + Math.imul(ah4, bh7)) | 0),
                        (lo = (lo + Math.imul(al3, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh8)) | 0) + Math.imul(ah3, bl8)) | 0),
                        (hi = (hi + Math.imul(ah3, bh8)) | 0);
                    var w11 = (((c + (lo = (lo + Math.imul(al2, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al2, bh9)) | 0) + Math.imul(ah2, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah2, bh9)) | 0) + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0),
                        (w11 &= 67108863),
                        (lo = Math.imul(al9, bl3)),
                        (mid = ((mid = Math.imul(al9, bh3)) + Math.imul(ah9, bl3)) | 0),
                        (hi = Math.imul(ah9, bh3)),
                        (lo = (lo + Math.imul(al8, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh4)) | 0) + Math.imul(ah8, bl4)) | 0),
                        (hi = (hi + Math.imul(ah8, bh4)) | 0),
                        (lo = (lo + Math.imul(al7, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh5)) | 0) + Math.imul(ah7, bl5)) | 0),
                        (hi = (hi + Math.imul(ah7, bh5)) | 0),
                        (lo = (lo + Math.imul(al6, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh6)) | 0) + Math.imul(ah6, bl6)) | 0),
                        (hi = (hi + Math.imul(ah6, bh6)) | 0),
                        (lo = (lo + Math.imul(al5, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh7)) | 0) + Math.imul(ah5, bl7)) | 0),
                        (hi = (hi + Math.imul(ah5, bh7)) | 0),
                        (lo = (lo + Math.imul(al4, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh8)) | 0) + Math.imul(ah4, bl8)) | 0),
                        (hi = (hi + Math.imul(ah4, bh8)) | 0);
                    var w12 = (((c + (lo = (lo + Math.imul(al3, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al3, bh9)) | 0) + Math.imul(ah3, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah3, bh9)) | 0) + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0),
                        (w12 &= 67108863),
                        (lo = Math.imul(al9, bl4)),
                        (mid = ((mid = Math.imul(al9, bh4)) + Math.imul(ah9, bl4)) | 0),
                        (hi = Math.imul(ah9, bh4)),
                        (lo = (lo + Math.imul(al8, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh5)) | 0) + Math.imul(ah8, bl5)) | 0),
                        (hi = (hi + Math.imul(ah8, bh5)) | 0),
                        (lo = (lo + Math.imul(al7, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh6)) | 0) + Math.imul(ah7, bl6)) | 0),
                        (hi = (hi + Math.imul(ah7, bh6)) | 0),
                        (lo = (lo + Math.imul(al6, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh7)) | 0) + Math.imul(ah6, bl7)) | 0),
                        (hi = (hi + Math.imul(ah6, bh7)) | 0),
                        (lo = (lo + Math.imul(al5, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh8)) | 0) + Math.imul(ah5, bl8)) | 0),
                        (hi = (hi + Math.imul(ah5, bh8)) | 0);
                    var w13 = (((c + (lo = (lo + Math.imul(al4, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al4, bh9)) | 0) + Math.imul(ah4, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah4, bh9)) | 0) + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0),
                        (w13 &= 67108863),
                        (lo = Math.imul(al9, bl5)),
                        (mid = ((mid = Math.imul(al9, bh5)) + Math.imul(ah9, bl5)) | 0),
                        (hi = Math.imul(ah9, bh5)),
                        (lo = (lo + Math.imul(al8, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh6)) | 0) + Math.imul(ah8, bl6)) | 0),
                        (hi = (hi + Math.imul(ah8, bh6)) | 0),
                        (lo = (lo + Math.imul(al7, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh7)) | 0) + Math.imul(ah7, bl7)) | 0),
                        (hi = (hi + Math.imul(ah7, bh7)) | 0),
                        (lo = (lo + Math.imul(al6, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh8)) | 0) + Math.imul(ah6, bl8)) | 0),
                        (hi = (hi + Math.imul(ah6, bh8)) | 0);
                    var w14 = (((c + (lo = (lo + Math.imul(al5, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al5, bh9)) | 0) + Math.imul(ah5, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah5, bh9)) | 0) + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0),
                        (w14 &= 67108863),
                        (lo = Math.imul(al9, bl6)),
                        (mid = ((mid = Math.imul(al9, bh6)) + Math.imul(ah9, bl6)) | 0),
                        (hi = Math.imul(ah9, bh6)),
                        (lo = (lo + Math.imul(al8, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh7)) | 0) + Math.imul(ah8, bl7)) | 0),
                        (hi = (hi + Math.imul(ah8, bh7)) | 0),
                        (lo = (lo + Math.imul(al7, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh8)) | 0) + Math.imul(ah7, bl8)) | 0),
                        (hi = (hi + Math.imul(ah7, bh8)) | 0);
                    var w15 = (((c + (lo = (lo + Math.imul(al6, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al6, bh9)) | 0) + Math.imul(ah6, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah6, bh9)) | 0) + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0),
                        (w15 &= 67108863),
                        (lo = Math.imul(al9, bl7)),
                        (mid = ((mid = Math.imul(al9, bh7)) + Math.imul(ah9, bl7)) | 0),
                        (hi = Math.imul(ah9, bh7)),
                        (lo = (lo + Math.imul(al8, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh8)) | 0) + Math.imul(ah8, bl8)) | 0),
                        (hi = (hi + Math.imul(ah8, bh8)) | 0);
                    var w16 = (((c + (lo = (lo + Math.imul(al7, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al7, bh9)) | 0) + Math.imul(ah7, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah7, bh9)) | 0) + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0),
                        (w16 &= 67108863),
                        (lo = Math.imul(al9, bl8)),
                        (mid = ((mid = Math.imul(al9, bh8)) + Math.imul(ah9, bl8)) | 0),
                        (hi = Math.imul(ah9, bh8));
                    var w17 = (((c + (lo = (lo + Math.imul(al8, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al8, bh9)) | 0) + Math.imul(ah8, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah8, bh9)) | 0) + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0), (w17 &= 67108863);
                    var w18 = (((c + (lo = Math.imul(al9, bl9))) | 0) + ((8191 & (mid = ((mid = Math.imul(al9, bh9)) + Math.imul(ah9, bl9)) | 0)) << 13)) | 0;
                    return (
                        (c = ((((hi = Math.imul(ah9, bh9)) + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0),
                        (w18 &= 67108863),
                        (o[0] = w0),
                        (o[1] = w1),
                        (o[2] = w2),
                        (o[3] = w3),
                        (o[4] = w4),
                        (o[5] = w5),
                        (o[6] = w6),
                        (o[7] = w7),
                        (o[8] = w8),
                        (o[9] = w9),
                        (o[10] = w10),
                        (o[11] = w11),
                        (o[12] = w12),
                        (o[13] = w13),
                        (o[14] = w14),
                        (o[15] = w15),
                        (o[16] = w16),
                        (o[17] = w17),
                        (o[18] = w18),
                        0 !== c && ((o[19] = c), out.length++),
                        out
                    );
                };
                function jumboMulTo(self1, num, out) {
                    return new FFTM().mulp(self1, num, out);
                }
                function FFTM(x, y) {
                    (this.x = x), (this.y = y);
                }
                Math.imul || (comb10MulTo = smallMulTo),
                    (BN.prototype.mulTo = function (num, out) {
                        var len = this.length + num.length;
                        return 10 === this.length && 10 === num.length
                            ? comb10MulTo(this, num, out)
                            : len < 63
                            ? smallMulTo(this, num, out)
                            : len < 1024
                            ? (function (self1, num, out) {
                                  (out.negative = num.negative ^ self1.negative), (out.length = self1.length + num.length);
                                  for (var carry = 0, hncarry = 0, k = 0; k < out.length - 1; k++) {
                                      var ncarry = hncarry;
                                      hncarry = 0;
                                      for (var rword = 67108863 & carry, maxJ = Math.min(k, num.length - 1), j = Math.max(0, k - self1.length + 1); j <= maxJ; j++) {
                                          var i = k - j,
                                              r = (0 | self1.words[i]) * (0 | num.words[j]),
                                              lo = 67108863 & r;
                                          (ncarry = (ncarry + ((r / 67108864) | 0)) | 0), (rword = 67108863 & (lo = (lo + rword) | 0)), (hncarry += (ncarry = (ncarry + (lo >>> 26)) | 0) >>> 26), (ncarry &= 67108863);
                                      }
                                      (out.words[k] = rword), (carry = ncarry), (ncarry = hncarry);
                                  }
                                  return 0 !== carry ? (out.words[k] = carry) : out.length--, out.strip();
                              })(this, num, out)
                            : jumboMulTo(this, num, out);
                    }),
                    (FFTM.prototype.makeRBT = function (N) {
                        for (var t = Array(N), l = BN.prototype._countBits(N) - 1, i = 0; i < N; i++) t[i] = this.revBin(i, l, N);
                        return t;
                    }),
                    (FFTM.prototype.revBin = function (x, l, N) {
                        if (0 === x || x === N - 1) return x;
                        for (var rb = 0, i = 0; i < l; i++) (rb |= (1 & x) << (l - i - 1)), (x >>= 1);
                        return rb;
                    }),
                    (FFTM.prototype.permute = function (rbt, rws, iws, rtws, itws, N) {
                        for (var i = 0; i < N; i++) (rtws[i] = rws[rbt[i]]), (itws[i] = iws[rbt[i]]);
                    }),
                    (FFTM.prototype.transform = function (rws, iws, rtws, itws, N, rbt) {
                        this.permute(rbt, rws, iws, rtws, itws, N);
                        for (var s = 1; s < N; s <<= 1)
                            for (var l = s << 1, rtwdf = Math.cos((2 * Math.PI) / l), itwdf = Math.sin((2 * Math.PI) / l), p = 0; p < N; p += l)
                                for (var rtwdf_ = rtwdf, itwdf_ = itwdf, j = 0; j < s; j++) {
                                    var re = rtws[p + j],
                                        ie = itws[p + j],
                                        ro = rtws[p + j + s],
                                        io = itws[p + j + s],
                                        rx = rtwdf_ * ro - itwdf_ * io;
                                    (io = rtwdf_ * io + itwdf_ * ro),
                                        (ro = rx),
                                        (rtws[p + j] = re + ro),
                                        (itws[p + j] = ie + io),
                                        (rtws[p + j + s] = re - ro),
                                        (itws[p + j + s] = ie - io),
                                        j !== l && ((rx = rtwdf * rtwdf_ - itwdf * itwdf_), (itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_), (rtwdf_ = rx));
                                }
                    }),
                    (FFTM.prototype.guessLen13b = function (n, m) {
                        var N = 1 | Math.max(m, n),
                            odd = 1 & N,
                            i = 0;
                        for (N = (N / 2) | 0; N; N >>>= 1) i++;
                        return 1 << (i + 1 + odd);
                    }),
                    (FFTM.prototype.conjugate = function (rws, iws, N) {
                        if (!(N <= 1))
                            for (var i = 0; i < N / 2; i++) {
                                var t = rws[i];
                                (rws[i] = rws[N - i - 1]), (rws[N - i - 1] = t), (t = iws[i]), (iws[i] = -iws[N - i - 1]), (iws[N - i - 1] = -t);
                            }
                    }),
                    (FFTM.prototype.normalize13b = function (ws, N) {
                        for (var carry = 0, i = 0; i < N / 2; i++) {
                            var w = 8192 * Math.round(ws[2 * i + 1] / N) + Math.round(ws[2 * i] / N) + carry;
                            (ws[i] = 67108863 & w), (carry = w < 67108864 ? 0 : (w / 67108864) | 0);
                        }
                        return ws;
                    }),
                    (FFTM.prototype.convert13b = function (ws, len, rws, N) {
                        for (var carry = 0, i = 0; i < len; i++) (carry += 0 | ws[i]), (rws[2 * i] = 8191 & carry), (carry >>>= 13), (rws[2 * i + 1] = 8191 & carry), (carry >>>= 13);
                        for (i = 2 * len; i < N; ++i) rws[i] = 0;
                        assert(0 === carry), assert((-8192 & carry) == 0);
                    }),
                    (FFTM.prototype.stub = function (N) {
                        for (var ph = Array(N), i = 0; i < N; i++) ph[i] = 0;
                        return ph;
                    }),
                    (FFTM.prototype.mulp = function (x, y, out) {
                        var N = 2 * this.guessLen13b(x.length, y.length),
                            rbt = this.makeRBT(N),
                            _ = this.stub(N),
                            rws = Array(N),
                            rwst = Array(N),
                            iwst = Array(N),
                            nrws = Array(N),
                            nrwst = Array(N),
                            niwst = Array(N),
                            rmws = out.words;
                        (rmws.length = N), this.convert13b(x.words, x.length, rws, N), this.convert13b(y.words, y.length, nrws, N), this.transform(rws, _, rwst, iwst, N, rbt), this.transform(nrws, _, nrwst, niwst, N, rbt);
                        for (var i = 0; i < N; i++) {
                            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
                            (iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i]), (rwst[i] = rx);
                        }
                        return (
                            this.conjugate(rwst, iwst, N),
                            this.transform(rwst, iwst, rmws, _, N, rbt),
                            this.conjugate(rmws, _, N),
                            this.normalize13b(rmws, N),
                            (out.negative = x.negative ^ y.negative),
                            (out.length = x.length + y.length),
                            out.strip()
                        );
                    }),
                    (BN.prototype.mul = function (num) {
                        var out = new BN(null);
                        return (out.words = Array(this.length + num.length)), this.mulTo(num, out);
                    }),
                    (BN.prototype.mulf = function (num) {
                        var out = new BN(null);
                        return (out.words = Array(this.length + num.length)), jumboMulTo(this, num, out);
                    }),
                    (BN.prototype.imul = function (num) {
                        return this.clone().mulTo(num, this);
                    }),
                    (BN.prototype.imuln = function (num) {
                        assert("number" == typeof num), assert(num < 67108864);
                        for (var carry = 0, i = 0; i < this.length; i++) {
                            var w = (0 | this.words[i]) * num,
                                lo = (67108863 & w) + (67108863 & carry);
                            (carry >>= 26), (carry = ((w / 67108864) | 0) + (lo >>> 26)), (this.words[i] = 67108863 & lo);
                        }
                        return 0 !== carry && ((this.words[i] = carry), this.length++), this;
                    }),
                    (BN.prototype.muln = function (num) {
                        return this.clone().imuln(num);
                    }),
                    (BN.prototype.sqr = function () {
                        return this.mul(this);
                    }),
                    (BN.prototype.isqr = function () {
                        return this.imul(this.clone());
                    }),
                    (BN.prototype.pow = function (num) {
                        var w = (function (num) {
                            for (var w = Array(num.bitLength()), bit = 0; bit < w.length; bit++) {
                                var off = (bit / 26) | 0,
                                    wbit = bit % 26;
                                w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
                            }
                            return w;
                        })(num);
                        if (0 === w.length) return new BN(1);
                        for (var res = this, i = 0; i < w.length && 0 === w[i]; i++, res = res.sqr());
                        if (++i < w.length) for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) 0 !== w[i] && (res = res.mul(q));
                        return res;
                    }),
                    (BN.prototype.iushln = function (bits) {
                        assert("number" == typeof bits && bits >= 0);
                        var i,
                            r = bits % 26,
                            s = (bits - r) / 26,
                            carryMask = (67108863 >>> (26 - r)) << (26 - r);
                        if (0 !== r) {
                            var carry = 0;
                            for (i = 0; i < this.length; i++) {
                                var newCarry = this.words[i] & carryMask,
                                    c = ((0 | this.words[i]) - newCarry) << r;
                                (this.words[i] = c | carry), (carry = newCarry >>> (26 - r));
                            }
                            carry && ((this.words[i] = carry), this.length++);
                        }
                        if (0 !== s) {
                            for (i = this.length - 1; i >= 0; i--) this.words[i + s] = this.words[i];
                            for (i = 0; i < s; i++) this.words[i] = 0;
                            this.length += s;
                        }
                        return this.strip();
                    }),
                    (BN.prototype.ishln = function (bits) {
                        return assert(0 === this.negative), this.iushln(bits);
                    }),
                    (BN.prototype.iushrn = function (bits, hint, extended) {
                        assert("number" == typeof bits && bits >= 0), (h = hint ? (hint - (hint % 26)) / 26 : 0);
                        var h,
                            r = bits % 26,
                            s = Math.min((bits - r) / 26, this.length),
                            mask = 67108863 ^ ((67108863 >>> r) << r),
                            maskedWords = extended;
                        if (((h -= s), (h = Math.max(0, h)), maskedWords)) {
                            for (var i = 0; i < s; i++) maskedWords.words[i] = this.words[i];
                            maskedWords.length = s;
                        }
                        if (0 === s);
                        else if (this.length > s) for (this.length -= s, i = 0; i < this.length; i++) this.words[i] = this.words[i + s];
                        else (this.words[0] = 0), (this.length = 1);
                        var carry = 0;
                        for (i = this.length - 1; i >= 0 && (0 !== carry || i >= h); i--) {
                            var word = 0 | this.words[i];
                            (this.words[i] = (carry << (26 - r)) | (word >>> r)), (carry = word & mask);
                        }
                        return maskedWords && 0 !== carry && (maskedWords.words[maskedWords.length++] = carry), 0 === this.length && ((this.words[0] = 0), (this.length = 1)), this.strip();
                    }),
                    (BN.prototype.ishrn = function (bits, hint, extended) {
                        return assert(0 === this.negative), this.iushrn(bits, hint, extended);
                    }),
                    (BN.prototype.shln = function (bits) {
                        return this.clone().ishln(bits);
                    }),
                    (BN.prototype.ushln = function (bits) {
                        return this.clone().iushln(bits);
                    }),
                    (BN.prototype.shrn = function (bits) {
                        return this.clone().ishrn(bits);
                    }),
                    (BN.prototype.ushrn = function (bits) {
                        return this.clone().iushrn(bits);
                    }),
                    (BN.prototype.testn = function (bit) {
                        assert("number" == typeof bit && bit >= 0);
                        var r = bit % 26,
                            s = (bit - r) / 26;
                        return !(this.length <= s) && !!(this.words[s] & (1 << r));
                    }),
                    (BN.prototype.imaskn = function (bits) {
                        assert("number" == typeof bits && bits >= 0);
                        var r = bits % 26,
                            s = (bits - r) / 26;
                        return (assert(0 === this.negative, "imaskn works only with positive numbers"), this.length <= s)
                            ? this
                            : (0 !== r && s++, (this.length = Math.min(s, this.length)), 0 !== r && (this.words[this.length - 1] &= 67108863 ^ ((67108863 >>> r) << r)), this.strip());
                    }),
                    (BN.prototype.maskn = function (bits) {
                        return this.clone().imaskn(bits);
                    }),
                    (BN.prototype.iaddn = function (num) {
                        return (assert("number" == typeof num), assert(num < 67108864), num < 0)
                            ? this.isubn(-num)
                            : 0 !== this.negative
                            ? 1 === this.length && (0 | this.words[0]) < num
                                ? ((this.words[0] = num - (0 | this.words[0])), (this.negative = 0), this)
                                : ((this.negative = 0), this.isubn(num), (this.negative = 1), this)
                            : this._iaddn(num);
                    }),
                    (BN.prototype._iaddn = function (num) {
                        this.words[0] += num;
                        for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) (this.words[i] -= 67108864), i === this.length - 1 ? (this.words[i + 1] = 1) : this.words[i + 1]++;
                        return (this.length = Math.max(this.length, i + 1)), this;
                    }),
                    (BN.prototype.isubn = function (num) {
                        if ((assert("number" == typeof num), assert(num < 67108864), num < 0)) return this.iaddn(-num);
                        if (0 !== this.negative) return (this.negative = 0), this.iaddn(num), (this.negative = 1), this;
                        if (((this.words[0] -= num), 1 === this.length && this.words[0] < 0)) (this.words[0] = -this.words[0]), (this.negative = 1);
                        else for (var i = 0; i < this.length && this.words[i] < 0; i++) (this.words[i] += 67108864), (this.words[i + 1] -= 1);
                        return this.strip();
                    }),
                    (BN.prototype.addn = function (num) {
                        return this.clone().iaddn(num);
                    }),
                    (BN.prototype.subn = function (num) {
                        return this.clone().isubn(num);
                    }),
                    (BN.prototype.iabs = function () {
                        return (this.negative = 0), this;
                    }),
                    (BN.prototype.abs = function () {
                        return this.clone().iabs();
                    }),
                    (BN.prototype._ishlnsubmul = function (num, mul, shift) {
                        var i,
                            w,
                            len = num.length + shift;
                        this._expand(len);
                        var carry = 0;
                        for (i = 0; i < num.length; i++) {
                            w = (0 | this.words[i + shift]) + carry;
                            var right = (0 | num.words[i]) * mul;
                            (w -= 67108863 & right), (carry = (w >> 26) - ((right / 67108864) | 0)), (this.words[i + shift] = 67108863 & w);
                        }
                        for (; i < this.length - shift; i++) (carry = (w = (0 | this.words[i + shift]) + carry) >> 26), (this.words[i + shift] = 67108863 & w);
                        if (0 === carry) return this.strip();
                        for (assert(-1 === carry), carry = 0, i = 0; i < this.length; i++) (carry = (w = -(0 | this.words[i]) + carry) >> 26), (this.words[i] = 67108863 & w);
                        return (this.negative = 1), this.strip();
                    }),
                    (BN.prototype._wordDiv = function (num, mode) {
                        var q,
                            shift = this.length - num.length,
                            a = this.clone(),
                            b = num,
                            bhi = 0 | b.words[b.length - 1];
                        0 != (shift = 26 - this._countBits(bhi)) && ((b = b.ushln(shift)), a.iushln(shift), (bhi = 0 | b.words[b.length - 1]));
                        var m = a.length - b.length;
                        if ("mod" !== mode) {
                            ((q = new BN(null)).length = m + 1), (q.words = Array(q.length));
                            for (var i = 0; i < q.length; i++) q.words[i] = 0;
                        }
                        var diff = a.clone()._ishlnsubmul(b, 1, m);
                        0 === diff.negative && ((a = diff), q && (q.words[m] = 1));
                        for (var j = m - 1; j >= 0; j--) {
                            var qj = (0 | a.words[b.length + j]) * 67108864 + (0 | a.words[b.length + j - 1]);
                            for (qj = Math.min((qj / bhi) | 0, 67108863), a._ishlnsubmul(b, qj, j); 0 !== a.negative; ) qj--, (a.negative = 0), a._ishlnsubmul(b, 1, j), a.isZero() || (a.negative ^= 1);
                            q && (q.words[j] = qj);
                        }
                        return q && q.strip(), a.strip(), "div" !== mode && 0 !== shift && a.iushrn(shift), { div: q || null, mod: a };
                    }),
                    (BN.prototype.divmod = function (num, mode, positive) {
                        var div, mod, res;
                        return (assert(!num.isZero()), this.isZero())
                            ? { div: new BN(0), mod: new BN(0) }
                            : 0 !== this.negative && 0 === num.negative
                            ? ((res = this.neg().divmod(num, mode)), "mod" !== mode && (div = res.div.neg()), "div" !== mode && ((mod = res.mod.neg()), positive && 0 !== mod.negative && mod.iadd(num)), { div: div, mod: mod })
                            : 0 === this.negative && 0 !== num.negative
                            ? ((res = this.divmod(num.neg(), mode)), "mod" !== mode && (div = res.div.neg()), { div: div, mod: res.mod })
                            : (this.negative & num.negative) != 0
                            ? ((res = this.neg().divmod(num.neg(), mode)), "div" !== mode && ((mod = res.mod.neg()), positive && 0 !== mod.negative && mod.isub(num)), { div: res.div, mod: mod })
                            : num.length > this.length || 0 > this.cmp(num)
                            ? { div: new BN(0), mod: this }
                            : 1 === num.length
                            ? "div" === mode
                                ? { div: this.divn(num.words[0]), mod: null }
                                : "mod" === mode
                                ? { div: null, mod: new BN(this.modn(num.words[0])) }
                                : { div: this.divn(num.words[0]), mod: new BN(this.modn(num.words[0])) }
                            : this._wordDiv(num, mode);
                    }),
                    (BN.prototype.div = function (num) {
                        return this.divmod(num, "div", !1).div;
                    }),
                    (BN.prototype.mod = function (num) {
                        return this.divmod(num, "mod", !1).mod;
                    }),
                    (BN.prototype.umod = function (num) {
                        return this.divmod(num, "mod", !0).mod;
                    }),
                    (BN.prototype.divRound = function (num) {
                        var dm = this.divmod(num);
                        if (dm.mod.isZero()) return dm.div;
                        var mod = 0 !== dm.div.negative ? dm.mod.isub(num) : dm.mod,
                            half = num.ushrn(1),
                            r2 = num.andln(1),
                            cmp = mod.cmp(half);
                        return cmp < 0 || (1 === r2 && 0 === cmp) ? dm.div : 0 !== dm.div.negative ? dm.div.isubn(1) : dm.div.iaddn(1);
                    }),
                    (BN.prototype.modn = function (num) {
                        assert(num <= 67108863);
                        for (var p = 67108864 % num, acc = 0, i = this.length - 1; i >= 0; i--) acc = (p * acc + (0 | this.words[i])) % num;
                        return acc;
                    }),
                    (BN.prototype.idivn = function (num) {
                        assert(num <= 67108863);
                        for (var carry = 0, i = this.length - 1; i >= 0; i--) {
                            var w = (0 | this.words[i]) + 67108864 * carry;
                            (this.words[i] = (w / num) | 0), (carry = w % num);
                        }
                        return this.strip();
                    }),
                    (BN.prototype.divn = function (num) {
                        return this.clone().idivn(num);
                    }),
                    (BN.prototype.egcd = function (p) {
                        assert(0 === p.negative), assert(!p.isZero());
                        var x = this,
                            y = p.clone();
                        x = 0 !== x.negative ? x.umod(p) : x.clone();
                        for (var A = new BN(1), B = new BN(0), C = new BN(0), D = new BN(1), g = 0; x.isEven() && y.isEven(); ) x.iushrn(1), y.iushrn(1), ++g;
                        for (var yp = y.clone(), xp = x.clone(); !x.isZero(); ) {
                            for (var i = 0, im = 1; (x.words[0] & im) == 0 && i < 26; ++i, im <<= 1);
                            if (i > 0) for (x.iushrn(i); i-- > 0; ) (A.isOdd() || B.isOdd()) && (A.iadd(yp), B.isub(xp)), A.iushrn(1), B.iushrn(1);
                            for (var j = 0, jm = 1; (y.words[0] & jm) == 0 && j < 26; ++j, jm <<= 1);
                            if (j > 0) for (y.iushrn(j); j-- > 0; ) (C.isOdd() || D.isOdd()) && (C.iadd(yp), D.isub(xp)), C.iushrn(1), D.iushrn(1);
                            x.cmp(y) >= 0 ? (x.isub(y), A.isub(C), B.isub(D)) : (y.isub(x), C.isub(A), D.isub(B));
                        }
                        return { a: C, b: D, gcd: y.iushln(g) };
                    }),
                    (BN.prototype._invmp = function (p) {
                        assert(0 === p.negative), assert(!p.isZero());
                        var res,
                            a = this,
                            b = p.clone();
                        a = 0 !== a.negative ? a.umod(p) : a.clone();
                        for (var x1 = new BN(1), x2 = new BN(0), delta = b.clone(); a.cmpn(1) > 0 && b.cmpn(1) > 0; ) {
                            for (var i = 0, im = 1; (a.words[0] & im) == 0 && i < 26; ++i, im <<= 1);
                            if (i > 0) for (a.iushrn(i); i-- > 0; ) x1.isOdd() && x1.iadd(delta), x1.iushrn(1);
                            for (var j = 0, jm = 1; (b.words[0] & jm) == 0 && j < 26; ++j, jm <<= 1);
                            if (j > 0) for (b.iushrn(j); j-- > 0; ) x2.isOdd() && x2.iadd(delta), x2.iushrn(1);
                            a.cmp(b) >= 0 ? (a.isub(b), x1.isub(x2)) : (b.isub(a), x2.isub(x1));
                        }
                        return 0 > (res = 0 === a.cmpn(1) ? x1 : x2).cmpn(0) && res.iadd(p), res;
                    }),
                    (BN.prototype.gcd = function (num) {
                        if (this.isZero()) return num.abs();
                        if (num.isZero()) return this.abs();
                        var a = this.clone(),
                            b = num.clone();
                        (a.negative = 0), (b.negative = 0);
                        for (var shift = 0; a.isEven() && b.isEven(); shift++) a.iushrn(1), b.iushrn(1);
                        for (;;) {
                            for (; a.isEven(); ) a.iushrn(1);
                            for (; b.isEven(); ) b.iushrn(1);
                            var r = a.cmp(b);
                            if (r < 0) {
                                var t = a;
                                (a = b), (b = t);
                            } else if (0 === r || 0 === b.cmpn(1)) break;
                            a.isub(b);
                        }
                        return b.iushln(shift);
                    }),
                    (BN.prototype.invm = function (num) {
                        return this.egcd(num).a.umod(num);
                    }),
                    (BN.prototype.isEven = function () {
                        return (1 & this.words[0]) == 0;
                    }),
                    (BN.prototype.isOdd = function () {
                        return (1 & this.words[0]) == 1;
                    }),
                    (BN.prototype.andln = function (num) {
                        return this.words[0] & num;
                    }),
                    (BN.prototype.bincn = function (bit) {
                        assert("number" == typeof bit);
                        var r = bit % 26,
                            s = (bit - r) / 26,
                            q = 1 << r;
                        if (this.length <= s) return this._expand(s + 1), (this.words[s] |= q), this;
                        for (var carry = q, i = s; 0 !== carry && i < this.length; i++) {
                            var w = 0 | this.words[i];
                            (w += carry), (carry = w >>> 26), (w &= 67108863), (this.words[i] = w);
                        }
                        return 0 !== carry && ((this.words[i] = carry), this.length++), this;
                    }),
                    (BN.prototype.isZero = function () {
                        return 1 === this.length && 0 === this.words[0];
                    }),
                    (BN.prototype.cmpn = function (num) {
                        var res,
                            negative = num < 0;
                        if (0 !== this.negative && !negative) return -1;
                        if (0 === this.negative && negative) return 1;
                        if ((this.strip(), this.length > 1)) res = 1;
                        else {
                            negative && (num = -num), assert(num <= 67108863, "Number is too big");
                            var w = 0 | this.words[0];
                            res = w === num ? 0 : w < num ? -1 : 1;
                        }
                        return 0 !== this.negative ? 0 | -res : res;
                    }),
                    (BN.prototype.cmp = function (num) {
                        if (0 !== this.negative && 0 === num.negative) return -1;
                        if (0 === this.negative && 0 !== num.negative) return 1;
                        var res = this.ucmp(num);
                        return 0 !== this.negative ? 0 | -res : res;
                    }),
                    (BN.prototype.ucmp = function (num) {
                        if (this.length > num.length) return 1;
                        if (this.length < num.length) return -1;
                        for (var res = 0, i = this.length - 1; i >= 0; i--) {
                            var a = 0 | this.words[i],
                                b = 0 | num.words[i];
                            if (a !== b) {
                                a < b ? (res = -1) : a > b && (res = 1);
                                break;
                            }
                        }
                        return res;
                    }),
                    (BN.prototype.gtn = function (num) {
                        return 1 === this.cmpn(num);
                    }),
                    (BN.prototype.gt = function (num) {
                        return 1 === this.cmp(num);
                    }),
                    (BN.prototype.gten = function (num) {
                        return this.cmpn(num) >= 0;
                    }),
                    (BN.prototype.gte = function (num) {
                        return this.cmp(num) >= 0;
                    }),
                    (BN.prototype.ltn = function (num) {
                        return -1 === this.cmpn(num);
                    }),
                    (BN.prototype.lt = function (num) {
                        return -1 === this.cmp(num);
                    }),
                    (BN.prototype.lten = function (num) {
                        return 0 >= this.cmpn(num);
                    }),
                    (BN.prototype.lte = function (num) {
                        return 0 >= this.cmp(num);
                    }),
                    (BN.prototype.eqn = function (num) {
                        return 0 === this.cmpn(num);
                    }),
                    (BN.prototype.eq = function (num) {
                        return 0 === this.cmp(num);
                    }),
                    (BN.red = function (num) {
                        return new Red(num);
                    }),
                    (BN.prototype.toRed = function (ctx) {
                        return assert(!this.red, "Already a number in reduction context"), assert(0 === this.negative, "red works only with positives"), ctx.convertTo(this)._forceRed(ctx);
                    }),
                    (BN.prototype.fromRed = function () {
                        return assert(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
                    }),
                    (BN.prototype._forceRed = function (ctx) {
                        return (this.red = ctx), this;
                    }),
                    (BN.prototype.forceRed = function (ctx) {
                        return assert(!this.red, "Already a number in reduction context"), this._forceRed(ctx);
                    }),
                    (BN.prototype.redAdd = function (num) {
                        return assert(this.red, "redAdd works only with red numbers"), this.red.add(this, num);
                    }),
                    (BN.prototype.redIAdd = function (num) {
                        return assert(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, num);
                    }),
                    (BN.prototype.redSub = function (num) {
                        return assert(this.red, "redSub works only with red numbers"), this.red.sub(this, num);
                    }),
                    (BN.prototype.redISub = function (num) {
                        return assert(this.red, "redISub works only with red numbers"), this.red.isub(this, num);
                    }),
                    (BN.prototype.redShl = function (num) {
                        return assert(this.red, "redShl works only with red numbers"), this.red.shl(this, num);
                    }),
                    (BN.prototype.redMul = function (num) {
                        return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, num), this.red.mul(this, num);
                    }),
                    (BN.prototype.redIMul = function (num) {
                        return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, num), this.red.imul(this, num);
                    }),
                    (BN.prototype.redSqr = function () {
                        return assert(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
                    }),
                    (BN.prototype.redISqr = function () {
                        return assert(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
                    }),
                    (BN.prototype.redSqrt = function () {
                        return assert(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
                    }),
                    (BN.prototype.redInvm = function () {
                        return assert(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
                    }),
                    (BN.prototype.redNeg = function () {
                        return assert(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
                    }),
                    (BN.prototype.redPow = function (num) {
                        return assert(this.red && !num.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, num);
                    });
                var primes = { k256: null, p224: null, p192: null, p25519: null };
                function MPrime(name, p) {
                    (this.name = name), (this.p = new BN(p, 16)), (this.n = this.p.bitLength()), (this.k = new BN(1).iushln(this.n).isub(this.p)), (this.tmp = this._tmp());
                }
                function K256() {
                    MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
                }
                function P224() {
                    MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
                }
                function P192() {
                    MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
                }
                function P25519() {
                    MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
                }
                function Red(m) {
                    if ("string" == typeof m) {
                        var prime = BN._prime(m);
                        (this.m = prime.p), (this.prime = prime);
                    } else assert(m.gtn(1), "modulus must be greater than 1"), (this.m = m), (this.prime = null);
                }
                function Mont(m) {
                    Red.call(this, m),
                        (this.shift = this.m.bitLength()),
                        this.shift % 26 != 0 && (this.shift += 26 - (this.shift % 26)),
                        (this.r = new BN(1).iushln(this.shift)),
                        (this.r2 = this.imod(this.r.sqr())),
                        (this.rinv = this.r._invmp(this.m)),
                        (this.minv = this.rinv.mul(this.r).isubn(1).div(this.m)),
                        (this.minv = this.minv.umod(this.r)),
                        (this.minv = this.r.sub(this.minv));
                }
                (MPrime.prototype._tmp = function () {
                    var tmp = new BN(null);
                    return (tmp.words = Array(Math.ceil(this.n / 13))), tmp;
                }),
                    (MPrime.prototype.ireduce = function (num) {
                        var rlen,
                            r = num;
                        do this.split(r, this.tmp), (rlen = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength());
                        while (rlen > this.n);
                        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
                        return 0 === cmp ? ((r.words[0] = 0), (r.length = 1)) : cmp > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r;
                    }),
                    (MPrime.prototype.split = function (input, out) {
                        input.iushrn(this.n, 0, out);
                    }),
                    (MPrime.prototype.imulK = function (num) {
                        return num.imul(this.k);
                    }),
                    inherits(K256, MPrime),
                    (K256.prototype.split = function (input, output) {
                        for (var outLen = Math.min(input.length, 9), i = 0; i < outLen; i++) output.words[i] = input.words[i];
                        if (((output.length = outLen), input.length <= 9)) {
                            (input.words[0] = 0), (input.length = 1);
                            return;
                        }
                        var prev = input.words[9];
                        for (i = 10, output.words[output.length++] = 4194303 & prev; i < input.length; i++) {
                            var next = 0 | input.words[i];
                            (input.words[i - 10] = ((4194303 & next) << 4) | (prev >>> 22)), (prev = next);
                        }
                        (prev >>>= 22), (input.words[i - 10] = prev), 0 === prev && input.length > 10 ? (input.length -= 10) : (input.length -= 9);
                    }),
                    (K256.prototype.imulK = function (num) {
                        (num.words[num.length] = 0), (num.words[num.length + 1] = 0), (num.length += 2);
                        for (var lo = 0, i = 0; i < num.length; i++) {
                            var w = 0 | num.words[i];
                            (lo += 977 * w), (num.words[i] = 67108863 & lo), (lo = 64 * w + ((lo / 67108864) | 0));
                        }
                        return 0 === num.words[num.length - 1] && (num.length--, 0 === num.words[num.length - 1] && num.length--), num;
                    }),
                    inherits(P224, MPrime),
                    inherits(P192, MPrime),
                    inherits(P25519, MPrime),
                    (P25519.prototype.imulK = function (num) {
                        for (var carry = 0, i = 0; i < num.length; i++) {
                            var hi = (0 | num.words[i]) * 19 + carry,
                                lo = 67108863 & hi;
                            (hi >>>= 26), (num.words[i] = lo), (carry = hi);
                        }
                        return 0 !== carry && (num.words[num.length++] = carry), num;
                    }),
                    (BN._prime = function (name) {
                        var prime;
                        if (primes[name]) return primes[name];
                        if ("k256" === name) prime = new K256();
                        else if ("p224" === name) prime = new P224();
                        else if ("p192" === name) prime = new P192();
                        else if ("p25519" === name) prime = new P25519();
                        else throw Error("Unknown prime " + name);
                        return (primes[name] = prime), prime;
                    }),
                    (Red.prototype._verify1 = function (a) {
                        assert(0 === a.negative, "red works only with positives"), assert(a.red, "red works only with red numbers");
                    }),
                    (Red.prototype._verify2 = function (a, b) {
                        assert((a.negative | b.negative) == 0, "red works only with positives"), assert(a.red && a.red === b.red, "red works only with red numbers");
                    }),
                    (Red.prototype.imod = function (a) {
                        return this.prime ? this.prime.ireduce(a)._forceRed(this) : a.umod(this.m)._forceRed(this);
                    }),
                    (Red.prototype.neg = function (a) {
                        return a.isZero() ? a.clone() : this.m.sub(a)._forceRed(this);
                    }),
                    (Red.prototype.add = function (a, b) {
                        this._verify2(a, b);
                        var res = a.add(b);
                        return res.cmp(this.m) >= 0 && res.isub(this.m), res._forceRed(this);
                    }),
                    (Red.prototype.iadd = function (a, b) {
                        this._verify2(a, b);
                        var res = a.iadd(b);
                        return res.cmp(this.m) >= 0 && res.isub(this.m), res;
                    }),
                    (Red.prototype.sub = function (a, b) {
                        this._verify2(a, b);
                        var res = a.sub(b);
                        return 0 > res.cmpn(0) && res.iadd(this.m), res._forceRed(this);
                    }),
                    (Red.prototype.isub = function (a, b) {
                        this._verify2(a, b);
                        var res = a.isub(b);
                        return 0 > res.cmpn(0) && res.iadd(this.m), res;
                    }),
                    (Red.prototype.shl = function (a, num) {
                        return this._verify1(a), this.imod(a.ushln(num));
                    }),
                    (Red.prototype.imul = function (a, b) {
                        return this._verify2(a, b), this.imod(a.imul(b));
                    }),
                    (Red.prototype.mul = function (a, b) {
                        return this._verify2(a, b), this.imod(a.mul(b));
                    }),
                    (Red.prototype.isqr = function (a) {
                        return this.imul(a, a.clone());
                    }),
                    (Red.prototype.sqr = function (a) {
                        return this.mul(a, a);
                    }),
                    (Red.prototype.sqrt = function (a) {
                        if (a.isZero()) return a.clone();
                        var mod3 = this.m.andln(3);
                        if ((assert(mod3 % 2 == 1), 3 === mod3)) {
                            var pow = this.m.add(new BN(1)).iushrn(2);
                            return this.pow(a, pow);
                        }
                        for (var q = this.m.subn(1), s = 0; !q.isZero() && 0 === q.andln(1); ) s++, q.iushrn(1);
                        assert(!q.isZero());
                        var one = new BN(1).toRed(this),
                            nOne = one.redNeg(),
                            lpow = this.m.subn(1).iushrn(1),
                            z = this.m.bitLength();
                        for (z = new BN(2 * z * z).toRed(this); 0 !== this.pow(z, lpow).cmp(nOne); ) z.redIAdd(nOne);
                        for (var c = this.pow(z, q), r = this.pow(a, q.addn(1).iushrn(1)), t = this.pow(a, q), m = s; 0 !== t.cmp(one); ) {
                            for (var tmp = t, i = 0; 0 !== tmp.cmp(one); i++) tmp = tmp.redSqr();
                            assert(i < m);
                            var b = this.pow(c, new BN(1).iushln(m - i - 1));
                            (r = r.redMul(b)), (c = b.redSqr()), (t = t.redMul(c)), (m = i);
                        }
                        return r;
                    }),
                    (Red.prototype.invm = function (a) {
                        var inv = a._invmp(this.m);
                        return 0 !== inv.negative ? ((inv.negative = 0), this.imod(inv).redNeg()) : this.imod(inv);
                    }),
                    (Red.prototype.pow = function (a, num) {
                        if (num.isZero()) return new BN(1).toRed(this);
                        if (0 === num.cmpn(1)) return a.clone();
                        var wnd = Array(16);
                        (wnd[0] = new BN(1).toRed(this)), (wnd[1] = a);
                        for (var i = 2; i < wnd.length; i++) wnd[i] = this.mul(wnd[i - 1], a);
                        var res = wnd[0],
                            current = 0,
                            currentLen = 0,
                            start = num.bitLength() % 26;
                        for (0 === start && (start = 26), i = num.length - 1; i >= 0; i--) {
                            for (var word = num.words[i], j = start - 1; j >= 0; j--) {
                                var bit = (word >> j) & 1;
                                if ((res !== wnd[0] && (res = this.sqr(res)), 0 === bit && 0 === current)) {
                                    currentLen = 0;
                                    continue;
                                }
                                (current <<= 1), (current |= bit), (4 == ++currentLen || (0 === i && 0 === j)) && ((res = this.mul(res, wnd[current])), (currentLen = 0), (current = 0));
                            }
                            start = 26;
                        }
                        return res;
                    }),
                    (Red.prototype.convertTo = function (num) {
                        var r = num.umod(this.m);
                        return r === num ? r.clone() : r;
                    }),
                    (Red.prototype.convertFrom = function (num) {
                        var res = num.clone();
                        return (res.red = null), res;
                    }),
                    (BN.mont = function (num) {
                        return new Mont(num);
                    }),
                    inherits(Mont, Red),
                    (Mont.prototype.convertTo = function (num) {
                        return this.imod(num.ushln(this.shift));
                    }),
                    (Mont.prototype.convertFrom = function (num) {
                        var r = this.imod(num.mul(this.rinv));
                        return (r.red = null), r;
                    }),
                    (Mont.prototype.imul = function (a, b) {
                        if (a.isZero() || b.isZero()) return (a.words[0] = 0), (a.length = 1), a;
                        var t = a.imul(b),
                            c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            u = t.isub(c).iushrn(this.shift),
                            res = u;
                        return u.cmp(this.m) >= 0 ? (res = u.isub(this.m)) : 0 > u.cmpn(0) && (res = u.iadd(this.m)), res._forceRed(this);
                    }),
                    (Mont.prototype.mul = function (a, b) {
                        if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
                        var t = a.mul(b),
                            c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            u = t.isub(c).iushrn(this.shift),
                            res = u;
                        return u.cmp(this.m) >= 0 ? (res = u.isub(this.m)) : 0 > u.cmpn(0) && (res = u.iadd(this.m)), res._forceRed(this);
                    }),
                    (Mont.prototype.invm = function (a) {
                        return this.imod(a._invmp(this.m).mul(this.r2))._forceRed(this);
                    });
            })((module = __webpack_require__.nmd(module)), this);
        },
        29931: function (module, __unused_webpack_exports, __webpack_require__) {
            var r;
            function Rand(rand) {
                this.rand = rand;
            }
            if (
                ((module.exports = function (len) {
                    return r || (r = new Rand(null)), r.generate(len);
                }),
                (module.exports.Rand = Rand),
                (Rand.prototype.generate = function (len) {
                    return this._rand(len);
                }),
                (Rand.prototype._rand = function (n) {
                    if (this.rand.getBytes) return this.rand.getBytes(n);
                    for (var res = new Uint8Array(n), i = 0; i < res.length; i++) res[i] = this.rand.getByte();
                    return res;
                }),
                "object" == typeof self)
            )
                self.crypto && self.crypto.getRandomValues
                    ? (Rand.prototype._rand = function (n) {
                          var arr = new Uint8Array(n);
                          return self.crypto.getRandomValues(arr), arr;
                      })
                    : self.msCrypto && self.msCrypto.getRandomValues
                    ? (Rand.prototype._rand = function (n) {
                          var arr = new Uint8Array(n);
                          return self.msCrypto.getRandomValues(arr), arr;
                      })
                    : "object" == typeof window &&
                      (Rand.prototype._rand = function () {
                          throw Error("Not implemented yet");
                      });
            else
                try {
                    var crypto1 = __webpack_require__(89214);
                    if ("function" != typeof crypto1.randomBytes) throw Error("Not supported");
                    Rand.prototype._rand = function (n) {
                        return crypto1.randomBytes(n);
                    };
                } catch (e) {}
        },
        48764: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            /*!
             * The buffer module from node.js, for the browser.
             *
             * @author   Feross Aboukhadijeh <https://feross.org>
             * @license  MIT
             */ var base64 = __webpack_require__(79742),
                ieee754 = __webpack_require__(80645),
                customInspectSymbol = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null;
            function createBuffer(length) {
                if (length > 2147483647) throw RangeError('The value "' + length + '" is invalid for option "size"');
                var buf = new Uint8Array(length);
                return Object.setPrototypeOf(buf, Buffer.prototype), buf;
            }
            function Buffer(arg, encodingOrOffset, length) {
                if ("number" == typeof arg) {
                    if ("string" == typeof encodingOrOffset) throw TypeError('The "string" argument must be of type string. Received type number');
                    return allocUnsafe(arg);
                }
                return from(arg, encodingOrOffset, length);
            }
            function from(value, encodingOrOffset, length) {
                if ("string" == typeof value)
                    return (function (string, encoding) {
                        if ((("string" != typeof encoding || "" === encoding) && (encoding = "utf8"), !Buffer.isEncoding(encoding))) throw TypeError("Unknown encoding: " + encoding);
                        var length = 0 | byteLength(string, encoding),
                            buf = createBuffer(length),
                            actual = buf.write(string, encoding);
                        return actual !== length && (buf = buf.slice(0, actual)), buf;
                    })(value, encodingOrOffset);
                if (ArrayBuffer.isView(value))
                    return (function (arrayView) {
                        if (isInstance(arrayView, Uint8Array)) {
                            var copy = new Uint8Array(arrayView);
                            return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);
                        }
                        return fromArrayLike(arrayView);
                    })(value);
                if (null == value) throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
                if (
                    isInstance(value, ArrayBuffer) ||
                    (value && isInstance(value.buffer, ArrayBuffer)) ||
                    ("undefined" != typeof SharedArrayBuffer && (isInstance(value, SharedArrayBuffer) || (value && isInstance(value.buffer, SharedArrayBuffer))))
                )
                    return fromArrayBuffer(value, encodingOrOffset, length);
                if ("number" == typeof value) throw TypeError('The "value" argument must not be of type number. Received type number');
                var valueOf = value.valueOf && value.valueOf();
                if (null != valueOf && valueOf !== value) return Buffer.from(valueOf, encodingOrOffset, length);
                var b = (function (obj) {
                    if (Buffer.isBuffer(obj)) {
                        var obj1,
                            len = 0 | checked(obj.length),
                            buf = createBuffer(len);
                        return 0 === buf.length || obj.copy(buf, 0, 0, len), buf;
                    }
                    return void 0 !== obj.length ? ("number" != typeof obj.length || (obj1 = obj.length) != obj1 ? createBuffer(0) : fromArrayLike(obj)) : "Buffer" === obj.type && Array.isArray(obj.data) ? fromArrayLike(obj.data) : void 0;
                })(value);
                if (b) return b;
                if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof value[Symbol.toPrimitive]) return Buffer.from(value[Symbol.toPrimitive]("string"), encodingOrOffset, length);
                throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
            }
            function assertSize(size) {
                if ("number" != typeof size) throw TypeError('"size" argument must be of type number');
                if (size < 0) throw RangeError('The value "' + size + '" is invalid for option "size"');
            }
            function allocUnsafe(size) {
                return assertSize(size), createBuffer(size < 0 ? 0 : 0 | checked(size));
            }
            function fromArrayLike(array) {
                for (var length = array.length < 0 ? 0 : 0 | checked(array.length), buf = createBuffer(length), i = 0; i < length; i += 1) buf[i] = 255 & array[i];
                return buf;
            }
            function fromArrayBuffer(array, byteOffset, length) {
                var buf;
                if (byteOffset < 0 || array.byteLength < byteOffset) throw RangeError('"offset" is outside of buffer bounds');
                if (array.byteLength < byteOffset + (length || 0)) throw RangeError('"length" is outside of buffer bounds');
                return (
                    Object.setPrototypeOf((buf = void 0 === byteOffset && void 0 === length ? new Uint8Array(array) : void 0 === length ? new Uint8Array(array, byteOffset) : new Uint8Array(array, byteOffset, length)), Buffer.prototype), buf
                );
            }
            function checked(length) {
                if (length >= 2147483647) throw RangeError("Attempt to allocate Buffer larger than maximum size: 0x7fffffff bytes");
                return 0 | length;
            }
            function byteLength(string, encoding) {
                if (Buffer.isBuffer(string)) return string.length;
                if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) return string.byteLength;
                if ("string" != typeof string) throw TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof string);
                var len = string.length,
                    mustMatch = arguments.length > 2 && !0 === arguments[2];
                if (!mustMatch && 0 === len) return 0;
                for (var loweredCase = !1; ; )
                    switch (encoding) {
                        case "ascii":
                        case "latin1":
                        case "binary":
                            return len;
                        case "utf8":
                        case "utf-8":
                            return utf8ToBytes(string).length;
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return 2 * len;
                        case "hex":
                            return len >>> 1;
                        case "base64":
                            return base64ToBytes(string).length;
                        default:
                            if (loweredCase) return mustMatch ? -1 : utf8ToBytes(string).length;
                            (encoding = ("" + encoding).toLowerCase()), (loweredCase = !0);
                    }
            }
            function slowToString(encoding, start, end) {
                var start1,
                    end1,
                    loweredCase = !1;
                if (((void 0 === start || start < 0) && (start = 0), start > this.length || ((void 0 === end || end > this.length) && (end = this.length), end <= 0 || (end >>>= 0) <= (start >>>= 0)))) return "";
                for (encoding || (encoding = "utf8"); ; )
                    switch (encoding) {
                        case "hex":
                            return (function (buf, start, end) {
                                var len = buf.length;
                                (!start || start < 0) && (start = 0), (!end || end < 0 || end > len) && (end = len);
                                for (var out = "", i = start; i < end; ++i) out += hexSliceLookupTable[buf[i]];
                                return out;
                            })(this, start, end);
                        case "utf8":
                        case "utf-8":
                            return utf8Slice(this, start, end);
                        case "ascii":
                            return (function (buf, start, end) {
                                var ret = "";
                                end = Math.min(buf.length, end);
                                for (var i = start; i < end; ++i) ret += String.fromCharCode(127 & buf[i]);
                                return ret;
                            })(this, start, end);
                        case "latin1":
                        case "binary":
                            return (function (buf, start, end) {
                                var ret = "";
                                end = Math.min(buf.length, end);
                                for (var i = start; i < end; ++i) ret += String.fromCharCode(buf[i]);
                                return ret;
                            })(this, start, end);
                        case "base64":
                            return (start1 = start), (end1 = end), 0 === start1 && end1 === this.length ? base64.fromByteArray(this) : base64.fromByteArray(this.slice(start1, end1));
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return (function (buf, start, end) {
                                for (var bytes = buf.slice(start, end), res = "", i = 0; i < bytes.length - 1; i += 2) res += String.fromCharCode(bytes[i] + 256 * bytes[i + 1]);
                                return res;
                            })(this, start, end);
                        default:
                            if (loweredCase) throw TypeError("Unknown encoding: " + encoding);
                            (encoding = (encoding + "").toLowerCase()), (loweredCase = !0);
                    }
            }
            function swap(b, n, m) {
                var i = b[n];
                (b[n] = b[m]), (b[m] = i);
            }
            function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
                var obj;
                if (0 === buffer.length) return -1;
                if (
                    ("string" == typeof byteOffset ? ((encoding = byteOffset), (byteOffset = 0)) : byteOffset > 2147483647 ? (byteOffset = 2147483647) : byteOffset < -2147483648 && (byteOffset = -2147483648),
                    (obj = byteOffset = +byteOffset) != obj && (byteOffset = dir ? 0 : buffer.length - 1),
                    byteOffset < 0 && (byteOffset = buffer.length + byteOffset),
                    byteOffset >= buffer.length)
                ) {
                    if (dir) return -1;
                    byteOffset = buffer.length - 1;
                } else if (byteOffset < 0) {
                    if (!dir) return -1;
                    byteOffset = 0;
                }
                if (("string" == typeof val && (val = Buffer.from(val, encoding)), Buffer.isBuffer(val))) return 0 === val.length ? -1 : arrayIndexOf(buffer, val, byteOffset, encoding, dir);
                if ("number" == typeof val)
                    return ((val &= 255), "function" == typeof Uint8Array.prototype.indexOf)
                        ? dir
                            ? Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
                            : Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
                        : arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
                throw TypeError("val must be string, number or Buffer");
            }
            function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
                var i,
                    indexSize = 1,
                    arrLength = arr.length,
                    valLength = val.length;
                if (void 0 !== encoding && ("ucs2" === (encoding = String(encoding).toLowerCase()) || "ucs-2" === encoding || "utf16le" === encoding || "utf-16le" === encoding)) {
                    if (arr.length < 2 || val.length < 2) return -1;
                    (indexSize = 2), (arrLength /= 2), (valLength /= 2), (byteOffset /= 2);
                }
                function read(buf, i) {
                    return 1 === indexSize ? buf[i] : buf.readUInt16BE(i * indexSize);
                }
                if (dir) {
                    var foundIndex = -1;
                    for (i = byteOffset; i < arrLength; i++)
                        if (read(arr, i) === read(val, -1 === foundIndex ? 0 : i - foundIndex)) {
                            if ((-1 === foundIndex && (foundIndex = i), i - foundIndex + 1 === valLength)) return foundIndex * indexSize;
                        } else -1 !== foundIndex && (i -= i - foundIndex), (foundIndex = -1);
                } else
                    for (byteOffset + valLength > arrLength && (byteOffset = arrLength - valLength), i = byteOffset; i >= 0; i--) {
                        for (var found = !0, j = 0; j < valLength; j++)
                            if (read(arr, i + j) !== read(val, j)) {
                                found = !1;
                                break;
                            }
                        if (found) return i;
                    }
                return -1;
            }
            function utf8Slice(buf, start, end) {
                end = Math.min(buf.length, end);
                for (var res = [], i = start; i < end; ) {
                    var secondByte,
                        thirdByte,
                        fourthByte,
                        tempCodePoint,
                        firstByte = buf[i],
                        codePoint = null,
                        bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;
                    if (i + bytesPerSequence <= end)
                        switch (bytesPerSequence) {
                            case 1:
                                firstByte < 128 && (codePoint = firstByte);
                                break;
                            case 2:
                                (192 & (secondByte = buf[i + 1])) == 128 && (tempCodePoint = ((31 & firstByte) << 6) | (63 & secondByte)) > 127 && (codePoint = tempCodePoint);
                                break;
                            case 3:
                                (secondByte = buf[i + 1]),
                                    (thirdByte = buf[i + 2]),
                                    (192 & secondByte) == 128 &&
                                        (192 & thirdByte) == 128 &&
                                        (tempCodePoint = ((15 & firstByte) << 12) | ((63 & secondByte) << 6) | (63 & thirdByte)) > 2047 &&
                                        (tempCodePoint < 55296 || tempCodePoint > 57343) &&
                                        (codePoint = tempCodePoint);
                                break;
                            case 4:
                                (secondByte = buf[i + 1]),
                                    (thirdByte = buf[i + 2]),
                                    (fourthByte = buf[i + 3]),
                                    (192 & secondByte) == 128 &&
                                        (192 & thirdByte) == 128 &&
                                        (192 & fourthByte) == 128 &&
                                        (tempCodePoint = ((15 & firstByte) << 18) | ((63 & secondByte) << 12) | ((63 & thirdByte) << 6) | (63 & fourthByte)) > 65535 &&
                                        tempCodePoint < 1114112 &&
                                        (codePoint = tempCodePoint);
                        }
                    null === codePoint ? ((codePoint = 65533), (bytesPerSequence = 1)) : codePoint > 65535 && ((codePoint -= 65536), res.push(((codePoint >>> 10) & 1023) | 55296), (codePoint = 56320 | (1023 & codePoint))),
                        res.push(codePoint),
                        (i += bytesPerSequence);
                }
                return (function (codePoints) {
                    var len = codePoints.length;
                    if (len <= 4096) return String.fromCharCode.apply(String, codePoints);
                    for (var res = "", i = 0; i < len; ) res += String.fromCharCode.apply(String, codePoints.slice(i, (i += 4096)));
                    return res;
                })(res);
            }
            function checkOffset(offset, ext, length) {
                if (offset % 1 != 0 || offset < 0) throw RangeError("offset is not uint");
                if (offset + ext > length) throw RangeError("Trying to access beyond buffer length");
            }
            function checkInt(buf, value, offset, ext, max, min) {
                if (!Buffer.isBuffer(buf)) throw TypeError('"buffer" argument must be a Buffer instance');
                if (value > max || value < min) throw RangeError('"value" argument is out of bounds');
                if (offset + ext > buf.length) throw RangeError("Index out of range");
            }
            function checkIEEE754(buf, value, offset, ext, max, min) {
                if (offset + ext > buf.length || offset < 0) throw RangeError("Index out of range");
            }
            function writeFloat(buf, value, offset, littleEndian, noAssert) {
                return (value = +value), (offset >>>= 0), noAssert || checkIEEE754(buf, value, offset, 4, 34028234663852886e22, -34028234663852886e22), ieee754.write(buf, value, offset, littleEndian, 23, 4), offset + 4;
            }
            function writeDouble(buf, value, offset, littleEndian, noAssert) {
                return (value = +value), (offset >>>= 0), noAssert || checkIEEE754(buf, value, offset, 8, 17976931348623157e292, -17976931348623157e292), ieee754.write(buf, value, offset, littleEndian, 52, 8), offset + 8;
            }
            (exports.Buffer = Buffer),
                (exports.SlowBuffer = function (length) {
                    return +length != length && (length = 0), Buffer.alloc(+length);
                }),
                (exports.INSPECT_MAX_BYTES = 50),
                (exports.kMaxLength = 2147483647),
                (Buffer.TYPED_ARRAY_SUPPORT = (function () {
                    try {
                        var arr = new Uint8Array(1),
                            proto = {
                                foo: function () {
                                    return 42;
                                },
                            };
                        return Object.setPrototypeOf(proto, Uint8Array.prototype), Object.setPrototypeOf(arr, proto), 42 === arr.foo();
                    } catch (e) {
                        return !1;
                    }
                })()),
                Buffer.TYPED_ARRAY_SUPPORT ||
                    "undefined" == typeof console ||
                    "function" != typeof console.error ||
                    console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),
                Object.defineProperty(Buffer.prototype, "parent", {
                    enumerable: !0,
                    get: function () {
                        if (Buffer.isBuffer(this)) return this.buffer;
                    },
                }),
                Object.defineProperty(Buffer.prototype, "offset", {
                    enumerable: !0,
                    get: function () {
                        if (Buffer.isBuffer(this)) return this.byteOffset;
                    },
                }),
                (Buffer.poolSize = 8192),
                (Buffer.from = function (value, encodingOrOffset, length) {
                    return from(value, encodingOrOffset, length);
                }),
                Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype),
                Object.setPrototypeOf(Buffer, Uint8Array),
                (Buffer.alloc = function (size, fill, encoding) {
                    return (assertSize(size), size <= 0) ? createBuffer(size) : void 0 !== fill ? ("string" == typeof encoding ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill)) : createBuffer(size);
                }),
                (Buffer.allocUnsafe = function (size) {
                    return allocUnsafe(size);
                }),
                (Buffer.allocUnsafeSlow = function (size) {
                    return allocUnsafe(size);
                }),
                (Buffer.isBuffer = function (b) {
                    return null != b && !0 === b._isBuffer && b !== Buffer.prototype;
                }),
                (Buffer.compare = function (a, b) {
                    if ((isInstance(a, Uint8Array) && (a = Buffer.from(a, a.offset, a.byteLength)), isInstance(b, Uint8Array) && (b = Buffer.from(b, b.offset, b.byteLength)), !Buffer.isBuffer(a) || !Buffer.isBuffer(b)))
                        throw TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
                    if (a === b) return 0;
                    for (var x = a.length, y = b.length, i = 0, len = Math.min(x, y); i < len; ++i)
                        if (a[i] !== b[i]) {
                            (x = a[i]), (y = b[i]);
                            break;
                        }
                    return x < y ? -1 : y < x ? 1 : 0;
                }),
                (Buffer.isEncoding = function (encoding) {
                    switch (String(encoding).toLowerCase()) {
                        case "hex":
                        case "utf8":
                        case "utf-8":
                        case "ascii":
                        case "latin1":
                        case "binary":
                        case "base64":
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return !0;
                        default:
                            return !1;
                    }
                }),
                (Buffer.concat = function (list, length) {
                    if (!Array.isArray(list)) throw TypeError('"list" argument must be an Array of Buffers');
                    if (0 === list.length) return Buffer.alloc(0);
                    if (void 0 === length) for (i = 0, length = 0; i < list.length; ++i) length += list[i].length;
                    var i,
                        buffer = Buffer.allocUnsafe(length),
                        pos = 0;
                    for (i = 0; i < list.length; ++i) {
                        var buf = list[i];
                        if (isInstance(buf, Uint8Array)) pos + buf.length > buffer.length ? Buffer.from(buf).copy(buffer, pos) : Uint8Array.prototype.set.call(buffer, buf, pos);
                        else if (Buffer.isBuffer(buf)) buf.copy(buffer, pos);
                        else throw TypeError('"list" argument must be an Array of Buffers');
                        pos += buf.length;
                    }
                    return buffer;
                }),
                (Buffer.byteLength = byteLength),
                (Buffer.prototype._isBuffer = !0),
                (Buffer.prototype.swap16 = function () {
                    var len = this.length;
                    if (len % 2 != 0) throw RangeError("Buffer size must be a multiple of 16-bits");
                    for (var i = 0; i < len; i += 2) swap(this, i, i + 1);
                    return this;
                }),
                (Buffer.prototype.swap32 = function () {
                    var len = this.length;
                    if (len % 4 != 0) throw RangeError("Buffer size must be a multiple of 32-bits");
                    for (var i = 0; i < len; i += 4) swap(this, i, i + 3), swap(this, i + 1, i + 2);
                    return this;
                }),
                (Buffer.prototype.swap64 = function () {
                    var len = this.length;
                    if (len % 8 != 0) throw RangeError("Buffer size must be a multiple of 64-bits");
                    for (var i = 0; i < len; i += 8) swap(this, i, i + 7), swap(this, i + 1, i + 6), swap(this, i + 2, i + 5), swap(this, i + 3, i + 4);
                    return this;
                }),
                (Buffer.prototype.toString = function () {
                    var length = this.length;
                    return 0 === length ? "" : 0 == arguments.length ? utf8Slice(this, 0, length) : slowToString.apply(this, arguments);
                }),
                (Buffer.prototype.toLocaleString = Buffer.prototype.toString),
                (Buffer.prototype.equals = function (b) {
                    if (!Buffer.isBuffer(b)) throw TypeError("Argument must be a Buffer");
                    return this === b || 0 === Buffer.compare(this, b);
                }),
                (Buffer.prototype.inspect = function () {
                    var str = "",
                        max = exports.INSPECT_MAX_BYTES;
                    return (
                        (str = this.toString("hex", 0, max)
                            .replace(/(.{2})/g, "$1 ")
                            .trim()),
                        this.length > max && (str += " ... "),
                        "<Buffer " + str + ">"
                    );
                }),
                customInspectSymbol && (Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect),
                (Buffer.prototype.compare = function (target, start, end, thisStart, thisEnd) {
                    if ((isInstance(target, Uint8Array) && (target = Buffer.from(target, target.offset, target.byteLength)), !Buffer.isBuffer(target)))
                        throw TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof target);
                    if (
                        (void 0 === start && (start = 0),
                        void 0 === end && (end = target ? target.length : 0),
                        void 0 === thisStart && (thisStart = 0),
                        void 0 === thisEnd && (thisEnd = this.length),
                        start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length)
                    )
                        throw RangeError("out of range index");
                    if (thisStart >= thisEnd && start >= end) return 0;
                    if (thisStart >= thisEnd) return -1;
                    if (start >= end) return 1;
                    if (((start >>>= 0), (end >>>= 0), (thisStart >>>= 0), (thisEnd >>>= 0), this === target)) return 0;
                    for (var x = thisEnd - thisStart, y = end - start, len = Math.min(x, y), thisCopy = this.slice(thisStart, thisEnd), targetCopy = target.slice(start, end), i = 0; i < len; ++i)
                        if (thisCopy[i] !== targetCopy[i]) {
                            (x = thisCopy[i]), (y = targetCopy[i]);
                            break;
                        }
                    return x < y ? -1 : y < x ? 1 : 0;
                }),
                (Buffer.prototype.includes = function (val, byteOffset, encoding) {
                    return -1 !== this.indexOf(val, byteOffset, encoding);
                }),
                (Buffer.prototype.indexOf = function (val, byteOffset, encoding) {
                    return bidirectionalIndexOf(this, val, byteOffset, encoding, !0);
                }),
                (Buffer.prototype.lastIndexOf = function (val, byteOffset, encoding) {
                    return bidirectionalIndexOf(this, val, byteOffset, encoding, !1);
                }),
                (Buffer.prototype.write = function (string, offset, length, encoding) {
                    if (void 0 === offset) (encoding = "utf8"), (length = this.length), (offset = 0);
                    else if (void 0 === length && "string" == typeof offset) (encoding = offset), (length = this.length), (offset = 0);
                    else if (isFinite(offset)) (offset >>>= 0), isFinite(length) ? ((length >>>= 0), void 0 === encoding && (encoding = "utf8")) : ((encoding = length), (length = void 0));
                    else throw Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                    var offset1,
                        length1,
                        offset2,
                        length2,
                        offset3,
                        length3,
                        offset4,
                        length4,
                        remaining = this.length - offset;
                    if (((void 0 === length || length > remaining) && (length = remaining), (string.length > 0 && (length < 0 || offset < 0)) || offset > this.length)) throw RangeError("Attempt to write outside buffer bounds");
                    encoding || (encoding = "utf8");
                    for (var loweredCase = !1; ; )
                        switch (encoding) {
                            case "hex":
                                return (function (buf, string, offset, length) {
                                    offset = Number(offset) || 0;
                                    var remaining = buf.length - offset;
                                    length ? (length = Number(length)) > remaining && (length = remaining) : (length = remaining);
                                    var strLen = string.length;
                                    length > strLen / 2 && (length = strLen / 2);
                                    for (var i = 0; i < length; ++i) {
                                        var parsed = parseInt(string.substr(2 * i, 2), 16);
                                        if (parsed != parsed) break;
                                        buf[offset + i] = parsed;
                                    }
                                    return i;
                                })(this, string, offset, length);
                            case "utf8":
                            case "utf-8":
                                return (offset1 = offset), (length1 = length), blitBuffer(utf8ToBytes(string, this.length - offset1), this, offset1, length1);
                            case "ascii":
                            case "latin1":
                            case "binary":
                                return (
                                    (offset2 = offset),
                                    (length2 = length),
                                    blitBuffer(
                                        (function (str) {
                                            for (var byteArray = [], i = 0; i < str.length; ++i) byteArray.push(255 & str.charCodeAt(i));
                                            return byteArray;
                                        })(string),
                                        this,
                                        offset2,
                                        length2
                                    )
                                );
                            case "base64":
                                return (offset3 = offset), (length3 = length), blitBuffer(base64ToBytes(string), this, offset3, length3);
                            case "ucs2":
                            case "ucs-2":
                            case "utf16le":
                            case "utf-16le":
                                return (
                                    (offset4 = offset),
                                    (length4 = length),
                                    blitBuffer(
                                        (function (str, units) {
                                            for (var c, hi, byteArray = [], i = 0; i < str.length && !((units -= 2) < 0); ++i) (hi = (c = str.charCodeAt(i)) >> 8), byteArray.push(c % 256), byteArray.push(hi);
                                            return byteArray;
                                        })(string, this.length - offset4),
                                        this,
                                        offset4,
                                        length4
                                    )
                                );
                            default:
                                if (loweredCase) throw TypeError("Unknown encoding: " + encoding);
                                (encoding = ("" + encoding).toLowerCase()), (loweredCase = !0);
                        }
                }),
                (Buffer.prototype.toJSON = function () {
                    return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
                }),
                (Buffer.prototype.slice = function (start, end) {
                    var len = this.length;
                    (start = ~~start),
                        (end = void 0 === end ? len : ~~end),
                        start < 0 ? (start += len) < 0 && (start = 0) : start > len && (start = len),
                        end < 0 ? (end += len) < 0 && (end = 0) : end > len && (end = len),
                        end < start && (end = start);
                    var newBuf = this.subarray(start, end);
                    return Object.setPrototypeOf(newBuf, Buffer.prototype), newBuf;
                }),
                (Buffer.prototype.readUintLE = Buffer.prototype.readUIntLE = function (offset, byteLength, noAssert) {
                    (offset >>>= 0), (byteLength >>>= 0), noAssert || checkOffset(offset, byteLength, this.length);
                    for (var val = this[offset], mul = 1, i = 0; ++i < byteLength && (mul *= 256); ) val += this[offset + i] * mul;
                    return val;
                }),
                (Buffer.prototype.readUintBE = Buffer.prototype.readUIntBE = function (offset, byteLength, noAssert) {
                    (offset >>>= 0), (byteLength >>>= 0), noAssert || checkOffset(offset, byteLength, this.length);
                    for (var val = this[offset + --byteLength], mul = 1; byteLength > 0 && (mul *= 256); ) val += this[offset + --byteLength] * mul;
                    return val;
                }),
                (Buffer.prototype.readUint8 = Buffer.prototype.readUInt8 = function (offset, noAssert) {
                    return (offset >>>= 0), noAssert || checkOffset(offset, 1, this.length), this[offset];
                }),
                (Buffer.prototype.readUint16LE = Buffer.prototype.readUInt16LE = function (offset, noAssert) {
                    return (offset >>>= 0), noAssert || checkOffset(offset, 2, this.length), this[offset] | (this[offset + 1] << 8);
                }),
                (Buffer.prototype.readUint16BE = Buffer.prototype.readUInt16BE = function (offset, noAssert) {
                    return (offset >>>= 0), noAssert || checkOffset(offset, 2, this.length), (this[offset] << 8) | this[offset + 1];
                }),
                (Buffer.prototype.readUint32LE = Buffer.prototype.readUInt32LE = function (offset, noAssert) {
                    return (offset >>>= 0), noAssert || checkOffset(offset, 4, this.length), (this[offset] | (this[offset + 1] << 8) | (this[offset + 2] << 16)) + 16777216 * this[offset + 3];
                }),
                (Buffer.prototype.readUint32BE = Buffer.prototype.readUInt32BE = function (offset, noAssert) {
                    return (offset >>>= 0), noAssert || checkOffset(offset, 4, this.length), 16777216 * this[offset] + ((this[offset + 1] << 16) | (this[offset + 2] << 8) | this[offset + 3]);
                }),
                (Buffer.prototype.readIntLE = function (offset, byteLength, noAssert) {
                    (offset >>>= 0), (byteLength >>>= 0), noAssert || checkOffset(offset, byteLength, this.length);
                    for (var val = this[offset], mul = 1, i = 0; ++i < byteLength && (mul *= 256); ) val += this[offset + i] * mul;
                    return val >= (mul *= 128) && (val -= Math.pow(2, 8 * byteLength)), val;
                }),
                (Buffer.prototype.readIntBE = function (offset, byteLength, noAssert) {
                    (offset >>>= 0), (byteLength >>>= 0), noAssert || checkOffset(offset, byteLength, this.length);
                    for (var i = byteLength, mul = 1, val = this[offset + --i]; i > 0 && (mul *= 256); ) val += this[offset + --i] * mul;
                    return val >= (mul *= 128) && (val -= Math.pow(2, 8 * byteLength)), val;
                }),
                (Buffer.prototype.readInt8 = function (offset, noAssert) {
                    return ((offset >>>= 0), noAssert || checkOffset(offset, 1, this.length), 128 & this[offset]) ? -((255 - this[offset] + 1) * 1) : this[offset];
                }),
                (Buffer.prototype.readInt16LE = function (offset, noAssert) {
                    (offset >>>= 0), noAssert || checkOffset(offset, 2, this.length);
                    var val = this[offset] | (this[offset + 1] << 8);
                    return 32768 & val ? 4294901760 | val : val;
                }),
                (Buffer.prototype.readInt16BE = function (offset, noAssert) {
                    (offset >>>= 0), noAssert || checkOffset(offset, 2, this.length);
                    var val = this[offset + 1] | (this[offset] << 8);
                    return 32768 & val ? 4294901760 | val : val;
                }),
                (Buffer.prototype.readInt32LE = function (offset, noAssert) {
                    return (offset >>>= 0), noAssert || checkOffset(offset, 4, this.length), this[offset] | (this[offset + 1] << 8) | (this[offset + 2] << 16) | (this[offset + 3] << 24);
                }),
                (Buffer.prototype.readInt32BE = function (offset, noAssert) {
                    return (offset >>>= 0), noAssert || checkOffset(offset, 4, this.length), (this[offset] << 24) | (this[offset + 1] << 16) | (this[offset + 2] << 8) | this[offset + 3];
                }),
                (Buffer.prototype.readFloatLE = function (offset, noAssert) {
                    return (offset >>>= 0), noAssert || checkOffset(offset, 4, this.length), ieee754.read(this, offset, !0, 23, 4);
                }),
                (Buffer.prototype.readFloatBE = function (offset, noAssert) {
                    return (offset >>>= 0), noAssert || checkOffset(offset, 4, this.length), ieee754.read(this, offset, !1, 23, 4);
                }),
                (Buffer.prototype.readDoubleLE = function (offset, noAssert) {
                    return (offset >>>= 0), noAssert || checkOffset(offset, 8, this.length), ieee754.read(this, offset, !0, 52, 8);
                }),
                (Buffer.prototype.readDoubleBE = function (offset, noAssert) {
                    return (offset >>>= 0), noAssert || checkOffset(offset, 8, this.length), ieee754.read(this, offset, !1, 52, 8);
                }),
                (Buffer.prototype.writeUintLE = Buffer.prototype.writeUIntLE = function (value, offset, byteLength, noAssert) {
                    if (((value = +value), (offset >>>= 0), (byteLength >>>= 0), !noAssert)) {
                        var maxBytes = Math.pow(2, 8 * byteLength) - 1;
                        checkInt(this, value, offset, byteLength, maxBytes, 0);
                    }
                    var mul = 1,
                        i = 0;
                    for (this[offset] = 255 & value; ++i < byteLength && (mul *= 256); ) this[offset + i] = (value / mul) & 255;
                    return offset + byteLength;
                }),
                (Buffer.prototype.writeUintBE = Buffer.prototype.writeUIntBE = function (value, offset, byteLength, noAssert) {
                    if (((value = +value), (offset >>>= 0), (byteLength >>>= 0), !noAssert)) {
                        var maxBytes = Math.pow(2, 8 * byteLength) - 1;
                        checkInt(this, value, offset, byteLength, maxBytes, 0);
                    }
                    var i = byteLength - 1,
                        mul = 1;
                    for (this[offset + i] = 255 & value; --i >= 0 && (mul *= 256); ) this[offset + i] = (value / mul) & 255;
                    return offset + byteLength;
                }),
                (Buffer.prototype.writeUint8 = Buffer.prototype.writeUInt8 = function (value, offset, noAssert) {
                    return (value = +value), (offset >>>= 0), noAssert || checkInt(this, value, offset, 1, 255, 0), (this[offset] = 255 & value), offset + 1;
                }),
                (Buffer.prototype.writeUint16LE = Buffer.prototype.writeUInt16LE = function (value, offset, noAssert) {
                    return (value = +value), (offset >>>= 0), noAssert || checkInt(this, value, offset, 2, 65535, 0), (this[offset] = 255 & value), (this[offset + 1] = value >>> 8), offset + 2;
                }),
                (Buffer.prototype.writeUint16BE = Buffer.prototype.writeUInt16BE = function (value, offset, noAssert) {
                    return (value = +value), (offset >>>= 0), noAssert || checkInt(this, value, offset, 2, 65535, 0), (this[offset] = value >>> 8), (this[offset + 1] = 255 & value), offset + 2;
                }),
                (Buffer.prototype.writeUint32LE = Buffer.prototype.writeUInt32LE = function (value, offset, noAssert) {
                    return (
                        (value = +value),
                        (offset >>>= 0),
                        noAssert || checkInt(this, value, offset, 4, 4294967295, 0),
                        (this[offset + 3] = value >>> 24),
                        (this[offset + 2] = value >>> 16),
                        (this[offset + 1] = value >>> 8),
                        (this[offset] = 255 & value),
                        offset + 4
                    );
                }),
                (Buffer.prototype.writeUint32BE = Buffer.prototype.writeUInt32BE = function (value, offset, noAssert) {
                    return (
                        (value = +value),
                        (offset >>>= 0),
                        noAssert || checkInt(this, value, offset, 4, 4294967295, 0),
                        (this[offset] = value >>> 24),
                        (this[offset + 1] = value >>> 16),
                        (this[offset + 2] = value >>> 8),
                        (this[offset + 3] = 255 & value),
                        offset + 4
                    );
                }),
                (Buffer.prototype.writeIntLE = function (value, offset, byteLength, noAssert) {
                    if (((value = +value), (offset >>>= 0), !noAssert)) {
                        var limit = Math.pow(2, 8 * byteLength - 1);
                        checkInt(this, value, offset, byteLength, limit - 1, -limit);
                    }
                    var i = 0,
                        mul = 1,
                        sub = 0;
                    for (this[offset] = 255 & value; ++i < byteLength && (mul *= 256); ) value < 0 && 0 === sub && 0 !== this[offset + i - 1] && (sub = 1), (this[offset + i] = (((value / mul) >> 0) - sub) & 255);
                    return offset + byteLength;
                }),
                (Buffer.prototype.writeIntBE = function (value, offset, byteLength, noAssert) {
                    if (((value = +value), (offset >>>= 0), !noAssert)) {
                        var limit = Math.pow(2, 8 * byteLength - 1);
                        checkInt(this, value, offset, byteLength, limit - 1, -limit);
                    }
                    var i = byteLength - 1,
                        mul = 1,
                        sub = 0;
                    for (this[offset + i] = 255 & value; --i >= 0 && (mul *= 256); ) value < 0 && 0 === sub && 0 !== this[offset + i + 1] && (sub = 1), (this[offset + i] = (((value / mul) >> 0) - sub) & 255);
                    return offset + byteLength;
                }),
                (Buffer.prototype.writeInt8 = function (value, offset, noAssert) {
                    return (value = +value), (offset >>>= 0), noAssert || checkInt(this, value, offset, 1, 127, -128), value < 0 && (value = 255 + value + 1), (this[offset] = 255 & value), offset + 1;
                }),
                (Buffer.prototype.writeInt16LE = function (value, offset, noAssert) {
                    return (value = +value), (offset >>>= 0), noAssert || checkInt(this, value, offset, 2, 32767, -32768), (this[offset] = 255 & value), (this[offset + 1] = value >>> 8), offset + 2;
                }),
                (Buffer.prototype.writeInt16BE = function (value, offset, noAssert) {
                    return (value = +value), (offset >>>= 0), noAssert || checkInt(this, value, offset, 2, 32767, -32768), (this[offset] = value >>> 8), (this[offset + 1] = 255 & value), offset + 2;
                }),
                (Buffer.prototype.writeInt32LE = function (value, offset, noAssert) {
                    return (
                        (value = +value),
                        (offset >>>= 0),
                        noAssert || checkInt(this, value, offset, 4, 2147483647, -2147483648),
                        (this[offset] = 255 & value),
                        (this[offset + 1] = value >>> 8),
                        (this[offset + 2] = value >>> 16),
                        (this[offset + 3] = value >>> 24),
                        offset + 4
                    );
                }),
                (Buffer.prototype.writeInt32BE = function (value, offset, noAssert) {
                    return (
                        (value = +value),
                        (offset >>>= 0),
                        noAssert || checkInt(this, value, offset, 4, 2147483647, -2147483648),
                        value < 0 && (value = 4294967295 + value + 1),
                        (this[offset] = value >>> 24),
                        (this[offset + 1] = value >>> 16),
                        (this[offset + 2] = value >>> 8),
                        (this[offset + 3] = 255 & value),
                        offset + 4
                    );
                }),
                (Buffer.prototype.writeFloatLE = function (value, offset, noAssert) {
                    return writeFloat(this, value, offset, !0, noAssert);
                }),
                (Buffer.prototype.writeFloatBE = function (value, offset, noAssert) {
                    return writeFloat(this, value, offset, !1, noAssert);
                }),
                (Buffer.prototype.writeDoubleLE = function (value, offset, noAssert) {
                    return writeDouble(this, value, offset, !0, noAssert);
                }),
                (Buffer.prototype.writeDoubleBE = function (value, offset, noAssert) {
                    return writeDouble(this, value, offset, !1, noAssert);
                }),
                (Buffer.prototype.copy = function (target, targetStart, start, end) {
                    if (!Buffer.isBuffer(target)) throw TypeError("argument should be a Buffer");
                    if (
                        (start || (start = 0),
                        end || 0 === end || (end = this.length),
                        targetStart >= target.length && (targetStart = target.length),
                        targetStart || (targetStart = 0),
                        end > 0 && end < start && (end = start),
                        end === start || 0 === target.length || 0 === this.length)
                    )
                        return 0;
                    if (targetStart < 0) throw RangeError("targetStart out of bounds");
                    if (start < 0 || start >= this.length) throw RangeError("Index out of range");
                    if (end < 0) throw RangeError("sourceEnd out of bounds");
                    end > this.length && (end = this.length), target.length - targetStart < end - start && (end = target.length - targetStart + start);
                    var len = end - start;
                    return this === target && "function" == typeof Uint8Array.prototype.copyWithin ? this.copyWithin(targetStart, start, end) : Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart), len;
                }),
                (Buffer.prototype.fill = function (val, start, end, encoding) {
                    if ("string" == typeof val) {
                        if (("string" == typeof start ? ((encoding = start), (start = 0), (end = this.length)) : "string" == typeof end && ((encoding = end), (end = this.length)), void 0 !== encoding && "string" != typeof encoding))
                            throw TypeError("encoding must be a string");
                        if ("string" == typeof encoding && !Buffer.isEncoding(encoding)) throw TypeError("Unknown encoding: " + encoding);
                        if (1 === val.length) {
                            var i,
                                code = val.charCodeAt(0);
                            (("utf8" === encoding && code < 128) || "latin1" === encoding) && (val = code);
                        }
                    } else "number" == typeof val ? (val &= 255) : "boolean" == typeof val && (val = Number(val));
                    if (start < 0 || this.length < start || this.length < end) throw RangeError("Out of range index");
                    if (end <= start) return this;
                    if (((start >>>= 0), (end = void 0 === end ? this.length : end >>> 0), val || (val = 0), "number" == typeof val)) for (i = start; i < end; ++i) this[i] = val;
                    else {
                        var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding),
                            len = bytes.length;
                        if (0 === len) throw TypeError('The value "' + val + '" is invalid for argument "value"');
                        for (i = 0; i < end - start; ++i) this[i + start] = bytes[i % len];
                    }
                    return this;
                });
            var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;
            function utf8ToBytes(string, units) {
                units = units || 1 / 0;
                for (var codePoint, length = string.length, leadSurrogate = null, bytes = [], i = 0; i < length; ++i) {
                    if ((codePoint = string.charCodeAt(i)) > 55295 && codePoint < 57344) {
                        if (!leadSurrogate) {
                            if (codePoint > 56319 || i + 1 === length) {
                                (units -= 3) > -1 && bytes.push(239, 191, 189);
                                continue;
                            }
                            leadSurrogate = codePoint;
                            continue;
                        }
                        if (codePoint < 56320) {
                            (units -= 3) > -1 && bytes.push(239, 191, 189), (leadSurrogate = codePoint);
                            continue;
                        }
                        codePoint = (((leadSurrogate - 55296) << 10) | (codePoint - 56320)) + 65536;
                    } else leadSurrogate && (units -= 3) > -1 && bytes.push(239, 191, 189);
                    if (((leadSurrogate = null), codePoint < 128)) {
                        if ((units -= 1) < 0) break;
                        bytes.push(codePoint);
                    } else if (codePoint < 2048) {
                        if ((units -= 2) < 0) break;
                        bytes.push((codePoint >> 6) | 192, (63 & codePoint) | 128);
                    } else if (codePoint < 65536) {
                        if ((units -= 3) < 0) break;
                        bytes.push((codePoint >> 12) | 224, ((codePoint >> 6) & 63) | 128, (63 & codePoint) | 128);
                    } else if (codePoint < 1114112) {
                        if ((units -= 4) < 0) break;
                        bytes.push((codePoint >> 18) | 240, ((codePoint >> 12) & 63) | 128, ((codePoint >> 6) & 63) | 128, (63 & codePoint) | 128);
                    } else throw Error("Invalid code point");
                }
                return bytes;
            }
            function base64ToBytes(str) {
                return base64.toByteArray(
                    (function (str) {
                        if ((str = (str = str.split("=")[0]).trim().replace(INVALID_BASE64_RE, "")).length < 2) return "";
                        for (; str.length % 4 != 0; ) str += "=";
                        return str;
                    })(str)
                );
            }
            function blitBuffer(src, dst, offset, length) {
                for (var i = 0; i < length && !(i + offset >= dst.length) && !(i >= src.length); ++i) dst[i + offset] = src[i];
                return i;
            }
            function isInstance(obj, type) {
                return obj instanceof type || (null != obj && null != obj.constructor && null != obj.constructor.name && obj.constructor.name === type.name);
            }
            var hexSliceLookupTable = (function () {
                for (var alphabet = "0123456789abcdef", table = Array(256), i = 0; i < 16; ++i) for (var i16 = 16 * i, j = 0; j < 16; ++j) table[i16 + j] = alphabet[i] + alphabet[j];
                return table;
            })();
        },
        21924: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var GetIntrinsic = __webpack_require__(40210),
                callBind = __webpack_require__(55559),
                $indexOf = callBind(GetIntrinsic("String.prototype.indexOf"));
            module.exports = function (name, allowMissing) {
                var intrinsic = GetIntrinsic(name, !!allowMissing);
                return "function" == typeof intrinsic && $indexOf(name, ".prototype.") > -1 ? callBind(intrinsic) : intrinsic;
            };
        },
        55559: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var bind = __webpack_require__(58612),
                GetIntrinsic = __webpack_require__(40210),
                $apply = GetIntrinsic("%Function.prototype.apply%"),
                $call = GetIntrinsic("%Function.prototype.call%"),
                $reflectApply = GetIntrinsic("%Reflect.apply%", !0) || bind.call($call, $apply),
                $gOPD = GetIntrinsic("%Object.getOwnPropertyDescriptor%", !0),
                $defineProperty = GetIntrinsic("%Object.defineProperty%", !0),
                $max = GetIntrinsic("%Math.max%");
            if ($defineProperty)
                try {
                    $defineProperty({}, "a", { value: 1 });
                } catch (e) {
                    $defineProperty = null;
                }
            module.exports = function (originalFunction) {
                var func = $reflectApply(bind, $call, arguments);
                return $gOPD && $defineProperty && $gOPD(func, "length").configurable && $defineProperty(func, "length", { value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }), func;
            };
            var applyBind = function () {
                return $reflectApply(bind, $apply, arguments);
            };
            $defineProperty ? $defineProperty(module.exports, "apply", { value: applyBind }) : (module.exports.apply = applyBind);
        },
        71027: function (module, __unused_webpack_exports, __webpack_require__) {
            var Buffer = __webpack_require__(89509).Buffer,
                Transform = __webpack_require__(22263).Transform,
                StringDecoder = __webpack_require__(6941).s;
            function CipherBase(hashMode) {
                Transform.call(this),
                    (this.hashMode = "string" == typeof hashMode),
                    this.hashMode ? (this[hashMode] = this._finalOrDigest) : (this.final = this._finalOrDigest),
                    this._final && ((this.__final = this._final), (this._final = null)),
                    (this._decoder = null),
                    (this._encoding = null);
            }
            __webpack_require__(35717)(CipherBase, Transform),
                (CipherBase.prototype.update = function (data, inputEnc, outputEnc) {
                    "string" == typeof data && (data = Buffer.from(data, inputEnc));
                    var outData = this._update(data);
                    return this.hashMode ? this : (outputEnc && (outData = this._toString(outData, outputEnc)), outData);
                }),
                (CipherBase.prototype.setAutoPadding = function () {}),
                (CipherBase.prototype.getAuthTag = function () {
                    throw Error("trying to get auth tag in unsupported state");
                }),
                (CipherBase.prototype.setAuthTag = function () {
                    throw Error("trying to set auth tag in unsupported state");
                }),
                (CipherBase.prototype.setAAD = function () {
                    throw Error("trying to set aad in unsupported state");
                }),
                (CipherBase.prototype._transform = function (data, _, next) {
                    var err;
                    try {
                        this.hashMode ? this._update(data) : this.push(this._update(data));
                    } catch (e) {
                        err = e;
                    } finally {
                        next(err);
                    }
                }),
                (CipherBase.prototype._flush = function (done) {
                    var err;
                    try {
                        this.push(this.__final());
                    } catch (e) {
                        err = e;
                    }
                    done(err);
                }),
                (CipherBase.prototype._finalOrDigest = function (outputEnc) {
                    var outData = this.__final() || Buffer.alloc(0);
                    return outputEnc && (outData = this._toString(outData, outputEnc, !0)), outData;
                }),
                (CipherBase.prototype._toString = function (value, enc, fin) {
                    if ((this._decoder || ((this._decoder = new StringDecoder(enc)), (this._encoding = enc)), this._encoding !== enc)) throw Error("can't switch encodings");
                    var out = this._decoder.write(value);
                    return fin && (out += this._decoder.end()), out;
                }),
                (module.exports = CipherBase);
        },
        37866: function (__unused_webpack_module, exports) {
            !(function () {
                "use strict";
                function CookieAccessInfo(domain, path, secure, script) {
                    return this instanceof CookieAccessInfo ? ((this.domain = domain || void 0), (this.path = path || "/"), (this.secure = !!secure), (this.script = !!script), this) : new CookieAccessInfo(domain, path, secure, script);
                }
                function Cookie(cookiestr, request_domain, request_path) {
                    return cookiestr instanceof Cookie
                        ? cookiestr
                        : this instanceof Cookie
                        ? ((this.name = null),
                          (this.value = null),
                          (this.expiration_date = 1 / 0),
                          (this.path = String(request_path || "/")),
                          (this.explicit_path = !1),
                          (this.domain = request_domain || null),
                          (this.explicit_domain = !1),
                          (this.secure = !1),
                          (this.noscript = !1),
                          cookiestr && this.parse(cookiestr, request_domain, request_path),
                          this)
                        : new Cookie(cookiestr, request_domain, request_path);
                }
                (CookieAccessInfo.All = Object.freeze(Object.create(null))),
                    (exports.CookieAccessInfo = CookieAccessInfo),
                    (exports.Cookie = Cookie),
                    (Cookie.prototype.toString = function () {
                        var str = [this.name + "=" + this.value];
                        return (
                            this.expiration_date !== 1 / 0 && str.push("expires=" + new Date(this.expiration_date).toGMTString()),
                            this.domain && str.push("domain=" + this.domain),
                            this.path && str.push("path=" + this.path),
                            this.secure && str.push("secure"),
                            this.noscript && str.push("httponly"),
                            str.join("; ")
                        );
                    }),
                    (Cookie.prototype.toValueString = function () {
                        return this.name + "=" + this.value;
                    });
                var cookie_str_splitter = /[:](?=\s*[a-zA-Z0-9_\-]+\s*[=])/g;
                function CookieJar() {
                    var cookies, cookies_list;
                    return this instanceof CookieJar
                        ? ((cookies = Object.create(null)),
                          (this.setCookie = function (cookie, request_domain, request_path) {
                              var remove, i;
                              if (((remove = (cookie = new Cookie(cookie, request_domain, request_path)).expiration_date <= Date.now()), void 0 !== cookies[cookie.name])) {
                                  for (i = 0, cookies_list = cookies[cookie.name]; i < cookies_list.length; i += 1)
                                      if (cookies_list[i].collidesWith(cookie)) {
                                          if (remove) return cookies_list.splice(i, 1), 0 === cookies_list.length && delete cookies[cookie.name], !1;
                                          return (cookies_list[i] = cookie), cookie;
                                      }
                                  return !remove && (cookies_list.push(cookie), cookie);
                              }
                              return !remove && ((cookies[cookie.name] = [cookie]), cookies[cookie.name]);
                          }),
                          (this.getCookie = function (cookie_name, access_info) {
                              var cookie, i;
                              if ((cookies_list = cookies[cookie_name]))
                                  for (i = 0; i < cookies_list.length; i += 1) {
                                      if ((cookie = cookies_list[i]).expiration_date <= Date.now()) {
                                          0 === cookies_list.length && delete cookies[cookie.name];
                                          continue;
                                      }
                                      if (cookie.matches(access_info)) return cookie;
                                  }
                          }),
                          (this.getCookies = function (access_info) {
                              var cookie_name,
                                  cookie,
                                  matches = [];
                              for (cookie_name in cookies) (cookie = this.getCookie(cookie_name, access_info)) && matches.push(cookie);
                              return (
                                  (matches.toString = function () {
                                      return matches.join(":");
                                  }),
                                  (matches.toValueString = function () {
                                      return matches
                                          .map(function (c) {
                                              return c.toValueString();
                                          })
                                          .join("; ");
                                  }),
                                  matches
                              );
                          }),
                          this)
                        : new CookieJar();
                }
                (Cookie.prototype.parse = function (str, request_domain, request_path) {
                    if (this instanceof Cookie) {
                        var i,
                            parts = str.split(";").filter(function (value) {
                                return !!value;
                            }),
                            pair = parts[0].match(/([^=]+)=([\s\S]*)/);
                        if (!pair) {
                            console.warn("Invalid cookie header encountered. Header: '" + str + "'");
                            return;
                        }
                        var key = pair[1],
                            value = pair[2];
                        if ("string" != typeof key || 0 === key.length || "string" != typeof value) {
                            console.warn("Unable to extract values from cookie header. Cookie: '" + str + "'");
                            return;
                        }
                        for (i = 1, this.name = key, this.value = value; i < parts.length; i += 1)
                            switch (((key = (pair = parts[i].match(/([^=]+)(?:=([\s\S]*))?/))[1].trim().toLowerCase()), (value = pair[2]), key)) {
                                case "httponly":
                                    this.noscript = !0;
                                    break;
                                case "expires":
                                    this.expiration_date = value ? Number(Date.parse(value)) : 1 / 0;
                                    break;
                                case "path":
                                    (this.path = value ? value.trim() : ""), (this.explicit_path = !0);
                                    break;
                                case "domain":
                                    (this.domain = value ? value.trim() : ""), (this.explicit_domain = !!this.domain);
                                    break;
                                case "secure":
                                    this.secure = !0;
                            }
                        return this.explicit_path || (this.path = request_path || "/"), this.explicit_domain || (this.domain = request_domain), this;
                    }
                    return new Cookie().parse(str, request_domain, request_path);
                }),
                    (Cookie.prototype.matches = function (access_info) {
                        return access_info === CookieAccessInfo.All || ((!this.noscript || !access_info.script) && (!this.secure || !!access_info.secure) && !!this.collidesWith(access_info));
                    }),
                    (Cookie.prototype.collidesWith = function (access_info) {
                        if ((this.path && !access_info.path) || (this.domain && !access_info.domain) || (this.path && 0 !== access_info.path.indexOf(this.path)) || (this.explicit_path && 0 !== access_info.path.indexOf(this.path)))
                            return !1;
                        var access_domain = access_info.domain && access_info.domain.replace(/^[\.]/, ""),
                            cookie_domain = this.domain && this.domain.replace(/^[\.]/, "");
                        if (cookie_domain === access_domain) return !0;
                        if (cookie_domain) {
                            if (!this.explicit_domain) return !1;
                            var wildcard = access_domain.indexOf(cookie_domain);
                            if (-1 === wildcard || wildcard !== access_domain.length - cookie_domain.length) return !1;
                        }
                        return !0;
                    }),
                    (exports.CookieJar = CookieJar),
                    (CookieJar.prototype.setCookies = function (cookies, request_domain, request_path) {
                        cookies = Array.isArray(cookies) ? cookies : cookies.split(cookie_str_splitter);
                        var i,
                            cookie,
                            successful = [];
                        for (
                            i = 0,
                                cookies = cookies.map(function (item) {
                                    return new Cookie(item, request_domain, request_path);
                                });
                            i < cookies.length;
                            i += 1
                        )
                            (cookie = cookies[i]), this.setCookie(cookie, request_domain, request_path) && successful.push(cookie);
                        return successful;
                    });
            })();
        },
        20640: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var deselectCurrent = __webpack_require__(11742),
                clipboardToIE11Formatting = { "text/plain": "Text", "text/html": "Url", default: "Text" };
            module.exports = function (text, options) {
                var message,
                    copyKey,
                    debug,
                    message1,
                    reselectPrevious,
                    range,
                    selection,
                    mark,
                    success = !1;
                options || (options = {}), (debug = options.debug || !1);
                try {
                    if (
                        ((reselectPrevious = deselectCurrent()),
                        (range = document.createRange()),
                        (selection = document.getSelection()),
                        ((mark = document.createElement("span")).textContent = text),
                        (mark.style.all = "unset"),
                        (mark.style.position = "fixed"),
                        (mark.style.top = 0),
                        (mark.style.clip = "rect(0, 0, 0, 0)"),
                        (mark.style.whiteSpace = "pre"),
                        (mark.style.webkitUserSelect = "text"),
                        (mark.style.MozUserSelect = "text"),
                        (mark.style.msUserSelect = "text"),
                        (mark.style.userSelect = "text"),
                        mark.addEventListener("copy", function (e) {
                            if ((e.stopPropagation(), options.format)) {
                                if ((e.preventDefault(), void 0 === e.clipboardData)) {
                                    debug && console.warn("unable to use e.clipboardData"), debug && console.warn("trying IE specific stuff"), window.clipboardData.clearData();
                                    var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting.default;
                                    window.clipboardData.setData(format, text);
                                } else e.clipboardData.clearData(), e.clipboardData.setData(options.format, text);
                            }
                            options.onCopy && (e.preventDefault(), options.onCopy(e.clipboardData));
                        }),
                        document.body.appendChild(mark),
                        range.selectNodeContents(mark),
                        selection.addRange(range),
                        !document.execCommand("copy"))
                    )
                        throw Error("copy command was unsuccessful");
                    success = !0;
                } catch (err1) {
                    debug && console.error("unable to copy using execCommand: ", err1), debug && console.warn("trying IE specific stuff");
                    try {
                        window.clipboardData.setData(options.format || "text", text), options.onCopy && options.onCopy(window.clipboardData), (success = !0);
                    } catch (err) {
                        debug && console.error("unable to copy using clipboardData: ", err),
                            debug && console.error("falling back to prompt"),
                            (message = "message" in options ? options.message : "Copy to clipboard: #{key}, Enter"),
                            (copyKey = (/mac os x/i.test(navigator.userAgent) ? "⌘" : "Ctrl") + "+C"),
                            (message1 = message.replace(/#{\s*key\s*}/g, copyKey)),
                            window.prompt(message1, text);
                    }
                } finally {
                    selection && ("function" == typeof selection.removeRange ? selection.removeRange(range) : selection.removeAllRanges()), mark && document.body.removeChild(mark), reselectPrevious();
                }
                return success;
            };
        },
        23482: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var inherits = __webpack_require__(35717),
                MD5 = __webpack_require__(62318),
                RIPEMD160 = __webpack_require__(79785),
                sha = __webpack_require__(89072),
                Base = __webpack_require__(71027);
            function Hash(hash) {
                Base.call(this, "digest"), (this._hash = hash);
            }
            inherits(Hash, Base),
                (Hash.prototype._update = function (data) {
                    this._hash.update(data);
                }),
                (Hash.prototype._final = function () {
                    return this._hash.digest();
                }),
                (module.exports = function (alg) {
                    return "md5" === (alg = alg.toLowerCase()) ? new MD5() : "rmd160" === alg || "ripemd160" === alg ? new RIPEMD160() : new Hash(sha(alg));
                });
        },
        27484: function (module) {
            var r, i, s, u, o, f, h, c, d, $, l, y, m, v, D, p, S, w, O, _, b;
            module.exports =
                ((r = "millisecond"),
                (i = "second"),
                (s = "minute"),
                (u = "hour"),
                (o = "week"),
                (f = "month"),
                (h = "quarter"),
                (c = "year"),
                (d = "date"),
                ($ = "Invalid Date"),
                (l = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/),
                (y = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g),
                (m = function (t, e, n) {
                    var r = String(t);
                    return !r || r.length >= e ? t : "" + Array(e + 1 - r.length).join(n) + t;
                }),
                ((D = {})[(v = "en")] = {
                    name: "en",
                    weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
                    months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
                }),
                (p = function (t) {
                    return t instanceof _;
                }),
                (S = function t(e, n, r) {
                    var i;
                    if (!e) return v;
                    if ("string" == typeof e) {
                        var s = e.toLowerCase();
                        D[s] && (i = s), n && ((D[s] = n), (i = s));
                        var u = e.split("-");
                        if (!i && u.length > 1) return t(u[0]);
                    } else {
                        var a = e.name;
                        (D[a] = e), (i = a);
                    }
                    return !r && i && (v = i), i || (!r && v);
                }),
                (w = function (t, e) {
                    if (p(t)) return t.clone();
                    var n = "object" == typeof e ? e : {};
                    return (n.date = t), (n.args = arguments), new _(n);
                }),
                ((O = {
                    s: m,
                    z: function (t) {
                        var e = -t.utcOffset(),
                            n = Math.abs(e);
                        return (e <= 0 ? "+" : "-") + m(Math.floor(n / 60), 2, "0") + ":" + m(n % 60, 2, "0");
                    },
                    m: function t(e, n) {
                        if (e.date() < n.date()) return -t(n, e);
                        var r = 12 * (n.year() - e.year()) + (n.month() - e.month()),
                            i = e.clone().add(r, f),
                            s = n - i < 0,
                            u = e.clone().add(r + (s ? -1 : 1), f);
                        return +(-(r + (n - i) / (s ? i - u : u - i)) || 0);
                    },
                    a: function (t) {
                        return t < 0 ? Math.ceil(t) || 0 : Math.floor(t);
                    },
                    p: function (t) {
                        return (
                            { M: f, y: c, w: o, d: "day", D: d, h: u, m: s, s: i, ms: r, Q: h }[t] ||
                            String(t || "")
                                .toLowerCase()
                                .replace(/s$/, "")
                        );
                    },
                    u: function (t) {
                        return void 0 === t;
                    },
                }).l = S),
                (O.i = p),
                (O.w = function (t, e) {
                    return w(t, { locale: e.$L, utc: e.$u, x: e.$x, $offset: e.$offset });
                }),
                (b = (_ = (function () {
                    function M(t) {
                        (this.$L = S(t.locale, null, !0)), this.parse(t);
                    }
                    var m = M.prototype;
                    return (
                        (m.parse = function (t) {
                            (this.$d = (function (t) {
                                var e = t.date,
                                    n = t.utc;
                                if (null === e) return new Date(NaN);
                                if (O.u(e)) return new Date();
                                if (e instanceof Date) return new Date(e);
                                if ("string" == typeof e && !/Z$/i.test(e)) {
                                    var r = e.match(l);
                                    if (r) {
                                        var i = r[2] - 1 || 0,
                                            s = (r[7] || "0").substring(0, 3);
                                        return n ? new Date(Date.UTC(r[1], i, r[3] || 1, r[4] || 0, r[5] || 0, r[6] || 0, s)) : new Date(r[1], i, r[3] || 1, r[4] || 0, r[5] || 0, r[6] || 0, s);
                                    }
                                }
                                return new Date(e);
                            })(t)),
                                (this.$x = t.x || {}),
                                this.init();
                        }),
                        (m.init = function () {
                            var t = this.$d;
                            (this.$y = t.getFullYear()),
                                (this.$M = t.getMonth()),
                                (this.$D = t.getDate()),
                                (this.$W = t.getDay()),
                                (this.$H = t.getHours()),
                                (this.$m = t.getMinutes()),
                                (this.$s = t.getSeconds()),
                                (this.$ms = t.getMilliseconds());
                        }),
                        (m.$utils = function () {
                            return O;
                        }),
                        (m.isValid = function () {
                            return this.$d.toString() !== $;
                        }),
                        (m.isSame = function (t, e) {
                            var n = w(t);
                            return this.startOf(e) <= n && n <= this.endOf(e);
                        }),
                        (m.isAfter = function (t, e) {
                            return w(t) < this.startOf(e);
                        }),
                        (m.isBefore = function (t, e) {
                            return this.endOf(e) < w(t);
                        }),
                        (m.$g = function (t, e, n) {
                            return O.u(t) ? this[e] : this.set(n, t);
                        }),
                        (m.unix = function () {
                            return Math.floor(this.valueOf() / 1e3);
                        }),
                        (m.valueOf = function () {
                            return this.$d.getTime();
                        }),
                        (m.startOf = function (t, e) {
                            var n = this,
                                r = !!O.u(e) || e,
                                h = O.p(t),
                                $ = function (t, e) {
                                    var i = O.w(n.$u ? Date.UTC(n.$y, e, t) : new Date(n.$y, e, t), n);
                                    return r ? i : i.endOf("day");
                                },
                                l = function (t, e) {
                                    return O.w(n.toDate()[t].apply(n.toDate("s"), (r ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(e)), n);
                                },
                                y = this.$W,
                                M = this.$M,
                                m = this.$D,
                                g = "set" + (this.$u ? "UTC" : "");
                            switch (h) {
                                case c:
                                    return r ? $(1, 0) : $(31, 11);
                                case f:
                                    return r ? $(1, M) : $(0, M + 1);
                                case o:
                                    var v = this.$locale().weekStart || 0,
                                        D = (y < v ? y + 7 : y) - v;
                                    return $(r ? m - D : m + (6 - D), M);
                                case "day":
                                case d:
                                    return l(g + "Hours", 0);
                                case u:
                                    return l(g + "Minutes", 1);
                                case s:
                                    return l(g + "Seconds", 2);
                                case i:
                                    return l(g + "Milliseconds", 3);
                                default:
                                    return this.clone();
                            }
                        }),
                        (m.endOf = function (t) {
                            return this.startOf(t, !1);
                        }),
                        (m.$set = function (t, e) {
                            var n,
                                o = O.p(t),
                                h = "set" + (this.$u ? "UTC" : ""),
                                $ = (((n = {}).day = h + "Date"), (n[d] = h + "Date"), (n[f] = h + "Month"), (n[c] = h + "FullYear"), (n[u] = h + "Hours"), (n[s] = h + "Minutes"), (n[i] = h + "Seconds"), (n[r] = h + "Milliseconds"), n)[o],
                                l = "day" === o ? this.$D + (e - this.$W) : e;
                            if (o === f || o === c) {
                                var y = this.clone().set(d, 1);
                                y.$d[$](l), y.init(), (this.$d = y.set(d, Math.min(this.$D, y.daysInMonth())).$d);
                            } else $ && this.$d[$](l);
                            return this.init(), this;
                        }),
                        (m.set = function (t, e) {
                            return this.clone().$set(t, e);
                        }),
                        (m.get = function (t) {
                            return this[O.p(t)]();
                        }),
                        (m.add = function (r, h) {
                            var d,
                                $ = this;
                            r = Number(r);
                            var l = O.p(h),
                                y = function (t) {
                                    var e = w($);
                                    return O.w(e.date(e.date() + Math.round(t * r)), $);
                                };
                            if (l === f) return this.set(f, this.$M + r);
                            if (l === c) return this.set(c, this.$y + r);
                            if ("day" === l) return y(1);
                            if (l === o) return y(7);
                            var M = (((d = {})[s] = 6e4), (d[u] = 36e5), (d[i] = 1e3), d)[l] || 1,
                                m = this.$d.getTime() + r * M;
                            return O.w(m, this);
                        }),
                        (m.subtract = function (t, e) {
                            return this.add(-1 * t, e);
                        }),
                        (m.format = function (t) {
                            var e = this,
                                n = this.$locale();
                            if (!this.isValid()) return n.invalidDate || $;
                            var r = t || "YYYY-MM-DDTHH:mm:ssZ",
                                i = O.z(this),
                                s = this.$H,
                                u = this.$m,
                                a = this.$M,
                                o = n.weekdays,
                                f = n.months,
                                h = function (t, n, i, s) {
                                    return (t && (t[n] || t(e, r))) || i[n].substr(0, s);
                                },
                                c = function (t) {
                                    return O.s(s % 12 || 12, t, "0");
                                },
                                d =
                                    n.meridiem ||
                                    function (t, e, n) {
                                        var r = t < 12 ? "AM" : "PM";
                                        return n ? r.toLowerCase() : r;
                                    },
                                l = {
                                    YY: String(this.$y).slice(-2),
                                    YYYY: this.$y,
                                    M: a + 1,
                                    MM: O.s(a + 1, 2, "0"),
                                    MMM: h(n.monthsShort, a, f, 3),
                                    MMMM: h(f, a),
                                    D: this.$D,
                                    DD: O.s(this.$D, 2, "0"),
                                    d: String(this.$W),
                                    dd: h(n.weekdaysMin, this.$W, o, 2),
                                    ddd: h(n.weekdaysShort, this.$W, o, 3),
                                    dddd: o[this.$W],
                                    H: String(s),
                                    HH: O.s(s, 2, "0"),
                                    h: c(1),
                                    hh: c(2),
                                    a: d(s, u, !0),
                                    A: d(s, u, !1),
                                    m: String(u),
                                    mm: O.s(u, 2, "0"),
                                    s: String(this.$s),
                                    ss: O.s(this.$s, 2, "0"),
                                    SSS: O.s(this.$ms, 3, "0"),
                                    Z: i,
                                };
                            return r.replace(y, function (t, e) {
                                return e || l[t] || i.replace(":", "");
                            });
                        }),
                        (m.utcOffset = function () {
                            return -(15 * Math.round(this.$d.getTimezoneOffset() / 15));
                        }),
                        (m.diff = function (r, d, $) {
                            var l,
                                y = O.p(d),
                                M = w(r),
                                m = (M.utcOffset() - this.utcOffset()) * 6e4,
                                g = this - M,
                                v = O.m(this, M);
                            return (v = (((l = {})[c] = v / 12), (l[f] = v), (l[h] = v / 3), (l[o] = (g - m) / 6048e5), (l.day = (g - m) / 864e5), (l[u] = g / 36e5), (l[s] = g / 6e4), (l[i] = g / 1e3), l)[y] || g), $ ? v : O.a(v);
                        }),
                        (m.daysInMonth = function () {
                            return this.endOf(f).$D;
                        }),
                        (m.$locale = function () {
                            return D[this.$L];
                        }),
                        (m.locale = function (t, e) {
                            if (!t) return this.$L;
                            var n = this.clone(),
                                r = S(t, e, !0);
                            return r && (n.$L = r), n;
                        }),
                        (m.clone = function () {
                            return O.w(this.$d, this);
                        }),
                        (m.toDate = function () {
                            return new Date(this.valueOf());
                        }),
                        (m.toJSON = function () {
                            return this.isValid() ? this.toISOString() : null;
                        }),
                        (m.toISOString = function () {
                            return this.$d.toISOString();
                        }),
                        (m.toString = function () {
                            return this.$d.toUTCString();
                        }),
                        M
                    );
                })()).prototype),
                (w.prototype = b),
                [
                    ["$ms", r],
                    ["$s", i],
                    ["$m", s],
                    ["$H", u],
                    ["$W", "day"],
                    ["$M", f],
                    ["$y", c],
                    ["$D", d],
                ].forEach(function (t) {
                    b[t[1]] = function (e) {
                        return this.$g(e, t[0], t[1]);
                    };
                }),
                (w.extend = function (t, e) {
                    return t.$i || (t(e, _, w), (t.$i = !0)), w;
                }),
                (w.locale = S),
                (w.isDayjs = p),
                (w.unix = function (t) {
                    return w(1e3 * t);
                }),
                (w.en = D[v]),
                (w.Ls = D),
                (w.p = {}),
                w);
        },
        1646: function (module) {
            var t, s, o, a, d, c, f, m, l, $, g, p;
            module.exports =
                ((o = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g),
                (a = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/),
                (d = { years: 31536e6, months: 2592e6, days: 864e5, hours: 36e5, minutes: 6e4, seconds: 1e3, milliseconds: 1, weeks: 6048e5 }),
                (c = function (t) {
                    return t instanceof p;
                }),
                (f = function (t, s, n) {
                    return new p(t, n, s.$l);
                }),
                (m = function (t) {
                    return s.p(t) + "s";
                }),
                (l = function (t) {
                    return t < 0;
                }),
                ($ = function (t) {
                    return l(t) ? Math.ceil(t) : Math.floor(t);
                }),
                (g = function (t, s) {
                    return t ? (l(t) ? { negative: !0, format: "" + Math.abs(t) + s } : { negative: !1, format: "" + t + s }) : { negative: !1, format: "" };
                }),
                (p = (function () {
                    function l(t, s, n) {
                        var i = this;
                        if (((this.$d = {}), (this.$l = n), void 0 === t && ((this.$ms = 0), this.parseFromMilliseconds()), s)) return f(t * d[m(s)], this);
                        if ("number" == typeof t) return (this.$ms = t), this.parseFromMilliseconds(), this;
                        if ("object" == typeof t)
                            return (
                                Object.keys(t).forEach(function (s) {
                                    i.$d[m(s)] = t[s];
                                }),
                                this.calMilliseconds(),
                                this
                            );
                        if ("string" == typeof t) {
                            var e = t.match(a);
                            if (e) {
                                var r = e.slice(2).map(function (t) {
                                    return null != t ? Number(t) : 0;
                                });
                                return (this.$d.years = r[0]), (this.$d.months = r[1]), (this.$d.weeks = r[2]), (this.$d.days = r[3]), (this.$d.hours = r[4]), (this.$d.minutes = r[5]), (this.$d.seconds = r[6]), this.calMilliseconds(), this;
                            }
                        }
                        return this;
                    }
                    var y = l.prototype;
                    return (
                        (y.calMilliseconds = function () {
                            var t = this;
                            this.$ms = Object.keys(this.$d).reduce(function (s, n) {
                                return s + (t.$d[n] || 0) * d[n];
                            }, 0);
                        }),
                        (y.parseFromMilliseconds = function () {
                            var t = this.$ms;
                            (this.$d.years = $(t / 31536e6)),
                                (t %= 31536e6),
                                (this.$d.months = $(t / 2592e6)),
                                (t %= 2592e6),
                                (this.$d.days = $(t / 864e5)),
                                (t %= 864e5),
                                (this.$d.hours = $(t / 36e5)),
                                (t %= 36e5),
                                (this.$d.minutes = $(t / 6e4)),
                                (t %= 6e4),
                                (this.$d.seconds = $(t / 1e3)),
                                (t %= 1e3),
                                (this.$d.milliseconds = t);
                        }),
                        (y.toISOString = function () {
                            var t = g(this.$d.years, "Y"),
                                s = g(this.$d.months, "M"),
                                n = +this.$d.days || 0;
                            this.$d.weeks && (n += 7 * this.$d.weeks);
                            var i = g(n, "D"),
                                e = g(this.$d.hours, "H"),
                                r = g(this.$d.minutes, "M"),
                                o = this.$d.seconds || 0;
                            this.$d.milliseconds && (o += this.$d.milliseconds / 1e3);
                            var u = g(o, "S"),
                                h = t.negative || s.negative || i.negative || e.negative || r.negative || u.negative,
                                a = e.format || r.format || u.format ? "T" : "",
                                d = (h ? "-" : "") + "P" + t.format + s.format + i.format + a + e.format + r.format + u.format;
                            return "P" === d || "-P" === d ? "P0D" : d;
                        }),
                        (y.toJSON = function () {
                            return this.toISOString();
                        }),
                        (y.format = function (t) {
                            var i = {
                                Y: this.$d.years,
                                YY: s.s(this.$d.years, 2, "0"),
                                YYYY: s.s(this.$d.years, 4, "0"),
                                M: this.$d.months,
                                MM: s.s(this.$d.months, 2, "0"),
                                D: this.$d.days,
                                DD: s.s(this.$d.days, 2, "0"),
                                H: this.$d.hours,
                                HH: s.s(this.$d.hours, 2, "0"),
                                m: this.$d.minutes,
                                mm: s.s(this.$d.minutes, 2, "0"),
                                s: this.$d.seconds,
                                ss: s.s(this.$d.seconds, 2, "0"),
                                SSS: s.s(this.$d.milliseconds, 3, "0"),
                            };
                            return (t || "YYYY-MM-DDTHH:mm:ss").replace(o, function (t, s) {
                                return s || String(i[t]);
                            });
                        }),
                        (y.as = function (t) {
                            return this.$ms / d[m(t)];
                        }),
                        (y.get = function (t) {
                            var s = this.$ms,
                                n = m(t);
                            return "milliseconds" === n ? (s %= 1e3) : (s = "weeks" === n ? $(s / d[n]) : this.$d[n]), 0 === s ? 0 : s;
                        }),
                        (y.add = function (t, s, n) {
                            var i;
                            return (i = s ? t * d[m(s)] : c(t) ? t.$ms : f(t, this).$ms), f(this.$ms + i * (n ? -1 : 1), this);
                        }),
                        (y.subtract = function (t, s) {
                            return this.add(t, s, !0);
                        }),
                        (y.locale = function (t) {
                            var s = this.clone();
                            return (s.$l = t), s;
                        }),
                        (y.clone = function () {
                            return f(this.$ms, this);
                        }),
                        (y.humanize = function (s) {
                            return t().add(this.$ms, "ms").locale(this.$l).fromNow(!s);
                        }),
                        (y.milliseconds = function () {
                            return this.get("milliseconds");
                        }),
                        (y.asMilliseconds = function () {
                            return this.as("milliseconds");
                        }),
                        (y.seconds = function () {
                            return this.get("seconds");
                        }),
                        (y.asSeconds = function () {
                            return this.as("seconds");
                        }),
                        (y.minutes = function () {
                            return this.get("minutes");
                        }),
                        (y.asMinutes = function () {
                            return this.as("minutes");
                        }),
                        (y.hours = function () {
                            return this.get("hours");
                        }),
                        (y.asHours = function () {
                            return this.as("hours");
                        }),
                        (y.days = function () {
                            return this.get("days");
                        }),
                        (y.asDays = function () {
                            return this.as("days");
                        }),
                        (y.weeks = function () {
                            return this.get("weeks");
                        }),
                        (y.asWeeks = function () {
                            return this.as("weeks");
                        }),
                        (y.months = function () {
                            return this.get("months");
                        }),
                        (y.asMonths = function () {
                            return this.as("months");
                        }),
                        (y.years = function () {
                            return this.get("years");
                        }),
                        (y.asYears = function () {
                            return this.as("years");
                        }),
                        l
                    );
                })()),
                function (n, i, e) {
                    (t = e),
                        (s = e().$utils()),
                        (e.duration = function (t, s) {
                            var n = e.locale();
                            return f(t, { $l: n }, s);
                        }),
                        (e.isDuration = c);
                    var r = i.prototype.add,
                        o = i.prototype.subtract;
                    (i.prototype.add = function (t, s) {
                        return c(t) && (t = t.asMilliseconds()), r.bind(this)(t, s);
                    }),
                        (i.prototype.subtract = function (t, s) {
                            return c(t) && (t = t.asMilliseconds()), o.bind(this)(t, s);
                        });
                });
        },
        84110: function (module) {
            module.exports = function (r, e, t) {
                r = r || {};
                var n = e.prototype,
                    o = { future: "in %s", past: "%s ago", s: "a few seconds", m: "a minute", mm: "%d minutes", h: "an hour", hh: "%d hours", d: "a day", dd: "%d days", M: "a month", MM: "%d months", y: "a year", yy: "%d years" };
                function i(r, e, t, o) {
                    return n.fromToBase(r, e, t, o);
                }
                (t.en.relativeTime = o),
                    (n.fromToBase = function (e, n, i, d, u) {
                        for (
                            var f,
                                a,
                                s,
                                l = i.$locale().relativeTime || o,
                                h = r.thresholds || [
                                    { l: "s", r: 44, d: "second" },
                                    { l: "m", r: 89 },
                                    { l: "mm", r: 44, d: "minute" },
                                    { l: "h", r: 89 },
                                    { l: "hh", r: 21, d: "hour" },
                                    { l: "d", r: 35 },
                                    { l: "dd", r: 25, d: "day" },
                                    { l: "M", r: 45 },
                                    { l: "MM", r: 10, d: "month" },
                                    { l: "y", r: 17 },
                                    { l: "yy", d: "year" },
                                ],
                                m = h.length,
                                c = 0;
                            c < m;
                            c += 1
                        ) {
                            var y = h[c];
                            y.d && (f = d ? t(e).diff(i, y.d, !0) : i.diff(e, y.d, !0));
                            var p = (r.rounding || Math.round)(Math.abs(f));
                            if (((s = f > 0), p <= y.r || !y.r)) {
                                p <= 1 && c > 0 && (y = h[c - 1]);
                                var v = l[y.l];
                                u && (p = u("" + p)), (a = "string" == typeof v ? v.replace("%d", p) : v(p, n, y.l, s));
                                break;
                            }
                        }
                        if (n) return a;
                        var M = s ? l.future : l.past;
                        return "function" == typeof M ? M(a) : M.replace("%s", a);
                    }),
                    (n.to = function (r, e) {
                        return i(r, e, this, !0);
                    }),
                    (n.from = function (r, e) {
                        return i(r, e, this);
                    });
                var d = function (r) {
                    return r.$u ? t.utc() : t();
                };
                (n.toNow = function (r) {
                    return this.to(d(this), r);
                }),
                    (n.fromNow = function (r) {
                        return this.from(d(this), r);
                    });
            };
        },
        70660: function (module) {
            module.exports = function (e, n, t) {
                t.updateLocale = function (e, n) {
                    var o = t.Ls[e];
                    if (o)
                        return (
                            (n ? Object.keys(n) : []).forEach(function (e) {
                                o[e] = n[e];
                            }),
                            o
                        );
                };
            };
        },
        44020: function (module) {
            "use strict";
            var token = "%[a-f0-9]{2}",
                singleMatcher = RegExp(token, "gi"),
                multiMatcher = RegExp("(" + token + ")+", "gi");
            module.exports = function (encodedURI) {
                if ("string" != typeof encodedURI) throw TypeError("Expected `encodedURI` to be of type `string`, got `" + typeof encodedURI + "`");
                try {
                    return (encodedURI = encodedURI.replace(/\+/g, " ")), decodeURIComponent(encodedURI);
                } catch (err) {
                    return (function (input) {
                        for (var replaceMap = { "%FE%FF": "��", "%FF%FE": "��" }, match = multiMatcher.exec(input); match; ) {
                            try {
                                replaceMap[match[0]] = decodeURIComponent(match[0]);
                            } catch (err) {
                                var result = (function (input) {
                                    try {
                                        return decodeURIComponent(input);
                                    } catch (err) {
                                        for (var tokens = input.match(singleMatcher), i = 1; i < tokens.length; i++)
                                            tokens = (input = (function decodeComponents(components, split) {
                                                try {
                                                    return decodeURIComponent(components.join(""));
                                                } catch (err) {}
                                                if (1 === components.length) return components;
                                                split = split || 1;
                                                var left = components.slice(0, split),
                                                    right = components.slice(split);
                                                return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));
                                            })(tokens, i).join("")).match(singleMatcher);
                                        return input;
                                    }
                                })(match[0]);
                                result !== match[0] && (replaceMap[match[0]] = result);
                            }
                            match = multiMatcher.exec(input);
                        }
                        replaceMap["%C2"] = "�";
                        for (var entries = Object.keys(replaceMap), i = 0; i < entries.length; i++) {
                            var key = entries[i];
                            input = input.replace(RegExp(key, "g"), replaceMap[key]);
                        }
                        return input;
                    })(encodedURI);
                }
            };
        },
        65987: function (module) {
            "use strict";
            var dijkstra = {
                single_source_shortest_paths: function (graph, s, d) {
                    var closest,
                        u,
                        v,
                        cost_of_s_to_u,
                        adjacent_nodes,
                        cost_of_s_to_u_plus_cost_of_e,
                        cost_of_s_to_v,
                        predecessors = {},
                        costs = {};
                    costs[s] = 0;
                    var open = dijkstra.PriorityQueue.make();
                    for (open.push(s, 0); !open.empty(); )
                        for (v in ((u = (closest = open.pop()).value), (cost_of_s_to_u = closest.cost), (adjacent_nodes = graph[u] || {})))
                            adjacent_nodes.hasOwnProperty(v) &&
                                ((cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + adjacent_nodes[v]),
                                (cost_of_s_to_v = costs[v]),
                                (void 0 === costs[v] || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) && ((costs[v] = cost_of_s_to_u_plus_cost_of_e), open.push(v, cost_of_s_to_u_plus_cost_of_e), (predecessors[v] = u)));
                    if (void 0 !== d && void 0 === costs[d]) throw Error(["Could not find a path from ", s, " to ", d, "."].join(""));
                    return predecessors;
                },
                extract_shortest_path_from_predecessor_list: function (predecessors, d) {
                    for (var nodes = [], u = d; u; ) nodes.push(u), predecessors[u], (u = predecessors[u]);
                    return nodes.reverse(), nodes;
                },
                find_path: function (graph, s, d) {
                    var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);
                    return dijkstra.extract_shortest_path_from_predecessor_list(predecessors, d);
                },
                PriorityQueue: {
                    make: function (opts) {
                        var key,
                            T = dijkstra.PriorityQueue,
                            t = {};
                        for (key in ((opts = opts || {}), T)) T.hasOwnProperty(key) && (t[key] = T[key]);
                        return (t.queue = []), (t.sorter = opts.sorter || T.default_sorter), t;
                    },
                    default_sorter: function (a, b) {
                        return a.cost - b.cost;
                    },
                    push: function (value, cost) {
                        this.queue.push({ value: value, cost: cost }), this.queue.sort(this.sorter);
                    },
                    pop: function () {
                        return this.queue.shift();
                    },
                    empty: function () {
                        return 0 === this.queue.length;
                    },
                },
            };
            module.exports = dijkstra;
        },
        86266: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var elliptic = exports;
            (elliptic.version = __webpack_require__(18597).i8),
                (elliptic.utils = __webpack_require__(80953)),
                (elliptic.rand = __webpack_require__(29931)),
                (elliptic.curve = __webpack_require__(88254)),
                (elliptic.curves = __webpack_require__(45427)),
                (elliptic.ec = __webpack_require__(57954)),
                (elliptic.eddsa = __webpack_require__(65980));
        },
        4918: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var BN = __webpack_require__(13550),
                utils = __webpack_require__(80953),
                getNAF = utils.getNAF,
                getJSF = utils.getJSF,
                assert = utils.assert;
            function BaseCurve(type, conf) {
                (this.type = type),
                    (this.p = new BN(conf.p, 16)),
                    (this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p)),
                    (this.zero = new BN(0).toRed(this.red)),
                    (this.one = new BN(1).toRed(this.red)),
                    (this.two = new BN(2).toRed(this.red)),
                    (this.n = conf.n && new BN(conf.n, 16)),
                    (this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed)),
                    (this._wnafT1 = [, , , ,]),
                    (this._wnafT2 = [, , , ,]),
                    (this._wnafT3 = [, , , ,]),
                    (this._wnafT4 = [, , , ,]),
                    (this._bitLength = this.n ? this.n.bitLength() : 0);
                var adjustCount = this.n && this.p.div(this.n);
                !adjustCount || adjustCount.cmpn(100) > 0 ? (this.redN = null) : ((this._maxwellTrick = !0), (this.redN = this.n.toRed(this.red)));
            }
            function BasePoint(curve, type) {
                (this.curve = curve), (this.type = type), (this.precomputed = null);
            }
            (module.exports = BaseCurve),
                (BaseCurve.prototype.point = function () {
                    throw Error("Not implemented");
                }),
                (BaseCurve.prototype.validate = function () {
                    throw Error("Not implemented");
                }),
                (BaseCurve.prototype._fixedNafMul = function (p, k) {
                    assert(p.precomputed);
                    var j,
                        nafW,
                        doubles = p._getDoubles(),
                        naf = getNAF(k, 1, this._bitLength),
                        I = (1 << (doubles.step + 1)) - (doubles.step % 2 == 0 ? 2 : 1);
                    I /= 3;
                    var repr = [];
                    for (j = 0; j < naf.length; j += doubles.step) {
                        nafW = 0;
                        for (var l = j + doubles.step - 1; l >= j; l--) nafW = (nafW << 1) + naf[l];
                        repr.push(nafW);
                    }
                    for (var a = this.jpoint(null, null, null), b = this.jpoint(null, null, null), i = I; i > 0; i--) {
                        for (j = 0; j < repr.length; j++) (nafW = repr[j]) === i ? (b = b.mixedAdd(doubles.points[j])) : nafW === -i && (b = b.mixedAdd(doubles.points[j].neg()));
                        a = a.add(b);
                    }
                    return a.toP();
                }),
                (BaseCurve.prototype._wnafMul = function (p, k) {
                    var w = 4,
                        nafPoints = p._getNAFPoints(w);
                    w = nafPoints.wnd;
                    for (var wnd = nafPoints.points, naf = getNAF(k, w, this._bitLength), acc = this.jpoint(null, null, null), i = naf.length - 1; i >= 0; i--) {
                        for (var l = 0; i >= 0 && 0 === naf[i]; i--) l++;
                        if ((i >= 0 && l++, (acc = acc.dblp(l)), i < 0)) break;
                        var z = naf[i];
                        assert(0 !== z), (acc = "affine" === p.type ? (z > 0 ? acc.mixedAdd(wnd[(z - 1) >> 1]) : acc.mixedAdd(wnd[(-z - 1) >> 1].neg())) : z > 0 ? acc.add(wnd[(z - 1) >> 1]) : acc.add(wnd[(-z - 1) >> 1].neg()));
                    }
                    return "affine" === p.type ? acc.toP() : acc;
                }),
                (BaseCurve.prototype._wnafMulAdd = function (defW, points, coeffs, len, jacobianResult) {
                    var i,
                        j,
                        p,
                        wndWidth = this._wnafT1,
                        wnd = this._wnafT2,
                        naf = this._wnafT3,
                        max = 0;
                    for (i = 0; i < len; i++) {
                        var nafPoints = (p = points[i])._getNAFPoints(defW);
                        (wndWidth[i] = nafPoints.wnd), (wnd[i] = nafPoints.points);
                    }
                    for (i = len - 1; i >= 1; i -= 2) {
                        var a = i - 1,
                            b = i;
                        if (1 !== wndWidth[a] || 1 !== wndWidth[b]) {
                            (naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength)), (naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength)), (max = Math.max(naf[a].length, max)), (max = Math.max(naf[b].length, max));
                            continue;
                        }
                        var comb = [points[a], null, null, points[b]];
                        0 === points[a].y.cmp(points[b].y)
                            ? ((comb[1] = points[a].add(points[b])), (comb[2] = points[a].toJ().mixedAdd(points[b].neg())))
                            : 0 === points[a].y.cmp(points[b].y.redNeg())
                            ? ((comb[1] = points[a].toJ().mixedAdd(points[b])), (comb[2] = points[a].add(points[b].neg())))
                            : ((comb[1] = points[a].toJ().mixedAdd(points[b])), (comb[2] = points[a].toJ().mixedAdd(points[b].neg())));
                        var index = [-3, -1, -5, -7, 0, 7, 5, 1, 3],
                            jsf = getJSF(coeffs[a], coeffs[b]);
                        for (j = 0, max = Math.max(jsf[0].length, max), naf[a] = Array(max), naf[b] = Array(max); j < max; j++) {
                            var ja = 0 | jsf[0][j],
                                jb = 0 | jsf[1][j];
                            (naf[a][j] = index[(ja + 1) * 3 + (jb + 1)]), (naf[b][j] = 0), (wnd[a] = comb);
                        }
                    }
                    var acc = this.jpoint(null, null, null),
                        tmp = this._wnafT4;
                    for (i = max; i >= 0; i--) {
                        for (var k = 0; i >= 0; ) {
                            var zero = !0;
                            for (j = 0; j < len; j++) (tmp[j] = 0 | naf[j][i]), 0 !== tmp[j] && (zero = !1);
                            if (!zero) break;
                            k++, i--;
                        }
                        if ((i >= 0 && k++, (acc = acc.dblp(k)), i < 0)) break;
                        for (j = 0; j < len; j++) {
                            var z = tmp[j];
                            0 !== z && (z > 0 ? (p = wnd[j][(z - 1) >> 1]) : z < 0 && (p = wnd[j][(-z - 1) >> 1].neg()), (acc = "affine" === p.type ? acc.mixedAdd(p) : acc.add(p)));
                        }
                    }
                    for (i = 0; i < len; i++) wnd[i] = null;
                    return jacobianResult ? acc : acc.toP();
                }),
                (BaseCurve.BasePoint = BasePoint),
                (BasePoint.prototype.eq = function () {
                    throw Error("Not implemented");
                }),
                (BasePoint.prototype.validate = function () {
                    return this.curve.validate(this);
                }),
                (BaseCurve.prototype.decodePoint = function (bytes, enc) {
                    bytes = utils.toArray(bytes, enc);
                    var len = this.p.byteLength();
                    if ((4 === bytes[0] || 6 === bytes[0] || 7 === bytes[0]) && bytes.length - 1 == 2 * len)
                        return 6 === bytes[0] ? assert(bytes[bytes.length - 1] % 2 == 0) : 7 === bytes[0] && assert(bytes[bytes.length - 1] % 2 == 1), this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));
                    if ((2 === bytes[0] || 3 === bytes[0]) && bytes.length - 1 === len) return this.pointFromX(bytes.slice(1, 1 + len), 3 === bytes[0]);
                    throw Error("Unknown point format");
                }),
                (BasePoint.prototype.encodeCompressed = function (enc) {
                    return this.encode(enc, !0);
                }),
                (BasePoint.prototype._encode = function (compact) {
                    var len = this.curve.p.byteLength(),
                        x = this.getX().toArray("be", len);
                    return compact ? [this.getY().isEven() ? 2 : 3].concat(x) : [4].concat(x, this.getY().toArray("be", len));
                }),
                (BasePoint.prototype.encode = function (enc, compact) {
                    return utils.encode(this._encode(compact), enc);
                }),
                (BasePoint.prototype.precompute = function (power) {
                    if (this.precomputed) return this;
                    var precomputed = { doubles: null, naf: null, beta: null };
                    return (precomputed.naf = this._getNAFPoints(8)), (precomputed.doubles = this._getDoubles(4, power)), (precomputed.beta = this._getBeta()), (this.precomputed = precomputed), this;
                }),
                (BasePoint.prototype._hasDoubles = function (k) {
                    if (!this.precomputed) return !1;
                    var doubles = this.precomputed.doubles;
                    return !!doubles && doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
                }),
                (BasePoint.prototype._getDoubles = function (step, power) {
                    if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
                    for (var doubles = [this], acc = this, i = 0; i < power; i += step) {
                        for (var j = 0; j < step; j++) acc = acc.dbl();
                        doubles.push(acc);
                    }
                    return { step: step, points: doubles };
                }),
                (BasePoint.prototype._getNAFPoints = function (wnd) {
                    if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
                    for (var res = [this], max = (1 << wnd) - 1, dbl = 1 === max ? null : this.dbl(), i = 1; i < max; i++) res[i] = res[i - 1].add(dbl);
                    return { wnd: wnd, points: res };
                }),
                (BasePoint.prototype._getBeta = function () {
                    return null;
                }),
                (BasePoint.prototype.dblp = function (k) {
                    for (var r = this, i = 0; i < k; i++) r = r.dbl();
                    return r;
                });
        },
        31138: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var utils = __webpack_require__(80953),
                BN = __webpack_require__(13550),
                inherits = __webpack_require__(35717),
                Base = __webpack_require__(4918),
                assert = utils.assert;
            function EdwardsCurve(conf) {
                (this.twisted = (0 | conf.a) != 1),
                    (this.mOneA = this.twisted && (0 | conf.a) == -1),
                    (this.extended = this.mOneA),
                    Base.call(this, "edwards", conf),
                    (this.a = new BN(conf.a, 16).umod(this.red.m)),
                    (this.a = this.a.toRed(this.red)),
                    (this.c = new BN(conf.c, 16).toRed(this.red)),
                    (this.c2 = this.c.redSqr()),
                    (this.d = new BN(conf.d, 16).toRed(this.red)),
                    (this.dd = this.d.redAdd(this.d)),
                    assert(!this.twisted || 0 === this.c.fromRed().cmpn(1)),
                    (this.oneC = (0 | conf.c) == 1);
            }
            function Point(curve, x, y, z, t) {
                Base.BasePoint.call(this, curve, "projective"),
                    null === x && null === y && null === z
                        ? ((this.x = this.curve.zero), (this.y = this.curve.one), (this.z = this.curve.one), (this.t = this.curve.zero), (this.zOne = !0))
                        : ((this.x = new BN(x, 16)),
                          (this.y = new BN(y, 16)),
                          (this.z = z ? new BN(z, 16) : this.curve.one),
                          (this.t = t && new BN(t, 16)),
                          this.x.red || (this.x = this.x.toRed(this.curve.red)),
                          this.y.red || (this.y = this.y.toRed(this.curve.red)),
                          this.z.red || (this.z = this.z.toRed(this.curve.red)),
                          this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red)),
                          (this.zOne = this.z === this.curve.one),
                          !this.curve.extended || this.t || ((this.t = this.x.redMul(this.y)), this.zOne || (this.t = this.t.redMul(this.z.redInvm()))));
            }
            inherits(EdwardsCurve, Base),
                (module.exports = EdwardsCurve),
                (EdwardsCurve.prototype._mulA = function (num) {
                    return this.mOneA ? num.redNeg() : this.a.redMul(num);
                }),
                (EdwardsCurve.prototype._mulC = function (num) {
                    return this.oneC ? num : this.c.redMul(num);
                }),
                (EdwardsCurve.prototype.jpoint = function (x, y, z, t) {
                    return this.point(x, y, z, t);
                }),
                (EdwardsCurve.prototype.pointFromX = function (x, odd) {
                    (x = new BN(x, 16)).red || (x = x.toRed(this.red));
                    var x2 = x.redSqr(),
                        rhs = this.c2.redSub(this.a.redMul(x2)),
                        lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2)),
                        y2 = rhs.redMul(lhs.redInvm()),
                        y = y2.redSqrt();
                    if (0 !== y.redSqr().redSub(y2).cmp(this.zero)) throw Error("invalid point");
                    var isOdd = y.fromRed().isOdd();
                    return ((odd && !isOdd) || (!odd && isOdd)) && (y = y.redNeg()), this.point(x, y);
                }),
                (EdwardsCurve.prototype.pointFromY = function (y, odd) {
                    (y = new BN(y, 16)).red || (y = y.toRed(this.red));
                    var y2 = y.redSqr(),
                        lhs = y2.redSub(this.c2),
                        rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a),
                        x2 = lhs.redMul(rhs.redInvm());
                    if (0 === x2.cmp(this.zero)) {
                        if (!odd) return this.point(this.zero, y);
                        throw Error("invalid point");
                    }
                    var x = x2.redSqrt();
                    if (0 !== x.redSqr().redSub(x2).cmp(this.zero)) throw Error("invalid point");
                    return x.fromRed().isOdd() !== odd && (x = x.redNeg()), this.point(x, y);
                }),
                (EdwardsCurve.prototype.validate = function (point) {
                    if (point.isInfinity()) return !0;
                    point.normalize();
                    var x2 = point.x.redSqr(),
                        y2 = point.y.redSqr(),
                        lhs = x2.redMul(this.a).redAdd(y2),
                        rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));
                    return 0 === lhs.cmp(rhs);
                }),
                inherits(Point, Base.BasePoint),
                (EdwardsCurve.prototype.pointFromJSON = function (obj) {
                    return Point.fromJSON(this, obj);
                }),
                (EdwardsCurve.prototype.point = function (x, y, z, t) {
                    return new Point(this, x, y, z, t);
                }),
                (Point.fromJSON = function (curve, obj) {
                    return new Point(curve, obj[0], obj[1], obj[2]);
                }),
                (Point.prototype.inspect = function () {
                    return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
                }),
                (Point.prototype.isInfinity = function () {
                    return 0 === this.x.cmpn(0) && (0 === this.y.cmp(this.z) || (this.zOne && 0 === this.y.cmp(this.curve.c)));
                }),
                (Point.prototype._extDbl = function () {
                    var a = this.x.redSqr(),
                        b = this.y.redSqr(),
                        c = this.z.redSqr();
                    c = c.redIAdd(c);
                    var d = this.curve._mulA(a),
                        e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b),
                        g = d.redAdd(b),
                        f = g.redSub(c),
                        h = d.redSub(b),
                        nx = e.redMul(f),
                        ny = g.redMul(h),
                        nt = e.redMul(h),
                        nz = f.redMul(g);
                    return this.curve.point(nx, ny, nz, nt);
                }),
                (Point.prototype._projDbl = function () {
                    var nx,
                        ny,
                        nz,
                        e,
                        h,
                        j,
                        b = this.x.redAdd(this.y).redSqr(),
                        c = this.x.redSqr(),
                        d = this.y.redSqr();
                    if (this.curve.twisted) {
                        var f = (e = this.curve._mulA(c)).redAdd(d);
                        this.zOne
                            ? ((nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two))), (ny = f.redMul(e.redSub(d))), (nz = f.redSqr().redSub(f).redSub(f)))
                            : ((h = this.z.redSqr()), (j = f.redSub(h).redISub(h)), (nx = b.redSub(c).redISub(d).redMul(j)), (ny = f.redMul(e.redSub(d))), (nz = f.redMul(j)));
                    } else (e = c.redAdd(d)), (h = this.curve._mulC(this.z).redSqr()), (j = e.redSub(h).redSub(h)), (nx = this.curve._mulC(b.redISub(e)).redMul(j)), (ny = this.curve._mulC(e).redMul(c.redISub(d))), (nz = e.redMul(j));
                    return this.curve.point(nx, ny, nz);
                }),
                (Point.prototype.dbl = function () {
                    return this.isInfinity() ? this : this.curve.extended ? this._extDbl() : this._projDbl();
                }),
                (Point.prototype._extAdd = function (p) {
                    var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x)),
                        b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x)),
                        c = this.t.redMul(this.curve.dd).redMul(p.t),
                        d = this.z.redMul(p.z.redAdd(p.z)),
                        e = b.redSub(a),
                        f = d.redSub(c),
                        g = d.redAdd(c),
                        h = b.redAdd(a),
                        nx = e.redMul(f),
                        ny = g.redMul(h),
                        nt = e.redMul(h),
                        nz = f.redMul(g);
                    return this.curve.point(nx, ny, nz, nt);
                }),
                (Point.prototype._projAdd = function (p) {
                    var ny,
                        nz,
                        a = this.z.redMul(p.z),
                        b = a.redSqr(),
                        c = this.x.redMul(p.x),
                        d = this.y.redMul(p.y),
                        e = this.curve.d.redMul(c).redMul(d),
                        f = b.redSub(e),
                        g = b.redAdd(e),
                        tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d),
                        nx = a.redMul(f).redMul(tmp);
                    return this.curve.twisted ? ((ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)))), (nz = f.redMul(g))) : ((ny = a.redMul(g).redMul(d.redSub(c))), (nz = this.curve._mulC(f).redMul(g))), this.curve.point(nx, ny, nz);
                }),
                (Point.prototype.add = function (p) {
                    return this.isInfinity() ? p : p.isInfinity() ? this : this.curve.extended ? this._extAdd(p) : this._projAdd(p);
                }),
                (Point.prototype.mul = function (k) {
                    return this._hasDoubles(k) ? this.curve._fixedNafMul(this, k) : this.curve._wnafMul(this, k);
                }),
                (Point.prototype.mulAdd = function (k1, p, k2) {
                    return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, !1);
                }),
                (Point.prototype.jmulAdd = function (k1, p, k2) {
                    return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, !0);
                }),
                (Point.prototype.normalize = function () {
                    if (this.zOne) return this;
                    var zi = this.z.redInvm();
                    return (this.x = this.x.redMul(zi)), (this.y = this.y.redMul(zi)), this.t && (this.t = this.t.redMul(zi)), (this.z = this.curve.one), (this.zOne = !0), this;
                }),
                (Point.prototype.neg = function () {
                    return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());
                }),
                (Point.prototype.getX = function () {
                    return this.normalize(), this.x.fromRed();
                }),
                (Point.prototype.getY = function () {
                    return this.normalize(), this.y.fromRed();
                }),
                (Point.prototype.eq = function (other) {
                    return this === other || (0 === this.getX().cmp(other.getX()) && 0 === this.getY().cmp(other.getY()));
                }),
                (Point.prototype.eqXToP = function (x) {
                    var rx = x.toRed(this.curve.red).redMul(this.z);
                    if (0 === this.x.cmp(rx)) return !0;
                    for (var xc = x.clone(), t = this.curve.redN.redMul(this.z); ; ) {
                        if ((xc.iadd(this.curve.n), xc.cmp(this.curve.p) >= 0)) return !1;
                        if ((rx.redIAdd(t), 0 === this.x.cmp(rx))) return !0;
                    }
                }),
                (Point.prototype.toP = Point.prototype.normalize),
                (Point.prototype.mixedAdd = Point.prototype.add);
        },
        88254: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var curve = exports;
            (curve.base = __webpack_require__(4918)), (curve.short = __webpack_require__(6673)), (curve.mont = __webpack_require__(22881)), (curve.edwards = __webpack_require__(31138));
        },
        22881: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var BN = __webpack_require__(13550),
                inherits = __webpack_require__(35717),
                Base = __webpack_require__(4918),
                utils = __webpack_require__(80953);
            function MontCurve(conf) {
                Base.call(this, "mont", conf),
                    (this.a = new BN(conf.a, 16).toRed(this.red)),
                    (this.b = new BN(conf.b, 16).toRed(this.red)),
                    (this.i4 = new BN(4).toRed(this.red).redInvm()),
                    (this.two = new BN(2).toRed(this.red)),
                    (this.a24 = this.i4.redMul(this.a.redAdd(this.two)));
            }
            function Point(curve, x, z) {
                Base.BasePoint.call(this, curve, "projective"),
                    null === x && null === z
                        ? ((this.x = this.curve.one), (this.z = this.curve.zero))
                        : ((this.x = new BN(x, 16)), (this.z = new BN(z, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)));
            }
            inherits(MontCurve, Base),
                (module.exports = MontCurve),
                (MontCurve.prototype.validate = function (point) {
                    var x = point.normalize().x,
                        x2 = x.redSqr(),
                        rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
                    return 0 === rhs.redSqrt().redSqr().cmp(rhs);
                }),
                inherits(Point, Base.BasePoint),
                (MontCurve.prototype.decodePoint = function (bytes, enc) {
                    return this.point(utils.toArray(bytes, enc), 1);
                }),
                (MontCurve.prototype.point = function (x, z) {
                    return new Point(this, x, z);
                }),
                (MontCurve.prototype.pointFromJSON = function (obj) {
                    return Point.fromJSON(this, obj);
                }),
                (Point.prototype.precompute = function () {}),
                (Point.prototype._encode = function () {
                    return this.getX().toArray("be", this.curve.p.byteLength());
                }),
                (Point.fromJSON = function (curve, obj) {
                    return new Point(curve, obj[0], obj[1] || curve.one);
                }),
                (Point.prototype.inspect = function () {
                    return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
                }),
                (Point.prototype.isInfinity = function () {
                    return 0 === this.z.cmpn(0);
                }),
                (Point.prototype.dbl = function () {
                    var aa = this.x.redAdd(this.z).redSqr(),
                        bb = this.x.redSub(this.z).redSqr(),
                        c = aa.redSub(bb),
                        nx = aa.redMul(bb),
                        nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
                    return this.curve.point(nx, nz);
                }),
                (Point.prototype.add = function () {
                    throw Error("Not supported on Montgomery curve");
                }),
                (Point.prototype.diffAdd = function (p, diff) {
                    var a = this.x.redAdd(this.z),
                        b = this.x.redSub(this.z),
                        c = p.x.redAdd(p.z),
                        da = p.x.redSub(p.z).redMul(a),
                        cb = c.redMul(b),
                        nx = diff.z.redMul(da.redAdd(cb).redSqr()),
                        nz = diff.x.redMul(da.redISub(cb).redSqr());
                    return this.curve.point(nx, nz);
                }),
                (Point.prototype.mul = function (k) {
                    for (var t = k.clone(), a = this, b = this.curve.point(null, null), bits = []; 0 !== t.cmpn(0); t.iushrn(1)) bits.push(t.andln(1));
                    for (var i = bits.length - 1; i >= 0; i--) 0 === bits[i] ? ((a = a.diffAdd(b, this)), (b = b.dbl())) : ((b = a.diffAdd(b, this)), (a = a.dbl()));
                    return b;
                }),
                (Point.prototype.mulAdd = function () {
                    throw Error("Not supported on Montgomery curve");
                }),
                (Point.prototype.jumlAdd = function () {
                    throw Error("Not supported on Montgomery curve");
                }),
                (Point.prototype.eq = function (other) {
                    return 0 === this.getX().cmp(other.getX());
                }),
                (Point.prototype.normalize = function () {
                    return (this.x = this.x.redMul(this.z.redInvm())), (this.z = this.curve.one), this;
                }),
                (Point.prototype.getX = function () {
                    return this.normalize(), this.x.fromRed();
                });
        },
        6673: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var utils = __webpack_require__(80953),
                BN = __webpack_require__(13550),
                inherits = __webpack_require__(35717),
                Base = __webpack_require__(4918),
                assert = utils.assert;
            function ShortCurve(conf) {
                Base.call(this, "short", conf),
                    (this.a = new BN(conf.a, 16).toRed(this.red)),
                    (this.b = new BN(conf.b, 16).toRed(this.red)),
                    (this.tinv = this.two.redInvm()),
                    (this.zeroA = 0 === this.a.fromRed().cmpn(0)),
                    (this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3)),
                    (this.endo = this._getEndomorphism(conf)),
                    (this._endoWnafT1 = [, , , ,]),
                    (this._endoWnafT2 = [, , , ,]);
            }
            function Point(curve, x, y, isRed) {
                Base.BasePoint.call(this, curve, "affine"),
                    null === x && null === y
                        ? ((this.x = null), (this.y = null), (this.inf = !0))
                        : ((this.x = new BN(x, 16)),
                          (this.y = new BN(y, 16)),
                          isRed && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)),
                          this.x.red || (this.x = this.x.toRed(this.curve.red)),
                          this.y.red || (this.y = this.y.toRed(this.curve.red)),
                          (this.inf = !1));
            }
            function JPoint(curve, x, y, z) {
                Base.BasePoint.call(this, curve, "jacobian"),
                    null === x && null === y && null === z ? ((this.x = this.curve.one), (this.y = this.curve.one), (this.z = new BN(0))) : ((this.x = new BN(x, 16)), (this.y = new BN(y, 16)), (this.z = new BN(z, 16))),
                    this.x.red || (this.x = this.x.toRed(this.curve.red)),
                    this.y.red || (this.y = this.y.toRed(this.curve.red)),
                    this.z.red || (this.z = this.z.toRed(this.curve.red)),
                    (this.zOne = this.z === this.curve.one);
            }
            inherits(ShortCurve, Base),
                (module.exports = ShortCurve),
                (ShortCurve.prototype._getEndomorphism = function (conf) {
                    if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
                        if (conf.beta) beta = new BN(conf.beta, 16).toRed(this.red);
                        else {
                            var beta,
                                lambda,
                                basis,
                                betas = this._getEndoRoots(this.p);
                            beta = (beta = 0 > betas[0].cmp(betas[1]) ? betas[0] : betas[1]).toRed(this.red);
                        }
                        if (conf.lambda) lambda = new BN(conf.lambda, 16);
                        else {
                            var lambdas = this._getEndoRoots(this.n);
                            0 === this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) ? (lambda = lambdas[0]) : ((lambda = lambdas[1]), assert(0 === this.g.mul(lambda).x.cmp(this.g.x.redMul(beta))));
                        }
                        return (
                            (basis = conf.basis
                                ? conf.basis.map(function (vec) {
                                      return { a: new BN(vec.a, 16), b: new BN(vec.b, 16) };
                                  })
                                : this._getEndoBasis(lambda)),
                            { beta: beta, lambda: lambda, basis: basis }
                        );
                    }
                }),
                (ShortCurve.prototype._getEndoRoots = function (num) {
                    var red = num === this.p ? this.red : BN.mont(num),
                        tinv = new BN(2).toRed(red).redInvm(),
                        ntinv = tinv.redNeg(),
                        s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);
                    return [ntinv.redAdd(s).fromRed(), ntinv.redSub(s).fromRed()];
                }),
                (ShortCurve.prototype._getEndoBasis = function (lambda) {
                    for (
                        var a0, b0, a1, b1, a2, b2, prevR, r, x, aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), u = lambda, v = this.n.clone(), x1 = new BN(1), y1 = new BN(0), x2 = new BN(0), y2 = new BN(1), i = 0;
                        0 !== u.cmpn(0);

                    ) {
                        var q = v.div(u);
                        (r = v.sub(q.mul(u))), (x = x2.sub(q.mul(x1)));
                        var y = y2.sub(q.mul(y1));
                        if (!a1 && 0 > r.cmp(aprxSqrt)) (a0 = prevR.neg()), (b0 = x1), (a1 = r.neg()), (b1 = x);
                        else if (a1 && 2 == ++i) break;
                        (prevR = r), (v = u), (u = r), (x2 = x1), (x1 = x), (y2 = y1), (y1 = y);
                    }
                    (a2 = r.neg()), (b2 = x);
                    var len1 = a1.sqr().add(b1.sqr());
                    return (
                        a2.sqr().add(b2.sqr()).cmp(len1) >= 0 && ((a2 = a0), (b2 = b0)),
                        a1.negative && ((a1 = a1.neg()), (b1 = b1.neg())),
                        a2.negative && ((a2 = a2.neg()), (b2 = b2.neg())),
                        [
                            { a: a1, b: b1 },
                            { a: a2, b: b2 },
                        ]
                    );
                }),
                (ShortCurve.prototype._endoSplit = function (k) {
                    var basis = this.endo.basis,
                        v1 = basis[0],
                        v2 = basis[1],
                        c1 = v2.b.mul(k).divRound(this.n),
                        c2 = v1.b.neg().mul(k).divRound(this.n),
                        p1 = c1.mul(v1.a),
                        p2 = c2.mul(v2.a),
                        q1 = c1.mul(v1.b),
                        q2 = c2.mul(v2.b);
                    return { k1: k.sub(p1).sub(p2), k2: q1.add(q2).neg() };
                }),
                (ShortCurve.prototype.pointFromX = function (x, odd) {
                    (x = new BN(x, 16)).red || (x = x.toRed(this.red));
                    var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b),
                        y = y2.redSqrt();
                    if (0 !== y.redSqr().redSub(y2).cmp(this.zero)) throw Error("invalid point");
                    var isOdd = y.fromRed().isOdd();
                    return ((odd && !isOdd) || (!odd && isOdd)) && (y = y.redNeg()), this.point(x, y);
                }),
                (ShortCurve.prototype.validate = function (point) {
                    if (point.inf) return !0;
                    var x = point.x,
                        y = point.y,
                        ax = this.a.redMul(x),
                        rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
                    return 0 === y.redSqr().redISub(rhs).cmpn(0);
                }),
                (ShortCurve.prototype._endoWnafMulAdd = function (points, coeffs, jacobianResult) {
                    for (var npoints = this._endoWnafT1, ncoeffs = this._endoWnafT2, i = 0; i < points.length; i++) {
                        var split = this._endoSplit(coeffs[i]),
                            p = points[i],
                            beta = p._getBeta();
                        split.k1.negative && (split.k1.ineg(), (p = p.neg(!0))),
                            split.k2.negative && (split.k2.ineg(), (beta = beta.neg(!0))),
                            (npoints[2 * i] = p),
                            (npoints[2 * i + 1] = beta),
                            (ncoeffs[2 * i] = split.k1),
                            (ncoeffs[2 * i + 1] = split.k2);
                    }
                    for (var res = this._wnafMulAdd(1, npoints, ncoeffs, 2 * i, jacobianResult), j = 0; j < 2 * i; j++) (npoints[j] = null), (ncoeffs[j] = null);
                    return res;
                }),
                inherits(Point, Base.BasePoint),
                (ShortCurve.prototype.point = function (x, y, isRed) {
                    return new Point(this, x, y, isRed);
                }),
                (ShortCurve.prototype.pointFromJSON = function (obj, red) {
                    return Point.fromJSON(this, obj, red);
                }),
                (Point.prototype._getBeta = function () {
                    if (this.curve.endo) {
                        var pre = this.precomputed;
                        if (pre && pre.beta) return pre.beta;
                        var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
                        if (pre) {
                            var curve = this.curve,
                                endoMul = function (p) {
                                    return curve.point(p.x.redMul(curve.endo.beta), p.y);
                                };
                            (pre.beta = beta),
                                (beta.precomputed = { beta: null, naf: pre.naf && { wnd: pre.naf.wnd, points: pre.naf.points.map(endoMul) }, doubles: pre.doubles && { step: pre.doubles.step, points: pre.doubles.points.map(endoMul) } });
                        }
                        return beta;
                    }
                }),
                (Point.prototype.toJSON = function () {
                    return this.precomputed
                        ? [
                              this.x,
                              this.y,
                              this.precomputed && {
                                  doubles: this.precomputed.doubles && { step: this.precomputed.doubles.step, points: this.precomputed.doubles.points.slice(1) },
                                  naf: this.precomputed.naf && { wnd: this.precomputed.naf.wnd, points: this.precomputed.naf.points.slice(1) },
                              },
                          ]
                        : [this.x, this.y];
                }),
                (Point.fromJSON = function (curve, obj, red) {
                    "string" == typeof obj && (obj = JSON.parse(obj));
                    var res = curve.point(obj[0], obj[1], red);
                    if (!obj[2]) return res;
                    function obj2point(obj) {
                        return curve.point(obj[0], obj[1], red);
                    }
                    var pre = obj[2];
                    return (
                        (res.precomputed = {
                            beta: null,
                            doubles: pre.doubles && { step: pre.doubles.step, points: [res].concat(pre.doubles.points.map(obj2point)) },
                            naf: pre.naf && { wnd: pre.naf.wnd, points: [res].concat(pre.naf.points.map(obj2point)) },
                        }),
                        res
                    );
                }),
                (Point.prototype.inspect = function () {
                    return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
                }),
                (Point.prototype.isInfinity = function () {
                    return this.inf;
                }),
                (Point.prototype.add = function (p) {
                    if (this.inf) return p;
                    if (p.inf) return this;
                    if (this.eq(p)) return this.dbl();
                    if (this.neg().eq(p) || 0 === this.x.cmp(p.x)) return this.curve.point(null, null);
                    var c = this.y.redSub(p.y);
                    0 !== c.cmpn(0) && (c = c.redMul(this.x.redSub(p.x).redInvm()));
                    var nx = c.redSqr().redISub(this.x).redISub(p.x),
                        ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
                    return this.curve.point(nx, ny);
                }),
                (Point.prototype.dbl = function () {
                    if (this.inf) return this;
                    var ys1 = this.y.redAdd(this.y);
                    if (0 === ys1.cmpn(0)) return this.curve.point(null, null);
                    var a = this.curve.a,
                        x2 = this.x.redSqr(),
                        dyinv = ys1.redInvm(),
                        c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv),
                        nx = c.redSqr().redISub(this.x.redAdd(this.x)),
                        ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
                    return this.curve.point(nx, ny);
                }),
                (Point.prototype.getX = function () {
                    return this.x.fromRed();
                }),
                (Point.prototype.getY = function () {
                    return this.y.fromRed();
                }),
                (Point.prototype.mul = function (k) {
                    return ((k = new BN(k, 16)), this.isInfinity()) ? this : this._hasDoubles(k) ? this.curve._fixedNafMul(this, k) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [k]) : this.curve._wnafMul(this, k);
                }),
                (Point.prototype.mulAdd = function (k1, p2, k2) {
                    var points = [this, p2],
                        coeffs = [k1, k2];
                    return this.curve.endo ? this.curve._endoWnafMulAdd(points, coeffs) : this.curve._wnafMulAdd(1, points, coeffs, 2);
                }),
                (Point.prototype.jmulAdd = function (k1, p2, k2) {
                    var points = [this, p2],
                        coeffs = [k1, k2];
                    return this.curve.endo ? this.curve._endoWnafMulAdd(points, coeffs, !0) : this.curve._wnafMulAdd(1, points, coeffs, 2, !0);
                }),
                (Point.prototype.eq = function (p) {
                    return this === p || (this.inf === p.inf && (this.inf || (0 === this.x.cmp(p.x) && 0 === this.y.cmp(p.y))));
                }),
                (Point.prototype.neg = function (_precompute) {
                    if (this.inf) return this;
                    var res = this.curve.point(this.x, this.y.redNeg());
                    if (_precompute && this.precomputed) {
                        var pre = this.precomputed,
                            negate = function (p) {
                                return p.neg();
                            };
                        res.precomputed = { naf: pre.naf && { wnd: pre.naf.wnd, points: pre.naf.points.map(negate) }, doubles: pre.doubles && { step: pre.doubles.step, points: pre.doubles.points.map(negate) } };
                    }
                    return res;
                }),
                (Point.prototype.toJ = function () {
                    return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one);
                }),
                inherits(JPoint, Base.BasePoint),
                (ShortCurve.prototype.jpoint = function (x, y, z) {
                    return new JPoint(this, x, y, z);
                }),
                (JPoint.prototype.toP = function () {
                    if (this.isInfinity()) return this.curve.point(null, null);
                    var zinv = this.z.redInvm(),
                        zinv2 = zinv.redSqr(),
                        ax = this.x.redMul(zinv2),
                        ay = this.y.redMul(zinv2).redMul(zinv);
                    return this.curve.point(ax, ay);
                }),
                (JPoint.prototype.neg = function () {
                    return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
                }),
                (JPoint.prototype.add = function (p) {
                    if (this.isInfinity()) return p;
                    if (p.isInfinity()) return this;
                    var pz2 = p.z.redSqr(),
                        z2 = this.z.redSqr(),
                        u1 = this.x.redMul(pz2),
                        u2 = p.x.redMul(z2),
                        s1 = this.y.redMul(pz2.redMul(p.z)),
                        s2 = p.y.redMul(z2.redMul(this.z)),
                        h = u1.redSub(u2),
                        r = s1.redSub(s2);
                    if (0 === h.cmpn(0)) return 0 !== r.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                    var h2 = h.redSqr(),
                        h3 = h2.redMul(h),
                        v = u1.redMul(h2),
                        nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v),
                        ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3)),
                        nz = this.z.redMul(p.z).redMul(h);
                    return this.curve.jpoint(nx, ny, nz);
                }),
                (JPoint.prototype.mixedAdd = function (p) {
                    if (this.isInfinity()) return p.toJ();
                    if (p.isInfinity()) return this;
                    var z2 = this.z.redSqr(),
                        u1 = this.x,
                        u2 = p.x.redMul(z2),
                        s1 = this.y,
                        s2 = p.y.redMul(z2).redMul(this.z),
                        h = u1.redSub(u2),
                        r = s1.redSub(s2);
                    if (0 === h.cmpn(0)) return 0 !== r.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                    var h2 = h.redSqr(),
                        h3 = h2.redMul(h),
                        v = u1.redMul(h2),
                        nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v),
                        ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3)),
                        nz = this.z.redMul(h);
                    return this.curve.jpoint(nx, ny, nz);
                }),
                (JPoint.prototype.dblp = function (pow) {
                    if (0 === pow || this.isInfinity()) return this;
                    if (!pow) return this.dbl();
                    if (this.curve.zeroA || this.curve.threeA) {
                        var i,
                            r = this;
                        for (i = 0; i < pow; i++) r = r.dbl();
                        return r;
                    }
                    var a = this.curve.a,
                        tinv = this.curve.tinv,
                        jx = this.x,
                        jy = this.y,
                        jz = this.z,
                        jz4 = jz.redSqr().redSqr(),
                        jyd = jy.redAdd(jy);
                    for (i = 0; i < pow; i++) {
                        var jx2 = jx.redSqr(),
                            jyd2 = jyd.redSqr(),
                            jyd4 = jyd2.redSqr(),
                            c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4)),
                            t1 = jx.redMul(jyd2),
                            nx = c.redSqr().redISub(t1.redAdd(t1)),
                            t2 = t1.redISub(nx),
                            dny = c.redMul(t2);
                        dny = dny.redIAdd(dny).redISub(jyd4);
                        var nz = jyd.redMul(jz);
                        i + 1 < pow && (jz4 = jz4.redMul(jyd4)), (jx = nx), (jz = nz), (jyd = dny);
                    }
                    return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
                }),
                (JPoint.prototype.dbl = function () {
                    return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
                }),
                (JPoint.prototype._zeroDbl = function () {
                    if (this.zOne) {
                        var nx,
                            ny,
                            nz,
                            xx = this.x.redSqr(),
                            yy = this.y.redSqr(),
                            yyyy = yy.redSqr(),
                            s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
                        s = s.redIAdd(s);
                        var m = xx.redAdd(xx).redIAdd(xx),
                            t = m.redSqr().redISub(s).redISub(s),
                            yyyy8 = yyyy.redIAdd(yyyy);
                        (yyyy8 = (yyyy8 = yyyy8.redIAdd(yyyy8)).redIAdd(yyyy8)), (nx = t), (ny = m.redMul(s.redISub(t)).redISub(yyyy8)), (nz = this.y.redAdd(this.y));
                    } else {
                        var a = this.x.redSqr(),
                            b = this.y.redSqr(),
                            c = b.redSqr(),
                            d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
                        d = d.redIAdd(d);
                        var e = a.redAdd(a).redIAdd(a),
                            f = e.redSqr(),
                            c8 = c.redIAdd(c);
                        (c8 = (c8 = c8.redIAdd(c8)).redIAdd(c8)), (nx = f.redISub(d).redISub(d)), (ny = e.redMul(d.redISub(nx)).redISub(c8)), (nz = (nz = this.y.redMul(this.z)).redIAdd(nz));
                    }
                    return this.curve.jpoint(nx, ny, nz);
                }),
                (JPoint.prototype._threeDbl = function () {
                    if (this.zOne) {
                        var nx,
                            ny,
                            nz,
                            xx = this.x.redSqr(),
                            yy = this.y.redSqr(),
                            yyyy = yy.redSqr(),
                            s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
                        s = s.redIAdd(s);
                        var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a),
                            t = m.redSqr().redISub(s).redISub(s);
                        nx = t;
                        var yyyy8 = yyyy.redIAdd(yyyy);
                        (yyyy8 = (yyyy8 = yyyy8.redIAdd(yyyy8)).redIAdd(yyyy8)), (ny = m.redMul(s.redISub(t)).redISub(yyyy8)), (nz = this.y.redAdd(this.y));
                    } else {
                        var delta = this.z.redSqr(),
                            gamma = this.y.redSqr(),
                            beta = this.x.redMul(gamma),
                            alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
                        alpha = alpha.redAdd(alpha).redIAdd(alpha);
                        var beta4 = beta.redIAdd(beta),
                            beta8 = (beta4 = beta4.redIAdd(beta4)).redAdd(beta4);
                        (nx = alpha.redSqr().redISub(beta8)), (nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta));
                        var ggamma8 = gamma.redSqr();
                        (ggamma8 = (ggamma8 = (ggamma8 = ggamma8.redIAdd(ggamma8)).redIAdd(ggamma8)).redIAdd(ggamma8)), (ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8));
                    }
                    return this.curve.jpoint(nx, ny, nz);
                }),
                (JPoint.prototype._dbl = function () {
                    var a = this.curve.a,
                        jx = this.x,
                        jy = this.y,
                        jz = this.z,
                        jz4 = jz.redSqr().redSqr(),
                        jx2 = jx.redSqr(),
                        jy2 = jy.redSqr(),
                        c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4)),
                        jxd4 = jx.redAdd(jx),
                        t1 = (jxd4 = jxd4.redIAdd(jxd4)).redMul(jy2),
                        nx = c.redSqr().redISub(t1.redAdd(t1)),
                        t2 = t1.redISub(nx),
                        jyd8 = jy2.redSqr();
                    jyd8 = (jyd8 = (jyd8 = jyd8.redIAdd(jyd8)).redIAdd(jyd8)).redIAdd(jyd8);
                    var ny = c.redMul(t2).redISub(jyd8),
                        nz = jy.redAdd(jy).redMul(jz);
                    return this.curve.jpoint(nx, ny, nz);
                }),
                (JPoint.prototype.trpl = function () {
                    if (!this.curve.zeroA) return this.dbl().add(this);
                    var xx = this.x.redSqr(),
                        yy = this.y.redSqr(),
                        zz = this.z.redSqr(),
                        yyyy = yy.redSqr(),
                        m = xx.redAdd(xx).redIAdd(xx),
                        mm = m.redSqr(),
                        e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy),
                        ee = (e = (e = (e = e.redIAdd(e)).redAdd(e).redIAdd(e)).redISub(mm)).redSqr(),
                        t = yyyy.redIAdd(yyyy);
                    t = (t = (t = t.redIAdd(t)).redIAdd(t)).redIAdd(t);
                    var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t),
                        yyu4 = yy.redMul(u);
                    yyu4 = (yyu4 = yyu4.redIAdd(yyu4)).redIAdd(yyu4);
                    var nx = this.x.redMul(ee).redISub(yyu4);
                    nx = (nx = nx.redIAdd(nx)).redIAdd(nx);
                    var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
                    ny = (ny = (ny = ny.redIAdd(ny)).redIAdd(ny)).redIAdd(ny);
                    var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);
                    return this.curve.jpoint(nx, ny, nz);
                }),
                (JPoint.prototype.mul = function (k, kbase) {
                    return (k = new BN(k, kbase)), this.curve._wnafMul(this, k);
                }),
                (JPoint.prototype.eq = function (p) {
                    if ("affine" === p.type) return this.eq(p.toJ());
                    if (this === p) return !0;
                    var z2 = this.z.redSqr(),
                        pz2 = p.z.redSqr();
                    if (0 !== this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0)) return !1;
                    var z3 = z2.redMul(this.z),
                        pz3 = pz2.redMul(p.z);
                    return 0 === this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0);
                }),
                (JPoint.prototype.eqXToP = function (x) {
                    var zs = this.z.redSqr(),
                        rx = x.toRed(this.curve.red).redMul(zs);
                    if (0 === this.x.cmp(rx)) return !0;
                    for (var xc = x.clone(), t = this.curve.redN.redMul(zs); ; ) {
                        if ((xc.iadd(this.curve.n), xc.cmp(this.curve.p) >= 0)) return !1;
                        if ((rx.redIAdd(t), 0 === this.x.cmp(rx))) return !0;
                    }
                }),
                (JPoint.prototype.inspect = function () {
                    return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
                }),
                (JPoint.prototype.isInfinity = function () {
                    return 0 === this.z.cmpn(0);
                });
        },
        45427: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var pre,
                curves = exports,
                hash = __webpack_require__(33715),
                curve = __webpack_require__(88254),
                assert = __webpack_require__(80953).assert;
            function PresetCurve(options) {
                "short" === options.type ? (this.curve = new curve.short(options)) : "edwards" === options.type ? (this.curve = new curve.edwards(options)) : (this.curve = new curve.mont(options)),
                    (this.g = this.curve.g),
                    (this.n = this.curve.n),
                    (this.hash = options.hash),
                    assert(this.g.validate(), "Invalid curve"),
                    assert(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
            }
            function defineCurve(name, options) {
                Object.defineProperty(curves, name, {
                    configurable: !0,
                    enumerable: !0,
                    get: function () {
                        var curve = new PresetCurve(options);
                        return Object.defineProperty(curves, name, { configurable: !0, enumerable: !0, value: curve }), curve;
                    },
                });
            }
            (curves.PresetCurve = PresetCurve),
                defineCurve("p192", {
                    type: "short",
                    prime: "p192",
                    p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
                    a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
                    b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
                    n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
                    hash: hash.sha256,
                    gRed: !1,
                    g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"],
                }),
                defineCurve("p224", {
                    type: "short",
                    prime: "p224",
                    p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
                    a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
                    b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
                    n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
                    hash: hash.sha256,
                    gRed: !1,
                    g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"],
                }),
                defineCurve("p256", {
                    type: "short",
                    prime: null,
                    p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
                    a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
                    b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
                    n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
                    hash: hash.sha256,
                    gRed: !1,
                    g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"],
                }),
                defineCurve("p384", {
                    type: "short",
                    prime: null,
                    p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
                    a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
                    b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
                    n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
                    hash: hash.sha384,
                    gRed: !1,
                    g: [
                        "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7",
                        "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f",
                    ],
                }),
                defineCurve("p521", {
                    type: "short",
                    prime: null,
                    p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
                    a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
                    b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
                    n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
                    hash: hash.sha512,
                    gRed: !1,
                    g: [
                        "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66",
                        "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650",
                    ],
                }),
                defineCurve("curve25519", {
                    type: "mont",
                    prime: "p25519",
                    p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                    a: "76d06",
                    b: "1",
                    n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                    hash: hash.sha256,
                    gRed: !1,
                    g: ["9"],
                }),
                defineCurve("ed25519", {
                    type: "edwards",
                    prime: "p25519",
                    p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                    a: "-1",
                    c: "1",
                    d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
                    n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                    hash: hash.sha256,
                    gRed: !1,
                    g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"],
                });
            try {
                pre = __webpack_require__(91037);
            } catch (e) {
                pre = void 0;
            }
            defineCurve("secp256k1", {
                type: "short",
                prime: "k256",
                p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
                a: "0",
                b: "7",
                n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
                h: "1",
                hash: hash.sha256,
                beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
                lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
                basis: [
                    { a: "3086d221a7d46bcde86c90e49284eb15", b: "-e4437ed6010e88286f547fa90abfe4c3" },
                    { a: "114ca50f7a8e2f3f657c1108d9d44cfd8", b: "3086d221a7d46bcde86c90e49284eb15" },
                ],
                gRed: !1,
                g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", pre],
            });
        },
        57954: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var BN = __webpack_require__(13550),
                HmacDRBG = __webpack_require__(2156),
                utils = __webpack_require__(80953),
                curves = __webpack_require__(45427),
                rand = __webpack_require__(29931),
                assert = utils.assert,
                KeyPair = __webpack_require__(31251),
                Signature = __webpack_require__(90611);
            function EC(options) {
                if (!(this instanceof EC)) return new EC(options);
                "string" == typeof options && (assert(Object.prototype.hasOwnProperty.call(curves, options), "Unknown curve " + options), (options = curves[options])),
                    options instanceof curves.PresetCurve && (options = { curve: options }),
                    (this.curve = options.curve.curve),
                    (this.n = this.curve.n),
                    (this.nh = this.n.ushrn(1)),
                    (this.g = this.curve.g),
                    (this.g = options.curve.g),
                    this.g.precompute(options.curve.n.bitLength() + 1),
                    (this.hash = options.hash || options.curve.hash);
            }
            (module.exports = EC),
                (EC.prototype.keyPair = function (options) {
                    return new KeyPair(this, options);
                }),
                (EC.prototype.keyFromPrivate = function (priv, enc) {
                    return KeyPair.fromPrivate(this, priv, enc);
                }),
                (EC.prototype.keyFromPublic = function (pub, enc) {
                    return KeyPair.fromPublic(this, pub, enc);
                }),
                (EC.prototype.genKeyPair = function (options) {
                    options || (options = {});
                    for (
                        var drbg = new HmacDRBG({
                                hash: this.hash,
                                pers: options.pers,
                                persEnc: options.persEnc || "utf8",
                                entropy: options.entropy || rand(this.hash.hmacStrength),
                                entropyEnc: (options.entropy && options.entropyEnc) || "utf8",
                                nonce: this.n.toArray(),
                            }),
                            bytes = this.n.byteLength(),
                            ns2 = this.n.sub(new BN(2));
                        ;

                    ) {
                        var priv = new BN(drbg.generate(bytes));
                        if (!(priv.cmp(ns2) > 0)) return priv.iaddn(1), this.keyFromPrivate(priv);
                    }
                }),
                (EC.prototype._truncateToN = function (msg, truncOnly) {
                    var delta = 8 * msg.byteLength() - this.n.bitLength();
                    return (delta > 0 && (msg = msg.ushrn(delta)), !truncOnly && msg.cmp(this.n) >= 0) ? msg.sub(this.n) : msg;
                }),
                (EC.prototype.sign = function (msg, key, enc, options) {
                    "object" == typeof enc && ((options = enc), (enc = null)), options || (options = {}), (key = this.keyFromPrivate(key, enc)), (msg = this._truncateToN(new BN(msg, 16)));
                    for (
                        var bytes = this.n.byteLength(),
                            bkey = key.getPrivate().toArray("be", bytes),
                            nonce = msg.toArray("be", bytes),
                            drbg = new HmacDRBG({ hash: this.hash, entropy: bkey, nonce: nonce, pers: options.pers, persEnc: options.persEnc || "utf8" }),
                            ns1 = this.n.sub(new BN(1)),
                            iter = 0;
                        ;
                        iter++
                    ) {
                        var k = options.k ? options.k(iter) : new BN(drbg.generate(this.n.byteLength()));
                        if (!(0 >= (k = this._truncateToN(k, !0)).cmpn(1) || k.cmp(ns1) >= 0)) {
                            var kp = this.g.mul(k);
                            if (!kp.isInfinity()) {
                                var kpX = kp.getX(),
                                    r = kpX.umod(this.n);
                                if (0 !== r.cmpn(0)) {
                                    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
                                    if (0 !== (s = s.umod(this.n)).cmpn(0)) {
                                        var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (0 !== kpX.cmp(r) ? 2 : 0);
                                        return options.canonical && s.cmp(this.nh) > 0 && ((s = this.n.sub(s)), (recoveryParam ^= 1)), new Signature({ r: r, s: s, recoveryParam: recoveryParam });
                                    }
                                }
                            }
                        }
                    }
                }),
                (EC.prototype.verify = function (msg, signature, key, enc) {
                    (msg = this._truncateToN(new BN(msg, 16))), (key = this.keyFromPublic(key, enc));
                    var p,
                        r = (signature = new Signature(signature, "hex")).r,
                        s = signature.s;
                    if (0 > r.cmpn(1) || r.cmp(this.n) >= 0 || 0 > s.cmpn(1) || s.cmp(this.n) >= 0) return !1;
                    var sinv = s.invm(this.n),
                        u1 = sinv.mul(msg).umod(this.n),
                        u2 = sinv.mul(r).umod(this.n);
                    return this.curve._maxwellTrick ? !(p = this.g.jmulAdd(u1, key.getPublic(), u2)).isInfinity() && p.eqXToP(r) : !(p = this.g.mulAdd(u1, key.getPublic(), u2)).isInfinity() && 0 === p.getX().umod(this.n).cmp(r);
                }),
                (EC.prototype.recoverPubKey = function (msg, signature, j, enc) {
                    assert((3 & j) === j, "The recovery param is more than two bits"), (signature = new Signature(signature, enc));
                    var n = this.n,
                        e = new BN(msg),
                        r = signature.r,
                        s = signature.s,
                        isYOdd = 1 & j,
                        isSecondKey = j >> 1;
                    if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey) throw Error("Unable to find sencond key candinate");
                    r = isSecondKey ? this.curve.pointFromX(r.add(this.curve.n), isYOdd) : this.curve.pointFromX(r, isYOdd);
                    var rInv = signature.r.invm(n),
                        s1 = n.sub(e).mul(rInv).umod(n),
                        s2 = s.mul(rInv).umod(n);
                    return this.g.mulAdd(s1, r, s2);
                }),
                (EC.prototype.getKeyRecoveryParam = function (e, signature, Q, enc) {
                    if (null !== (signature = new Signature(signature, enc)).recoveryParam) return signature.recoveryParam;
                    for (var Qprime, i = 0; i < 4; i++) {
                        try {
                            Qprime = this.recoverPubKey(e, signature, i);
                        } catch (e1) {
                            continue;
                        }
                        if (Qprime.eq(Q)) return i;
                    }
                    throw Error("Unable to find valid recovery factor");
                });
        },
        31251: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var BN = __webpack_require__(13550),
                assert = __webpack_require__(80953).assert;
            function KeyPair(ec, options) {
                (this.ec = ec), (this.priv = null), (this.pub = null), options.priv && this._importPrivate(options.priv, options.privEnc), options.pub && this._importPublic(options.pub, options.pubEnc);
            }
            (module.exports = KeyPair),
                (KeyPair.fromPublic = function (ec, pub, enc) {
                    return pub instanceof KeyPair ? pub : new KeyPair(ec, { pub: pub, pubEnc: enc });
                }),
                (KeyPair.fromPrivate = function (ec, priv, enc) {
                    return priv instanceof KeyPair ? priv : new KeyPair(ec, { priv: priv, privEnc: enc });
                }),
                (KeyPair.prototype.validate = function () {
                    var pub = this.getPublic();
                    return pub.isInfinity()
                        ? { result: !1, reason: "Invalid public key" }
                        : pub.validate()
                        ? pub.mul(this.ec.curve.n).isInfinity()
                            ? { result: !0, reason: null }
                            : { result: !1, reason: "Public key * N != O" }
                        : { result: !1, reason: "Public key is not a point" };
                }),
                (KeyPair.prototype.getPublic = function (compact, enc) {
                    return ("string" == typeof compact && ((enc = compact), (compact = null)), this.pub || (this.pub = this.ec.g.mul(this.priv)), enc) ? this.pub.encode(enc, compact) : this.pub;
                }),
                (KeyPair.prototype.getPrivate = function (enc) {
                    return "hex" === enc ? this.priv.toString(16, 2) : this.priv;
                }),
                (KeyPair.prototype._importPrivate = function (key, enc) {
                    (this.priv = new BN(key, enc || 16)), (this.priv = this.priv.umod(this.ec.curve.n));
                }),
                (KeyPair.prototype._importPublic = function (key, enc) {
                    if (key.x || key.y) {
                        "mont" === this.ec.curve.type ? assert(key.x, "Need x coordinate") : ("short" === this.ec.curve.type || "edwards" === this.ec.curve.type) && assert(key.x && key.y, "Need both x and y coordinate"),
                            (this.pub = this.ec.curve.point(key.x, key.y));
                        return;
                    }
                    this.pub = this.ec.curve.decodePoint(key, enc);
                }),
                (KeyPair.prototype.derive = function (pub) {
                    return pub.validate() || assert(pub.validate(), "public point not validated"), pub.mul(this.priv).getX();
                }),
                (KeyPair.prototype.sign = function (msg, enc, options) {
                    return this.ec.sign(msg, this, enc, options);
                }),
                (KeyPair.prototype.verify = function (msg, signature) {
                    return this.ec.verify(msg, signature, this);
                }),
                (KeyPair.prototype.inspect = function () {
                    return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
                });
        },
        90611: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var BN = __webpack_require__(13550),
                utils = __webpack_require__(80953),
                assert = utils.assert;
            function Signature(options, enc) {
                if (options instanceof Signature) return options;
                this._importDER(options, enc) ||
                    (assert(options.r && options.s, "Signature without r or s"),
                    (this.r = new BN(options.r, 16)),
                    (this.s = new BN(options.s, 16)),
                    void 0 === options.recoveryParam ? (this.recoveryParam = null) : (this.recoveryParam = options.recoveryParam));
            }
            function Position() {
                this.place = 0;
            }
            function getLength(buf, p) {
                var initial = buf[p.place++];
                if (!(128 & initial)) return initial;
                var octetLen = 15 & initial;
                if (0 === octetLen || octetLen > 4) return !1;
                for (var val = 0, i = 0, off = p.place; i < octetLen; i++, off++) (val <<= 8), (val |= buf[off]), (val >>>= 0);
                return !(val <= 127) && ((p.place = off), val);
            }
            function rmPadding(buf) {
                for (var i = 0, len = buf.length - 1; !buf[i] && !(128 & buf[i + 1]) && i < len; ) i++;
                return 0 === i ? buf : buf.slice(i);
            }
            function constructLength(arr, len) {
                if (len < 128) {
                    arr.push(len);
                    return;
                }
                var octets = 1 + ((Math.log(len) / Math.LN2) >>> 3);
                for (arr.push(128 | octets); --octets; ) arr.push((len >>> (octets << 3)) & 255);
                arr.push(len);
            }
            (module.exports = Signature),
                (Signature.prototype._importDER = function (data, enc) {
                    data = utils.toArray(data, enc);
                    var p = new Position();
                    if (48 !== data[p.place++]) return !1;
                    var len = getLength(data, p);
                    if (!1 === len || len + p.place !== data.length || 2 !== data[p.place++]) return !1;
                    var rlen = getLength(data, p);
                    if (!1 === rlen) return !1;
                    var r = data.slice(p.place, rlen + p.place);
                    if (((p.place += rlen), 2 !== data[p.place++])) return !1;
                    var slen = getLength(data, p);
                    if (!1 === slen || data.length !== slen + p.place) return !1;
                    var s = data.slice(p.place, slen + p.place);
                    if (0 === r[0]) {
                        if (!(128 & r[1])) return !1;
                        r = r.slice(1);
                    }
                    if (0 === s[0]) {
                        if (!(128 & s[1])) return !1;
                        s = s.slice(1);
                    }
                    return (this.r = new BN(r)), (this.s = new BN(s)), (this.recoveryParam = null), !0;
                }),
                (Signature.prototype.toDER = function (enc) {
                    var r = this.r.toArray(),
                        s = this.s.toArray();
                    for (128 & r[0] && (r = [0].concat(r)), 128 & s[0] && (s = [0].concat(s)), r = rmPadding(r), s = rmPadding(s); !s[0] && !(128 & s[1]); ) s = s.slice(1);
                    var arr = [2];
                    constructLength(arr, r.length), (arr = arr.concat(r)).push(2), constructLength(arr, s.length);
                    var backHalf = arr.concat(s),
                        res = [48];
                    return constructLength(res, backHalf.length), (res = res.concat(backHalf)), utils.encode(res, enc);
                });
        },
        65980: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var hash = __webpack_require__(33715),
                curves = __webpack_require__(45427),
                utils = __webpack_require__(80953),
                assert = utils.assert,
                parseBytes = utils.parseBytes,
                KeyPair = __webpack_require__(79087),
                Signature = __webpack_require__(23622);
            function EDDSA(curve) {
                if ((assert("ed25519" === curve, "only tested with ed25519 so far"), !(this instanceof EDDSA))) return new EDDSA(curve);
                (curve = curves[curve].curve),
                    (this.curve = curve),
                    (this.g = curve.g),
                    this.g.precompute(curve.n.bitLength() + 1),
                    (this.pointClass = curve.point().constructor),
                    (this.encodingLength = Math.ceil(curve.n.bitLength() / 8)),
                    (this.hash = hash.sha512);
            }
            (module.exports = EDDSA),
                (EDDSA.prototype.sign = function (message, secret) {
                    message = parseBytes(message);
                    var key = this.keyFromSecret(secret),
                        r = this.hashInt(key.messagePrefix(), message),
                        R = this.g.mul(r),
                        Rencoded = this.encodePoint(R),
                        s_ = this.hashInt(Rencoded, key.pubBytes(), message).mul(key.priv()),
                        S = r.add(s_).umod(this.curve.n);
                    return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });
                }),
                (EDDSA.prototype.verify = function (message, sig, pub) {
                    (message = parseBytes(message)), (sig = this.makeSignature(sig));
                    var key = this.keyFromPublic(pub),
                        h = this.hashInt(sig.Rencoded(), key.pubBytes(), message),
                        SG = this.g.mul(sig.S());
                    return sig.R().add(key.pub().mul(h)).eq(SG);
                }),
                (EDDSA.prototype.hashInt = function () {
                    for (var hash = this.hash(), i = 0; i < arguments.length; i++) hash.update(arguments[i]);
                    return utils.intFromLE(hash.digest()).umod(this.curve.n);
                }),
                (EDDSA.prototype.keyFromPublic = function (pub) {
                    return KeyPair.fromPublic(this, pub);
                }),
                (EDDSA.prototype.keyFromSecret = function (secret) {
                    return KeyPair.fromSecret(this, secret);
                }),
                (EDDSA.prototype.makeSignature = function (sig) {
                    return sig instanceof Signature ? sig : new Signature(this, sig);
                }),
                (EDDSA.prototype.encodePoint = function (point) {
                    var enc = point.getY().toArray("le", this.encodingLength);
                    return (enc[this.encodingLength - 1] |= point.getX().isOdd() ? 128 : 0), enc;
                }),
                (EDDSA.prototype.decodePoint = function (bytes) {
                    var lastIx = (bytes = utils.parseBytes(bytes)).length - 1,
                        normed = bytes.slice(0, lastIx).concat(-129 & bytes[lastIx]),
                        xIsOdd = (128 & bytes[lastIx]) != 0,
                        y = utils.intFromLE(normed);
                    return this.curve.pointFromY(y, xIsOdd);
                }),
                (EDDSA.prototype.encodeInt = function (num) {
                    return num.toArray("le", this.encodingLength);
                }),
                (EDDSA.prototype.decodeInt = function (bytes) {
                    return utils.intFromLE(bytes);
                }),
                (EDDSA.prototype.isPoint = function (val) {
                    return val instanceof this.pointClass;
                });
        },
        79087: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var utils = __webpack_require__(80953),
                assert = utils.assert,
                parseBytes = utils.parseBytes,
                cachedProperty = utils.cachedProperty;
            function KeyPair(eddsa, params) {
                (this.eddsa = eddsa), (this._secret = parseBytes(params.secret)), eddsa.isPoint(params.pub) ? (this._pub = params.pub) : (this._pubBytes = parseBytes(params.pub));
            }
            (KeyPair.fromPublic = function (eddsa, pub) {
                return pub instanceof KeyPair ? pub : new KeyPair(eddsa, { pub: pub });
            }),
                (KeyPair.fromSecret = function (eddsa, secret) {
                    return secret instanceof KeyPair ? secret : new KeyPair(eddsa, { secret: secret });
                }),
                (KeyPair.prototype.secret = function () {
                    return this._secret;
                }),
                cachedProperty(KeyPair, "pubBytes", function () {
                    return this.eddsa.encodePoint(this.pub());
                }),
                cachedProperty(KeyPair, "pub", function () {
                    return this._pubBytes ? this.eddsa.decodePoint(this._pubBytes) : this.eddsa.g.mul(this.priv());
                }),
                cachedProperty(KeyPair, "privBytes", function () {
                    var eddsa = this.eddsa,
                        hash = this.hash(),
                        lastIx = eddsa.encodingLength - 1,
                        a = hash.slice(0, eddsa.encodingLength);
                    return (a[0] &= 248), (a[lastIx] &= 127), (a[lastIx] |= 64), a;
                }),
                cachedProperty(KeyPair, "priv", function () {
                    return this.eddsa.decodeInt(this.privBytes());
                }),
                cachedProperty(KeyPair, "hash", function () {
                    return this.eddsa.hash().update(this.secret()).digest();
                }),
                cachedProperty(KeyPair, "messagePrefix", function () {
                    return this.hash().slice(this.eddsa.encodingLength);
                }),
                (KeyPair.prototype.sign = function (message) {
                    return assert(this._secret, "KeyPair can only verify"), this.eddsa.sign(message, this);
                }),
                (KeyPair.prototype.verify = function (message, sig) {
                    return this.eddsa.verify(message, sig, this);
                }),
                (KeyPair.prototype.getSecret = function (enc) {
                    return assert(this._secret, "KeyPair is public only"), utils.encode(this.secret(), enc);
                }),
                (KeyPair.prototype.getPublic = function (enc) {
                    return utils.encode(this.pubBytes(), enc);
                }),
                (module.exports = KeyPair);
        },
        23622: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var BN = __webpack_require__(13550),
                utils = __webpack_require__(80953),
                assert = utils.assert,
                cachedProperty = utils.cachedProperty,
                parseBytes = utils.parseBytes;
            function Signature(eddsa, sig) {
                (this.eddsa = eddsa),
                    "object" != typeof sig && (sig = parseBytes(sig)),
                    Array.isArray(sig) && (sig = { R: sig.slice(0, eddsa.encodingLength), S: sig.slice(eddsa.encodingLength) }),
                    assert(sig.R && sig.S, "Signature without R or S"),
                    eddsa.isPoint(sig.R) && (this._R = sig.R),
                    sig.S instanceof BN && (this._S = sig.S),
                    (this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded),
                    (this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded);
            }
            cachedProperty(Signature, "S", function () {
                return this.eddsa.decodeInt(this.Sencoded());
            }),
                cachedProperty(Signature, "R", function () {
                    return this.eddsa.decodePoint(this.Rencoded());
                }),
                cachedProperty(Signature, "Rencoded", function () {
                    return this.eddsa.encodePoint(this.R());
                }),
                cachedProperty(Signature, "Sencoded", function () {
                    return this.eddsa.encodeInt(this.S());
                }),
                (Signature.prototype.toBytes = function () {
                    return this.Rencoded().concat(this.Sencoded());
                }),
                (Signature.prototype.toHex = function () {
                    return utils.encode(this.toBytes(), "hex").toUpperCase();
                }),
                (module.exports = Signature);
        },
        91037: function (module) {
            module.exports = {
                doubles: {
                    step: 4,
                    points: [
                        ["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a", "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"],
                        ["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508", "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"],
                        ["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739", "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"],
                        ["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640", "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"],
                        ["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c", "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"],
                        ["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda", "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"],
                        ["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa", "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"],
                        ["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0", "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"],
                        ["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d", "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"],
                        ["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d", "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"],
                        ["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1", "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"],
                        ["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0", "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"],
                        ["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047", "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"],
                        ["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862", "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"],
                        ["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7", "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"],
                        ["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd", "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"],
                        ["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83", "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"],
                        ["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a", "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"],
                        ["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8", "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"],
                        ["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d", "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"],
                        ["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725", "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"],
                        ["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754", "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"],
                        ["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c", "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"],
                        ["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6", "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"],
                        ["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39", "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"],
                        ["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891", "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"],
                        ["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b", "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"],
                        ["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03", "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"],
                        ["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d", "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"],
                        ["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070", "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"],
                        ["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4", "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"],
                        ["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da", "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"],
                        ["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11", "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"],
                        ["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e", "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"],
                        ["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41", "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"],
                        ["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef", "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"],
                        ["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8", "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"],
                        ["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d", "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"],
                        ["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96", "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"],
                        ["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd", "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"],
                        ["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5", "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"],
                        ["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266", "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"],
                        ["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71", "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"],
                        ["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac", "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"],
                        ["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751", "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"],
                        ["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e", "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"],
                        ["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241", "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"],
                        ["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3", "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"],
                        ["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f", "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"],
                        ["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19", "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"],
                        ["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be", "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"],
                        ["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9", "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"],
                        ["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2", "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"],
                        ["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13", "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"],
                        ["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c", "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"],
                        ["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba", "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"],
                        ["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151", "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"],
                        ["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073", "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"],
                        ["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458", "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"],
                        ["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b", "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"],
                        ["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366", "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"],
                        ["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa", "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"],
                        ["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0", "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"],
                        ["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787", "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"],
                        ["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e", "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"],
                    ],
                },
                naf: {
                    wnd: 7,
                    points: [
                        ["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9", "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"],
                        ["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4", "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"],
                        ["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc", "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"],
                        ["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe", "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"],
                        ["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb", "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"],
                        ["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8", "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"],
                        ["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e", "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"],
                        ["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34", "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"],
                        ["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c", "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"],
                        ["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5", "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"],
                        ["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f", "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"],
                        ["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714", "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"],
                        ["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729", "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"],
                        ["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db", "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"],
                        ["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4", "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"],
                        ["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5", "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"],
                        ["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479", "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"],
                        ["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d", "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"],
                        ["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f", "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"],
                        ["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb", "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"],
                        ["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9", "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"],
                        ["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963", "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"],
                        ["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74", "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"],
                        ["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530", "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"],
                        ["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b", "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"],
                        ["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247", "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"],
                        ["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1", "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"],
                        ["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120", "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"],
                        ["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435", "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"],
                        ["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18", "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"],
                        ["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8", "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"],
                        ["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb", "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"],
                        ["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f", "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"],
                        ["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143", "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"],
                        ["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba", "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"],
                        ["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45", "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"],
                        ["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a", "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"],
                        ["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e", "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"],
                        ["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8", "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"],
                        ["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c", "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"],
                        ["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519", "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"],
                        ["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab", "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"],
                        ["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca", "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"],
                        ["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf", "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"],
                        ["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610", "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"],
                        ["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4", "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"],
                        ["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c", "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"],
                        ["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940", "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"],
                        ["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980", "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"],
                        ["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3", "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"],
                        ["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf", "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"],
                        ["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63", "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"],
                        ["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448", "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"],
                        ["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf", "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"],
                        ["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5", "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"],
                        ["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6", "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"],
                        ["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5", "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"],
                        ["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99", "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"],
                        ["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51", "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"],
                        ["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5", "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"],
                        ["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5", "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"],
                        ["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997", "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"],
                        ["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881", "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"],
                        ["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5", "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"],
                        ["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66", "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"],
                        ["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726", "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"],
                        ["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede", "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"],
                        ["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94", "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"],
                        ["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31", "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"],
                        ["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51", "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"],
                        ["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252", "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"],
                        ["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5", "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"],
                        ["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b", "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"],
                        ["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4", "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"],
                        ["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f", "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"],
                        ["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889", "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"],
                        ["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246", "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"],
                        ["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984", "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"],
                        ["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a", "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"],
                        ["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030", "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"],
                        ["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197", "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"],
                        ["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593", "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"],
                        ["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef", "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"],
                        ["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38", "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"],
                        ["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a", "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"],
                        ["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111", "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"],
                        ["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502", "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"],
                        ["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea", "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"],
                        ["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26", "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"],
                        ["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986", "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"],
                        ["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e", "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"],
                        ["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4", "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"],
                        ["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda", "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"],
                        ["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859", "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"],
                        ["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f", "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"],
                        ["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c", "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"],
                        ["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942", "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"],
                        ["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a", "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"],
                        ["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80", "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"],
                        ["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d", "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"],
                        ["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1", "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"],
                        ["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63", "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"],
                        ["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352", "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"],
                        ["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193", "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"],
                        ["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00", "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"],
                        ["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58", "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"],
                        ["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7", "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"],
                        ["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8", "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"],
                        ["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e", "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"],
                        ["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d", "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"],
                        ["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b", "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"],
                        ["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f", "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"],
                        ["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6", "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"],
                        ["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297", "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"],
                        ["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a", "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"],
                        ["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c", "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"],
                        ["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52", "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"],
                        ["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb", "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"],
                        ["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065", "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"],
                        ["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917", "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"],
                        ["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9", "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"],
                        ["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3", "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"],
                        ["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57", "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"],
                        ["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66", "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"],
                        ["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8", "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"],
                        ["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721", "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"],
                        ["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180", "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"],
                    ],
                },
            };
        },
        80953: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var utils = exports,
                BN = __webpack_require__(13550),
                minAssert = __webpack_require__(79746),
                minUtils = __webpack_require__(34504);
            (utils.assert = minAssert),
                (utils.toArray = minUtils.toArray),
                (utils.zero2 = minUtils.zero2),
                (utils.toHex = minUtils.toHex),
                (utils.encode = minUtils.encode),
                (utils.getNAF = function (num, w, bits) {
                    var naf = Array(Math.max(num.bitLength(), bits) + 1);
                    naf.fill(0);
                    for (var ws = 1 << (w + 1), k = num.clone(), i = 0; i < naf.length; i++) {
                        var z,
                            mod = k.andln(ws - 1);
                        k.isOdd() ? ((z = mod > (ws >> 1) - 1 ? (ws >> 1) - mod : mod), k.isubn(z)) : (z = 0), (naf[i] = z), k.iushrn(1);
                    }
                    return naf;
                }),
                (utils.getJSF = function (k1, k2) {
                    var jsf = [[], []];
                    (k1 = k1.clone()), (k2 = k2.clone());
                    for (var d1 = 0, d2 = 0; k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0; ) {
                        var m8,
                            u1,
                            u2,
                            m14 = (k1.andln(3) + d1) & 3,
                            m24 = (k2.andln(3) + d2) & 3;
                        3 === m14 && (m14 = -1),
                            3 === m24 && (m24 = -1),
                            (u1 = (1 & m14) == 0 ? 0 : (3 == (m8 = (k1.andln(7) + d1) & 7) || 5 === m8) && 2 === m24 ? -m14 : m14),
                            jsf[0].push(u1),
                            (u2 = (1 & m24) == 0 ? 0 : (3 == (m8 = (k2.andln(7) + d2) & 7) || 5 === m8) && 2 === m14 ? -m24 : m24),
                            jsf[1].push(u2),
                            2 * d1 === u1 + 1 && (d1 = 1 - d1),
                            2 * d2 === u2 + 1 && (d2 = 1 - d2),
                            k1.iushrn(1),
                            k2.iushrn(1);
                    }
                    return jsf;
                }),
                (utils.cachedProperty = function (obj, name, computer) {
                    var key = "_" + name;
                    obj.prototype[name] = function () {
                        return void 0 !== this[key] ? this[key] : (this[key] = computer.call(this));
                    };
                }),
                (utils.parseBytes = function (bytes) {
                    return "string" == typeof bytes ? utils.toArray(bytes, "hex") : bytes;
                }),
                (utils.intFromLE = function (bytes) {
                    return new BN(bytes, "hex", "le");
                });
        },
        55850: function (module, __unused_webpack_exports, __webpack_require__) {
            __webpack_require__(75682), __webpack_require__(12352);
            let SafeEventEmitter = __webpack_require__(37253),
                calculateSum = (accumulator, currentValue) => accumulator + currentValue,
                blockTrackerEvents = ["sync", "latest"];
            function hexToInt(hexInt) {
                return Number.parseInt(hexInt, 16);
            }
            module.exports = class extends SafeEventEmitter {
                constructor(opts = {}) {
                    super(),
                        (this._blockResetDuration = opts.blockResetDuration || 2e4),
                        this._blockResetTimeout,
                        (this._currentBlock = null),
                        (this._isRunning = !1),
                        (this._onNewListener = this._onNewListener.bind(this)),
                        (this._onRemoveListener = this._onRemoveListener.bind(this)),
                        (this._resetCurrentBlock = this._resetCurrentBlock.bind(this)),
                        this._setupInternalEvents();
                }
                isRunning() {
                    return this._isRunning;
                }
                getCurrentBlock() {
                    return this._currentBlock;
                }
                async getLatestBlock() {
                    if (this._currentBlock) return this._currentBlock;
                    let latestBlock = await new Promise((resolve) => this.once("latest", resolve));
                    return latestBlock;
                }
                removeAllListeners(eventName) {
                    eventName ? super.removeAllListeners(eventName) : super.removeAllListeners(), this._setupInternalEvents(), this._onRemoveListener();
                }
                _start() {}
                _end() {}
                _setupInternalEvents() {
                    this.removeListener("newListener", this._onNewListener), this.removeListener("removeListener", this._onRemoveListener), this.on("newListener", this._onNewListener), this.on("removeListener", this._onRemoveListener);
                }
                _onNewListener(eventName, handler) {
                    blockTrackerEvents.includes(eventName) && this._maybeStart();
                }
                _onRemoveListener(eventName, handler) {
                    this._getBlockTrackerEventCount() > 0 || this._maybeEnd();
                }
                _maybeStart() {
                    this._isRunning || ((this._isRunning = !0), this._cancelBlockResetTimeout(), this._start());
                }
                _maybeEnd() {
                    this._isRunning && ((this._isRunning = !1), this._setupBlockResetTimeout(), this._end());
                }
                _getBlockTrackerEventCount() {
                    return blockTrackerEvents.map((eventName) => this.listenerCount(eventName)).reduce(calculateSum);
                }
                _newPotentialLatest(newBlock) {
                    let currentBlock = this._currentBlock;
                    (currentBlock && hexToInt(newBlock) <= hexToInt(currentBlock)) || this._setCurrentBlock(newBlock);
                }
                _setCurrentBlock(newBlock) {
                    let oldBlock = this._currentBlock;
                    (this._currentBlock = newBlock), this.emit("latest", newBlock), this.emit("sync", { oldBlock, newBlock });
                }
                _setupBlockResetTimeout() {
                    this._cancelBlockResetTimeout(), (this._blockResetTimeout = setTimeout(this._resetCurrentBlock, this._blockResetDuration)), this._blockResetTimeout.unref && this._blockResetTimeout.unref();
                }
                _cancelBlockResetTimeout() {
                    clearTimeout(this._blockResetTimeout);
                }
                _resetCurrentBlock() {
                    this._currentBlock = null;
                }
            };
        },
        75012: function (module, __unused_webpack_exports, __webpack_require__) {
            let pify = __webpack_require__(12352),
                BaseBlockTracker = __webpack_require__(55850);
            function timeout(duration, unref) {
                return new Promise((resolve) => {
                    let timoutRef = setTimeout(resolve, duration);
                    timoutRef.unref && unref && timoutRef.unref();
                });
            }
            module.exports = class extends BaseBlockTracker {
                constructor(opts = {}) {
                    if (!opts.provider) throw Error("PollingBlockTracker - no provider specified.");
                    let pollingInterval = opts.pollingInterval || 2e4,
                        retryTimeout = opts.retryTimeout || pollingInterval / 10,
                        keepEventLoopActive = void 0 === opts.keepEventLoopActive || opts.keepEventLoopActive,
                        setSkipCacheFlag = opts.setSkipCacheFlag || !1;
                    super(Object.assign({ blockResetDuration: pollingInterval }, opts)),
                        (this._provider = opts.provider),
                        (this._pollingInterval = pollingInterval),
                        (this._retryTimeout = retryTimeout),
                        (this._keepEventLoopActive = keepEventLoopActive),
                        (this._setSkipCacheFlag = setSkipCacheFlag);
                }
                async checkForLatestBlock() {
                    return await this._updateLatestBlock(), await this.getLatestBlock();
                }
                _start() {
                    this._performSync().catch((err) => this.emit("error", err));
                }
                async _performSync() {
                    for (; this._isRunning; )
                        try {
                            await this._updateLatestBlock(), await timeout(this._pollingInterval, !this._keepEventLoopActive);
                        } catch (err) {
                            let newErr = Error(`PollingBlockTracker - encountered an error while attempting to update latest block:
${err.stack}`);
                            try {
                                this.emit("error", newErr);
                            } catch (emitErr) {
                                console.error(newErr);
                            }
                            await timeout(this._retryTimeout, !this._keepEventLoopActive);
                        }
                }
                async _updateLatestBlock() {
                    let latestBlock = await this._fetchLatestBlock();
                    this._newPotentialLatest(latestBlock);
                }
                async _fetchLatestBlock() {
                    let req = { jsonrpc: "2.0", id: 1, method: "eth_blockNumber", params: [] };
                    this._setSkipCacheFlag && (req.skipCache = !0);
                    let res = await pify((cb) => this._provider.sendAsync(req, cb))();
                    if (res.error)
                        throw Error(`PollingBlockTracker - encountered error fetching block:
${res.error}`);
                    return res.result;
                }
            };
        },
        23256: function (module, __unused_webpack_exports, __webpack_require__) {
            let BaseFilter = __webpack_require__(76622);
            module.exports = class extends BaseFilter {
                constructor() {
                    super(), (this.allResults = []);
                }
                async update() {
                    throw Error("BaseFilterWithHistory - no update method specified");
                }
                addResults(newResults) {
                    (this.allResults = this.allResults.concat(newResults)), super.addResults(newResults);
                }
                addInitialResults(newResults) {
                    (this.allResults = this.allResults.concat(newResults)), super.addInitialResults(newResults);
                }
                getAllResults() {
                    return this.allResults;
                }
            };
        },
        76622: function (module, __unused_webpack_exports, __webpack_require__) {
            let SafeEventEmitter = __webpack_require__(19394).default;
            module.exports = class extends SafeEventEmitter {
                constructor() {
                    super(), (this.updates = []);
                }
                async initialize() {}
                async update() {
                    throw Error("BaseFilter - no update method specified");
                }
                addResults(newResults) {
                    (this.updates = this.updates.concat(newResults)), newResults.forEach((result) => this.emit("update", result));
                }
                addInitialResults(newResults) {}
                getChangesAndClear() {
                    let updates = this.updates;
                    return (this.updates = []), updates;
                }
            };
        },
        72785: function (module, __unused_webpack_exports, __webpack_require__) {
            let BaseFilter = __webpack_require__(76622),
                getBlocksForRange = __webpack_require__(40207),
                { incrementHexInt } = __webpack_require__(98112);
            module.exports = class extends BaseFilter {
                constructor({ provider, params }) {
                    super(), (this.type = "block"), (this.provider = provider);
                }
                async update({ oldBlock, newBlock }) {
                    let fromBlock = incrementHexInt(oldBlock),
                        blockBodies = await getBlocksForRange({ provider: this.provider, fromBlock, toBlock: newBlock }),
                        blockHashes = blockBodies.map((block) => block.hash);
                    this.addResults(blockHashes);
                }
            };
        },
        40207: function (module) {
            async function getBlocksForRange({ provider, fromBlock, toBlock }) {
                fromBlock || (fromBlock = toBlock);
                let fromBlockNumber = hexToInt(fromBlock),
                    toBlockNumber = hexToInt(toBlock),
                    missingBlockNumbers = Array(toBlockNumber - fromBlockNumber + 1)
                        .fill()
                        .map((_, index) => fromBlockNumber + index)
                        .map(intToHex),
                    blockBodies = await Promise.all(
                        missingBlockNumbers.map((blockNum) => {
                            var params;
                            return (
                                (params = [blockNum, !1]),
                                new Promise((resolve, reject) => {
                                    provider.sendAsync({ id: 1, jsonrpc: "2.0", method: "eth_getBlockByNumber", params }, (err, res) => {
                                        if (err) return reject(err);
                                        resolve(res.result);
                                    });
                                })
                            );
                        })
                    );
                return blockBodies;
            }
            function hexToInt(hexString) {
                return null == hexString ? hexString : Number.parseInt(hexString, 16);
            }
            function intToHex(int) {
                if (null == int) return int;
                let hexString = int.toString(16);
                return "0x" + hexString;
            }
            module.exports = getBlocksForRange;
        },
        98112: function (module) {
            function sortBlockRefs(refs) {
                return refs.sort((refA, refB) => ("latest" === refA || "earliest" === refB ? 1 : "latest" === refB || "earliest" === refA ? -1 : hexToInt(refA) - hexToInt(refB)));
            }
            function hexToInt(hexString) {
                return null == hexString ? hexString : Number.parseInt(hexString, 16);
            }
            function intToHex(int) {
                if (null == int) return int;
                let hexString = int.toString(16),
                    needsLeftPad = hexString.length % 2;
                return needsLeftPad && (hexString = "0" + hexString), "0x" + hexString;
            }
            function unsafeRandomNibble() {
                return Math.floor(16 * Math.random()).toString(16);
            }
            module.exports = {
                minBlockRef: function (...refs) {
                    let sortedRefs = sortBlockRefs(refs);
                    return sortedRefs[0];
                },
                maxBlockRef: function (...refs) {
                    let sortedRefs = sortBlockRefs(refs);
                    return sortedRefs[sortedRefs.length - 1];
                },
                sortBlockRefs,
                bnToHex: function (bn) {
                    return "0x" + bn.toString(16);
                },
                blockRefIsNumber: function (blockRef) {
                    return blockRef && !["earliest", "latest", "pending"].includes(blockRef);
                },
                hexToInt,
                incrementHexInt: function (hexString) {
                    if (null == hexString) return hexString;
                    let value = hexToInt(hexString);
                    return intToHex(value + 1);
                },
                intToHex,
                unsafeRandomBytes: function (byteCount) {
                    let result = "0x";
                    for (let i = 0; i < byteCount; i++) result = unsafeRandomNibble() + unsafeRandomNibble();
                    return result;
                },
            };
        },
        98406: function (module, __unused_webpack_exports, __webpack_require__) {
            let Mutex = __webpack_require__(48125).WU,
                { createAsyncMiddleware } = __webpack_require__(18320),
                createJsonRpcMiddleware = __webpack_require__(57688),
                LogFilter = __webpack_require__(81663),
                BlockFilter = __webpack_require__(72785),
                TxFilter = __webpack_require__(25792),
                { intToHex, hexToInt } = __webpack_require__(98112);
            function toFilterCreationMiddleware(createFilterFn) {
                return toAsyncRpcMiddleware(async (...args) => {
                    let filter = await createFilterFn(...args),
                        result = intToHex(filter.id);
                    return result;
                });
            }
            function toAsyncRpcMiddleware(asyncFn) {
                return createAsyncMiddleware(async (req, res) => {
                    let result = await asyncFn.apply(null, req.params);
                    res.result = result;
                });
            }
            function objValues(obj, fn) {
                let values = [];
                for (let key in obj) values.push(obj[key]);
                return values;
            }
            module.exports = function ({ blockTracker, provider }) {
                let filterIndex = 0,
                    filters = {},
                    mutex = new Mutex(),
                    waitForFree = (function ({ mutex }) {
                        return (middleware) => async (req, res, next, end) => {
                            let releaseLock = await mutex.acquire();
                            releaseLock(), middleware(req, res, next, end);
                        };
                    })({ mutex }),
                    middleware = createJsonRpcMiddleware({
                        eth_newFilter: waitForFree(toFilterCreationMiddleware(newLogFilter)),
                        eth_newBlockFilter: waitForFree(toFilterCreationMiddleware(newBlockFilter)),
                        eth_newPendingTransactionFilter: waitForFree(toFilterCreationMiddleware(newPendingTransactionFilter)),
                        eth_uninstallFilter: waitForFree(toAsyncRpcMiddleware(uninstallFilterHandler)),
                        eth_getFilterChanges: waitForFree(toAsyncRpcMiddleware(getFilterChanges)),
                        eth_getFilterLogs: waitForFree(toAsyncRpcMiddleware(getFilterLogs)),
                    }),
                    filterUpdater = async ({ oldBlock, newBlock }) => {
                        if (0 === filters.length) return;
                        let releaseLock = await mutex.acquire();
                        try {
                            await Promise.all(
                                objValues(filters).map(async (filter) => {
                                    try {
                                        await filter.update({ oldBlock, newBlock });
                                    } catch (err) {
                                        console.error(err);
                                    }
                                })
                            );
                        } catch (err) {
                            console.error(err);
                        }
                        releaseLock();
                    };
                return (
                    (middleware.newLogFilter = newLogFilter),
                    (middleware.newBlockFilter = newBlockFilter),
                    (middleware.newPendingTransactionFilter = newPendingTransactionFilter),
                    (middleware.uninstallFilter = uninstallFilterHandler),
                    (middleware.getFilterChanges = getFilterChanges),
                    (middleware.getFilterLogs = getFilterLogs),
                    (middleware.destroy = () => {
                        uninstallAllFilters();
                    }),
                    middleware
                );
                async function newLogFilter(params) {
                    let filter = new LogFilter({ provider, params });
                    return await installFilter(filter), filter;
                }
                async function newBlockFilter() {
                    let filter = new BlockFilter({ provider });
                    return await installFilter(filter), filter;
                }
                async function newPendingTransactionFilter() {
                    let filter = new TxFilter({ provider });
                    return await installFilter(filter), filter;
                }
                async function getFilterChanges(filterIndexHex) {
                    let filterIndex = hexToInt(filterIndexHex),
                        filter = filters[filterIndex];
                    if (!filter) throw Error(`No filter for index "${filterIndex}"`);
                    let results = filter.getChangesAndClear();
                    return results;
                }
                async function getFilterLogs(filterIndexHex) {
                    let filterIndex = hexToInt(filterIndexHex),
                        filter = filters[filterIndex];
                    if (!filter) throw Error(`No filter for index "${filterIndex}"`);
                    return "log" === filter.type ? filter.getAllResults() : [];
                }
                async function uninstallFilterHandler(filterIndexHex) {
                    let filterIndex = hexToInt(filterIndexHex),
                        filter = filters[filterIndex],
                        result = Boolean(filter);
                    return result && (await uninstallFilter(filterIndex)), result;
                }
                async function installFilter(filter) {
                    let prevFilterCount = objValues(filters).length,
                        currentBlock = await blockTracker.getLatestBlock();
                    await filter.initialize({ currentBlock }), (filters[++filterIndex] = filter), (filter.id = filterIndex), (filter.idHex = intToHex(filterIndex));
                    let newFilterCount = objValues(filters).length;
                    return updateBlockTrackerSubs({ prevFilterCount, newFilterCount }), filterIndex;
                }
                async function uninstallFilter(filterIndex) {
                    let prevFilterCount = objValues(filters).length;
                    delete filters[filterIndex];
                    let newFilterCount = objValues(filters).length;
                    updateBlockTrackerSubs({ prevFilterCount, newFilterCount });
                }
                async function uninstallAllFilters() {
                    let prevFilterCount = objValues(filters).length;
                    (filters = {}), updateBlockTrackerSubs({ prevFilterCount, newFilterCount: 0 });
                }
                function updateBlockTrackerSubs({ prevFilterCount, newFilterCount }) {
                    if (0 === prevFilterCount && newFilterCount > 0) {
                        blockTracker.on("sync", filterUpdater);
                        return;
                    }
                    if (prevFilterCount > 0 && 0 === newFilterCount) {
                        blockTracker.removeListener("sync", filterUpdater);
                        return;
                    }
                }
            };
        },
        81663: function (module, __unused_webpack_exports, __webpack_require__) {
            let EthQuery = __webpack_require__(75682),
                pify = __webpack_require__(6417),
                BaseFilterWithHistory = __webpack_require__(23256),
                { bnToHex, hexToInt, incrementHexInt, minBlockRef, blockRefIsNumber } = __webpack_require__(98112);
            module.exports = class extends BaseFilterWithHistory {
                constructor({ provider, params }) {
                    super(),
                        (this.type = "log"),
                        (this.ethQuery = new EthQuery(provider)),
                        (this.params = Object.assign({ fromBlock: "latest", toBlock: "latest", address: void 0, topics: [] }, params)),
                        this.params.address && (Array.isArray(this.params.address) || (this.params.address = [this.params.address]), (this.params.address = this.params.address.map((address) => address.toLowerCase())));
                }
                async initialize({ currentBlock }) {
                    let fromBlock = this.params.fromBlock;
                    ["latest", "pending"].includes(fromBlock) && (fromBlock = currentBlock), "earliest" === fromBlock && (fromBlock = "0x0"), (this.params.fromBlock = fromBlock);
                    let toBlock = minBlockRef(this.params.toBlock, currentBlock),
                        params = Object.assign({}, this.params, { toBlock }),
                        newLogs = await this._fetchLogs(params);
                    this.addInitialResults(newLogs);
                }
                async update({ oldBlock, newBlock }) {
                    let fromBlock;
                    fromBlock = oldBlock ? incrementHexInt(oldBlock) : newBlock;
                    let params = Object.assign({}, this.params, { fromBlock, toBlock: newBlock }),
                        newLogs = await this._fetchLogs(params),
                        matchingLogs = newLogs.filter((log) => this.matchLog(log));
                    this.addResults(matchingLogs);
                }
                async _fetchLogs(params) {
                    let newLogs = await pify((cb) => this.ethQuery.getLogs(params, cb))();
                    return newLogs;
                }
                matchLog(log) {
                    if (hexToInt(this.params.fromBlock) >= hexToInt(log.blockNumber) || (blockRefIsNumber(this.params.toBlock) && hexToInt(this.params.toBlock) <= hexToInt(log.blockNumber))) return !1;
                    let normalizedLogAddress = log.address && log.address.toLowerCase();
                    if (this.params.address && normalizedLogAddress && !this.params.address.includes(normalizedLogAddress)) return !1;
                    let topicsMatch = this.params.topics.every((topicPattern, index) => {
                        let logTopic = log.topics[index];
                        if (!logTopic) return !1;
                        logTopic = logTopic.toLowerCase();
                        let subtopicsToMatch = Array.isArray(topicPattern) ? topicPattern : [topicPattern],
                            subtopicsIncludeWildcard = subtopicsToMatch.includes(null);
                        if (subtopicsIncludeWildcard) return !0;
                        subtopicsToMatch = subtopicsToMatch.map((topic) => topic.toLowerCase());
                        let topicDoesMatch = subtopicsToMatch.includes(logTopic);
                        return topicDoesMatch;
                    });
                    return topicsMatch;
                }
            };
        },
        25232: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.EthereumProviderError = exports.EthereumRpcError = void 0);
            let fast_safe_stringify_1 = __webpack_require__(4445);
            class EthereumRpcError extends Error {
                constructor(code, message, data) {
                    if (!Number.isInteger(code)) throw Error('"code" must be an integer.');
                    if (!message || "string" != typeof message) throw Error('"message" must be a nonempty string.');
                    super(message), (this.code = code), void 0 !== data && (this.data = data);
                }
                serialize() {
                    let serialized = { code: this.code, message: this.message };
                    return void 0 !== this.data && (serialized.data = this.data), this.stack && (serialized.stack = this.stack), serialized;
                }
                toString() {
                    return fast_safe_stringify_1.default(this.serialize(), stringifyReplacer, 2);
                }
            }
            function stringifyReplacer(_, value) {
                if ("[Circular]" !== value) return value;
            }
            (exports.EthereumRpcError = EthereumRpcError),
                (exports.EthereumProviderError = class extends EthereumRpcError {
                    constructor(code, message, data) {
                        if (!(Number.isInteger(code) && code >= 1e3 && code <= 4999)) throw Error('"code" must be an integer such that: 1000 <= code <= 4999');
                        super(code, message, data);
                    }
                });
        },
        14142: function (__unused_webpack_module, exports) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.errorValues = exports.errorCodes = void 0),
                (exports.errorCodes = {
                    rpc: {
                        invalidInput: -32e3,
                        resourceNotFound: -32001,
                        resourceUnavailable: -32002,
                        transactionRejected: -32003,
                        methodNotSupported: -32004,
                        limitExceeded: -32005,
                        parse: -32700,
                        invalidRequest: -32600,
                        methodNotFound: -32601,
                        invalidParams: -32602,
                        internal: -32603,
                    },
                    provider: { userRejectedRequest: 4001, unauthorized: 4100, unsupportedMethod: 4200, disconnected: 4900, chainDisconnected: 4901 },
                }),
                (exports.errorValues = {
                    "-32700": { standard: "JSON RPC 2.0", message: "Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text." },
                    "-32600": { standard: "JSON RPC 2.0", message: "The JSON sent is not a valid Request object." },
                    "-32601": { standard: "JSON RPC 2.0", message: "The method does not exist / is not available." },
                    "-32602": { standard: "JSON RPC 2.0", message: "Invalid method parameter(s)." },
                    "-32603": { standard: "JSON RPC 2.0", message: "Internal JSON-RPC error." },
                    "-32000": { standard: "EIP-1474", message: "Invalid input." },
                    "-32001": { standard: "EIP-1474", message: "Resource not found." },
                    "-32002": { standard: "EIP-1474", message: "Resource unavailable." },
                    "-32003": { standard: "EIP-1474", message: "Transaction rejected." },
                    "-32004": { standard: "EIP-1474", message: "Method not supported." },
                    "-32005": { standard: "EIP-1474", message: "Request limit exceeded." },
                    4001: { standard: "EIP-1193", message: "User rejected the request." },
                    4100: { standard: "EIP-1193", message: "The requested account and/or method has not been authorized by the user." },
                    4200: { standard: "EIP-1193", message: "The requested method is not supported by this Ethereum provider." },
                    4900: { standard: "EIP-1193", message: "The provider is disconnected from all chains." },
                    4901: { standard: "EIP-1193", message: "The provider is disconnected from the specified chain." },
                });
        },
        26339: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.ethErrors = void 0);
            let classes_1 = __webpack_require__(25232),
                utils_1 = __webpack_require__(31299),
                error_constants_1 = __webpack_require__(14142);
            function getEthJsonRpcError(code, arg) {
                let [message, data] = parseOpts(arg);
                return new classes_1.EthereumRpcError(code, message || utils_1.getMessageFromCode(code), data);
            }
            function getEthProviderError(code, arg) {
                let [message, data] = parseOpts(arg);
                return new classes_1.EthereumProviderError(code, message || utils_1.getMessageFromCode(code), data);
            }
            function parseOpts(arg) {
                if (arg) {
                    if ("string" == typeof arg) return [arg];
                    if ("object" == typeof arg && !Array.isArray(arg)) {
                        let { message, data } = arg;
                        if (message && "string" != typeof message) throw Error("Must specify string message.");
                        return [message || void 0, data];
                    }
                }
                return [];
            }
            exports.ethErrors = {
                rpc: {
                    parse: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.parse, arg),
                    invalidRequest: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.invalidRequest, arg),
                    invalidParams: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.invalidParams, arg),
                    methodNotFound: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.methodNotFound, arg),
                    internal: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.internal, arg),
                    server(opts) {
                        if (!opts || "object" != typeof opts || Array.isArray(opts)) throw Error("Ethereum RPC Server errors must provide single object argument.");
                        let { code } = opts;
                        if (!Number.isInteger(code) || code > -32005 || code < -32099) throw Error('"code" must be an integer such that: -32099 <= code <= -32005');
                        return getEthJsonRpcError(code, opts);
                    },
                    invalidInput: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.invalidInput, arg),
                    resourceNotFound: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.resourceNotFound, arg),
                    resourceUnavailable: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.resourceUnavailable, arg),
                    transactionRejected: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.transactionRejected, arg),
                    methodNotSupported: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.methodNotSupported, arg),
                    limitExceeded: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.limitExceeded, arg),
                },
                provider: {
                    userRejectedRequest: (arg) => getEthProviderError(error_constants_1.errorCodes.provider.userRejectedRequest, arg),
                    unauthorized: (arg) => getEthProviderError(error_constants_1.errorCodes.provider.unauthorized, arg),
                    unsupportedMethod: (arg) => getEthProviderError(error_constants_1.errorCodes.provider.unsupportedMethod, arg),
                    disconnected: (arg) => getEthProviderError(error_constants_1.errorCodes.provider.disconnected, arg),
                    chainDisconnected: (arg) => getEthProviderError(error_constants_1.errorCodes.provider.chainDisconnected, arg),
                    custom(opts) {
                        if (!opts || "object" != typeof opts || Array.isArray(opts)) throw Error("Ethereum Provider custom errors must provide single object argument.");
                        let { code, message, data } = opts;
                        if (!message || "string" != typeof message) throw Error('"message" must be a nonempty string');
                        return new classes_1.EthereumProviderError(code, message, data);
                    },
                },
            };
        },
        69313: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.getMessageFromCode = exports.serializeError = exports.EthereumProviderError = exports.EthereumRpcError = exports.ethErrors = exports.errorCodes = void 0);
            let classes_1 = __webpack_require__(25232);
            Object.defineProperty(exports, "EthereumRpcError", {
                enumerable: !0,
                get: function () {
                    return classes_1.EthereumRpcError;
                },
            }),
                Object.defineProperty(exports, "EthereumProviderError", {
                    enumerable: !0,
                    get: function () {
                        return classes_1.EthereumProviderError;
                    },
                });
            let utils_1 = __webpack_require__(31299);
            Object.defineProperty(exports, "serializeError", {
                enumerable: !0,
                get: function () {
                    return utils_1.serializeError;
                },
            }),
                Object.defineProperty(exports, "getMessageFromCode", {
                    enumerable: !0,
                    get: function () {
                        return utils_1.getMessageFromCode;
                    },
                });
            let errors_1 = __webpack_require__(26339);
            Object.defineProperty(exports, "ethErrors", {
                enumerable: !0,
                get: function () {
                    return errors_1.ethErrors;
                },
            });
            let error_constants_1 = __webpack_require__(14142);
            Object.defineProperty(exports, "errorCodes", {
                enumerable: !0,
                get: function () {
                    return error_constants_1.errorCodes;
                },
            });
        },
        31299: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.serializeError = exports.isValidCode = exports.getMessageFromCode = exports.JSON_RPC_SERVER_ERROR_MESSAGE = void 0);
            let error_constants_1 = __webpack_require__(14142),
                classes_1 = __webpack_require__(25232),
                FALLBACK_ERROR_CODE = error_constants_1.errorCodes.rpc.internal,
                FALLBACK_ERROR = { code: FALLBACK_ERROR_CODE, message: getMessageFromCode(FALLBACK_ERROR_CODE) };
            function getMessageFromCode(code, fallbackMessage = "Unspecified error message. This is a bug, please report it.") {
                if (Number.isInteger(code)) {
                    let codeString = code.toString();
                    if (hasKey(error_constants_1.errorValues, codeString)) return error_constants_1.errorValues[codeString].message;
                    if (code >= -32099 && code <= -32e3) return exports.JSON_RPC_SERVER_ERROR_MESSAGE;
                }
                return fallbackMessage;
            }
            function isValidCode(code) {
                if (!Number.isInteger(code)) return !1;
                let codeString = code.toString();
                return !!(error_constants_1.errorValues[codeString] || (code >= -32099 && code <= -32e3));
            }
            function assignOriginalError(error) {
                return error && "object" == typeof error && !Array.isArray(error) ? Object.assign({}, error) : error;
            }
            function hasKey(obj, key) {
                return Object.prototype.hasOwnProperty.call(obj, key);
            }
            (exports.JSON_RPC_SERVER_ERROR_MESSAGE = "Unspecified server error."),
                (exports.getMessageFromCode = getMessageFromCode),
                (exports.isValidCode = isValidCode),
                (exports.serializeError = function (error, { fallbackError = FALLBACK_ERROR, shouldIncludeStack = !1 } = {}) {
                    if (!fallbackError || !Number.isInteger(fallbackError.code) || "string" != typeof fallbackError.message) throw Error("Must provide fallback error with integer number code and string message.");
                    if (error instanceof classes_1.EthereumRpcError) return error.serialize();
                    let serialized = {};
                    if (error && "object" == typeof error && !Array.isArray(error) && hasKey(error, "code") && isValidCode(error.code))
                        (serialized.code = error.code),
                            error.message && "string" == typeof error.message
                                ? ((serialized.message = error.message), hasKey(error, "data") && (serialized.data = error.data))
                                : ((serialized.message = getMessageFromCode(serialized.code)), (serialized.data = { originalError: assignOriginalError(error) }));
                    else {
                        serialized.code = fallbackError.code;
                        let message = null == error ? void 0 : error.message;
                        (serialized.message = message && "string" == typeof message ? message : fallbackError.message), (serialized.data = { originalError: assignOriginalError(error) });
                    }
                    let stack = null == error ? void 0 : error.stack;
                    return shouldIncludeStack && error && stack && "string" == typeof stack && (serialized.stack = stack), serialized;
                });
        },
        36739: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var __importDefault =
                (this && this.__importDefault) ||
                function (mod) {
                    return mod && mod.__esModule ? mod : { default: mod };
                };
            Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.JsonRpcEngine = void 0);
            let safe_event_emitter_1 = __importDefault(__webpack_require__(19394)),
                eth_rpc_errors_1 = __webpack_require__(69313);
            class JsonRpcEngine extends safe_event_emitter_1.default {
                constructor() {
                    super(), (this._middleware = []);
                }
                push(middleware) {
                    this._middleware.push(middleware);
                }
                handle(req, cb) {
                    if (cb && "function" != typeof cb) throw Error('"callback" must be a function if provided.');
                    return Array.isArray(req) ? (cb ? this._handleBatch(req, cb) : this._handleBatch(req)) : cb ? this._handle(req, cb) : this._promiseHandle(req);
                }
                asMiddleware() {
                    return async (req, res, next, end) => {
                        try {
                            let [middlewareError, isComplete, returnHandlers] = await JsonRpcEngine._runAllMiddleware(req, res, this._middleware);
                            if (isComplete) return await JsonRpcEngine._runReturnHandlers(returnHandlers), end(middlewareError);
                            return next(async (handlerCallback) => {
                                try {
                                    await JsonRpcEngine._runReturnHandlers(returnHandlers);
                                } catch (error) {
                                    return handlerCallback(error);
                                }
                                return handlerCallback();
                            });
                        } catch (error) {
                            return end(error);
                        }
                    };
                }
                async _handleBatch(reqs, cb) {
                    try {
                        let responses = await Promise.all(reqs.map(this._promiseHandle.bind(this)));
                        if (cb) return cb(null, responses);
                        return responses;
                    } catch (error) {
                        if (cb) return cb(error);
                        throw error;
                    }
                }
                _promiseHandle(req) {
                    return new Promise((resolve) => {
                        this._handle(req, (_err, res) => {
                            resolve(res);
                        });
                    });
                }
                async _handle(callerReq, cb) {
                    if (!callerReq || Array.isArray(callerReq) || "object" != typeof callerReq) {
                        let error = new eth_rpc_errors_1.EthereumRpcError(eth_rpc_errors_1.errorCodes.rpc.invalidRequest, `Requests must be plain objects. Received: ${typeof callerReq}`, { request: callerReq });
                        return cb(error, { id: void 0, jsonrpc: "2.0", error });
                    }
                    if ("string" != typeof callerReq.method) {
                        let error1 = new eth_rpc_errors_1.EthereumRpcError(eth_rpc_errors_1.errorCodes.rpc.invalidRequest, `Must specify a string method. Received: ${typeof callerReq.method}`, { request: callerReq });
                        return cb(error1, { id: callerReq.id, jsonrpc: "2.0", error: error1 });
                    }
                    let req = Object.assign({}, callerReq),
                        res = { id: req.id, jsonrpc: req.jsonrpc },
                        error2 = null;
                    try {
                        await this._processRequest(req, res);
                    } catch (_error) {
                        error2 = _error;
                    }
                    return error2 && (delete res.result, res.error || (res.error = eth_rpc_errors_1.serializeError(error2))), cb(error2, res);
                }
                async _processRequest(req, res) {
                    let [error, isComplete, returnHandlers] = await JsonRpcEngine._runAllMiddleware(req, res, this._middleware);
                    if ((JsonRpcEngine._checkForCompletion(req, res, isComplete), await JsonRpcEngine._runReturnHandlers(returnHandlers), error)) throw error;
                }
                static async _runAllMiddleware(req, res, middlewareStack) {
                    let returnHandlers = [],
                        error = null,
                        isComplete = !1;
                    for (let middleware of middlewareStack) if ((([error, isComplete] = await JsonRpcEngine._runMiddleware(req, res, middleware, returnHandlers)), isComplete)) break;
                    return [error, isComplete, returnHandlers.reverse()];
                }
                static _runMiddleware(req, res, middleware, returnHandlers) {
                    return new Promise((resolve) => {
                        let end = (err) => {
                                let error = err || res.error;
                                error && (res.error = eth_rpc_errors_1.serializeError(error)), resolve([error, !0]);
                            },
                            next = (returnHandler) => {
                                res.error
                                    ? end(res.error)
                                    : (returnHandler &&
                                          ("function" != typeof returnHandler &&
                                              end(
                                                  new eth_rpc_errors_1.EthereumRpcError(
                                                      eth_rpc_errors_1.errorCodes.rpc.internal,
                                                      `JsonRpcEngine: "next" return handlers must be functions. Received "${typeof returnHandler}" for request:
${jsonify(req)}`,
                                                      { request: req }
                                                  )
                                              ),
                                          returnHandlers.push(returnHandler)),
                                      resolve([null, !1]));
                            };
                        try {
                            middleware(req, res, next, end);
                        } catch (error) {
                            end(error);
                        }
                    });
                }
                static async _runReturnHandlers(handlers) {
                    for (let handler of handlers)
                        await new Promise((resolve, reject) => {
                            handler((err) => (err ? reject(err) : resolve()));
                        });
                }
                static _checkForCompletion(req, res, isComplete) {
                    if (!("result" in res) && !("error" in res))
                        throw new eth_rpc_errors_1.EthereumRpcError(
                            eth_rpc_errors_1.errorCodes.rpc.internal,
                            `JsonRpcEngine: Response has no error or result for request:
${jsonify(req)}`,
                            { request: req }
                        );
                    if (!isComplete)
                        throw new eth_rpc_errors_1.EthereumRpcError(
                            eth_rpc_errors_1.errorCodes.rpc.internal,
                            `JsonRpcEngine: Nothing ended request:
${jsonify(req)}`,
                            { request: req }
                        );
                }
            }
            function jsonify(request) {
                return JSON.stringify(request, null, 2);
            }
            exports.JsonRpcEngine = JsonRpcEngine;
        },
        1152: function (__unused_webpack_module, exports) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.createAsyncMiddleware = void 0),
                (exports.createAsyncMiddleware = function (asyncMiddleware) {
                    return async (req, res, next, end) => {
                        let resolveNextPromise;
                        let nextPromise = new Promise((resolve) => {
                                resolveNextPromise = resolve;
                            }),
                            returnHandlerCallback = null,
                            nextWasCalled = !1,
                            asyncNext = async () => {
                                (nextWasCalled = !0),
                                    next((runReturnHandlersCallback) => {
                                        (returnHandlerCallback = runReturnHandlersCallback), resolveNextPromise();
                                    }),
                                    await nextPromise;
                            };
                        try {
                            await asyncMiddleware(req, res, asyncNext), nextWasCalled ? (await nextPromise, returnHandlerCallback(null)) : end(null);
                        } catch (error) {
                            returnHandlerCallback ? returnHandlerCallback(error) : end(error);
                        }
                    };
                });
        },
        64980: function (__unused_webpack_module, exports) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.createScaffoldMiddleware = void 0),
                (exports.createScaffoldMiddleware = function (handlers) {
                    return (req, res, next, end) => {
                        let handler = handlers[req.method];
                        return void 0 === handler ? next() : "function" == typeof handler ? handler(req, res, next, end) : ((res.result = handler), end());
                    };
                });
        },
        51084: function (__unused_webpack_module, exports) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.getUniqueId = void 0);
            let idCounter = Math.floor(4294967295 * Math.random());
            exports.getUniqueId = function () {
                return (idCounter = (idCounter + 1) % 4294967295);
            };
        },
        28104: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.createIdRemapMiddleware = void 0);
            let getUniqueId_1 = __webpack_require__(51084);
            exports.createIdRemapMiddleware = function () {
                return (req, res, next, _end) => {
                    let originalId = req.id,
                        newId = getUniqueId_1.getUniqueId();
                    (req.id = newId),
                        (res.id = newId),
                        next((done) => {
                            (req.id = originalId), (res.id = originalId), done();
                        });
                };
            };
        },
        18320: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var __createBinding =
                    (this && this.__createBinding) ||
                    (Object.create
                        ? function (o, m, k, k2) {
                              void 0 === k2 && (k2 = k),
                                  Object.defineProperty(o, k2, {
                                      enumerable: !0,
                                      get: function () {
                                          return m[k];
                                      },
                                  });
                          }
                        : function (o, m, k, k2) {
                              void 0 === k2 && (k2 = k), (o[k2] = m[k]);
                          }),
                __exportStar =
                    (this && this.__exportStar) ||
                    function (m, exports) {
                        for (var p in m) "default" === p || Object.prototype.hasOwnProperty.call(exports, p) || __createBinding(exports, m, p);
                    };
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                __exportStar(__webpack_require__(28104), exports),
                __exportStar(__webpack_require__(1152), exports),
                __exportStar(__webpack_require__(64980), exports),
                __exportStar(__webpack_require__(51084), exports),
                __exportStar(__webpack_require__(36739), exports),
                __exportStar(__webpack_require__(18175), exports);
        },
        18175: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.mergeMiddleware = void 0);
            let JsonRpcEngine_1 = __webpack_require__(36739);
            exports.mergeMiddleware = function (middlewareStack) {
                let engine = new JsonRpcEngine_1.JsonRpcEngine();
                return middlewareStack.forEach((middleware) => engine.push(middleware)), engine.asMiddleware();
            };
        },
        6417: function (module) {
            "use strict";
            let processFn = (fn, options, proxy, unwrapped) =>
                    function (...arguments_) {
                        let P = options.promiseModule;
                        return new P((resolve, reject) => {
                            options.multiArgs
                                ? arguments_.push((...result) => {
                                      options.errorFirst ? (result[0] ? reject(result) : (result.shift(), resolve(result))) : resolve(result);
                                  })
                                : options.errorFirst
                                ? arguments_.push((error, result) => {
                                      error ? reject(error) : resolve(result);
                                  })
                                : arguments_.push(resolve),
                                Reflect.apply(fn, this === proxy ? unwrapped : this, arguments_);
                        });
                    },
                filterCache = new WeakMap();
            module.exports = (input, options) => {
                options = { exclude: [/.+(?:Sync|Stream)$/], errorFirst: !0, promiseModule: Promise, ...options };
                let objectType = typeof input;
                if (!(null !== input && ("object" === objectType || "function" === objectType))) throw TypeError(`Expected \`input\` to be a \`Function\` or \`Object\`, got \`${null === input ? "null" : objectType}\``);
                let filter = (target, key) => {
                        let cached = filterCache.get(target);
                        if ((cached || ((cached = {}), filterCache.set(target, cached)), key in cached)) return cached[key];
                        let match = (pattern) => ("string" == typeof pattern || "symbol" == typeof key ? key === pattern : pattern.test(key)),
                            desc = Reflect.getOwnPropertyDescriptor(target, key),
                            writableOrConfigurableOwn = void 0 === desc || desc.writable || desc.configurable,
                            included = options.include ? options.include.some(match) : !options.exclude.some(match),
                            shouldFilter = included && writableOrConfigurableOwn;
                        return (cached[key] = shouldFilter), shouldFilter;
                    },
                    cache = new WeakMap(),
                    proxy = new Proxy(input, {
                        apply(target, thisArg, args) {
                            let cached = cache.get(target);
                            if (cached) return Reflect.apply(cached, thisArg, args);
                            let pified = options.excludeMain ? target : processFn(target, options, proxy, target);
                            return cache.set(target, pified), Reflect.apply(pified, thisArg, args);
                        },
                        get(target, key) {
                            let property = target[key];
                            if (!filter(target, key) || property === Function.prototype[key]) return property;
                            let cached = cache.get(property);
                            if (cached) return cached;
                            if ("function" == typeof property) {
                                let pified = processFn(property, options, proxy, target);
                                return cache.set(property, pified), pified;
                            }
                            return property;
                        },
                    });
                return proxy;
            };
        },
        68961: function (module, __unused_webpack_exports, __webpack_require__) {
            let SafeEventEmitter = __webpack_require__(19394).default,
                createScaffoldMiddleware = __webpack_require__(57688),
                { createAsyncMiddleware } = __webpack_require__(18320),
                createFilterMiddleware = __webpack_require__(98406),
                { unsafeRandomBytes, incrementHexInt } = __webpack_require__(98112),
                getBlocksForRange = __webpack_require__(40207);
            function normalizeBlock(block) {
                return {
                    hash: block.hash,
                    parentHash: block.parentHash,
                    sha3Uncles: block.sha3Uncles,
                    miner: block.miner,
                    stateRoot: block.stateRoot,
                    transactionsRoot: block.transactionsRoot,
                    receiptsRoot: block.receiptsRoot,
                    logsBloom: block.logsBloom,
                    difficulty: block.difficulty,
                    number: block.number,
                    gasLimit: block.gasLimit,
                    gasUsed: block.gasUsed,
                    nonce: block.nonce,
                    mixHash: block.mixHash,
                    timestamp: block.timestamp,
                    extraData: block.extraData,
                };
            }
            module.exports = function ({ blockTracker, provider }) {
                let subscriptions = {},
                    filterManager = createFilterMiddleware({ blockTracker, provider }),
                    isDestroyed = !1,
                    events = new SafeEventEmitter(),
                    middleware = createScaffoldMiddleware({ eth_subscribe: createAsyncMiddleware(subscribe), eth_unsubscribe: createAsyncMiddleware(unsubscribe) });
                return (
                    (middleware.destroy = function () {
                        for (let id in (events.removeAllListeners(), subscriptions)) subscriptions[id].destroy(), delete subscriptions[id];
                        isDestroyed = !0;
                    }),
                    { events, middleware }
                );
                async function subscribe(req, res) {
                    let sub;
                    if (isDestroyed) throw Error("SubscriptionManager - attempting to use after destroying");
                    let subscriptionType = req.params[0],
                        subId = unsafeRandomBytes(16);
                    switch (subscriptionType) {
                        case "newHeads":
                            sub = (function ({ subId }) {
                                let sub = {
                                    type: subscriptionType,
                                    async destroy() {
                                        blockTracker.removeListener("sync", sub.update);
                                    },
                                    async update({ oldBlock, newBlock }) {
                                        let fromBlock = incrementHexInt(oldBlock),
                                            rawBlocks = await getBlocksForRange({ provider, fromBlock, toBlock: newBlock }),
                                            results = rawBlocks.map(normalizeBlock);
                                        results.forEach((value) => {
                                            _emitSubscriptionResult(subId, value);
                                        });
                                    },
                                };
                                return blockTracker.on("sync", sub.update), sub;
                            })({ subId });
                            break;
                        case "logs":
                            let filterParams = req.params[1],
                                filter = await filterManager.newLogFilter(filterParams);
                            sub = (function ({ subId, filter }) {
                                return filter.on("update", (result) => _emitSubscriptionResult(subId, result)), { type: subscriptionType, destroy: async () => await filterManager.uninstallFilter(filter.idHex) };
                            })({ subId, filter });
                            break;
                        default:
                            throw Error(`SubscriptionManager - unsupported subscription type "${subscriptionType}"`);
                    }
                    (subscriptions[subId] = sub), (res.result = subId);
                }
                async function unsubscribe(req, res) {
                    if (isDestroyed) throw Error("SubscriptionManager - attempting to use after destroying");
                    let id = req.params[0],
                        subscription = subscriptions[id];
                    if (!subscription) {
                        res.result = !1;
                        return;
                    }
                    delete subscriptions[id], await subscription.destroy(), (res.result = !0);
                }
                function _emitSubscriptionResult(filterIdHex, value) {
                    events.emit("notification", { jsonrpc: "2.0", method: "eth_subscription", params: { subscription: filterIdHex, result: value } });
                }
            };
        },
        25792: function (module, __unused_webpack_exports, __webpack_require__) {
            let BaseFilter = __webpack_require__(76622),
                getBlocksForRange = __webpack_require__(40207),
                { incrementHexInt } = __webpack_require__(98112);
            module.exports = class extends BaseFilter {
                constructor({ provider }) {
                    super(), (this.type = "tx"), (this.provider = provider);
                }
                async update({ oldBlock }) {
                    let fromBlock = incrementHexInt(oldBlock),
                        blocks = await getBlocksForRange({ provider: this.provider, fromBlock, toBlock: oldBlock }),
                        blockTxHashes = [];
                    for (let block of blocks) blockTxHashes.push(...block.transactions);
                    this.addResults(blockTxHashes);
                }
            };
        },
        37870: function (module, __unused_webpack_exports, __webpack_require__) {
            let cacheUtils = __webpack_require__(91625),
                createAsyncMiddleware = __webpack_require__(21497),
                emptyValues = [void 0, null, "<nil>"];
            module.exports = function (opts = {}) {
                let { blockTracker } = opts;
                if (!blockTracker) throw Error("createBlockCacheMiddleware - No BlockTracker specified");
                let blockCache = new BlockCacheStrategy(),
                    strategies = { perma: blockCache, block: blockCache, fork: blockCache };
                return createAsyncMiddleware(async (req, res, next) => {
                    let requestedBlockNumber;
                    if (req.skipCache) return next();
                    let type = cacheUtils.cacheTypeForPayload(req),
                        strategy = strategies[type];
                    if (!strategy || !strategy.canCacheRequest(req)) return next();
                    let blockTag = cacheUtils.blockTagForPayload(req);
                    if ((blockTag || (blockTag = "latest"), "earliest" === blockTag)) requestedBlockNumber = "0x00";
                    else if ("latest" === blockTag) {
                        let latestBlockNumber = await blockTracker.getLatestBlock();
                        blockCache.clearBefore(latestBlockNumber), (requestedBlockNumber = latestBlockNumber);
                    } else requestedBlockNumber = blockTag;
                    let cacheResult = await strategy.get(req, requestedBlockNumber);
                    void 0 === cacheResult ? (await next(), await strategy.set(req, requestedBlockNumber, res.result)) : (res.result = cacheResult);
                });
            };
            class BlockCacheStrategy {
                constructor() {
                    this.cache = {};
                }
                getBlockCacheForPayload(payload, blockNumberHex) {
                    let blockNumber = Number.parseInt(blockNumberHex, 16),
                        blockCache = this.cache[blockNumber];
                    if (!blockCache) {
                        let newCache = {};
                        (this.cache[blockNumber] = newCache), (blockCache = newCache);
                    }
                    return blockCache;
                }
                async get(payload, requestedBlockNumber) {
                    let blockCache = this.getBlockCacheForPayload(payload, requestedBlockNumber);
                    if (!blockCache) return;
                    let identifier = cacheUtils.cacheIdentifierForPayload(payload, !0),
                        cached = blockCache[identifier];
                    return cached;
                }
                async set(payload, requestedBlockNumber, result) {
                    let canCache = this.canCacheResult(payload, result);
                    if (!canCache) return;
                    let blockCache = this.getBlockCacheForPayload(payload, requestedBlockNumber),
                        identifier = cacheUtils.cacheIdentifierForPayload(payload, !0);
                    blockCache[identifier] = result;
                }
                canCacheRequest(payload) {
                    if (!cacheUtils.canCache(payload)) return !1;
                    let blockTag = cacheUtils.blockTagForPayload(payload);
                    return "pending" !== blockTag;
                }
                canCacheResult(payload, result) {
                    if (!emptyValues.includes(result))
                        return (
                            !["eth_getTransactionByHash", "eth_getTransactionReceipt"].includes(payload.method) || (!!result && !!result.blockHash && "0x0000000000000000000000000000000000000000000000000000000000000000" !== result.blockHash)
                        );
                }
                clearBefore(oldBlockHex) {
                    let self1 = this,
                        oldBlockNumber = Number.parseInt(oldBlockHex, 16);
                    Object.keys(self1.cache)
                        .map(Number)
                        .filter((num) => num < oldBlockNumber)
                        .forEach((num) => delete self1.cache[num]);
                }
            }
        },
        91625: function (module, __unused_webpack_exports, __webpack_require__) {
            let stringify = __webpack_require__(67266);
            function canCache(payload) {
                return "never" !== cacheTypeForPayload(payload);
            }
            function paramsWithoutBlockTag(payload) {
                let index = blockTagParamIndex(payload);
                return index >= payload.params.length ? payload.params : "eth_getBlockByNumber" === payload.method ? payload.params.slice(1) : payload.params.slice(0, index);
            }
            function blockTagParamIndex(payload) {
                switch (payload.method) {
                    case "eth_getStorageAt":
                        return 2;
                    case "eth_getBalance":
                    case "eth_getCode":
                    case "eth_getTransactionCount":
                    case "eth_call":
                        return 1;
                    case "eth_getBlockByNumber":
                        return 0;
                    default:
                        return;
                }
            }
            function cacheTypeForPayload(payload) {
                switch (payload.method) {
                    case "web3_clientVersion":
                    case "web3_sha3":
                    case "eth_protocolVersion":
                    case "eth_getBlockTransactionCountByHash":
                    case "eth_getUncleCountByBlockHash":
                    case "eth_getCode":
                    case "eth_getBlockByHash":
                    case "eth_getTransactionByHash":
                    case "eth_getTransactionByBlockHashAndIndex":
                    case "eth_getTransactionReceipt":
                    case "eth_getUncleByBlockHashAndIndex":
                    case "eth_getCompilers":
                    case "eth_compileLLL":
                    case "eth_compileSolidity":
                    case "eth_compileSerpent":
                    case "shh_version":
                    case "test_permaCache":
                        return "perma";
                    case "eth_getBlockByNumber":
                    case "eth_getBlockTransactionCountByNumber":
                    case "eth_getUncleCountByBlockNumber":
                    case "eth_getTransactionByBlockNumberAndIndex":
                    case "eth_getUncleByBlockNumberAndIndex":
                    case "test_forkCache":
                        return "fork";
                    case "eth_gasPrice":
                    case "eth_blockNumber":
                    case "eth_getBalance":
                    case "eth_getStorageAt":
                    case "eth_getTransactionCount":
                    case "eth_call":
                    case "eth_estimateGas":
                    case "eth_getFilterLogs":
                    case "eth_getLogs":
                    case "test_blockCache":
                        return "block";
                    case "net_version":
                    case "net_peerCount":
                    case "net_listening":
                    case "eth_syncing":
                    case "eth_sign":
                    case "eth_coinbase":
                    case "eth_mining":
                    case "eth_hashrate":
                    case "eth_accounts":
                    case "eth_sendTransaction":
                    case "eth_sendRawTransaction":
                    case "eth_newFilter":
                    case "eth_newBlockFilter":
                    case "eth_newPendingTransactionFilter":
                    case "eth_uninstallFilter":
                    case "eth_getFilterChanges":
                    case "eth_getWork":
                    case "eth_submitWork":
                    case "eth_submitHashrate":
                    case "db_putString":
                    case "db_getString":
                    case "db_putHex":
                    case "db_getHex":
                    case "shh_post":
                    case "shh_newIdentity":
                    case "shh_hasIdentity":
                    case "shh_newGroup":
                    case "shh_addToGroup":
                    case "shh_newFilter":
                    case "shh_uninstallFilter":
                    case "shh_getFilterChanges":
                    case "shh_getMessages":
                    case "test_neverCache":
                        return "never";
                }
            }
            module.exports = {
                cacheIdentifierForPayload: function (payload, skipBlockRef) {
                    let simpleParams = skipBlockRef ? paramsWithoutBlockTag(payload) : payload.params;
                    return canCache(payload) ? payload.method + ":" + stringify(simpleParams) : null;
                },
                canCache: canCache,
                blockTagForPayload: function (payload) {
                    let index = blockTagParamIndex(payload);
                    return index >= payload.params.length ? null : payload.params[index];
                },
                paramsWithoutBlockTag: paramsWithoutBlockTag,
                blockTagParamIndex: blockTagParamIndex,
                cacheTypeForPayload: cacheTypeForPayload,
            };
        },
        57688: function (module, __unused_webpack_exports, __webpack_require__) {
            module.exports = __webpack_require__(52121);
        },
        75682: function (module, __unused_webpack_exports, __webpack_require__) {
            let extend = __webpack_require__(47529),
                createRandomId = __webpack_require__(23420)();
            function EthQuery(provider) {
                let self1 = this;
                self1.currentProvider = provider;
            }
            function generateFnFor(methodName) {
                return function () {
                    var args = [].slice.call(arguments),
                        cb = args.pop();
                    this.sendAsync({ method: methodName, params: args }, cb);
                };
            }
            function generateFnWithDefaultBlockFor(argCount, methodName) {
                return function () {
                    var args = [].slice.call(arguments),
                        cb = args.pop();
                    args.length < argCount && args.push("latest"), this.sendAsync({ method: methodName, params: args }, cb);
                };
            }
            (module.exports = EthQuery),
                (EthQuery.prototype.getBalance = generateFnWithDefaultBlockFor(2, "eth_getBalance")),
                (EthQuery.prototype.getCode = generateFnWithDefaultBlockFor(2, "eth_getCode")),
                (EthQuery.prototype.getTransactionCount = generateFnWithDefaultBlockFor(2, "eth_getTransactionCount")),
                (EthQuery.prototype.getStorageAt = generateFnWithDefaultBlockFor(3, "eth_getStorageAt")),
                (EthQuery.prototype.call = generateFnWithDefaultBlockFor(2, "eth_call")),
                (EthQuery.prototype.protocolVersion = generateFnFor("eth_protocolVersion")),
                (EthQuery.prototype.syncing = generateFnFor("eth_syncing")),
                (EthQuery.prototype.coinbase = generateFnFor("eth_coinbase")),
                (EthQuery.prototype.mining = generateFnFor("eth_mining")),
                (EthQuery.prototype.hashrate = generateFnFor("eth_hashrate")),
                (EthQuery.prototype.gasPrice = generateFnFor("eth_gasPrice")),
                (EthQuery.prototype.accounts = generateFnFor("eth_accounts")),
                (EthQuery.prototype.blockNumber = generateFnFor("eth_blockNumber")),
                (EthQuery.prototype.getBlockTransactionCountByHash = generateFnFor("eth_getBlockTransactionCountByHash")),
                (EthQuery.prototype.getBlockTransactionCountByNumber = generateFnFor("eth_getBlockTransactionCountByNumber")),
                (EthQuery.prototype.getUncleCountByBlockHash = generateFnFor("eth_getUncleCountByBlockHash")),
                (EthQuery.prototype.getUncleCountByBlockNumber = generateFnFor("eth_getUncleCountByBlockNumber")),
                (EthQuery.prototype.sign = generateFnFor("eth_sign")),
                (EthQuery.prototype.sendTransaction = generateFnFor("eth_sendTransaction")),
                (EthQuery.prototype.sendRawTransaction = generateFnFor("eth_sendRawTransaction")),
                (EthQuery.prototype.estimateGas = generateFnFor("eth_estimateGas")),
                (EthQuery.prototype.getBlockByHash = generateFnFor("eth_getBlockByHash")),
                (EthQuery.prototype.getBlockByNumber = generateFnFor("eth_getBlockByNumber")),
                (EthQuery.prototype.getTransactionByHash = generateFnFor("eth_getTransactionByHash")),
                (EthQuery.prototype.getTransactionByBlockHashAndIndex = generateFnFor("eth_getTransactionByBlockHashAndIndex")),
                (EthQuery.prototype.getTransactionByBlockNumberAndIndex = generateFnFor("eth_getTransactionByBlockNumberAndIndex")),
                (EthQuery.prototype.getTransactionReceipt = generateFnFor("eth_getTransactionReceipt")),
                (EthQuery.prototype.getUncleByBlockHashAndIndex = generateFnFor("eth_getUncleByBlockHashAndIndex")),
                (EthQuery.prototype.getUncleByBlockNumberAndIndex = generateFnFor("eth_getUncleByBlockNumberAndIndex")),
                (EthQuery.prototype.getCompilers = generateFnFor("eth_getCompilers")),
                (EthQuery.prototype.compileLLL = generateFnFor("eth_compileLLL")),
                (EthQuery.prototype.compileSolidity = generateFnFor("eth_compileSolidity")),
                (EthQuery.prototype.compileSerpent = generateFnFor("eth_compileSerpent")),
                (EthQuery.prototype.newFilter = generateFnFor("eth_newFilter")),
                (EthQuery.prototype.newBlockFilter = generateFnFor("eth_newBlockFilter")),
                (EthQuery.prototype.newPendingTransactionFilter = generateFnFor("eth_newPendingTransactionFilter")),
                (EthQuery.prototype.uninstallFilter = generateFnFor("eth_uninstallFilter")),
                (EthQuery.prototype.getFilterChanges = generateFnFor("eth_getFilterChanges")),
                (EthQuery.prototype.getFilterLogs = generateFnFor("eth_getFilterLogs")),
                (EthQuery.prototype.getLogs = generateFnFor("eth_getLogs")),
                (EthQuery.prototype.getWork = generateFnFor("eth_getWork")),
                (EthQuery.prototype.submitWork = generateFnFor("eth_submitWork")),
                (EthQuery.prototype.submitHashrate = generateFnFor("eth_submitHashrate")),
                (EthQuery.prototype.sendAsync = function (opts, cb) {
                    this.currentProvider.sendAsync(extend({ id: createRandomId(), jsonrpc: "2.0", params: [] }, opts), function (err, response) {
                        if ((!err && response.error && (err = Error("EthQuery - RPC Error - " + response.error.message)), err)) return cb(err);
                        cb(null, response.result);
                    });
                });
        },
        2843: function (module, __unused_webpack_exports, __webpack_require__) {
            let ethUtil = __webpack_require__(21964),
                ethAbi = __webpack_require__(68142);
            function typedSignatureHash(typedData) {
                let error = Error("Expect argument to be non-empty array");
                if ("object" != typeof typedData || !typedData.length) throw error;
                let data = typedData.map(function (e) {
                        return "bytes" === e.type ? ethUtil.toBuffer(e.value) : e.value;
                    }),
                    types = typedData.map(function (e) {
                        return e.type;
                    }),
                    schema = typedData.map(function (e) {
                        if (!e.name) throw error;
                        return e.type + " " + e.name;
                    });
                return ethAbi.soliditySHA3(["bytes32", "bytes32"], [ethAbi.soliditySHA3(Array(typedData.length).fill("string"), schema), ethAbi.soliditySHA3(types, data)]);
            }
            function recoverPublicKey(hash, sig) {
                let signature = ethUtil.toBuffer(sig),
                    sigParams = ethUtil.fromRpcSig(signature);
                return ethUtil.ecrecover(hash, sigParams.v, sigParams.r, sigParams.s);
            }
            function getPublicKeyFor(msgParams) {
                let message = ethUtil.toBuffer(msgParams.data),
                    msgHash = ethUtil.hashPersonalMessage(message);
                return recoverPublicKey(msgHash, msgParams.sig);
            }
            function padWithZeroes(number, length) {
                for (var myString = "" + number; myString.length < length; ) myString = "0" + myString;
                return myString;
            }
            module.exports = {
                concatSig: function (v, r, s) {
                    let rSig = ethUtil.fromSigned(r),
                        sSig = ethUtil.fromSigned(s),
                        vSig = ethUtil.bufferToInt(v),
                        rStr = padWithZeroes(ethUtil.toUnsigned(rSig).toString("hex"), 64),
                        sStr = padWithZeroes(ethUtil.toUnsigned(sSig).toString("hex"), 64),
                        vStr = ethUtil.stripHexPrefix(ethUtil.intToHex(vSig));
                    return ethUtil.addHexPrefix(rStr.concat(sStr, vStr)).toString("hex");
                },
                normalize: function (input) {
                    if (input) {
                        if ("number" == typeof input) {
                            let buffer = ethUtil.toBuffer(input);
                            input = ethUtil.bufferToHex(buffer);
                        }
                        if ("string" != typeof input) {
                            var msg = "eth-sig-util.normalize() requires hex string or integer input.";
                            throw Error((msg += " received " + typeof input + ": " + input));
                        }
                        return ethUtil.addHexPrefix(input.toLowerCase());
                    }
                },
                personalSign: function (privateKey, msgParams) {
                    var message = ethUtil.toBuffer(msgParams.data),
                        msgHash = ethUtil.hashPersonalMessage(message),
                        sig = ethUtil.ecsign(msgHash, privateKey);
                    return ethUtil.bufferToHex(this.concatSig(sig.v, sig.r, sig.s));
                },
                recoverPersonalSignature: function (msgParams) {
                    let publicKey = getPublicKeyFor(msgParams),
                        sender = ethUtil.publicToAddress(publicKey),
                        senderHex = ethUtil.bufferToHex(sender);
                    return senderHex;
                },
                extractPublicKey: function (msgParams) {
                    let publicKey = getPublicKeyFor(msgParams);
                    return "0x" + publicKey.toString("hex");
                },
                typedSignatureHash: function (typedData) {
                    let hashBuffer = typedSignatureHash(typedData);
                    return ethUtil.bufferToHex(hashBuffer);
                },
                signTypedData: function (privateKey, msgParams) {
                    let msgHash = typedSignatureHash(msgParams.data),
                        sig = ethUtil.ecsign(msgHash, privateKey);
                    return ethUtil.bufferToHex(this.concatSig(sig.v, sig.r, sig.s));
                },
                recoverTypedSignature: function (msgParams) {
                    let msgHash = typedSignatureHash(msgParams.data),
                        publicKey = recoverPublicKey(msgHash, msgParams.sig),
                        sender = ethUtil.publicToAddress(publicKey);
                    return ethUtil.bufferToHex(sender);
                },
            };
        },
        75443: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var Buffer = __webpack_require__(48764).Buffer;
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.createHashFunction = function (hashConstructor) {
                    return function (msg) {
                        var hash = hashConstructor();
                        return hash.update(msg), Buffer.from(hash.digest());
                    };
                });
        },
        82192: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 });
            var hash_utils_1 = __webpack_require__(75443),
                createKeccakHash = __webpack_require__(95811);
            (exports.keccak224 = hash_utils_1.createHashFunction(function () {
                return createKeccakHash("keccak224");
            })),
                (exports.keccak256 = hash_utils_1.createHashFunction(function () {
                    return createKeccakHash("keccak256");
                })),
                (exports.keccak384 = hash_utils_1.createHashFunction(function () {
                    return createKeccakHash("keccak384");
                })),
                (exports.keccak512 = hash_utils_1.createHashFunction(function () {
                    return createKeccakHash("keccak512");
                }));
        },
        90472: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 });
            var randombytes = __webpack_require__(61798);
            (exports.getRandomBytes = function (bytes) {
                return new Promise(function (resolve, reject) {
                    randombytes(bytes, function (err, resp) {
                        if (err) {
                            reject(err);
                            return;
                        }
                        resolve(resp);
                    });
                });
            }),
                (exports.getRandomBytesSync = function (bytes) {
                    return randombytes(bytes);
                });
        },
        95053: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var __awaiter =
                    (this && this.__awaiter) ||
                    function (thisArg, _arguments, P, generator) {
                        return new (P || (P = Promise))(function (resolve, reject) {
                            function fulfilled(value) {
                                try {
                                    step(generator.next(value));
                                } catch (e) {
                                    reject(e);
                                }
                            }
                            function rejected(value) {
                                try {
                                    step(generator.throw(value));
                                } catch (e) {
                                    reject(e);
                                }
                            }
                            function step(result) {
                                var value;
                                result.done
                                    ? resolve(result.value)
                                    : ((value = result.value) instanceof P
                                          ? value
                                          : new P(function (resolve) {
                                                resolve(value);
                                            })
                                      ).then(fulfilled, rejected);
                            }
                            step((generator = generator.apply(thisArg, _arguments || [])).next());
                        });
                    },
                __generator =
                    (this && this.__generator) ||
                    function (thisArg, body) {
                        var f,
                            y,
                            t,
                            g,
                            _ = {
                                label: 0,
                                sent: function () {
                                    if (1 & t[0]) throw t[1];
                                    return t[1];
                                },
                                trys: [],
                                ops: [],
                            };
                        return (
                            (g = { next: verb(0), throw: verb(1), return: verb(2) }),
                            "function" == typeof Symbol &&
                                (g[Symbol.iterator] = function () {
                                    return this;
                                }),
                            g
                        );
                        function verb(n) {
                            return function (v) {
                                return (function (op) {
                                    if (f) throw TypeError("Generator is already executing.");
                                    for (; _; )
                                        try {
                                            if (((f = 1), y && (t = 2 & op[0] ? y.return : op[0] ? y.throw || ((t = y.return) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)) return t;
                                            switch (((y = 0), t && (op = [2 & op[0], t.value]), op[0])) {
                                                case 0:
                                                case 1:
                                                    t = op;
                                                    break;
                                                case 4:
                                                    return _.label++, { value: op[1], done: !1 };
                                                case 5:
                                                    _.label++, (y = op[1]), (op = [0]);
                                                    continue;
                                                case 7:
                                                    (op = _.ops.pop()), _.trys.pop();
                                                    continue;
                                                default:
                                                    if (!(t = (t = _.trys).length > 0 && t[t.length - 1]) && (6 === op[0] || 2 === op[0])) {
                                                        _ = 0;
                                                        continue;
                                                    }
                                                    if (3 === op[0] && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                                        _.label = op[1];
                                                        break;
                                                    }
                                                    if (6 === op[0] && _.label < t[1]) {
                                                        (_.label = t[1]), (t = op);
                                                        break;
                                                    }
                                                    if (t && _.label < t[2]) {
                                                        (_.label = t[2]), _.ops.push(op);
                                                        break;
                                                    }
                                                    t[2] && _.ops.pop(), _.trys.pop();
                                                    continue;
                                            }
                                            op = body.call(thisArg, _);
                                        } catch (e) {
                                            (op = [6, e]), (y = 0);
                                        } finally {
                                            f = t = 0;
                                        }
                                    if (5 & op[0]) throw op[1];
                                    return { value: op[0] ? op[1] : void 0, done: !0 };
                                })([n, v]);
                            };
                        }
                    };
            Object.defineProperty(exports, "__esModule", { value: !0 });
            var secp256k1_1 = __webpack_require__(17221),
                random_1 = __webpack_require__(90472);
            (exports.createPrivateKey = function () {
                return __awaiter(this, void 0, void 0, function () {
                    var pk;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                return [4, random_1.getRandomBytes(32)];
                            case 1:
                                if (((pk = _a.sent()), secp256k1_1.privateKeyVerify(pk))) return [2, pk];
                                return [3, 0];
                            case 2:
                                return [2];
                        }
                    });
                });
            }),
                (exports.createPrivateKeySync = function () {
                    for (;;) {
                        var pk = random_1.getRandomBytesSync(32);
                        if (secp256k1_1.privateKeyVerify(pk)) return pk;
                    }
                }),
                (function (m) {
                    for (var p in m) exports.hasOwnProperty(p) || (exports[p] = m[p]);
                })(__webpack_require__(17221));
        },
        68142: function (module, __unused_webpack_exports, __webpack_require__) {
            module.exports = __webpack_require__(75437);
        },
        75437: function (module, __unused_webpack_exports, __webpack_require__) {
            var Buffer = __webpack_require__(48764).Buffer;
            let utils = __webpack_require__(86589),
                BN = __webpack_require__(13550);
            var ABI = function () {};
            function elementaryName(name) {
                if (name.startsWith("int[")) return "int256" + name.slice(3);
                if ("int" === name) return "int256";
                if (name.startsWith("uint[")) return "uint256" + name.slice(4);
                if ("uint" === name) return "uint256";
                if (name.startsWith("fixed[")) return "fixed128x128" + name.slice(5);
                if ("fixed" === name) return "fixed128x128";
                if (name.startsWith("ufixed[")) return "ufixed128x128" + name.slice(6);
                else if ("ufixed" === name) return "ufixed128x128";
                return name;
            }
            function parseTypeN(type) {
                return parseInt(/^\D+(\d+)$/.exec(type)[1], 10);
            }
            function parseTypeNxM(type) {
                var tmp = /^\D+(\d+)x(\d+)$/.exec(type);
                return [parseInt(tmp[1], 10), parseInt(tmp[2], 10)];
            }
            function parseTypeArray(type) {
                var tmp = type.match(/(.*)\[(.*?)\]$/);
                return tmp ? ("" === tmp[2] ? "dynamic" : parseInt(tmp[2], 10)) : null;
            }
            function parseNumber(arg) {
                var type = typeof arg;
                if ("string" === type) return utils.isHexPrefixed(arg) ? new BN(utils.stripHexPrefix(arg), 16) : new BN(arg, 10);
                if ("number" === type) return new BN(arg);
                if (arg.toArray) return arg;
                throw Error("Argument is not a number");
            }
            function parseSignature(sig) {
                var tmp = /^(\w+)\((.*)\)$/.exec(sig);
                if (3 !== tmp.length) throw Error("Invalid method signature");
                var args = /^(.+)\):\((.+)$/.exec(tmp[2]);
                if (null !== args && 3 === args.length) return { method: tmp[1], args: args[1].split(","), retargs: args[2].split(",") };
                var params = tmp[2].split(",");
                return 1 === params.length && "" === params[0] && (params = []), { method: tmp[1], args: params };
            }
            function encodeSingle(type, arg) {
                var size, num, ret, i;
                if ("address" === type) return encodeSingle("uint160", parseNumber(arg));
                if ("bool" === type) return encodeSingle("uint8", arg ? 1 : 0);
                if ("string" === type) return encodeSingle("bytes", Buffer.from(arg, "utf8"));
                if (isArray(type)) {
                    if (void 0 === arg.length) throw Error("Not an array?");
                    if ("dynamic" !== (size = parseTypeArray(type)) && 0 !== size && arg.length > size) throw Error("Elements exceed array size: " + size);
                    for (i in ((ret = []), (type = type.slice(0, type.lastIndexOf("["))), "string" == typeof arg && (arg = JSON.parse(arg)), arg)) ret.push(encodeSingle(type, arg[i]));
                    if ("dynamic" === size) {
                        var length = encodeSingle("uint256", arg.length);
                        ret.unshift(length);
                    }
                    return Buffer.concat(ret);
                }
                if ("bytes" === type) return (arg = Buffer.from(arg)), (ret = Buffer.concat([encodeSingle("uint256", arg.length), arg])), arg.length % 32 != 0 && (ret = Buffer.concat([ret, utils.zeros(32 - (arg.length % 32))])), ret;
                if (type.startsWith("bytes")) {
                    if ((size = parseTypeN(type)) < 1 || size > 32) throw Error("Invalid bytes<N> width: " + size);
                    return utils.setLengthRight(arg, 32);
                }
                if (type.startsWith("uint")) {
                    if ((size = parseTypeN(type)) % 8 || size < 8 || size > 256) throw Error("Invalid uint<N> width: " + size);
                    if ((num = parseNumber(arg)).bitLength() > size) throw Error("Supplied uint exceeds width: " + size + " vs " + num.bitLength());
                    if (num < 0) throw Error("Supplied uint is negative");
                    return num.toArrayLike(Buffer, "be", 32);
                } else if (type.startsWith("int")) {
                    if ((size = parseTypeN(type)) % 8 || size < 8 || size > 256) throw Error("Invalid int<N> width: " + size);
                    if ((num = parseNumber(arg)).bitLength() > size) throw Error("Supplied int exceeds width: " + size + " vs " + num.bitLength());
                    return num.toTwos(256).toArrayLike(Buffer, "be", 32);
                } else if (type.startsWith("ufixed")) {
                    if (((size = parseTypeNxM(type)), (num = parseNumber(arg)) < 0)) throw Error("Supplied ufixed is negative");
                    return encodeSingle("uint256", num.mul(new BN(2).pow(new BN(size[1]))));
                } else if (type.startsWith("fixed")) return (size = parseTypeNxM(type)), encodeSingle("int256", parseNumber(arg).mul(new BN(2).pow(new BN(size[1]))));
                throw Error("Unsupported or invalid type: " + type);
            }
            function parseType(type) {
                if (isArray(type)) {
                    size = parseTypeArray(type);
                    var size,
                        ret,
                        rawType,
                        subArray = type.slice(0, type.lastIndexOf("["));
                    return (subArray = parseType(subArray)), (ret = { isArray: !0, name: type, size: size, memoryUsage: "dynamic" === size ? 32 : subArray.memoryUsage * size, subArray: subArray });
                }
                switch (type) {
                    case "address":
                        rawType = "uint160";
                        break;
                    case "bool":
                        rawType = "uint8";
                        break;
                    case "string":
                        rawType = "bytes";
                }
                if (
                    ((ret = { rawType: rawType, name: type, memoryUsage: 32 }),
                    (type.startsWith("bytes") && "bytes" !== type) || type.startsWith("uint") || type.startsWith("int")
                        ? (ret.size = parseTypeN(type))
                        : (type.startsWith("ufixed") || type.startsWith("fixed")) && (ret.size = parseTypeNxM(type)),
                    type.startsWith("bytes") && "bytes" !== type && (ret.size < 1 || ret.size > 32))
                )
                    throw Error("Invalid bytes<N> width: " + ret.size);
                if ((type.startsWith("uint") || type.startsWith("int")) && (ret.size % 8 || ret.size < 8 || ret.size > 256)) throw Error("Invalid int/uint<N> width: " + ret.size);
                return ret;
            }
            function isArray(type) {
                return type.lastIndexOf("]") === type.length - 1;
            }
            function stringify(type, value) {
                return type.startsWith("address") || type.startsWith("bytes") ? "0x" + value.toString("hex") : value.toString();
            }
            (ABI.eventID = function (name, types) {
                var sig = name + "(" + types.map(elementaryName).join(",") + ")";
                return utils.keccak256(Buffer.from(sig));
            }),
                (ABI.methodID = function (name, types) {
                    return ABI.eventID(name, types).slice(0, 4);
                }),
                (ABI.rawEncode = function (types, values) {
                    var output = [],
                        data = [],
                        headLength = 0;
                    types.forEach(function (type) {
                        if (isArray(type)) {
                            var size = parseTypeArray(type);
                            "dynamic" !== size ? (headLength += 32 * size) : (headLength += 32);
                        } else headLength += 32;
                    });
                    for (var i = 0; i < types.length; i++) {
                        var type = elementaryName(types[i]),
                            cur = encodeSingle(type, values[i]);
                        "string" === type || "bytes" === type || "dynamic" === parseTypeArray(type) ? (output.push(encodeSingle("uint256", headLength)), data.push(cur), (headLength += cur.length)) : output.push(cur);
                    }
                    return Buffer.concat(output.concat(data));
                }),
                (ABI.rawDecode = function (types, data) {
                    var ret = [];
                    data = Buffer.from(data);
                    for (var offset = 0, i = 0; i < types.length; i++) {
                        var parsed = parseType(elementaryName(types[i]), data, offset),
                            decoded = (function decodeSingle(parsedType, data, offset) {
                                if (("string" == typeof parsedType && (parsedType = parseType(parsedType)), "address" === parsedType.name)) return decodeSingle(parsedType.rawType, data, offset).toArrayLike(Buffer, "be", 20).toString("hex");
                                if ("bool" === parsedType.name) return decodeSingle(parsedType.rawType, data, offset).toString() === new BN(1).toString();
                                if ("string" === parsedType.name) {
                                    var size,
                                        num,
                                        ret,
                                        i,
                                        bytes = decodeSingle(parsedType.rawType, data, offset);
                                    return Buffer.from(bytes, "utf8").toString();
                                }
                                if (parsedType.isArray) {
                                    for (
                                        ret = [],
                                            size = parsedType.size,
                                            "dynamic" === parsedType.size && ((offset = decodeSingle("uint256", data, offset).toNumber()), (size = decodeSingle("uint256", data, offset).toNumber()), (offset += 32)),
                                            i = 0;
                                        i < size;
                                        i++
                                    ) {
                                        var decoded = decodeSingle(parsedType.subArray, data, offset);
                                        ret.push(decoded), (offset += parsedType.subArray.memoryUsage);
                                    }
                                    return ret;
                                }
                                if ("bytes" === parsedType.name) return (offset = decodeSingle("uint256", data, offset).toNumber()), (size = decodeSingle("uint256", data, offset).toNumber()), data.slice(offset + 32, offset + 32 + size);
                                if (parsedType.name.startsWith("bytes")) return data.slice(offset, offset + parsedType.size);
                                if (parsedType.name.startsWith("uint")) {
                                    if ((num = new BN(data.slice(offset, offset + 32), 16, "be")).bitLength() > parsedType.size) throw Error("Decoded int exceeds width: " + parsedType.size + " vs " + num.bitLength());
                                    return num;
                                } else if (parsedType.name.startsWith("int")) {
                                    if ((num = new BN(data.slice(offset, offset + 32), 16, "be").fromTwos(256)).bitLength() > parsedType.size) throw Error("Decoded uint exceeds width: " + parsedType.size + " vs " + num.bitLength());
                                    return num;
                                } else if (parsedType.name.startsWith("ufixed")) {
                                    if (((size = new BN(2).pow(new BN(parsedType.size[1]))), !(num = decodeSingle("uint256", data, offset)).mod(size).isZero())) throw Error("Decimals not supported yet");
                                    return num.div(size);
                                } else if (parsedType.name.startsWith("fixed")) {
                                    if (((size = new BN(2).pow(new BN(parsedType.size[1]))), !(num = decodeSingle("int256", data, offset)).mod(size).isZero())) throw Error("Decimals not supported yet");
                                    return num.div(size);
                                }
                                throw Error("Unsupported or invalid type: " + parsedType.name);
                            })(parsed, data, offset);
                        (offset += parsed.memoryUsage), ret.push(decoded);
                    }
                    return ret;
                }),
                (ABI.simpleEncode = function (method) {
                    var args = Array.prototype.slice.call(arguments).slice(1),
                        sig = parseSignature(method);
                    if (args.length !== sig.args.length) throw Error("Argument count mismatch");
                    return Buffer.concat([ABI.methodID(sig.method, sig.args), ABI.rawEncode(sig.args, args)]);
                }),
                (ABI.simpleDecode = function (method, data) {
                    var sig = parseSignature(method);
                    if (!sig.retargs) throw Error("No return values in method");
                    return ABI.rawDecode(sig.retargs, data);
                }),
                (ABI.stringify = function (types, values) {
                    var ret = [];
                    for (var i in types) {
                        var type = types[i],
                            value = values[i];
                        (value = /^[^\[]+\[.*\]$/.test(type)
                            ? value
                                  .map(function (item) {
                                      return stringify(type, item);
                                  })
                                  .join(", ")
                            : stringify(type, value)),
                            ret.push(value);
                    }
                    return ret;
                }),
                (ABI.solidityHexValue = function (type, value, bitsize) {
                    var size, num;
                    if (isArray(type)) {
                        var subType = type.replace(/\[.*?\]/, "");
                        if (!isArray(subType)) {
                            var arraySize = parseTypeArray(type);
                            if ("dynamic" !== arraySize && 0 !== arraySize && value.length > arraySize) throw Error("Elements exceed array size: " + arraySize);
                        }
                        var arrayValues = value.map(function (v) {
                            return ABI.solidityHexValue(subType, v, 256);
                        });
                        return Buffer.concat(arrayValues);
                    }
                    if ("bytes" === type) return value;
                    if ("string" === type) return Buffer.from(value, "utf8");
                    if ("bool" === type) {
                        var padding = Array((bitsize = bitsize || 8) / 4).join("0");
                        return Buffer.from(value ? padding + "1" : padding + "0", "hex");
                    }
                    if ("address" === type) {
                        var bytesize = 20;
                        return bitsize && (bytesize = bitsize / 8), utils.setLengthLeft(value, bytesize);
                    }
                    if (type.startsWith("bytes")) {
                        if ((size = parseTypeN(type)) < 1 || size > 32) throw Error("Invalid bytes<N> width: " + size);
                        return utils.setLengthRight(value, size);
                    }
                    if (type.startsWith("uint")) {
                        if ((size = parseTypeN(type)) % 8 || size < 8 || size > 256) throw Error("Invalid uint<N> width: " + size);
                        if ((num = parseNumber(value)).bitLength() > size) throw Error("Supplied uint exceeds width: " + size + " vs " + num.bitLength());
                        return (bitsize = bitsize || size), num.toArrayLike(Buffer, "be", bitsize / 8);
                    } else if (type.startsWith("int")) {
                        if ((size = parseTypeN(type)) % 8 || size < 8 || size > 256) throw Error("Invalid int<N> width: " + size);
                        if ((num = parseNumber(value)).bitLength() > size) throw Error("Supplied int exceeds width: " + size + " vs " + num.bitLength());
                        return (bitsize = bitsize || size), num.toTwos(size).toArrayLike(Buffer, "be", bitsize / 8);
                    } else throw Error("Unsupported or invalid type: " + type);
                }),
                (ABI.solidityPack = function (types, values) {
                    if (types.length !== values.length) throw Error("Number of types are not matching the values");
                    for (var ret = [], i = 0; i < types.length; i++) {
                        var type = elementaryName(types[i]),
                            value = values[i];
                        ret.push(ABI.solidityHexValue(type, value, null));
                    }
                    return Buffer.concat(ret);
                }),
                (ABI.soliditySHA3 = function (types, values) {
                    return utils.keccak256(ABI.solidityPack(types, values));
                }),
                (ABI.soliditySHA256 = function (types, values) {
                    return utils.sha256(ABI.solidityPack(types, values));
                }),
                (ABI.solidityRIPEMD160 = function (types, values) {
                    return utils.ripemd160(ABI.solidityPack(types, values), !0);
                }),
                (ABI.fromSerpent = function (sig) {
                    for (var ret = [], i = 0; i < sig.length; i++) {
                        var type = sig[i];
                        if ("s" === type) ret.push("bytes");
                        else if ("b" === type) {
                            for (var c, tmp = "bytes", j = i + 1; j < sig.length && (c = sig[j]) >= "0" && c <= "9"; ) (tmp += sig[j] - "0"), j++;
                            (i = j - 1), ret.push(tmp);
                        } else if ("i" === type) ret.push("int256");
                        else if ("a" === type) ret.push("int256[]");
                        else throw Error("Unsupported or invalid type: " + type);
                    }
                    return ret;
                }),
                (ABI.toSerpent = function (types) {
                    for (var ret = [], i = 0; i < types.length; i++) {
                        var type = types[i];
                        if ("bytes" === type) ret.push("s");
                        else if (type.startsWith("bytes")) ret.push("b" + parseTypeN(type));
                        else if ("int256" === type) ret.push("i");
                        else if ("int256[]" === type) ret.push("a");
                        else throw Error("Unsupported or invalid type: " + type);
                    }
                    return ret.join("");
                }),
                (module.exports = ABI);
        },
        30248: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var Buffer = __webpack_require__(48764).Buffer;
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.importPublic = exports.privateToPublic = exports.privateToAddress = exports.publicToAddress = exports.pubToAddress = exports.isValidPublic = exports.isValidPrivate = exports.isPrecompiled = exports.generateAddress2 = exports.generateAddress = exports.isValidChecksumAddress = exports.toChecksumAddress = exports.isZeroAddress = exports.isValidAddress = exports.zeroAddress = void 0);
            var assert = __webpack_require__(5536),
                ethjsUtil = __webpack_require__(80884),
                secp256k1 = __webpack_require__(83230),
                BN = __webpack_require__(13550),
                bytes_1 = __webpack_require__(77124),
                hash_1 = __webpack_require__(91550);
            (exports.zeroAddress = function () {
                var addr = bytes_1.zeros(20);
                return bytes_1.bufferToHex(addr);
            }),
                (exports.isValidAddress = function (address) {
                    return /^0x[0-9a-fA-F]{40}$/.test(address);
                }),
                (exports.isZeroAddress = function (address) {
                    return exports.zeroAddress() === bytes_1.addHexPrefix(address);
                }),
                (exports.toChecksumAddress = function (address, eip1191ChainId) {
                    address = ethjsUtil.stripHexPrefix(address).toLowerCase();
                    for (var prefix = void 0 !== eip1191ChainId ? eip1191ChainId.toString() + "0x" : "", hash = hash_1.keccak(prefix + address).toString("hex"), ret = "0x", i = 0; i < address.length; i++)
                        parseInt(hash[i], 16) >= 8 ? (ret += address[i].toUpperCase()) : (ret += address[i]);
                    return ret;
                }),
                (exports.isValidChecksumAddress = function (address, eip1191ChainId) {
                    return exports.isValidAddress(address) && exports.toChecksumAddress(address, eip1191ChainId) === address;
                }),
                (exports.generateAddress = function (from, nonce) {
                    from = bytes_1.toBuffer(from);
                    var nonceBN = new BN(nonce);
                    return nonceBN.isZero() ? hash_1.rlphash([from, null]).slice(-20) : hash_1.rlphash([from, Buffer.from(nonceBN.toArray())]).slice(-20);
                }),
                (exports.generateAddress2 = function (from, salt, initCode) {
                    var fromBuf = bytes_1.toBuffer(from),
                        saltBuf = bytes_1.toBuffer(salt),
                        initCodeBuf = bytes_1.toBuffer(initCode);
                    return assert(20 === fromBuf.length), assert(32 === saltBuf.length), hash_1.keccak256(Buffer.concat([Buffer.from("ff", "hex"), fromBuf, saltBuf, hash_1.keccak256(initCodeBuf)])).slice(-20);
                }),
                (exports.isPrecompiled = function (address) {
                    var a = bytes_1.unpad(address);
                    return 1 === a.length && a[0] >= 1 && a[0] <= 8;
                }),
                (exports.isValidPrivate = function (privateKey) {
                    return secp256k1.privateKeyVerify(privateKey);
                }),
                (exports.isValidPublic = function (publicKey, sanitize) {
                    return (void 0 === sanitize && (sanitize = !1), 64 === publicKey.length) ? secp256k1.publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey])) : !!sanitize && secp256k1.publicKeyVerify(publicKey);
                }),
                (exports.pubToAddress = function (pubKey, sanitize) {
                    return (
                        void 0 === sanitize && (sanitize = !1),
                        (pubKey = bytes_1.toBuffer(pubKey)),
                        sanitize && 64 !== pubKey.length && (pubKey = secp256k1.publicKeyConvert(pubKey, !1).slice(1)),
                        assert(64 === pubKey.length),
                        hash_1.keccak(pubKey).slice(-20)
                    );
                }),
                (exports.publicToAddress = exports.pubToAddress),
                (exports.privateToAddress = function (privateKey) {
                    return exports.publicToAddress(exports.privateToPublic(privateKey));
                }),
                (exports.privateToPublic = function (privateKey) {
                    return (privateKey = bytes_1.toBuffer(privateKey)), secp256k1.publicKeyCreate(privateKey, !1).slice(1);
                }),
                (exports.importPublic = function (publicKey) {
                    return 64 !== (publicKey = bytes_1.toBuffer(publicKey)).length && (publicKey = secp256k1.publicKeyConvert(publicKey, !1).slice(1)), publicKey;
                });
        },
        77124: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var Buffer = __webpack_require__(48764).Buffer;
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.baToJSON = exports.addHexPrefix = exports.toUnsigned = exports.fromSigned = exports.bufferToHex = exports.bufferToInt = exports.toBuffer = exports.stripZeros = exports.unpad = exports.setLengthRight = exports.setLength = exports.setLengthLeft = exports.zeros = void 0);
            var ethjsUtil = __webpack_require__(80884),
                BN = __webpack_require__(13550);
            (exports.zeros = function (bytes) {
                return Buffer.allocUnsafe(bytes).fill(0);
            }),
                (exports.setLengthLeft = function (msg, length, right) {
                    void 0 === right && (right = !1);
                    var buf = exports.zeros(length);
                    return ((msg = exports.toBuffer(msg)), right) ? (msg.length < length ? (msg.copy(buf), buf) : msg.slice(0, length)) : msg.length < length ? (msg.copy(buf, length - msg.length), buf) : msg.slice(-length);
                }),
                (exports.setLength = exports.setLengthLeft),
                (exports.setLengthRight = function (msg, length) {
                    return exports.setLength(msg, length, !0);
                }),
                (exports.unpad = function (a) {
                    for (var first = (a = ethjsUtil.stripHexPrefix(a))[0]; a.length > 0 && "0" === first.toString(); ) first = (a = a.slice(1))[0];
                    return a;
                }),
                (exports.stripZeros = exports.unpad),
                (exports.toBuffer = function (v) {
                    if (!Buffer.isBuffer(v)) {
                        if (Array.isArray(v)) v = Buffer.from(v);
                        else if ("string" == typeof v) {
                            if (ethjsUtil.isHexString(v)) v = Buffer.from(ethjsUtil.padToEven(ethjsUtil.stripHexPrefix(v)), "hex");
                            else throw Error("Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: " + v);
                        } else if ("number" == typeof v) v = ethjsUtil.intToBuffer(v);
                        else if (null == v) v = Buffer.allocUnsafe(0);
                        else if (BN.isBN(v)) v = v.toArrayLike(Buffer);
                        else if (v.toArray) v = Buffer.from(v.toArray());
                        else throw Error("invalid type");
                    }
                    return v;
                }),
                (exports.bufferToInt = function (buf) {
                    return new BN(exports.toBuffer(buf)).toNumber();
                }),
                (exports.bufferToHex = function (buf) {
                    return "0x" + (buf = exports.toBuffer(buf)).toString("hex");
                }),
                (exports.fromSigned = function (num) {
                    return new BN(num).fromTwos(256);
                }),
                (exports.toUnsigned = function (num) {
                    return Buffer.from(num.toTwos(256).toArray());
                }),
                (exports.addHexPrefix = function (str) {
                    return "string" != typeof str ? str : ethjsUtil.isHexPrefixed(str) ? str : "0x" + str;
                }),
                (exports.baToJSON = function (ba) {
                    if (Buffer.isBuffer(ba)) return "0x" + ba.toString("hex");
                    if (ba instanceof Array) {
                        for (var array = [], i = 0; i < ba.length; i++) array.push(exports.baToJSON(ba[i]));
                        return array;
                    }
                });
        },
        46649: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var Buffer = __webpack_require__(48764).Buffer;
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.KECCAK256_RLP = exports.KECCAK256_RLP_S = exports.KECCAK256_RLP_ARRAY = exports.KECCAK256_RLP_ARRAY_S = exports.KECCAK256_NULL = exports.KECCAK256_NULL_S = exports.TWO_POW256 = exports.MAX_INTEGER = void 0);
            var BN = __webpack_require__(13550);
            (exports.MAX_INTEGER = new BN("ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff", 16)),
                (exports.TWO_POW256 = new BN("10000000000000000000000000000000000000000000000000000000000000000", 16)),
                (exports.KECCAK256_NULL_S = "c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"),
                (exports.KECCAK256_NULL = Buffer.from(exports.KECCAK256_NULL_S, "hex")),
                (exports.KECCAK256_RLP_ARRAY_S = "1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347"),
                (exports.KECCAK256_RLP_ARRAY = Buffer.from(exports.KECCAK256_RLP_ARRAY_S, "hex")),
                (exports.KECCAK256_RLP_S = "56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421"),
                (exports.KECCAK256_RLP = Buffer.from(exports.KECCAK256_RLP_S, "hex"));
        },
        91550: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var Buffer = __webpack_require__(48764).Buffer;
            Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.rlphash = exports.ripemd160 = exports.sha256 = exports.keccak256 = exports.keccak = void 0);
            var _a = __webpack_require__(82192),
                keccak224 = _a.keccak224,
                keccak384 = _a.keccak384,
                k256 = _a.keccak256,
                keccak512 = _a.keccak512,
                createHash = __webpack_require__(23482),
                ethjsUtil = __webpack_require__(80884),
                rlp = __webpack_require__(51675),
                bytes_1 = __webpack_require__(77124);
            (exports.keccak = function (a, bits) {
                switch ((void 0 === bits && (bits = 256), (a = "string" != typeof a || ethjsUtil.isHexString(a) ? bytes_1.toBuffer(a) : Buffer.from(a, "utf8")), bits || (bits = 256), bits)) {
                    case 224:
                        return keccak224(a);
                    case 256:
                        return k256(a);
                    case 384:
                        return keccak384(a);
                    case 512:
                        return keccak512(a);
                    default:
                        throw Error("Invald algorithm: keccak" + bits);
                }
            }),
                (exports.keccak256 = function (a) {
                    return exports.keccak(a);
                }),
                (exports.sha256 = function (a) {
                    return (a = bytes_1.toBuffer(a)), createHash("sha256").update(a).digest();
                }),
                (exports.ripemd160 = function (a, padded) {
                    a = bytes_1.toBuffer(a);
                    var hash = createHash("rmd160").update(a).digest();
                    return !0 === padded ? bytes_1.setLength(hash, 32) : hash;
                }),
                (exports.rlphash = function (a) {
                    return exports.keccak(rlp.encode(a));
                });
        },
        86589: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var __createBinding =
                    (this && this.__createBinding) ||
                    (Object.create
                        ? function (o, m, k, k2) {
                              void 0 === k2 && (k2 = k),
                                  Object.defineProperty(o, k2, {
                                      enumerable: !0,
                                      get: function () {
                                          return m[k];
                                      },
                                  });
                          }
                        : function (o, m, k, k2) {
                              void 0 === k2 && (k2 = k), (o[k2] = m[k]);
                          }),
                __exportStar =
                    (this && this.__exportStar) ||
                    function (m, exports) {
                        for (var p in m) "default" === p || exports.hasOwnProperty(p) || __createBinding(exports, m, p);
                    };
            Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.secp256k1 = exports.rlp = exports.BN = void 0);
            var secp256k1 = __webpack_require__(83230);
            exports.secp256k1 = secp256k1;
            var ethjsUtil = __webpack_require__(80884),
                BN = __webpack_require__(13550);
            exports.BN = BN;
            var rlp = __webpack_require__(51675);
            (exports.rlp = rlp),
                Object.assign(exports, ethjsUtil),
                __exportStar(__webpack_require__(46649), exports),
                __exportStar(__webpack_require__(30248), exports),
                __exportStar(__webpack_require__(91550), exports),
                __exportStar(__webpack_require__(86232), exports),
                __exportStar(__webpack_require__(77124), exports),
                __exportStar(__webpack_require__(81113), exports);
        },
        81113: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var Buffer = __webpack_require__(48764).Buffer;
            Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.defineProperties = void 0);
            var assert = __webpack_require__(5536),
                ethjsUtil = __webpack_require__(80884),
                rlp = __webpack_require__(51675),
                bytes_1 = __webpack_require__(77124);
            exports.defineProperties = function (self1, fields, data) {
                if (
                    ((self1.raw = []),
                    (self1._fields = []),
                    (self1.toJSON = function (label) {
                        if ((void 0 === label && (label = !1), label)) {
                            var obj_1 = {};
                            return (
                                self1._fields.forEach(function (field) {
                                    obj_1[field] = "0x" + self1[field].toString("hex");
                                }),
                                obj_1
                            );
                        }
                        return bytes_1.baToJSON(self1.raw);
                    }),
                    (self1.serialize = function () {
                        return rlp.encode(self1.raw);
                    }),
                    fields.forEach(function (field, i) {
                        function getter() {
                            return self1.raw[i];
                        }
                        function setter(v) {
                            "00" !== (v = bytes_1.toBuffer(v)).toString("hex") || field.allowZero || (v = Buffer.allocUnsafe(0)),
                                field.allowLess && field.length
                                    ? ((v = bytes_1.stripZeros(v)), assert(field.length >= v.length, "The field " + field.name + " must not have more " + field.length + " bytes"))
                                    : !(field.allowZero && 0 === v.length) && field.length && assert(field.length === v.length, "The field " + field.name + " must have byte length of " + field.length),
                                (self1.raw[i] = v);
                        }
                        self1._fields.push(field.name),
                            Object.defineProperty(self1, field.name, { enumerable: !0, configurable: !0, get: getter, set: setter }),
                            field.default && (self1[field.name] = field.default),
                            field.alias && Object.defineProperty(self1, field.alias, { enumerable: !1, configurable: !0, set: setter, get: getter });
                    }),
                    data)
                ) {
                    if (("string" == typeof data && (data = Buffer.from(ethjsUtil.stripHexPrefix(data), "hex")), Buffer.isBuffer(data) && (data = rlp.decode(data)), Array.isArray(data))) {
                        if (data.length > self1._fields.length) throw Error("wrong number of fields in data");
                        data.forEach(function (d, i) {
                            self1[self1._fields[i]] = bytes_1.toBuffer(d);
                        });
                    } else if ("object" == typeof data) {
                        var keys_1 = Object.keys(data);
                        fields.forEach(function (field) {
                            -1 !== keys_1.indexOf(field.name) && (self1[field.name] = data[field.name]), -1 !== keys_1.indexOf(field.alias) && (self1[field.alias] = data[field.alias]);
                        });
                    } else throw Error("invalid data");
                }
            };
        },
        83230: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var Buffer = __webpack_require__(48764).Buffer;
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.ecdhUnsafe = exports.ecdh = exports.recover = exports.verify = exports.sign = exports.signatureImportLax = exports.signatureImport = exports.signatureExport = exports.signatureNormalize = exports.publicKeyCombine = exports.publicKeyTweakMul = exports.publicKeyTweakAdd = exports.publicKeyVerify = exports.publicKeyConvert = exports.publicKeyCreate = exports.privateKeyTweakMul = exports.privateKeyTweakAdd = exports.privateKeyModInverse = exports.privateKeyNegate = exports.privateKeyImport = exports.privateKeyExport = exports.privateKeyVerify = void 0);
            var secp256k1 = __webpack_require__(95053),
                secp256k1v3 = __webpack_require__(78427),
                der = __webpack_require__(33646);
            (exports.privateKeyVerify = function (privateKey) {
                return 32 === privateKey.length && secp256k1.privateKeyVerify(Uint8Array.from(privateKey));
            }),
                (exports.privateKeyExport = function (privateKey, compressed) {
                    if (32 !== privateKey.length) throw RangeError("private key length is invalid");
                    var publicKey = secp256k1v3.privateKeyExport(privateKey, compressed);
                    return der.privateKeyExport(privateKey, publicKey, compressed);
                }),
                (exports.privateKeyImport = function (privateKey) {
                    if (null !== (privateKey = der.privateKeyImport(privateKey)) && 32 === privateKey.length && exports.privateKeyVerify(privateKey)) return privateKey;
                    throw Error("couldn't import from DER format");
                }),
                (exports.privateKeyNegate = function (privateKey) {
                    return Buffer.from(secp256k1.privateKeyNegate(Uint8Array.from(privateKey)));
                }),
                (exports.privateKeyModInverse = function (privateKey) {
                    if (32 !== privateKey.length) throw Error("private key length is invalid");
                    return Buffer.from(secp256k1v3.privateKeyModInverse(Uint8Array.from(privateKey)));
                }),
                (exports.privateKeyTweakAdd = function (privateKey, tweak) {
                    return Buffer.from(secp256k1.privateKeyTweakAdd(Uint8Array.from(privateKey), tweak));
                }),
                (exports.privateKeyTweakMul = function (privateKey, tweak) {
                    return Buffer.from(secp256k1.privateKeyTweakMul(Uint8Array.from(privateKey), Uint8Array.from(tweak)));
                }),
                (exports.publicKeyCreate = function (privateKey, compressed) {
                    return Buffer.from(secp256k1.publicKeyCreate(Uint8Array.from(privateKey), compressed));
                }),
                (exports.publicKeyConvert = function (publicKey, compressed) {
                    return Buffer.from(secp256k1.publicKeyConvert(Uint8Array.from(publicKey), compressed));
                }),
                (exports.publicKeyVerify = function (publicKey) {
                    return (33 === publicKey.length || 65 === publicKey.length) && secp256k1.publicKeyVerify(Uint8Array.from(publicKey));
                }),
                (exports.publicKeyTweakAdd = function (publicKey, tweak, compressed) {
                    return Buffer.from(secp256k1.publicKeyTweakAdd(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));
                }),
                (exports.publicKeyTweakMul = function (publicKey, tweak, compressed) {
                    return Buffer.from(secp256k1.publicKeyTweakMul(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));
                }),
                (exports.publicKeyCombine = function (publicKeys, compressed) {
                    var keys = [];
                    return (
                        publicKeys.forEach(function (publicKey) {
                            keys.push(Uint8Array.from(publicKey));
                        }),
                        Buffer.from(secp256k1.publicKeyCombine(keys, compressed))
                    );
                }),
                (exports.signatureNormalize = function (signature) {
                    return Buffer.from(secp256k1.signatureNormalize(Uint8Array.from(signature)));
                }),
                (exports.signatureExport = function (signature) {
                    return Buffer.from(secp256k1.signatureExport(Uint8Array.from(signature)));
                }),
                (exports.signatureImport = function (signature) {
                    return Buffer.from(secp256k1.signatureImport(Uint8Array.from(signature)));
                }),
                (exports.signatureImportLax = function (signature) {
                    if (0 === signature.length) throw RangeError("signature length is invalid");
                    var sigObj = der.signatureImportLax(signature);
                    if (null === sigObj) throw Error("couldn't parse DER signature");
                    return secp256k1v3.signatureImport(sigObj);
                }),
                (exports.sign = function (message, privateKey, options) {
                    if (null === options) throw TypeError("options should be an Object");
                    var signOptions = void 0;
                    if (options) {
                        if (((signOptions = {}), null === options.data)) throw TypeError("options.data should be a Buffer");
                        if (options.data) {
                            if (32 != options.data.length) throw RangeError("options.data length is invalid");
                            signOptions.data = new Uint8Array(options.data);
                        }
                        if (null === options.noncefn) throw TypeError("options.noncefn should be a Function");
                        options.noncefn &&
                            (signOptions.noncefn = function (message, privateKey, algo, data, attempt) {
                                var bufferAlgo = null != algo ? Buffer.from(algo) : null,
                                    bufferData = null != data ? Buffer.from(data) : null,
                                    buffer = Buffer.from("");
                                return options.noncefn && (buffer = options.noncefn(Buffer.from(message), Buffer.from(privateKey), bufferAlgo, bufferData, attempt)), new Uint8Array(buffer);
                            });
                    }
                    var sig = secp256k1.ecdsaSign(Uint8Array.from(message), Uint8Array.from(privateKey), signOptions);
                    return { signature: Buffer.from(sig.signature), recovery: sig.recid };
                }),
                (exports.verify = function (message, signature, publicKey) {
                    return secp256k1.ecdsaVerify(Uint8Array.from(signature), Uint8Array.from(message), publicKey);
                }),
                (exports.recover = function (message, signature, recid, compressed) {
                    return Buffer.from(secp256k1.ecdsaRecover(Uint8Array.from(signature), recid, Uint8Array.from(message), compressed));
                }),
                (exports.ecdh = function (publicKey, privateKey) {
                    return Buffer.from(secp256k1.ecdh(Uint8Array.from(publicKey), Uint8Array.from(privateKey), {}));
                }),
                (exports.ecdhUnsafe = function (publicKey, privateKey, compressed) {
                    if (33 !== publicKey.length && 65 !== publicKey.length) throw RangeError("public key length is invalid");
                    if (32 !== privateKey.length) throw RangeError("private key length is invalid");
                    return Buffer.from(secp256k1v3.ecdhUnsafe(Uint8Array.from(publicKey), Uint8Array.from(privateKey), compressed));
                });
        },
        33646: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var Buffer = __webpack_require__(48764).Buffer;
            Object.defineProperty(exports, "__esModule", { value: !0 });
            var EC_PRIVKEY_EXPORT_DER_COMPRESSED = Buffer.from([
                    48,
                    129,
                    211,
                    2,
                    1,
                    1,
                    4,
                    32,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    160,
                    129,
                    133,
                    48,
                    129,
                    130,
                    2,
                    1,
                    1,
                    48,
                    44,
                    6,
                    7,
                    42,
                    134,
                    72,
                    206,
                    61,
                    1,
                    1,
                    2,
                    33,
                    0,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    254,
                    255,
                    255,
                    252,
                    47,
                    48,
                    6,
                    4,
                    1,
                    0,
                    4,
                    1,
                    7,
                    4,
                    33,
                    2,
                    121,
                    190,
                    102,
                    126,
                    249,
                    220,
                    187,
                    172,
                    85,
                    160,
                    98,
                    149,
                    206,
                    135,
                    11,
                    7,
                    2,
                    155,
                    252,
                    219,
                    45,
                    206,
                    40,
                    217,
                    89,
                    242,
                    129,
                    91,
                    22,
                    248,
                    23,
                    152,
                    2,
                    33,
                    0,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    254,
                    186,
                    174,
                    220,
                    230,
                    175,
                    72,
                    160,
                    59,
                    191,
                    210,
                    94,
                    140,
                    208,
                    54,
                    65,
                    65,
                    2,
                    1,
                    1,
                    161,
                    36,
                    3,
                    34,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                ]),
                EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED = Buffer.from([
                    48,
                    130,
                    1,
                    19,
                    2,
                    1,
                    1,
                    4,
                    32,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    160,
                    129,
                    165,
                    48,
                    129,
                    162,
                    2,
                    1,
                    1,
                    48,
                    44,
                    6,
                    7,
                    42,
                    134,
                    72,
                    206,
                    61,
                    1,
                    1,
                    2,
                    33,
                    0,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    254,
                    255,
                    255,
                    252,
                    47,
                    48,
                    6,
                    4,
                    1,
                    0,
                    4,
                    1,
                    7,
                    4,
                    65,
                    4,
                    121,
                    190,
                    102,
                    126,
                    249,
                    220,
                    187,
                    172,
                    85,
                    160,
                    98,
                    149,
                    206,
                    135,
                    11,
                    7,
                    2,
                    155,
                    252,
                    219,
                    45,
                    206,
                    40,
                    217,
                    89,
                    242,
                    129,
                    91,
                    22,
                    248,
                    23,
                    152,
                    72,
                    58,
                    218,
                    119,
                    38,
                    163,
                    196,
                    101,
                    93,
                    164,
                    251,
                    252,
                    14,
                    17,
                    8,
                    168,
                    253,
                    23,
                    180,
                    72,
                    166,
                    133,
                    84,
                    25,
                    156,
                    71,
                    208,
                    143,
                    251,
                    16,
                    212,
                    184,
                    2,
                    33,
                    0,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    254,
                    186,
                    174,
                    220,
                    230,
                    175,
                    72,
                    160,
                    59,
                    191,
                    210,
                    94,
                    140,
                    208,
                    54,
                    65,
                    65,
                    2,
                    1,
                    1,
                    161,
                    68,
                    3,
                    66,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                ]);
            (exports.privateKeyExport = function (privateKey, publicKey, compressed) {
                void 0 === compressed && (compressed = !0);
                var result = Buffer.from(compressed ? EC_PRIVKEY_EXPORT_DER_COMPRESSED : EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED);
                return privateKey.copy(result, compressed ? 8 : 9), publicKey.copy(result, compressed ? 181 : 214), result;
            }),
                (exports.privateKeyImport = function (privateKey) {
                    var length = privateKey.length,
                        index = 0;
                    if (length < 1 || 48 !== privateKey[index] || length < (index += 1) + 1 || !(128 & privateKey[index])) return null;
                    var lenb = 127 & privateKey[index];
                    if (((index += 1), lenb < 1 || lenb > 2 || length < index + lenb)) return null;
                    var len = privateKey[index + lenb - 1] | (lenb > 1 ? privateKey[index + lenb - 2] << 8 : 0);
                    return length < (index += lenb) + len ||
                        length < index + 3 ||
                        2 !== privateKey[index] ||
                        1 !== privateKey[index + 1] ||
                        1 !== privateKey[index + 2] ||
                        length < (index += 3) + 2 ||
                        4 !== privateKey[index] ||
                        privateKey[index + 1] > 32 ||
                        length < index + 2 + privateKey[index + 1]
                        ? null
                        : privateKey.slice(index + 2, index + 2 + privateKey[index + 1]);
                }),
                (exports.signatureImportLax = function (signature) {
                    var r = Buffer.alloc(32, 0),
                        s = Buffer.alloc(32, 0),
                        length = signature.length,
                        index = 0;
                    if (48 !== signature[index++]) return null;
                    var lenbyte = signature[index++];
                    if ((128 & lenbyte && (index += lenbyte - 128) > length) || 2 !== signature[index++]) return null;
                    var rlen = signature[index++];
                    if (128 & rlen) {
                        if (index + (lenbyte = rlen - 128) > length) return null;
                        for (; lenbyte > 0 && 0 === signature[index]; index += 1, lenbyte -= 1);
                        for (rlen = 0; lenbyte > 0; index += 1, lenbyte -= 1) rlen = (rlen << 8) + signature[index];
                    }
                    if (rlen > length - index) return null;
                    var rindex = index;
                    if (((index += rlen), 2 !== signature[index++])) return null;
                    var slen = signature[index++];
                    if (128 & slen) {
                        if (index + (lenbyte = slen - 128) > length) return null;
                        for (; lenbyte > 0 && 0 === signature[index]; index += 1, lenbyte -= 1);
                        for (slen = 0; lenbyte > 0; index += 1, lenbyte -= 1) slen = (slen << 8) + signature[index];
                    }
                    if (slen > length - index) return null;
                    var sindex = index;
                    for (index += slen; rlen > 0 && 0 === signature[rindex]; rlen -= 1, rindex += 1);
                    if (rlen > 32) return null;
                    var rvalue = signature.slice(rindex, rindex + rlen);
                    for (rvalue.copy(r, 32 - rvalue.length); slen > 0 && 0 === signature[sindex]; slen -= 1, sindex += 1);
                    if (slen > 32) return null;
                    var svalue = signature.slice(sindex, sindex + slen);
                    return svalue.copy(s, 32 - svalue.length), { r: r, s: s };
                });
        },
        78427: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var Buffer = __webpack_require__(48764).Buffer;
            Object.defineProperty(exports, "__esModule", { value: !0 });
            var BN = __webpack_require__(13550),
                ec = new (__webpack_require__(86266).ec)("secp256k1"),
                ecparams = ec.curve;
            (exports.privateKeyExport = function (privateKey, compressed) {
                void 0 === compressed && (compressed = !0);
                var d = new BN(privateKey);
                if (d.ucmp(ecparams.n) >= 0) throw Error("couldn't export to DER format");
                var point = ec.g.mul(d);
                return toPublicKey(point.getX(), point.getY(), compressed);
            }),
                (exports.privateKeyModInverse = function (privateKey) {
                    var bn = new BN(privateKey);
                    if (bn.ucmp(ecparams.n) >= 0 || bn.isZero()) throw Error("private key range is invalid");
                    return bn.invm(ecparams.n).toArrayLike(Buffer, "be", 32);
                }),
                (exports.signatureImport = function (sigObj) {
                    var r = new BN(sigObj.r);
                    r.ucmp(ecparams.n) >= 0 && (r = new BN(0));
                    var s = new BN(sigObj.s);
                    return s.ucmp(ecparams.n) >= 0 && (s = new BN(0)), Buffer.concat([r.toArrayLike(Buffer, "be", 32), s.toArrayLike(Buffer, "be", 32)]);
                }),
                (exports.ecdhUnsafe = function (publicKey, privateKey, compressed) {
                    void 0 === compressed && (compressed = !0);
                    var point = ec.keyFromPublic(publicKey),
                        scalar = new BN(privateKey);
                    if (scalar.ucmp(ecparams.n) >= 0 || scalar.isZero()) throw Error("scalar was invalid (zero or overflow)");
                    var shared = point.pub.mul(scalar);
                    return toPublicKey(shared.getX(), shared.getY(), compressed);
                });
            var toPublicKey = function (x, y, compressed) {
                var publicKey;
                return (
                    compressed
                        ? (((publicKey = Buffer.alloc(33))[0] = y.isOdd() ? 3 : 2), x.toArrayLike(Buffer, "be", 32).copy(publicKey, 1))
                        : (((publicKey = Buffer.alloc(65))[0] = 4), x.toArrayLike(Buffer, "be", 32).copy(publicKey, 1), y.toArrayLike(Buffer, "be", 32).copy(publicKey, 33)),
                    publicKey
                );
            };
        },
        86232: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var Buffer = __webpack_require__(48764).Buffer;
            Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.hashPersonalMessage = exports.isValidSignature = exports.fromRpcSig = exports.toRpcSig = exports.ecrecover = exports.ecsign = void 0);
            var secp256k1 = __webpack_require__(83230),
                BN = __webpack_require__(13550),
                bytes_1 = __webpack_require__(77124),
                hash_1 = __webpack_require__(91550);
            function calculateSigRecovery(v, chainId) {
                return chainId ? v - (2 * chainId + 35) : v - 27;
            }
            function isValidSigRecovery(recovery) {
                return 0 === recovery || 1 === recovery;
            }
            (exports.ecsign = function (msgHash, privateKey, chainId) {
                var sig = secp256k1.sign(msgHash, privateKey),
                    recovery = sig.recovery;
                return { r: sig.signature.slice(0, 32), s: sig.signature.slice(32, 64), v: chainId ? recovery + (2 * chainId + 35) : recovery + 27 };
            }),
                (exports.ecrecover = function (msgHash, v, r, s, chainId) {
                    var signature = Buffer.concat([bytes_1.setLength(r, 32), bytes_1.setLength(s, 32)], 64),
                        recovery = calculateSigRecovery(v, chainId);
                    if (!isValidSigRecovery(recovery)) throw Error("Invalid signature v value");
                    var senderPubKey = secp256k1.recover(msgHash, signature, recovery);
                    return secp256k1.publicKeyConvert(senderPubKey, !1).slice(1);
                }),
                (exports.toRpcSig = function (v, r, s, chainId) {
                    if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) throw Error("Invalid signature v value");
                    return bytes_1.bufferToHex(Buffer.concat([bytes_1.setLengthLeft(r, 32), bytes_1.setLengthLeft(s, 32), bytes_1.toBuffer(v)]));
                }),
                (exports.fromRpcSig = function (sig) {
                    var buf = bytes_1.toBuffer(sig);
                    if (65 !== buf.length) throw Error("Invalid signature length");
                    var v = buf[64];
                    return v < 27 && (v += 27), { v: v, r: buf.slice(0, 32), s: buf.slice(32, 64) };
                }),
                (exports.isValidSignature = function (v, r, s, homesteadOrLater, chainId) {
                    void 0 === homesteadOrLater && (homesteadOrLater = !0);
                    var SECP256K1_N_DIV_2 = new BN("7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0", 16),
                        SECP256K1_N = new BN("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141", 16);
                    if (32 !== r.length || 32 !== s.length || !isValidSigRecovery(calculateSigRecovery(v, chainId))) return !1;
                    var rBN = new BN(r),
                        sBN = new BN(s);
                    return !(rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) && (!homesteadOrLater || 1 !== sBN.cmp(SECP256K1_N_DIV_2));
                }),
                (exports.hashPersonalMessage = function (message) {
                    var prefix = Buffer.from("\x19Ethereum Signed Message:\n" + message.length.toString(), "utf-8");
                    return hash_1.keccak(Buffer.concat([prefix, message]));
                });
        },
        29847: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var Buffer = __webpack_require__(48764).Buffer,
                ethUtil = __webpack_require__(21964),
                fees = __webpack_require__(16523),
                BN = ethUtil.BN,
                N_DIV_2 = new BN("7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0", 16),
                Transaction = (function () {
                    function Transaction(data) {
                        !(function (instance, Constructor) {
                            if (!(instance instanceof Constructor)) throw TypeError("Cannot call a class as a function");
                        })(this, Transaction),
                            (data = data || {});
                        var fields = [
                            { name: "nonce", length: 32, allowLess: !0, default: new Buffer([]) },
                            { name: "gasPrice", length: 32, allowLess: !0, default: new Buffer([]) },
                            { name: "gasLimit", alias: "gas", length: 32, allowLess: !0, default: new Buffer([]) },
                            { name: "to", allowZero: !0, length: 20, default: new Buffer([]) },
                            { name: "value", length: 32, allowLess: !0, default: new Buffer([]) },
                            { name: "data", alias: "input", allowZero: !0, default: new Buffer([]) },
                            { name: "v", allowZero: !0, default: new Buffer([28]) },
                            { name: "r", length: 32, allowZero: !0, allowLess: !0, default: new Buffer([]) },
                            { name: "s", length: 32, allowZero: !0, allowLess: !0, default: new Buffer([]) },
                        ];
                        ethUtil.defineProperties(this, fields, data), Object.defineProperty(this, "from", { enumerable: !0, configurable: !0, get: this.getSenderAddress.bind(this) });
                        var chainId = Math.floor((ethUtil.bufferToInt(this.v) - 35) / 2);
                        chainId < 0 && (chainId = 0), (this._chainId = chainId || data.chainId || 0), (this._homestead = !0);
                    }
                    return (
                        (Transaction.prototype.toCreationAddress = function () {
                            return "" === this.to.toString("hex");
                        }),
                        (Transaction.prototype.hash = function (includeSignature) {
                            void 0 === includeSignature && (includeSignature = !0);
                            var items = void 0;
                            if (includeSignature) items = this.raw;
                            else if (this._chainId > 0) {
                                var raw = this.raw.slice();
                                (this.v = this._chainId), (this.r = 0), (this.s = 0), (items = this.raw), (this.raw = raw);
                            } else items = this.raw.slice(0, 6);
                            return ethUtil.rlphash(items);
                        }),
                        (Transaction.prototype.getChainId = function () {
                            return this._chainId;
                        }),
                        (Transaction.prototype.getSenderAddress = function () {
                            if (this._from) return this._from;
                            var pubkey = this.getSenderPublicKey();
                            return (this._from = ethUtil.publicToAddress(pubkey)), this._from;
                        }),
                        (Transaction.prototype.getSenderPublicKey = function () {
                            if ((!this._senderPubKey || !this._senderPubKey.length) && !this.verifySignature()) throw Error("Invalid Signature");
                            return this._senderPubKey;
                        }),
                        (Transaction.prototype.verifySignature = function () {
                            var msgHash = this.hash(!1);
                            if (this._homestead && 1 === new BN(this.s).cmp(N_DIV_2)) return !1;
                            try {
                                var v = ethUtil.bufferToInt(this.v);
                                this._chainId > 0 && (v -= 2 * this._chainId + 8), (this._senderPubKey = ethUtil.ecrecover(msgHash, v, this.r, this.s));
                            } catch (e) {
                                return !1;
                            }
                            return !!this._senderPubKey;
                        }),
                        (Transaction.prototype.sign = function (privateKey) {
                            var msgHash = this.hash(!1),
                                sig = ethUtil.ecsign(msgHash, privateKey);
                            this._chainId > 0 && (sig.v += 2 * this._chainId + 8), Object.assign(this, sig);
                        }),
                        (Transaction.prototype.getDataFee = function () {
                            for (var data = this.raw[5], cost = new BN(0), i = 0; i < data.length; i++) 0 === data[i] ? cost.iaddn(fees.txDataZeroGas.v) : cost.iaddn(fees.txDataNonZeroGas.v);
                            return cost;
                        }),
                        (Transaction.prototype.getBaseFee = function () {
                            var fee = this.getDataFee().iaddn(fees.txGas.v);
                            return this._homestead && this.toCreationAddress() && fee.iaddn(fees.txCreation.v), fee;
                        }),
                        (Transaction.prototype.getUpfrontCost = function () {
                            return new BN(this.gasLimit).imul(new BN(this.gasPrice)).iadd(new BN(this.value));
                        }),
                        (Transaction.prototype.validate = function (stringError) {
                            var errors = [];
                            return (this.verifySignature() || errors.push("Invalid Signature"),
                            this.getBaseFee().cmp(new BN(this.gasLimit)) > 0 && errors.push(["gas limit is too low. Need at least " + this.getBaseFee()]),
                            void 0 === stringError || !1 === stringError)
                                ? 0 === errors.length
                                : errors.join(" ");
                        }),
                        Transaction
                    );
                })();
            module.exports = Transaction;
        },
        21964: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var _typeof =
                    "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                        ? function (obj) {
                              return typeof obj;
                          }
                        : function (obj) {
                              return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
                          },
                _require = __webpack_require__(82192),
                keccak224 = _require.keccak224,
                keccak384 = _require.keccak384,
                k256 = _require.keccak256,
                keccak512 = _require.keccak512,
                secp256k1 = __webpack_require__(24565),
                assert = __webpack_require__(16978),
                rlp = __webpack_require__(51675),
                BN = __webpack_require__(13550),
                createHash = __webpack_require__(23482),
                Buffer = __webpack_require__(89509).Buffer;
            Object.assign(exports, __webpack_require__(80884)),
                (exports.MAX_INTEGER = new BN("ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff", 16)),
                (exports.TWO_POW256 = new BN("10000000000000000000000000000000000000000000000000000000000000000", 16)),
                (exports.KECCAK256_NULL_S = "c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"),
                (exports.SHA3_NULL_S = exports.KECCAK256_NULL_S),
                (exports.KECCAK256_NULL = Buffer.from(exports.KECCAK256_NULL_S, "hex")),
                (exports.SHA3_NULL = exports.KECCAK256_NULL),
                (exports.KECCAK256_RLP_ARRAY_S = "1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347"),
                (exports.SHA3_RLP_ARRAY_S = exports.KECCAK256_RLP_ARRAY_S),
                (exports.KECCAK256_RLP_ARRAY = Buffer.from(exports.KECCAK256_RLP_ARRAY_S, "hex")),
                (exports.SHA3_RLP_ARRAY = exports.KECCAK256_RLP_ARRAY),
                (exports.KECCAK256_RLP_S = "56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421"),
                (exports.SHA3_RLP_S = exports.KECCAK256_RLP_S),
                (exports.KECCAK256_RLP = Buffer.from(exports.KECCAK256_RLP_S, "hex")),
                (exports.SHA3_RLP = exports.KECCAK256_RLP),
                (exports.BN = BN),
                (exports.rlp = rlp),
                (exports.secp256k1 = secp256k1),
                (exports.zeros = function (bytes) {
                    return Buffer.allocUnsafe(bytes).fill(0);
                }),
                (exports.zeroAddress = function () {
                    var zeroAddress = exports.zeros(20);
                    return exports.bufferToHex(zeroAddress);
                }),
                (exports.setLengthLeft = exports.setLength = function (msg, length, right) {
                    var buf = exports.zeros(length);
                    return ((msg = exports.toBuffer(msg)), right) ? (msg.length < length ? (msg.copy(buf), buf) : msg.slice(0, length)) : msg.length < length ? (msg.copy(buf, length - msg.length), buf) : msg.slice(-length);
                }),
                (exports.setLengthRight = function (msg, length) {
                    return exports.setLength(msg, length, !0);
                }),
                (exports.unpad = exports.stripZeros = function (a) {
                    for (var first = (a = exports.stripHexPrefix(a))[0]; a.length > 0 && "0" === first.toString(); ) first = (a = a.slice(1))[0];
                    return a;
                }),
                (exports.toBuffer = function (v) {
                    if (!Buffer.isBuffer(v)) {
                        if (Array.isArray(v)) v = Buffer.from(v);
                        else if ("string" == typeof v) v = exports.isHexString(v) ? Buffer.from(exports.padToEven(exports.stripHexPrefix(v)), "hex") : Buffer.from(v);
                        else if ("number" == typeof v) v = exports.intToBuffer(v);
                        else if (null == v) v = Buffer.allocUnsafe(0);
                        else if (BN.isBN(v)) v = v.toArrayLike(Buffer);
                        else if (v.toArray) v = Buffer.from(v.toArray());
                        else throw Error("invalid type");
                    }
                    return v;
                }),
                (exports.bufferToInt = function (buf) {
                    return new BN(exports.toBuffer(buf)).toNumber();
                }),
                (exports.bufferToHex = function (buf) {
                    return "0x" + (buf = exports.toBuffer(buf)).toString("hex");
                }),
                (exports.fromSigned = function (num) {
                    return new BN(num).fromTwos(256);
                }),
                (exports.toUnsigned = function (num) {
                    return Buffer.from(num.toTwos(256).toArray());
                }),
                (exports.keccak = function (a, bits) {
                    switch (((a = exports.toBuffer(a)), bits || (bits = 256), bits)) {
                        case 224:
                            return keccak224(a);
                        case 256:
                            return k256(a);
                        case 384:
                            return keccak384(a);
                        case 512:
                            return keccak512(a);
                        default:
                            throw Error("Invald algorithm: keccak" + bits);
                    }
                }),
                (exports.keccak256 = function (a) {
                    return exports.keccak(a);
                }),
                (exports.sha3 = exports.keccak),
                (exports.sha256 = function (a) {
                    return (a = exports.toBuffer(a)), createHash("sha256").update(a).digest();
                }),
                (exports.ripemd160 = function (a, padded) {
                    a = exports.toBuffer(a);
                    var hash = createHash("rmd160").update(a).digest();
                    return !0 === padded ? exports.setLength(hash, 32) : hash;
                }),
                (exports.rlphash = function (a) {
                    return exports.keccak(rlp.encode(a));
                }),
                (exports.isValidPrivate = function (privateKey) {
                    return secp256k1.privateKeyVerify(privateKey);
                }),
                (exports.isValidPublic = function (publicKey, sanitize) {
                    return 64 === publicKey.length ? secp256k1.publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey])) : !!sanitize && secp256k1.publicKeyVerify(publicKey);
                }),
                (exports.pubToAddress = exports.publicToAddress = function (pubKey, sanitize) {
                    return (pubKey = exports.toBuffer(pubKey)), sanitize && 64 !== pubKey.length && (pubKey = secp256k1.publicKeyConvert(pubKey, !1).slice(1)), assert(64 === pubKey.length), exports.keccak(pubKey).slice(-20);
                });
            var privateToPublic = (exports.privateToPublic = function (privateKey) {
                return (privateKey = exports.toBuffer(privateKey)), secp256k1.publicKeyCreate(privateKey, !1).slice(1);
            });
            (exports.importPublic = function (publicKey) {
                return 64 !== (publicKey = exports.toBuffer(publicKey)).length && (publicKey = secp256k1.publicKeyConvert(publicKey, !1).slice(1)), publicKey;
            }),
                (exports.ecsign = function (msgHash, privateKey) {
                    var sig = secp256k1.sign(msgHash, privateKey),
                        ret = {};
                    return (ret.r = sig.signature.slice(0, 32)), (ret.s = sig.signature.slice(32, 64)), (ret.v = sig.recovery + 27), ret;
                }),
                (exports.hashPersonalMessage = function (message) {
                    var prefix = exports.toBuffer("\x19Ethereum Signed Message:\n" + message.length.toString());
                    return exports.keccak(Buffer.concat([prefix, message]));
                }),
                (exports.ecrecover = function (msgHash, v, r, s) {
                    var signature = Buffer.concat([exports.setLength(r, 32), exports.setLength(s, 32)], 64),
                        recovery = v - 27;
                    if (0 !== recovery && 1 !== recovery) throw Error("Invalid signature v value");
                    var senderPubKey = secp256k1.recover(msgHash, signature, recovery);
                    return secp256k1.publicKeyConvert(senderPubKey, !1).slice(1);
                }),
                (exports.toRpcSig = function (v, r, s) {
                    if (27 !== v && 28 !== v) throw Error("Invalid recovery id");
                    return exports.bufferToHex(Buffer.concat([exports.setLengthLeft(r, 32), exports.setLengthLeft(s, 32), exports.toBuffer(v - 27)]));
                }),
                (exports.fromRpcSig = function (sig) {
                    if (65 !== (sig = exports.toBuffer(sig)).length) throw Error("Invalid signature length");
                    var v = sig[64];
                    return v < 27 && (v += 27), { v: v, r: sig.slice(0, 32), s: sig.slice(32, 64) };
                }),
                (exports.privateToAddress = function (privateKey) {
                    return exports.publicToAddress(privateToPublic(privateKey));
                }),
                (exports.isValidAddress = function (address) {
                    return /^0x[0-9a-fA-F]{40}$/.test(address);
                }),
                (exports.isZeroAddress = function (address) {
                    return exports.zeroAddress() === exports.addHexPrefix(address);
                }),
                (exports.toChecksumAddress = function (address) {
                    address = exports.stripHexPrefix(address).toLowerCase();
                    for (var hash = exports.keccak(address).toString("hex"), ret = "0x", i = 0; i < address.length; i++) parseInt(hash[i], 16) >= 8 ? (ret += address[i].toUpperCase()) : (ret += address[i]);
                    return ret;
                }),
                (exports.isValidChecksumAddress = function (address) {
                    return exports.isValidAddress(address) && exports.toChecksumAddress(address) === address;
                }),
                (exports.generateAddress = function (from, nonce) {
                    return (from = exports.toBuffer(from)), (nonce = (nonce = new BN(nonce)).isZero() ? null : Buffer.from(nonce.toArray())), exports.rlphash([from, nonce]).slice(-20);
                }),
                (exports.isPrecompiled = function (address) {
                    var a = exports.unpad(address);
                    return 1 === a.length && a[0] >= 1 && a[0] <= 8;
                }),
                (exports.addHexPrefix = function (str) {
                    return "string" != typeof str ? str : exports.isHexPrefixed(str) ? str : "0x" + str;
                }),
                (exports.isValidSignature = function (v, r, s, homestead) {
                    var SECP256K1_N_DIV_2 = new BN("7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0", 16),
                        SECP256K1_N = new BN("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141", 16);
                    return (
                        32 === r.length &&
                        32 === s.length &&
                        (27 === v || 28 === v) &&
                        ((r = new BN(r)), (s = new BN(s)), !(r.isZero() || r.gt(SECP256K1_N) || s.isZero() || s.gt(SECP256K1_N)) && (!1 !== homestead || 1 !== new BN(s).cmp(SECP256K1_N_DIV_2)))
                    );
                }),
                (exports.baToJSON = function (ba) {
                    if (Buffer.isBuffer(ba)) return "0x" + ba.toString("hex");
                    if (ba instanceof Array) {
                        for (var array = [], i = 0; i < ba.length; i++) array.push(exports.baToJSON(ba[i]));
                        return array;
                    }
                }),
                (exports.defineProperties = function (self1, fields, data) {
                    if (
                        ((self1.raw = []),
                        (self1._fields = []),
                        (self1.toJSON = function (label) {
                            if (label) {
                                var obj = {};
                                return (
                                    self1._fields.forEach(function (field) {
                                        obj[field] = "0x" + self1[field].toString("hex");
                                    }),
                                    obj
                                );
                            }
                            return exports.baToJSON(this.raw);
                        }),
                        (self1.serialize = function () {
                            return rlp.encode(self1.raw);
                        }),
                        fields.forEach(function (field, i) {
                            function getter() {
                                return self1.raw[i];
                            }
                            function setter(v) {
                                "00" !== (v = exports.toBuffer(v)).toString("hex") || field.allowZero || (v = Buffer.allocUnsafe(0)),
                                    field.allowLess && field.length
                                        ? ((v = exports.stripZeros(v)), assert(field.length >= v.length, "The field " + field.name + " must not have more " + field.length + " bytes"))
                                        : !(field.allowZero && 0 === v.length) && field.length && assert(field.length === v.length, "The field " + field.name + " must have byte length of " + field.length),
                                    (self1.raw[i] = v);
                            }
                            self1._fields.push(field.name),
                                Object.defineProperty(self1, field.name, { enumerable: !0, configurable: !0, get: getter, set: setter }),
                                field.default && (self1[field.name] = field.default),
                                field.alias && Object.defineProperty(self1, field.alias, { enumerable: !1, configurable: !0, set: setter, get: getter });
                        }),
                        data)
                    ) {
                        if (("string" == typeof data && (data = Buffer.from(exports.stripHexPrefix(data), "hex")), Buffer.isBuffer(data) && (data = rlp.decode(data)), Array.isArray(data))) {
                            if (data.length > self1._fields.length) throw Error("wrong number of fields in data");
                            data.forEach(function (d, i) {
                                self1[self1._fields[i]] = exports.toBuffer(d);
                            });
                        } else if ((void 0 === data ? "undefined" : _typeof(data)) === "object") {
                            var keys = Object.keys(data);
                            fields.forEach(function (field) {
                                -1 !== keys.indexOf(field.name) && (self1[field.name] = data[field.name]), -1 !== keys.indexOf(field.alias) && (self1[field.alias] = data[field.alias]);
                            });
                        } else throw Error("invalid data");
                    }
                });
        },
        24565: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var Buffer = __webpack_require__(48764).Buffer,
                secp256k1 = __webpack_require__(95053),
                secp256k1v3 = __webpack_require__(67587),
                der = __webpack_require__(85484),
                privateKeyVerify = function (privateKey) {
                    return 32 === privateKey.length && secp256k1.privateKeyVerify(Uint8Array.from(privateKey));
                };
            module.exports = {
                privateKeyVerify: privateKeyVerify,
                privateKeyExport: function (privateKey, compressed) {
                    if (32 !== privateKey.length) throw RangeError("private key length is invalid");
                    var publicKey = secp256k1v3.privateKeyExport(privateKey, compressed);
                    return der.privateKeyExport(privateKey, publicKey, compressed);
                },
                privateKeyImport: function (privateKey) {
                    if (null !== (privateKey = der.privateKeyImport(privateKey)) && 32 === privateKey.length && privateKeyVerify(privateKey)) return privateKey;
                    throw Error("couldn't import from DER format");
                },
                privateKeyNegate: function (privateKey) {
                    return Buffer.from(secp256k1.privateKeyNegate(Uint8Array.from(privateKey)));
                },
                privateKeyModInverse: function (privateKey) {
                    if (32 !== privateKey.length) throw Error("private key length is invalid");
                    return Buffer.from(secp256k1v3.privateKeyModInverse(Uint8Array.from(privateKey)));
                },
                privateKeyTweakAdd: function (privateKey, tweak) {
                    return Buffer.from(secp256k1.privateKeyTweakAdd(Uint8Array.from(privateKey), tweak));
                },
                privateKeyTweakMul: function (privateKey, tweak) {
                    return Buffer.from(secp256k1.privateKeyTweakMul(Uint8Array.from(privateKey), Uint8Array.from(tweak)));
                },
                publicKeyCreate: function (privateKey, compressed) {
                    return Buffer.from(secp256k1.publicKeyCreate(Uint8Array.from(privateKey), compressed));
                },
                publicKeyConvert: function (publicKey, compressed) {
                    return Buffer.from(secp256k1.publicKeyConvert(Uint8Array.from(publicKey), compressed));
                },
                publicKeyVerify: function (publicKey) {
                    return (33 === publicKey.length || 65 === publicKey.length) && secp256k1.publicKeyVerify(Uint8Array.from(publicKey));
                },
                publicKeyTweakAdd: function (publicKey, tweak, compressed) {
                    return Buffer.from(secp256k1.publicKeyTweakAdd(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));
                },
                publicKeyTweakMul: function (publicKey, tweak, compressed) {
                    return Buffer.from(secp256k1.publicKeyTweakMul(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));
                },
                publicKeyCombine: function (publicKeys, compressed) {
                    var keys = [];
                    return (
                        publicKeys.forEach(function (publicKey) {
                            keys.push(Uint8Array.from(publicKey));
                        }),
                        Buffer.from(secp256k1.publicKeyCombine(keys, compressed))
                    );
                },
                signatureNormalize: function (signature) {
                    return Buffer.from(secp256k1.signatureNormalize(Uint8Array.from(signature)));
                },
                signatureExport: function (signature) {
                    return Buffer.from(secp256k1.signatureExport(Uint8Array.from(signature)));
                },
                signatureImport: function (signature) {
                    return Buffer.from(secp256k1.signatureImport(Uint8Array.from(signature)));
                },
                signatureImportLax: function (signature) {
                    if (0 === signature.length) throw RangeError("signature length is invalid");
                    var sigObj = der.signatureImportLax(signature);
                    if (null === sigObj) throw Error("couldn't parse DER signature");
                    return secp256k1v3.signatureImport(sigObj);
                },
                sign: function (message, privateKey, options) {
                    if (null === options) throw TypeError("options should be an Object");
                    var signOptions = void 0;
                    if (options) {
                        if (((signOptions = {}), null === options.data)) throw TypeError("options.data should be a Buffer");
                        if (options.data) {
                            if (32 !== options.data.length) throw RangeError("options.data length is invalid");
                            signOptions.data = new Uint8Array(options.data);
                        }
                        if (null === options.noncefn) throw TypeError("options.noncefn should be a Function");
                        options.noncefn &&
                            (signOptions.noncefn = function (message, privateKey, algo, data, attempt) {
                                var bufferAlgo = null != algo ? Buffer.from(algo) : null,
                                    bufferData = null != data ? Buffer.from(data) : null,
                                    buffer = Buffer.from("");
                                return options.noncefn && (buffer = options.noncefn(Buffer.from(message), Buffer.from(privateKey), bufferAlgo, bufferData, attempt)), Uint8Array.from(buffer);
                            });
                    }
                    var sig = secp256k1.ecdsaSign(Uint8Array.from(message), Uint8Array.from(privateKey), signOptions);
                    return { signature: Buffer.from(sig.signature), recovery: sig.recid };
                },
                verify: function (message, signature, publicKey) {
                    return secp256k1.ecdsaVerify(Uint8Array.from(signature), Uint8Array.from(message), publicKey);
                },
                recover: function (message, signature, recid, compressed) {
                    return Buffer.from(secp256k1.ecdsaRecover(Uint8Array.from(signature), recid, Uint8Array.from(message), compressed));
                },
                ecdh: function (publicKey, privateKey) {
                    return Buffer.from(secp256k1.ecdh(Uint8Array.from(publicKey), Uint8Array.from(privateKey), {}));
                },
                ecdhUnsafe: function (publicKey, privateKey, compressed) {
                    if (33 !== publicKey.length && 65 !== publicKey.length) throw RangeError("public key length is invalid");
                    if (32 !== privateKey.length) throw RangeError("private key length is invalid");
                    return Buffer.from(secp256k1v3.ecdhUnsafe(Uint8Array.from(publicKey), Uint8Array.from(privateKey), compressed));
                },
            };
        },
        85484: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var Buffer = __webpack_require__(48764).Buffer,
                EC_PRIVKEY_EXPORT_DER_COMPRESSED = Buffer.from([
                    48,
                    129,
                    211,
                    2,
                    1,
                    1,
                    4,
                    32,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    160,
                    129,
                    133,
                    48,
                    129,
                    130,
                    2,
                    1,
                    1,
                    48,
                    44,
                    6,
                    7,
                    42,
                    134,
                    72,
                    206,
                    61,
                    1,
                    1,
                    2,
                    33,
                    0,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    254,
                    255,
                    255,
                    252,
                    47,
                    48,
                    6,
                    4,
                    1,
                    0,
                    4,
                    1,
                    7,
                    4,
                    33,
                    2,
                    121,
                    190,
                    102,
                    126,
                    249,
                    220,
                    187,
                    172,
                    85,
                    160,
                    98,
                    149,
                    206,
                    135,
                    11,
                    7,
                    2,
                    155,
                    252,
                    219,
                    45,
                    206,
                    40,
                    217,
                    89,
                    242,
                    129,
                    91,
                    22,
                    248,
                    23,
                    152,
                    2,
                    33,
                    0,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    254,
                    186,
                    174,
                    220,
                    230,
                    175,
                    72,
                    160,
                    59,
                    191,
                    210,
                    94,
                    140,
                    208,
                    54,
                    65,
                    65,
                    2,
                    1,
                    1,
                    161,
                    36,
                    3,
                    34,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                ]),
                EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED = Buffer.from([
                    48,
                    130,
                    1,
                    19,
                    2,
                    1,
                    1,
                    4,
                    32,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    160,
                    129,
                    165,
                    48,
                    129,
                    162,
                    2,
                    1,
                    1,
                    48,
                    44,
                    6,
                    7,
                    42,
                    134,
                    72,
                    206,
                    61,
                    1,
                    1,
                    2,
                    33,
                    0,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    254,
                    255,
                    255,
                    252,
                    47,
                    48,
                    6,
                    4,
                    1,
                    0,
                    4,
                    1,
                    7,
                    4,
                    65,
                    4,
                    121,
                    190,
                    102,
                    126,
                    249,
                    220,
                    187,
                    172,
                    85,
                    160,
                    98,
                    149,
                    206,
                    135,
                    11,
                    7,
                    2,
                    155,
                    252,
                    219,
                    45,
                    206,
                    40,
                    217,
                    89,
                    242,
                    129,
                    91,
                    22,
                    248,
                    23,
                    152,
                    72,
                    58,
                    218,
                    119,
                    38,
                    163,
                    196,
                    101,
                    93,
                    164,
                    251,
                    252,
                    14,
                    17,
                    8,
                    168,
                    253,
                    23,
                    180,
                    72,
                    166,
                    133,
                    84,
                    25,
                    156,
                    71,
                    208,
                    143,
                    251,
                    16,
                    212,
                    184,
                    2,
                    33,
                    0,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    254,
                    186,
                    174,
                    220,
                    230,
                    175,
                    72,
                    160,
                    59,
                    191,
                    210,
                    94,
                    140,
                    208,
                    54,
                    65,
                    65,
                    2,
                    1,
                    1,
                    161,
                    68,
                    3,
                    66,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                ]);
            (exports.privateKeyExport = function (privateKey, publicKey, compressed) {
                var result = Buffer.from(compressed ? EC_PRIVKEY_EXPORT_DER_COMPRESSED : EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED);
                return privateKey.copy(result, compressed ? 8 : 9), publicKey.copy(result, compressed ? 181 : 214), result;
            }),
                (exports.privateKeyImport = function (privateKey) {
                    var length = privateKey.length,
                        index = 0;
                    if (length < 1 || 48 !== privateKey[index] || length < (index += 1) + 1 || !(128 & privateKey[index])) return null;
                    var lenb = 127 & privateKey[index];
                    if (((index += 1), lenb < 1 || lenb > 2 || length < index + lenb)) return null;
                    var len = privateKey[index + lenb - 1] | (lenb > 1 ? privateKey[index + lenb - 2] << 8 : 0);
                    return length < (index += lenb) + len ||
                        length < index + 3 ||
                        2 !== privateKey[index] ||
                        1 !== privateKey[index + 1] ||
                        1 !== privateKey[index + 2] ||
                        length < (index += 3) + 2 ||
                        4 !== privateKey[index] ||
                        privateKey[index + 1] > 32 ||
                        length < index + 2 + privateKey[index + 1]
                        ? null
                        : privateKey.slice(index + 2, index + 2 + privateKey[index + 1]);
                }),
                (exports.signatureImportLax = function (signature) {
                    var r = Buffer.alloc(32, 0),
                        s = Buffer.alloc(32, 0),
                        length = signature.length,
                        index = 0;
                    if (48 !== signature[index++]) return null;
                    var lenbyte = signature[index++];
                    if ((128 & lenbyte && (index += lenbyte - 128) > length) || 2 !== signature[index++]) return null;
                    var rlen = signature[index++];
                    if (128 & rlen) {
                        if (index + (lenbyte = rlen - 128) > length) return null;
                        for (; lenbyte > 0 && 0 === signature[index]; index += 1, lenbyte -= 1);
                        for (rlen = 0; lenbyte > 0; index += 1, lenbyte -= 1) rlen = (rlen << 8) + signature[index];
                    }
                    if (rlen > length - index) return null;
                    var rindex = index;
                    if (((index += rlen), 2 !== signature[index++])) return null;
                    var slen = signature[index++];
                    if (128 & slen) {
                        if (index + (lenbyte = slen - 128) > length) return null;
                        for (; lenbyte > 0 && 0 === signature[index]; index += 1, lenbyte -= 1);
                        for (slen = 0; lenbyte > 0; index += 1, lenbyte -= 1) slen = (slen << 8) + signature[index];
                    }
                    if (slen > length - index) return null;
                    var sindex = index;
                    for (index += slen; rlen > 0 && 0 === signature[rindex]; rlen -= 1, rindex += 1);
                    if (rlen > 32) return null;
                    var rvalue = signature.slice(rindex, rindex + rlen);
                    for (rvalue.copy(r, 32 - rvalue.length); slen > 0 && 0 === signature[sindex]; slen -= 1, sindex += 1);
                    if (slen > 32) return null;
                    var svalue = signature.slice(sindex, sindex + slen);
                    return svalue.copy(s, 32 - svalue.length), { r: r, s: s };
                });
        },
        67587: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var Buffer = __webpack_require__(48764).Buffer,
                BN = __webpack_require__(13550),
                ec = new (__webpack_require__(86266).ec)("secp256k1"),
                ecparams = ec.curve;
            (exports.privateKeyExport = function (privateKey, compressed) {
                var d = new BN(privateKey);
                if (d.ucmp(ecparams.n) >= 0) throw Error("couldn't export to DER format");
                var point = ec.g.mul(d);
                return toPublicKey(point.getX(), point.getY(), compressed);
            }),
                (exports.privateKeyModInverse = function (privateKey) {
                    var bn = new BN(privateKey);
                    if (bn.ucmp(ecparams.n) >= 0 || bn.isZero()) throw Error("private key range is invalid");
                    return bn.invm(ecparams.n).toArrayLike(Buffer, "be", 32);
                }),
                (exports.signatureImport = function (sigObj) {
                    var r = new BN(sigObj.r);
                    r.ucmp(ecparams.n) >= 0 && (r = new BN(0));
                    var s = new BN(sigObj.s);
                    return s.ucmp(ecparams.n) >= 0 && (s = new BN(0)), Buffer.concat([r.toArrayLike(Buffer, "be", 32), s.toArrayLike(Buffer, "be", 32)]);
                }),
                (exports.ecdhUnsafe = function (publicKey, privateKey, compressed) {
                    var point = ec.keyFromPublic(publicKey),
                        scalar = new BN(privateKey);
                    if (scalar.ucmp(ecparams.n) >= 0 || scalar.isZero()) throw Error("scalar was invalid (zero or overflow)");
                    var shared = point.pub.mul(scalar);
                    return toPublicKey(shared.getX(), shared.getY(), compressed);
                });
            var toPublicKey = function (x, y, compressed) {
                var publicKey = void 0;
                return (
                    compressed
                        ? (((publicKey = Buffer.alloc(33))[0] = y.isOdd() ? 3 : 2), x.toArrayLike(Buffer, "be", 32).copy(publicKey, 1))
                        : (((publicKey = Buffer.alloc(65))[0] = 4), x.toArrayLike(Buffer, "be", 32).copy(publicKey, 1), y.toArrayLike(Buffer, "be", 32).copy(publicKey, 33)),
                    publicKey
                );
            };
        },
        80884: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var Buffer = __webpack_require__(48764).Buffer,
                isHexPrefixed = __webpack_require__(23944),
                stripHexPrefix = __webpack_require__(49604);
            function padToEven(value) {
                var a = value;
                if ("string" != typeof a) throw Error("[ethjs-util] while padding to even, value must be string, is currently " + typeof a + ", while padToEven.");
                return a.length % 2 && (a = "0" + a), a;
            }
            function intToHex(i) {
                return "0x" + i.toString(16);
            }
            module.exports = {
                arrayContainsArray: function (superset, subset, some) {
                    if (!0 !== Array.isArray(superset)) throw Error("[ethjs-util] method arrayContainsArray requires input 'superset' to be an array got type '" + typeof superset + "'");
                    if (!0 !== Array.isArray(subset)) throw Error("[ethjs-util] method arrayContainsArray requires input 'subset' to be an array got type '" + typeof subset + "'");
                    return subset[(Boolean(some) && "some") || "every"](function (value) {
                        return superset.indexOf(value) >= 0;
                    });
                },
                intToBuffer: function (i) {
                    var hex = intToHex(i);
                    return new Buffer(padToEven(hex.slice(2)), "hex");
                },
                getBinarySize: function (str) {
                    if ("string" != typeof str) throw Error("[ethjs-util] while getting binary size, method getBinarySize requires input 'str' to be type String, got '" + typeof str + "'.");
                    return Buffer.byteLength(str, "utf8");
                },
                isHexPrefixed: isHexPrefixed,
                stripHexPrefix: stripHexPrefix,
                padToEven: padToEven,
                intToHex: intToHex,
                fromAscii: function (stringValue) {
                    for (var hex = "", i = 0; i < stringValue.length; i++) {
                        var n = stringValue.charCodeAt(i).toString(16);
                        hex += n.length < 2 ? "0" + n : n;
                    }
                    return "0x" + hex;
                },
                fromUtf8: function (stringValue) {
                    return "0x" + padToEven(new Buffer(stringValue, "utf8").toString("hex")).replace(/^0+|0+$/g, "");
                },
                toAscii: function (hex) {
                    var str = "",
                        i = 0,
                        l = hex.length;
                    for ("0x" === hex.substring(0, 2) && (i = 2); i < l; i += 2) str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));
                    return str;
                },
                toUtf8: function (hex) {
                    return new Buffer(padToEven(stripHexPrefix(hex).replace(/^0+|0+$/g, "")), "hex").toString("utf8");
                },
                getKeys: function (params, key, allowEmpty) {
                    if (!Array.isArray(params)) throw Error("[ethjs-util] method getKeys expecting type Array as 'params' input, got '" + typeof params + "'");
                    if ("string" != typeof key) throw Error("[ethjs-util] method getKeys expecting type String for input 'key' got '" + typeof key + "'.");
                    for (var result = [], i = 0; i < params.length; i++) {
                        var value = params[i][key];
                        if (allowEmpty && !value) value = "";
                        else if ("string" != typeof value) throw Error("invalid abi");
                        result.push(value);
                    }
                    return result;
                },
                isHexString: function (value, length) {
                    return "string" == typeof value && !!value.match(/^0x[0-9A-Fa-f]*$/) && (!length || value.length === 2 + 2 * length);
                },
            };
        },
        26729: function (module) {
            "use strict";
            var has = Object.prototype.hasOwnProperty,
                prefix = "~";
            function Events() {}
            function EE(fn, context, once) {
                (this.fn = fn), (this.context = context), (this.once = once || !1);
            }
            function addListener(emitter, event, fn, context, once) {
                if ("function" != typeof fn) throw TypeError("The listener must be a function");
                var listener = new EE(fn, context || emitter, once),
                    evt = prefix ? prefix + event : event;
                return (
                    emitter._events[evt] ? (emitter._events[evt].fn ? (emitter._events[evt] = [emitter._events[evt], listener]) : emitter._events[evt].push(listener)) : ((emitter._events[evt] = listener), emitter._eventsCount++), emitter
                );
            }
            function clearEvent(emitter, evt) {
                0 == --emitter._eventsCount ? (emitter._events = new Events()) : delete emitter._events[evt];
            }
            function EventEmitter() {
                (this._events = new Events()), (this._eventsCount = 0);
            }
            Object.create && ((Events.prototype = Object.create(null)), new Events().__proto__ || (prefix = !1)),
                (EventEmitter.prototype.eventNames = function () {
                    var events,
                        name,
                        names = [];
                    if (0 === this._eventsCount) return names;
                    for (name in (events = this._events)) has.call(events, name) && names.push(prefix ? name.slice(1) : name);
                    return Object.getOwnPropertySymbols ? names.concat(Object.getOwnPropertySymbols(events)) : names;
                }),
                (EventEmitter.prototype.listeners = function (event) {
                    var evt = prefix ? prefix + event : event,
                        handlers = this._events[evt];
                    if (!handlers) return [];
                    if (handlers.fn) return [handlers.fn];
                    for (var i = 0, l = handlers.length, ee = Array(l); i < l; i++) ee[i] = handlers[i].fn;
                    return ee;
                }),
                (EventEmitter.prototype.listenerCount = function (event) {
                    var evt = prefix ? prefix + event : event,
                        listeners = this._events[evt];
                    return listeners ? (listeners.fn ? 1 : listeners.length) : 0;
                }),
                (EventEmitter.prototype.emit = function (event, a1, a2, a3, a4, a5) {
                    var evt = prefix ? prefix + event : event;
                    if (!this._events[evt]) return !1;
                    var args,
                        i,
                        listeners = this._events[evt],
                        len = arguments.length;
                    if (listeners.fn) {
                        switch ((listeners.once && this.removeListener(event, listeners.fn, void 0, !0), len)) {
                            case 1:
                                return listeners.fn.call(listeners.context), !0;
                            case 2:
                                return listeners.fn.call(listeners.context, a1), !0;
                            case 3:
                                return listeners.fn.call(listeners.context, a1, a2), !0;
                            case 4:
                                return listeners.fn.call(listeners.context, a1, a2, a3), !0;
                            case 5:
                                return listeners.fn.call(listeners.context, a1, a2, a3, a4), !0;
                            case 6:
                                return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), !0;
                        }
                        for (i = 1, args = Array(len - 1); i < len; i++) args[i - 1] = arguments[i];
                        listeners.fn.apply(listeners.context, args);
                    } else {
                        var j,
                            length = listeners.length;
                        for (i = 0; i < length; i++)
                            switch ((listeners[i].once && this.removeListener(event, listeners[i].fn, void 0, !0), len)) {
                                case 1:
                                    listeners[i].fn.call(listeners[i].context);
                                    break;
                                case 2:
                                    listeners[i].fn.call(listeners[i].context, a1);
                                    break;
                                case 3:
                                    listeners[i].fn.call(listeners[i].context, a1, a2);
                                    break;
                                case 4:
                                    listeners[i].fn.call(listeners[i].context, a1, a2, a3);
                                    break;
                                default:
                                    if (!args) for (j = 1, args = Array(len - 1); j < len; j++) args[j - 1] = arguments[j];
                                    listeners[i].fn.apply(listeners[i].context, args);
                            }
                    }
                    return !0;
                }),
                (EventEmitter.prototype.on = function (event, fn, context) {
                    return addListener(this, event, fn, context, !1);
                }),
                (EventEmitter.prototype.once = function (event, fn, context) {
                    return addListener(this, event, fn, context, !0);
                }),
                (EventEmitter.prototype.removeListener = function (event, fn, context, once) {
                    var evt = prefix ? prefix + event : event;
                    if (!this._events[evt]) return this;
                    if (!fn) return clearEvent(this, evt), this;
                    var listeners = this._events[evt];
                    if (listeners.fn) listeners.fn !== fn || (once && !listeners.once) || (context && listeners.context !== context) || clearEvent(this, evt);
                    else {
                        for (var i = 0, events = [], length = listeners.length; i < length; i++) (listeners[i].fn !== fn || (once && !listeners[i].once) || (context && listeners[i].context !== context)) && events.push(listeners[i]);
                        events.length ? (this._events[evt] = 1 === events.length ? events[0] : events) : clearEvent(this, evt);
                    }
                    return this;
                }),
                (EventEmitter.prototype.removeAllListeners = function (event) {
                    var evt;
                    return event ? ((evt = prefix ? prefix + event : event), this._events[evt] && clearEvent(this, evt)) : ((this._events = new Events()), (this._eventsCount = 0)), this;
                }),
                (EventEmitter.prototype.off = EventEmitter.prototype.removeListener),
                (EventEmitter.prototype.addListener = EventEmitter.prototype.on),
                (EventEmitter.prefixed = prefix),
                (EventEmitter.EventEmitter = EventEmitter),
                (module.exports = EventEmitter);
        },
        17187: function (module) {
            "use strict";
            var ReflectOwnKeys,
                R = "object" == typeof Reflect ? Reflect : null,
                ReflectApply =
                    R && "function" == typeof R.apply
                        ? R.apply
                        : function (target, receiver, args) {
                              return Function.prototype.apply.call(target, receiver, args);
                          };
            ReflectOwnKeys =
                R && "function" == typeof R.ownKeys
                    ? R.ownKeys
                    : Object.getOwnPropertySymbols
                    ? function (target) {
                          return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));
                      }
                    : function (target) {
                          return Object.getOwnPropertyNames(target);
                      };
            var NumberIsNaN =
                Number.isNaN ||
                function (value) {
                    return value != value;
                };
            function EventEmitter() {
                EventEmitter.init.call(this);
            }
            (module.exports = EventEmitter),
                (module.exports.once = function (emitter, name) {
                    return new Promise(function (resolve, reject) {
                        function errorListener(err) {
                            emitter.removeListener(name, resolver), reject(err);
                        }
                        function resolver() {
                            "function" == typeof emitter.removeListener && emitter.removeListener("error", errorListener), resolve([].slice.call(arguments));
                        }
                        eventTargetAgnosticAddListener(emitter, name, resolver, { once: !0 }), "error" !== name && "function" == typeof emitter.on && eventTargetAgnosticAddListener(emitter, "error", errorListener, { once: !0 });
                    });
                }),
                (EventEmitter.EventEmitter = EventEmitter),
                (EventEmitter.prototype._events = void 0),
                (EventEmitter.prototype._eventsCount = 0),
                (EventEmitter.prototype._maxListeners = void 0);
            var defaultMaxListeners = 10;
            function checkListener(listener) {
                if ("function" != typeof listener) throw TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
            }
            function _getMaxListeners(that) {
                return void 0 === that._maxListeners ? EventEmitter.defaultMaxListeners : that._maxListeners;
            }
            function _addListener(target, type, listener, prepend) {
                if (
                    (checkListener(listener),
                    void 0 === (events = target._events)
                        ? ((events = target._events = Object.create(null)), (target._eventsCount = 0))
                        : (void 0 !== events.newListener && (target.emit("newListener", type, listener.listener ? listener.listener : listener), (events = target._events)), (existing = events[type])),
                    void 0 === existing)
                )
                    (existing = events[type] = listener), ++target._eventsCount;
                else if (
                    ("function" == typeof existing ? (existing = events[type] = prepend ? [listener, existing] : [existing, listener]) : prepend ? existing.unshift(listener) : existing.push(listener),
                    (m = _getMaxListeners(target)) > 0 && existing.length > m && !existing.warned)
                ) {
                    existing.warned = !0;
                    var m,
                        events,
                        existing,
                        w = Error("Possible EventEmitter memory leak detected. " + existing.length + " " + String(type) + " listeners added. Use emitter.setMaxListeners() to increase limit");
                    (w.name = "MaxListenersExceededWarning"), (w.emitter = target), (w.type = type), (w.count = existing.length), console && console.warn && console.warn(w);
                }
                return target;
            }
            function onceWrapper() {
                if (!this.fired) return (this.target.removeListener(this.type, this.wrapFn), (this.fired = !0), 0 == arguments.length) ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
            }
            function _onceWrap(target, type, listener) {
                var state = { fired: !1, wrapFn: void 0, target: target, type: type, listener: listener },
                    wrapped = onceWrapper.bind(state);
                return (wrapped.listener = listener), (state.wrapFn = wrapped), wrapped;
            }
            function _listeners(target, type, unwrap) {
                var events = target._events;
                if (void 0 === events) return [];
                var evlistener = events[type];
                return void 0 === evlistener
                    ? []
                    : "function" == typeof evlistener
                    ? unwrap
                        ? [evlistener.listener || evlistener]
                        : [evlistener]
                    : unwrap
                    ? (function (arr) {
                          for (var ret = Array(arr.length), i = 0; i < ret.length; ++i) ret[i] = arr[i].listener || arr[i];
                          return ret;
                      })(evlistener)
                    : arrayClone(evlistener, evlistener.length);
            }
            function listenerCount(type) {
                var events = this._events;
                if (void 0 !== events) {
                    var evlistener = events[type];
                    if ("function" == typeof evlistener) return 1;
                    if (void 0 !== evlistener) return evlistener.length;
                }
                return 0;
            }
            function arrayClone(arr, n) {
                for (var copy = Array(n), i = 0; i < n; ++i) copy[i] = arr[i];
                return copy;
            }
            function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
                if ("function" == typeof emitter.on) flags.once ? emitter.once(name, listener) : emitter.on(name, listener);
                else if ("function" == typeof emitter.addEventListener)
                    emitter.addEventListener(name, function wrapListener(arg) {
                        flags.once && emitter.removeEventListener(name, wrapListener), listener(arg);
                    });
                else throw TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
            }
            Object.defineProperty(EventEmitter, "defaultMaxListeners", {
                enumerable: !0,
                get: function () {
                    return defaultMaxListeners;
                },
                set: function (arg) {
                    if ("number" != typeof arg || arg < 0 || NumberIsNaN(arg)) throw RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + ".");
                    defaultMaxListeners = arg;
                },
            }),
                (EventEmitter.init = function () {
                    (void 0 === this._events || this._events === Object.getPrototypeOf(this)._events) && ((this._events = Object.create(null)), (this._eventsCount = 0)), (this._maxListeners = this._maxListeners || void 0);
                }),
                (EventEmitter.prototype.setMaxListeners = function (n) {
                    if ("number" != typeof n || n < 0 || NumberIsNaN(n)) throw RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + ".");
                    return (this._maxListeners = n), this;
                }),
                (EventEmitter.prototype.getMaxListeners = function () {
                    return _getMaxListeners(this);
                }),
                (EventEmitter.prototype.emit = function (type) {
                    for (var args = [], i = 1; i < arguments.length; i++) args.push(arguments[i]);
                    var doError = "error" === type,
                        events = this._events;
                    if (void 0 !== events) doError = doError && void 0 === events.error;
                    else if (!doError) return !1;
                    if (doError) {
                        if ((args.length > 0 && (er = args[0]), er instanceof Error)) throw er;
                        var er,
                            err = Error("Unhandled error." + (er ? " (" + er.message + ")" : ""));
                        throw ((err.context = er), err);
                    }
                    var handler = events[type];
                    if (void 0 === handler) return !1;
                    if ("function" == typeof handler) ReflectApply(handler, this, args);
                    else for (var len = handler.length, listeners = arrayClone(handler, len), i = 0; i < len; ++i) ReflectApply(listeners[i], this, args);
                    return !0;
                }),
                (EventEmitter.prototype.addListener = function (type, listener) {
                    return _addListener(this, type, listener, !1);
                }),
                (EventEmitter.prototype.on = EventEmitter.prototype.addListener),
                (EventEmitter.prototype.prependListener = function (type, listener) {
                    return _addListener(this, type, listener, !0);
                }),
                (EventEmitter.prototype.once = function (type, listener) {
                    return checkListener(listener), this.on(type, _onceWrap(this, type, listener)), this;
                }),
                (EventEmitter.prototype.prependOnceListener = function (type, listener) {
                    return checkListener(listener), this.prependListener(type, _onceWrap(this, type, listener)), this;
                }),
                (EventEmitter.prototype.removeListener = function (type, listener) {
                    var list, events, position, i, originalListener;
                    if ((checkListener(listener), void 0 === (events = this._events) || void 0 === (list = events[type]))) return this;
                    if (list === listener || list.listener === listener)
                        0 == --this._eventsCount ? (this._events = Object.create(null)) : (delete events[type], events.removeListener && this.emit("removeListener", type, list.listener || listener));
                    else if ("function" != typeof list) {
                        for (position = -1, i = list.length - 1; i >= 0; i--)
                            if (list[i] === listener || list[i].listener === listener) {
                                (originalListener = list[i].listener), (position = i);
                                break;
                            }
                        if (position < 0) return this;
                        0 === position
                            ? list.shift()
                            : (function (list, index) {
                                  for (; index + 1 < list.length; index++) list[index] = list[index + 1];
                                  list.pop();
                              })(list, position),
                            1 === list.length && (events[type] = list[0]),
                            void 0 !== events.removeListener && this.emit("removeListener", type, originalListener || listener);
                    }
                    return this;
                }),
                (EventEmitter.prototype.off = EventEmitter.prototype.removeListener),
                (EventEmitter.prototype.removeAllListeners = function (type) {
                    var listeners, events, i;
                    if (void 0 === (events = this._events)) return this;
                    if (void 0 === events.removeListener)
                        return (
                            0 == arguments.length ? ((this._events = Object.create(null)), (this._eventsCount = 0)) : void 0 !== events[type] && (0 == --this._eventsCount ? (this._events = Object.create(null)) : delete events[type]), this
                        );
                    if (0 == arguments.length) {
                        var key,
                            keys = Object.keys(events);
                        for (i = 0; i < keys.length; ++i) "removeListener" !== (key = keys[i]) && this.removeAllListeners(key);
                        return this.removeAllListeners("removeListener"), (this._events = Object.create(null)), (this._eventsCount = 0), this;
                    }
                    if ("function" == typeof (listeners = events[type])) this.removeListener(type, listeners);
                    else if (void 0 !== listeners) for (i = listeners.length - 1; i >= 0; i--) this.removeListener(type, listeners[i]);
                    return this;
                }),
                (EventEmitter.prototype.listeners = function (type) {
                    return _listeners(this, type, !0);
                }),
                (EventEmitter.prototype.rawListeners = function (type) {
                    return _listeners(this, type, !1);
                }),
                (EventEmitter.listenerCount = function (emitter, type) {
                    return "function" == typeof emitter.listenerCount ? emitter.listenerCount(type) : listenerCount.call(emitter, type);
                }),
                (EventEmitter.prototype.listenerCount = listenerCount),
                (EventEmitter.prototype.eventNames = function () {
                    return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
                });
        },
        58367: function (__unused_webpack_module, exports) {
            !(function (exports) {
                "use strict";
                var HAS_WEAKSET_SUPPORT = "function" == typeof WeakSet,
                    keys = Object.keys;
                function sameValueZeroEqual(a, b) {
                    return a === b || (a != a && b != b);
                }
                function isPlainObject(value) {
                    return value.constructor === Object || null == value.constructor;
                }
                function isPromiseLike(value) {
                    return !!value && "function" == typeof value.then;
                }
                function isReactElement(value) {
                    return !!(value && value.$$typeof);
                }
                var getNewCache = HAS_WEAKSET_SUPPORT
                    ? function () {
                          return new WeakSet();
                      }
                    : function () {
                          var values = [];
                          return {
                              add: function (value) {
                                  values.push(value);
                              },
                              has: function (value) {
                                  return -1 !== values.indexOf(value);
                              },
                          };
                      };
                function createCircularEqualCreator(isEqual) {
                    return function (comparator) {
                        var _comparator = isEqual || comparator;
                        return function (a, b, indexOrKeyA, indexOrKeyB, parentA, parentB, cache) {
                            void 0 === cache && (cache = getNewCache());
                            var isCacheableA = !!a && "object" == typeof a,
                                isCacheableB = !!b && "object" == typeof b;
                            if (isCacheableA || isCacheableB) {
                                var hasA = isCacheableA && cache.has(a),
                                    hasB = isCacheableB && cache.has(b);
                                if (hasA || hasB) return hasA && hasB;
                                isCacheableA && cache.add(a), isCacheableB && cache.add(b);
                            }
                            return _comparator(a, b, cache);
                        };
                    };
                }
                var hasOwnProperty = Function.prototype.bind.call(Function.prototype.call, Object.prototype.hasOwnProperty);
                function areObjectsEqual(a, b, isEqual, meta) {
                    var keysA = keys(a),
                        index = keysA.length;
                    if (keys(b).length !== index) return !1;
                    if (index)
                        for (var key = void 0; index-- > 0; ) {
                            if ("_owner" === (key = keysA[index])) {
                                var reactElementA = isReactElement(a),
                                    reactElementB = isReactElement(b);
                                if ((reactElementA || reactElementB) && reactElementA !== reactElementB) return !1;
                            }
                            if (!hasOwnProperty(b, key) || !isEqual(a[key], b[key], key, key, a, b, meta)) return !1;
                        }
                    return !0;
                }
                var HAS_MAP_SUPPORT = "function" == typeof Map,
                    HAS_SET_SUPPORT = "function" == typeof Set;
                function createComparator(createIsEqual) {
                    var isEqual =
                        "function" == typeof createIsEqual
                            ? createIsEqual(comparator)
                            : function (a, b, indexOrKeyA, indexOrKeyB, parentA, parentB, meta) {
                                  return comparator(a, b, meta);
                              };
                    function comparator(a, b, meta) {
                        if (a === b) return !0;
                        if (a && b && "object" == typeof a && "object" == typeof b) {
                            if (isPlainObject(a) && isPlainObject(b)) return areObjectsEqual(a, b, isEqual, meta);
                            var aShape = Array.isArray(a),
                                bShape = Array.isArray(b);
                            return aShape || bShape
                                ? aShape === bShape &&
                                      (function (a, b, isEqual, meta) {
                                          var index = a.length;
                                          if (b.length !== index) return !1;
                                          for (; index-- > 0; ) if (!isEqual(a[index], b[index], index, index, a, b, meta)) return !1;
                                          return !0;
                                      })(a, b, isEqual, meta)
                                : ((aShape = a instanceof Date), (bShape = b instanceof Date), aShape || bShape)
                                ? aShape === bShape && sameValueZeroEqual(a.getTime(), b.getTime())
                                : ((aShape = a instanceof RegExp), (bShape = b instanceof RegExp), aShape || bShape)
                                ? aShape === bShape &&
                                  a.source === b.source &&
                                  a.global === b.global &&
                                  a.ignoreCase === b.ignoreCase &&
                                  a.multiline === b.multiline &&
                                  a.unicode === b.unicode &&
                                  a.sticky === b.sticky &&
                                  a.lastIndex === b.lastIndex
                                : isPromiseLike(a) || isPromiseLike(b)
                                ? a === b
                                : HAS_MAP_SUPPORT && ((aShape = a instanceof Map), (bShape = b instanceof Map), aShape || bShape)
                                ? aShape === bShape &&
                                  (function (a, b, isEqual, meta) {
                                      var isValueEqual = a.size === b.size;
                                      if (isValueEqual && a.size) {
                                          var matchedIndices_1 = {},
                                              indexA_1 = 0;
                                          a.forEach(function (aValue, aKey) {
                                              if (isValueEqual) {
                                                  var hasMatch_1 = !1,
                                                      matchIndexB_1 = 0;
                                                  b.forEach(function (bValue, bKey) {
                                                      !hasMatch_1 &&
                                                          !matchedIndices_1[matchIndexB_1] &&
                                                          (hasMatch_1 = isEqual(aKey, bKey, indexA_1, matchIndexB_1, a, b, meta) && isEqual(aValue, bValue, aKey, bKey, a, b, meta)) &&
                                                          (matchedIndices_1[matchIndexB_1] = !0),
                                                          matchIndexB_1++;
                                                  }),
                                                      indexA_1++,
                                                      (isValueEqual = hasMatch_1);
                                              }
                                          });
                                      }
                                      return isValueEqual;
                                  })(a, b, isEqual, meta)
                                : HAS_SET_SUPPORT && ((aShape = a instanceof Set), (bShape = b instanceof Set), aShape || bShape)
                                ? aShape === bShape &&
                                  (function (a, b, isEqual, meta) {
                                      var isValueEqual = a.size === b.size;
                                      if (isValueEqual && a.size) {
                                          var matchedIndices_2 = {};
                                          a.forEach(function (aValue, aKey) {
                                              if (isValueEqual) {
                                                  var hasMatch_2 = !1,
                                                      matchIndex_1 = 0;
                                                  b.forEach(function (bValue, bKey) {
                                                      !hasMatch_2 && !matchedIndices_2[matchIndex_1] && (hasMatch_2 = isEqual(aValue, bValue, aKey, bKey, a, b, meta)) && (matchedIndices_2[matchIndex_1] = !0), matchIndex_1++;
                                                  }),
                                                      (isValueEqual = hasMatch_2);
                                              }
                                          });
                                      }
                                      return isValueEqual;
                                  })(a, b, isEqual, meta)
                                : areObjectsEqual(a, b, isEqual, meta);
                        }
                        return a != a && b != b;
                    }
                    return comparator;
                }
                var deepEqual = createComparator(),
                    shallowEqual = createComparator(function () {
                        return sameValueZeroEqual;
                    }),
                    circularDeepEqual = createComparator(createCircularEqualCreator()),
                    circularShallowEqual = createComparator(createCircularEqualCreator(sameValueZeroEqual));
                (exports.circularDeepEqual = circularDeepEqual),
                    (exports.circularShallowEqual = circularShallowEqual),
                    (exports.createCustomEqual = createComparator),
                    (exports.deepEqual = deepEqual),
                    (exports.sameValueZeroEqual = sameValueZeroEqual),
                    (exports.shallowEqual = shallowEqual),
                    Object.defineProperty(exports, "__esModule", { value: !0 });
            })(exports);
        },
        4445: function (module) {
            (module.exports = stringify), (stringify.default = stringify), (stringify.stable = deterministicStringify), (stringify.stableStringify = deterministicStringify);
            var LIMIT_REPLACE_NODE = "[...]",
                CIRCULAR_REPLACE_NODE = "[Circular]",
                arr = [],
                replacerStack = [];
            function defaultOptions() {
                return { depthLimit: Number.MAX_SAFE_INTEGER, edgesLimit: Number.MAX_SAFE_INTEGER };
            }
            function stringify(obj, replacer, spacer, options) {
                void 0 === options && (options = defaultOptions()),
                    (function decirc(val, k, edgeIndex, stack, parent, depth, options) {
                        if (((depth += 1), "object" == typeof val && null !== val)) {
                            for (i = 0; i < stack.length; i++)
                                if (stack[i] === val) {
                                    setReplace(CIRCULAR_REPLACE_NODE, val, k, parent);
                                    return;
                                }
                            if ((void 0 !== options.depthLimit && depth > options.depthLimit) || (void 0 !== options.edgesLimit && edgeIndex + 1 > options.edgesLimit)) {
                                setReplace(LIMIT_REPLACE_NODE, val, k, parent);
                                return;
                            }
                            if ((stack.push(val), Array.isArray(val))) for (i = 0; i < val.length; i++) decirc(val[i], i, i, stack, val, depth, options);
                            else {
                                var i,
                                    keys = Object.keys(val);
                                for (i = 0; i < keys.length; i++) {
                                    var key = keys[i];
                                    decirc(val[key], key, i, stack, val, depth, options);
                                }
                            }
                            stack.pop();
                        }
                    })(obj, "", 0, [], void 0, 0, options);
                try {
                    res = 0 === replacerStack.length ? JSON.stringify(obj, replacer, spacer) : JSON.stringify(obj, replaceGetterValues(replacer), spacer);
                } catch (_) {
                    return JSON.stringify("[unable to serialize, circular reference is too complex to analyze]");
                } finally {
                    for (; 0 !== arr.length; ) {
                        var res,
                            part = arr.pop();
                        4 === part.length ? Object.defineProperty(part[0], part[1], part[3]) : (part[0][part[1]] = part[2]);
                    }
                }
                return res;
            }
            function setReplace(replace, val, k, parent) {
                var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k);
                void 0 !== propertyDescriptor.get
                    ? propertyDescriptor.configurable
                        ? (Object.defineProperty(parent, k, { value: replace }), arr.push([parent, k, val, propertyDescriptor]))
                        : replacerStack.push([val, k, replace])
                    : ((parent[k] = replace), arr.push([parent, k, val]));
            }
            function compareFunction(a, b) {
                return a < b ? -1 : a > b ? 1 : 0;
            }
            function deterministicStringify(obj, replacer, spacer, options) {
                void 0 === options && (options = defaultOptions());
                var res,
                    tmp =
                        (function deterministicDecirc(val, k, edgeIndex, stack, parent, depth, options) {
                            if (((depth += 1), "object" == typeof val && null !== val)) {
                                for (i = 0; i < stack.length; i++)
                                    if (stack[i] === val) {
                                        setReplace(CIRCULAR_REPLACE_NODE, val, k, parent);
                                        return;
                                    }
                                try {
                                    if ("function" == typeof val.toJSON) return;
                                } catch (_) {
                                    return;
                                }
                                if ((void 0 !== options.depthLimit && depth > options.depthLimit) || (void 0 !== options.edgesLimit && edgeIndex + 1 > options.edgesLimit)) {
                                    setReplace(LIMIT_REPLACE_NODE, val, k, parent);
                                    return;
                                }
                                if ((stack.push(val), Array.isArray(val))) for (i = 0; i < val.length; i++) deterministicDecirc(val[i], i, i, stack, val, depth, options);
                                else {
                                    var i,
                                        tmp = {},
                                        keys = Object.keys(val).sort(compareFunction);
                                    for (i = 0; i < keys.length; i++) {
                                        var key = keys[i];
                                        deterministicDecirc(val[key], key, i, stack, val, depth, options), (tmp[key] = val[key]);
                                    }
                                    if (void 0 === parent) return tmp;
                                    arr.push([parent, k, val]), (parent[k] = tmp);
                                }
                                stack.pop();
                            }
                        })(obj, "", 0, [], void 0, 0, options) || obj;
                try {
                    res = 0 === replacerStack.length ? JSON.stringify(tmp, replacer, spacer) : JSON.stringify(tmp, replaceGetterValues(replacer), spacer);
                } catch (_) {
                    return JSON.stringify("[unable to serialize, circular reference is too complex to analyze]");
                } finally {
                    for (; 0 !== arr.length; ) {
                        var part = arr.pop();
                        4 === part.length ? Object.defineProperty(part[0], part[1], part[3]) : (part[0][part[1]] = part[2]);
                    }
                }
                return res;
            }
            function replaceGetterValues(replacer) {
                return (
                    (replacer =
                        void 0 !== replacer
                            ? replacer
                            : function (k, v) {
                                  return v;
                              }),
                    function (key, val) {
                        if (replacerStack.length > 0)
                            for (var i = 0; i < replacerStack.length; i++) {
                                var part = replacerStack[i];
                                if (part[1] === key && part[0] === val) {
                                    (val = part[2]), replacerStack.splice(i, 1);
                                    break;
                                }
                            }
                        return replacer.call(this, key, val);
                    }
                );
            }
        },
        49804: function (module) {
            var hasOwn = Object.prototype.hasOwnProperty,
                toString = Object.prototype.toString;
            module.exports = function (obj, fn, ctx) {
                if ("[object Function]" !== toString.call(fn)) throw TypeError("iterator must be a function");
                var l = obj.length;
                if (l === +l) for (var i = 0; i < l; i++) fn.call(ctx, obj[i], i, obj);
                else for (var k in obj) hasOwn.call(obj, k) && fn.call(ctx, obj[k], k, obj);
            };
        },
        17648: function (module) {
            "use strict";
            var slice = Array.prototype.slice,
                toStr = Object.prototype.toString;
            module.exports = function (that) {
                var bound,
                    target = this;
                if ("function" != typeof target || "[object Function]" !== toStr.call(target)) throw TypeError("Function.prototype.bind called on incompatible " + target);
                for (var args = slice.call(arguments, 1), boundLength = Math.max(0, target.length - args.length), boundArgs = [], i = 0; i < boundLength; i++) boundArgs.push("$" + i);
                if (
                    ((bound = Function(
                        "binder",
                        "return function (" + boundArgs.join(",") + "){ return binder.apply(this,arguments); }"
                    )(function () {
                        if (!(this instanceof bound)) return target.apply(that, args.concat(slice.call(arguments)));
                        var result = target.apply(this, args.concat(slice.call(arguments)));
                        return Object(result) === result ? result : this;
                    })),
                    target.prototype)
                ) {
                    var Empty = function () {};
                    (Empty.prototype = target.prototype), (bound.prototype = new Empty()), (Empty.prototype = null);
                }
                return bound;
            };
        },
        58612: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var implementation = __webpack_require__(17648);
            module.exports = Function.prototype.bind || implementation;
        },
        40210: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var undefined,
                $SyntaxError = SyntaxError,
                $Function = Function,
                $TypeError = TypeError,
                getEvalledConstructor = function (expressionSyntax) {
                    try {
                        return $Function('"use strict"; return (' + expressionSyntax + ").constructor;")();
                    } catch (e) {}
                },
                $gOPD = Object.getOwnPropertyDescriptor;
            if ($gOPD)
                try {
                    $gOPD({}, "");
                } catch (e) {
                    $gOPD = null;
                }
            var throwTypeError = function () {
                    throw new $TypeError();
                },
                ThrowTypeError = $gOPD
                    ? (function () {
                          try {
                              return arguments.callee, throwTypeError;
                          } catch (calleeThrows) {
                              try {
                                  return $gOPD(arguments, "callee").get;
                              } catch (gOPDthrows) {
                                  return throwTypeError;
                              }
                          }
                      })()
                    : throwTypeError,
                hasSymbols = __webpack_require__(41405)(),
                getProto =
                    Object.getPrototypeOf ||
                    function (x) {
                        return x.__proto__;
                    },
                needsEval = {},
                TypedArray = "undefined" == typeof Uint8Array ? undefined : getProto(Uint8Array),
                INTRINSICS = {
                    "%AggregateError%": "undefined" == typeof AggregateError ? undefined : AggregateError,
                    "%Array%": Array,
                    "%ArrayBuffer%": "undefined" == typeof ArrayBuffer ? undefined : ArrayBuffer,
                    "%ArrayIteratorPrototype%": hasSymbols ? getProto([][Symbol.iterator]()) : undefined,
                    "%AsyncFromSyncIteratorPrototype%": undefined,
                    "%AsyncFunction%": needsEval,
                    "%AsyncGenerator%": needsEval,
                    "%AsyncGeneratorFunction%": needsEval,
                    "%AsyncIteratorPrototype%": needsEval,
                    "%Atomics%": "undefined" == typeof Atomics ? undefined : Atomics,
                    "%BigInt%": "undefined" == typeof BigInt ? undefined : BigInt,
                    "%Boolean%": Boolean,
                    "%DataView%": "undefined" == typeof DataView ? undefined : DataView,
                    "%Date%": Date,
                    "%decodeURI%": decodeURI,
                    "%decodeURIComponent%": decodeURIComponent,
                    "%encodeURI%": encodeURI,
                    "%encodeURIComponent%": encodeURIComponent,
                    "%Error%": Error,
                    "%eval%": eval,
                    "%EvalError%": EvalError,
                    "%Float32Array%": "undefined" == typeof Float32Array ? undefined : Float32Array,
                    "%Float64Array%": "undefined" == typeof Float64Array ? undefined : Float64Array,
                    "%FinalizationRegistry%": "undefined" == typeof FinalizationRegistry ? undefined : FinalizationRegistry,
                    "%Function%": $Function,
                    "%GeneratorFunction%": needsEval,
                    "%Int8Array%": "undefined" == typeof Int8Array ? undefined : Int8Array,
                    "%Int16Array%": "undefined" == typeof Int16Array ? undefined : Int16Array,
                    "%Int32Array%": "undefined" == typeof Int32Array ? undefined : Int32Array,
                    "%isFinite%": isFinite,
                    "%isNaN%": isNaN,
                    "%IteratorPrototype%": hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,
                    "%JSON%": "object" == typeof JSON ? JSON : undefined,
                    "%Map%": "undefined" == typeof Map ? undefined : Map,
                    "%MapIteratorPrototype%": "undefined" != typeof Map && hasSymbols ? getProto(new Map()[Symbol.iterator]()) : undefined,
                    "%Math%": Math,
                    "%Number%": Number,
                    "%Object%": Object,
                    "%parseFloat%": parseFloat,
                    "%parseInt%": parseInt,
                    "%Promise%": "undefined" == typeof Promise ? undefined : Promise,
                    "%Proxy%": "undefined" == typeof Proxy ? undefined : Proxy,
                    "%RangeError%": RangeError,
                    "%ReferenceError%": ReferenceError,
                    "%Reflect%": "undefined" == typeof Reflect ? undefined : Reflect,
                    "%RegExp%": RegExp,
                    "%Set%": "undefined" == typeof Set ? undefined : Set,
                    "%SetIteratorPrototype%": "undefined" != typeof Set && hasSymbols ? getProto(new Set()[Symbol.iterator]()) : undefined,
                    "%SharedArrayBuffer%": "undefined" == typeof SharedArrayBuffer ? undefined : SharedArrayBuffer,
                    "%String%": String,
                    "%StringIteratorPrototype%": hasSymbols ? getProto(""[Symbol.iterator]()) : undefined,
                    "%Symbol%": hasSymbols ? Symbol : undefined,
                    "%SyntaxError%": $SyntaxError,
                    "%ThrowTypeError%": ThrowTypeError,
                    "%TypedArray%": TypedArray,
                    "%TypeError%": $TypeError,
                    "%Uint8Array%": "undefined" == typeof Uint8Array ? undefined : Uint8Array,
                    "%Uint8ClampedArray%": "undefined" == typeof Uint8ClampedArray ? undefined : Uint8ClampedArray,
                    "%Uint16Array%": "undefined" == typeof Uint16Array ? undefined : Uint16Array,
                    "%Uint32Array%": "undefined" == typeof Uint32Array ? undefined : Uint32Array,
                    "%URIError%": URIError,
                    "%WeakMap%": "undefined" == typeof WeakMap ? undefined : WeakMap,
                    "%WeakRef%": "undefined" == typeof WeakRef ? undefined : WeakRef,
                    "%WeakSet%": "undefined" == typeof WeakSet ? undefined : WeakSet,
                },
                doEval = function doEval(name) {
                    var value;
                    if ("%AsyncFunction%" === name) value = getEvalledConstructor("async function () {}");
                    else if ("%GeneratorFunction%" === name) value = getEvalledConstructor("function* () {}");
                    else if ("%AsyncGeneratorFunction%" === name) value = getEvalledConstructor("async function* () {}");
                    else if ("%AsyncGenerator%" === name) {
                        var fn = doEval("%AsyncGeneratorFunction%");
                        fn && (value = fn.prototype);
                    } else if ("%AsyncIteratorPrototype%" === name) {
                        var gen = doEval("%AsyncGenerator%");
                        gen && (value = getProto(gen.prototype));
                    }
                    return (INTRINSICS[name] = value), value;
                },
                LEGACY_ALIASES = {
                    "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
                    "%ArrayPrototype%": ["Array", "prototype"],
                    "%ArrayProto_entries%": ["Array", "prototype", "entries"],
                    "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
                    "%ArrayProto_keys%": ["Array", "prototype", "keys"],
                    "%ArrayProto_values%": ["Array", "prototype", "values"],
                    "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
                    "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
                    "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
                    "%BooleanPrototype%": ["Boolean", "prototype"],
                    "%DataViewPrototype%": ["DataView", "prototype"],
                    "%DatePrototype%": ["Date", "prototype"],
                    "%ErrorPrototype%": ["Error", "prototype"],
                    "%EvalErrorPrototype%": ["EvalError", "prototype"],
                    "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
                    "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
                    "%FunctionPrototype%": ["Function", "prototype"],
                    "%Generator%": ["GeneratorFunction", "prototype"],
                    "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
                    "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
                    "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
                    "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
                    "%JSONParse%": ["JSON", "parse"],
                    "%JSONStringify%": ["JSON", "stringify"],
                    "%MapPrototype%": ["Map", "prototype"],
                    "%NumberPrototype%": ["Number", "prototype"],
                    "%ObjectPrototype%": ["Object", "prototype"],
                    "%ObjProto_toString%": ["Object", "prototype", "toString"],
                    "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
                    "%PromisePrototype%": ["Promise", "prototype"],
                    "%PromiseProto_then%": ["Promise", "prototype", "then"],
                    "%Promise_all%": ["Promise", "all"],
                    "%Promise_reject%": ["Promise", "reject"],
                    "%Promise_resolve%": ["Promise", "resolve"],
                    "%RangeErrorPrototype%": ["RangeError", "prototype"],
                    "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
                    "%RegExpPrototype%": ["RegExp", "prototype"],
                    "%SetPrototype%": ["Set", "prototype"],
                    "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
                    "%StringPrototype%": ["String", "prototype"],
                    "%SymbolPrototype%": ["Symbol", "prototype"],
                    "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
                    "%TypedArrayPrototype%": ["TypedArray", "prototype"],
                    "%TypeErrorPrototype%": ["TypeError", "prototype"],
                    "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
                    "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
                    "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
                    "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
                    "%URIErrorPrototype%": ["URIError", "prototype"],
                    "%WeakMapPrototype%": ["WeakMap", "prototype"],
                    "%WeakSetPrototype%": ["WeakSet", "prototype"],
                },
                bind = __webpack_require__(58612),
                hasOwn = __webpack_require__(17642),
                $concat = bind.call(Function.call, Array.prototype.concat),
                $spliceApply = bind.call(Function.apply, Array.prototype.splice),
                $replace = bind.call(Function.call, String.prototype.replace),
                $strSlice = bind.call(Function.call, String.prototype.slice),
                rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,
                reEscapeChar = /\\(\\)?/g,
                stringToPath = function (string) {
                    var first = $strSlice(string, 0, 1),
                        last = $strSlice(string, -1);
                    if ("%" === first && "%" !== last) throw new $SyntaxError("invalid intrinsic syntax, expected closing `%`");
                    if ("%" === last && "%" !== first) throw new $SyntaxError("invalid intrinsic syntax, expected opening `%`");
                    var result = [];
                    return (
                        $replace(string, rePropName, function (match, number, quote, subString) {
                            result[result.length] = quote ? $replace(subString, reEscapeChar, "$1") : number || match;
                        }),
                        result
                    );
                },
                getBaseIntrinsic = function (name, allowMissing) {
                    var alias,
                        intrinsicName = name;
                    if ((hasOwn(LEGACY_ALIASES, intrinsicName) && (intrinsicName = "%" + (alias = LEGACY_ALIASES[intrinsicName])[0] + "%"), hasOwn(INTRINSICS, intrinsicName))) {
                        var value = INTRINSICS[intrinsicName];
                        if ((value === needsEval && (value = doEval(intrinsicName)), void 0 === value && !allowMissing)) throw new $TypeError("intrinsic " + name + " exists, but is not available. Please file an issue!");
                        return { alias: alias, name: intrinsicName, value: value };
                    }
                    throw new $SyntaxError("intrinsic " + name + " does not exist!");
                };
            module.exports = function (name, allowMissing) {
                if ("string" != typeof name || 0 === name.length) throw new $TypeError("intrinsic name must be a non-empty string");
                if (arguments.length > 1 && "boolean" != typeof allowMissing) throw new $TypeError('"allowMissing" argument must be a boolean');
                var parts = stringToPath(name),
                    intrinsicBaseName = parts.length > 0 ? parts[0] : "",
                    intrinsic = getBaseIntrinsic("%" + intrinsicBaseName + "%", allowMissing),
                    intrinsicRealName = intrinsic.name,
                    value = intrinsic.value,
                    skipFurtherCaching = !1,
                    alias = intrinsic.alias;
                alias && ((intrinsicBaseName = alias[0]), $spliceApply(parts, $concat([0, 1], alias)));
                for (var i = 1, isOwn = !0; i < parts.length; i += 1) {
                    var part = parts[i],
                        first = $strSlice(part, 0, 1),
                        last = $strSlice(part, -1);
                    if (('"' === first || "'" === first || "`" === first || '"' === last || "'" === last || "`" === last) && first !== last) throw new $SyntaxError("property names with quotes must have matching quotes");
                    if ((("constructor" !== part && isOwn) || (skipFurtherCaching = !0), (intrinsicBaseName += "." + part), hasOwn(INTRINSICS, (intrinsicRealName = "%" + intrinsicBaseName + "%")))) value = INTRINSICS[intrinsicRealName];
                    else if (null != value) {
                        if (!(part in value)) {
                            if (!allowMissing) throw new $TypeError("base intrinsic for " + name + " exists, but the property is not available.");
                            return;
                        }
                        if ($gOPD && i + 1 >= parts.length) {
                            var desc = $gOPD(value, part);
                            value = (isOwn = !!desc) && "get" in desc && !("originalValue" in desc.get) ? desc.get : value[part];
                        } else (isOwn = hasOwn(value, part)), (value = value[part]);
                        isOwn && !skipFurtherCaching && (INTRINSICS[intrinsicRealName] = value);
                    }
                }
                return value;
            };
        },
        38058: function (module) {
            try {
                module.exports = "undefined" != typeof XMLHttpRequest && "withCredentials" in new XMLHttpRequest();
            } catch (err) {
                module.exports = !1;
            }
        },
        41405: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var origSymbol = "undefined" != typeof Symbol && Symbol,
                hasSymbolSham = __webpack_require__(55419);
            module.exports = function () {
                return "function" == typeof origSymbol && "function" == typeof Symbol && "symbol" == typeof origSymbol("foo") && "symbol" == typeof Symbol("bar") && hasSymbolSham();
            };
        },
        55419: function (module) {
            "use strict";
            module.exports = function () {
                if ("function" != typeof Symbol || "function" != typeof Object.getOwnPropertySymbols) return !1;
                if ("symbol" == typeof Symbol.iterator) return !0;
                var obj = {},
                    sym = Symbol("test"),
                    symObj = Object(sym);
                if ("string" == typeof sym || "[object Symbol]" !== Object.prototype.toString.call(sym) || "[object Symbol]" !== Object.prototype.toString.call(symObj)) return !1;
                for (sym in ((obj[sym] = 42), obj)) return !1;
                if (("function" == typeof Object.keys && 0 !== Object.keys(obj).length) || ("function" == typeof Object.getOwnPropertyNames && 0 !== Object.getOwnPropertyNames(obj).length)) return !1;
                var syms = Object.getOwnPropertySymbols(obj);
                if (1 !== syms.length || syms[0] !== sym || !Object.prototype.propertyIsEnumerable.call(obj, sym)) return !1;
                if ("function" == typeof Object.getOwnPropertyDescriptor) {
                    var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
                    if (42 !== descriptor.value || !0 !== descriptor.enumerable) return !1;
                }
                return !0;
            };
        },
        96410: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var hasSymbols = __webpack_require__(55419);
            module.exports = function () {
                return hasSymbols() && !!Symbol.toStringTag;
            };
        },
        17642: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var bind = __webpack_require__(58612);
            module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);
        },
        3349: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var Buffer = __webpack_require__(89509).Buffer,
                Transform = __webpack_require__(70326).Transform;
            function HashBase(blockSize) {
                Transform.call(this), (this._block = Buffer.allocUnsafe(blockSize)), (this._blockSize = blockSize), (this._blockOffset = 0), (this._length = [0, 0, 0, 0]), (this._finalized = !1);
            }
            __webpack_require__(35717)(HashBase, Transform),
                (HashBase.prototype._transform = function (chunk, encoding, callback) {
                    var error = null;
                    try {
                        this.update(chunk, encoding);
                    } catch (err) {
                        error = err;
                    }
                    callback(error);
                }),
                (HashBase.prototype._flush = function (callback) {
                    var error = null;
                    try {
                        this.push(this.digest());
                    } catch (err) {
                        error = err;
                    }
                    callback(error);
                }),
                (HashBase.prototype.update = function (data, encoding) {
                    if (
                        ((function (val, prefix) {
                            if (!Buffer.isBuffer(val) && "string" != typeof val) throw TypeError(prefix + " must be a string or a buffer");
                        })(data, "Data"),
                        this._finalized)
                    )
                        throw Error("Digest already called");
                    Buffer.isBuffer(data) || (data = Buffer.from(data, encoding));
                    for (var block = this._block, offset = 0; this._blockOffset + data.length - offset >= this._blockSize; ) {
                        for (var i = this._blockOffset; i < this._blockSize; ) block[i++] = data[offset++];
                        this._update(), (this._blockOffset = 0);
                    }
                    for (; offset < data.length; ) block[this._blockOffset++] = data[offset++];
                    for (var j = 0, carry = 8 * data.length; carry > 0; ++j) (this._length[j] += carry), (carry = (this._length[j] / 4294967296) | 0) > 0 && (this._length[j] -= 4294967296 * carry);
                    return this;
                }),
                (HashBase.prototype._update = function () {
                    throw Error("_update is not implemented");
                }),
                (HashBase.prototype.digest = function (encoding) {
                    if (this._finalized) throw Error("Digest already called");
                    this._finalized = !0;
                    var digest = this._digest();
                    void 0 !== encoding && (digest = digest.toString(encoding)), this._block.fill(0), (this._blockOffset = 0);
                    for (var i = 0; i < 4; ++i) this._length[i] = 0;
                    return digest;
                }),
                (HashBase.prototype._digest = function () {
                    throw Error("_digest is not implemented");
                }),
                (module.exports = HashBase);
        },
        9786: function (module) {
            "use strict";
            var codes = {};
            function createErrorType(code, message, Base) {
                Base || (Base = Error);
                var NodeError = (function (_Base) {
                    var subClass;
                    function NodeError(arg1, arg2, arg3) {
                        return _Base.call(this, "string" == typeof message ? message : message(arg1, arg2, arg3)) || this;
                    }
                    return ((subClass = NodeError).prototype = Object.create(_Base.prototype)), (subClass.prototype.constructor = subClass), (subClass.__proto__ = _Base), NodeError;
                })(Base);
                (NodeError.prototype.name = Base.name), (NodeError.prototype.code = code), (codes[code] = NodeError);
            }
            function oneOf(expected, thing) {
                if (!Array.isArray(expected)) return "of ".concat(thing, " ").concat(String(expected));
                var len = expected.length;
                return ((expected = expected.map(function (i) {
                    return String(i);
                })),
                len > 2)
                    ? "one of ".concat(thing, " ").concat(expected.slice(0, len - 1).join(", "), ", or ") + expected[len - 1]
                    : 2 === len
                    ? "one of ".concat(thing, " ").concat(expected[0], " or ").concat(expected[1])
                    : "of ".concat(thing, " ").concat(expected[0]);
            }
            createErrorType(
                "ERR_INVALID_OPT_VALUE",
                function (name, value) {
                    return 'The value "' + value + '" is invalid for option "' + name + '"';
                },
                TypeError
            ),
                createErrorType(
                    "ERR_INVALID_ARG_TYPE",
                    function (name, expected, actual) {
                        if (
                            ("string" == typeof expected && ((search = "not "), expected.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search)
                                ? ((determiner = "must not be"), (expected = expected.replace(/^not /, "")))
                                : (determiner = "must be"),
                            (search1 = " argument"),
                            (void 0 === this_len || this_len > name.length) && (this_len = name.length),
                            name.substring(this_len - search1.length, this_len) === search1)
                        )
                            msg = "The ".concat(name, " ").concat(determiner, " ").concat(oneOf(expected, "type"));
                        else {
                            var search,
                                pos,
                                search1,
                                this_len,
                                start,
                                determiner,
                                msg,
                                type = ("number" != typeof start && (start = 0), start + 1 > name.length || -1 === name.indexOf(".", start)) ? "argument" : "property";
                            msg = 'The "'.concat(name, '" ').concat(type, " ").concat(determiner, " ").concat(oneOf(expected, "type"));
                        }
                        return msg + ". Received type ".concat(typeof actual);
                    },
                    TypeError
                ),
                createErrorType("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"),
                createErrorType("ERR_METHOD_NOT_IMPLEMENTED", function (name) {
                    return "The " + name + " method is not implemented";
                }),
                createErrorType("ERR_STREAM_PREMATURE_CLOSE", "Premature close"),
                createErrorType("ERR_STREAM_DESTROYED", function (name) {
                    return "Cannot call " + name + " after a stream was destroyed";
                }),
                createErrorType("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"),
                createErrorType("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"),
                createErrorType("ERR_STREAM_WRITE_AFTER_END", "write after end"),
                createErrorType("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError),
                createErrorType(
                    "ERR_UNKNOWN_ENCODING",
                    function (arg) {
                        return "Unknown encoding: " + arg;
                    },
                    TypeError
                ),
                createErrorType("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"),
                (module.exports.q = codes);
        },
        62910: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var process = __webpack_require__(34155),
                objectKeys =
                    Object.keys ||
                    function (obj) {
                        var keys = [];
                        for (var key in obj) keys.push(key);
                        return keys;
                    };
            module.exports = Duplex;
            var Readable = __webpack_require__(45789),
                Writable = __webpack_require__(70469);
            __webpack_require__(35717)(Duplex, Readable);
            for (var keys = objectKeys(Writable.prototype), v = 0; v < keys.length; v++) {
                var method = keys[v];
                Duplex.prototype[method] || (Duplex.prototype[method] = Writable.prototype[method]);
            }
            function Duplex(options) {
                if (!(this instanceof Duplex)) return new Duplex(options);
                Readable.call(this, options),
                    Writable.call(this, options),
                    (this.allowHalfOpen = !0),
                    options && (!1 === options.readable && (this.readable = !1), !1 === options.writable && (this.writable = !1), !1 === options.allowHalfOpen && ((this.allowHalfOpen = !1), this.once("end", onend)));
            }
            function onend() {
                this._writableState.ended || process.nextTick(onEndNT, this);
            }
            function onEndNT(self1) {
                self1.end();
            }
            Object.defineProperty(Duplex.prototype, "writableHighWaterMark", {
                enumerable: !1,
                get: function () {
                    return this._writableState.highWaterMark;
                },
            }),
                Object.defineProperty(Duplex.prototype, "writableBuffer", {
                    enumerable: !1,
                    get: function () {
                        return this._writableState && this._writableState.getBuffer();
                    },
                }),
                Object.defineProperty(Duplex.prototype, "writableLength", {
                    enumerable: !1,
                    get: function () {
                        return this._writableState.length;
                    },
                }),
                Object.defineProperty(Duplex.prototype, "destroyed", {
                    enumerable: !1,
                    get: function () {
                        return void 0 !== this._readableState && void 0 !== this._writableState && this._readableState.destroyed && this._writableState.destroyed;
                    },
                    set: function (value) {
                        void 0 !== this._readableState && void 0 !== this._writableState && ((this._readableState.destroyed = value), (this._writableState.destroyed = value));
                    },
                });
        },
        58994: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            module.exports = PassThrough;
            var Transform = __webpack_require__(70421);
            function PassThrough(options) {
                if (!(this instanceof PassThrough)) return new PassThrough(options);
                Transform.call(this, options);
            }
            __webpack_require__(35717)(PassThrough, Transform),
                (PassThrough.prototype._transform = function (chunk, encoding, cb) {
                    cb(null, chunk);
                });
        },
        45789: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var Duplex,
                debug,
                StringDecoder,
                createReadableStreamAsyncIterator,
                from,
                process = __webpack_require__(34155);
            (module.exports = Readable), (Readable.ReadableState = ReadableState), __webpack_require__(17187).EventEmitter;
            var EElistenerCount = function (emitter, type) {
                    return emitter.listeners(type).length;
                },
                Stream = __webpack_require__(50677),
                Buffer = __webpack_require__(48764).Buffer,
                OurUint8Array = __webpack_require__.g.Uint8Array || function () {},
                debugUtil = __webpack_require__(31616);
            debug = debugUtil && debugUtil.debuglog ? debugUtil.debuglog("stream") : function () {};
            var BufferList = __webpack_require__(98354),
                destroyImpl = __webpack_require__(35072),
                getHighWaterMark = __webpack_require__(31222).getHighWaterMark,
                _require$codes = __webpack_require__(9786).q,
                ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
                ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,
                ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
                ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
            __webpack_require__(35717)(Readable, Stream);
            var errorOrDestroy = destroyImpl.errorOrDestroy,
                kProxyEvents = ["error", "close", "destroy", "pause", "resume"];
            function ReadableState(options, stream, isDuplex) {
                (Duplex = Duplex || __webpack_require__(62910)),
                    (options = options || {}),
                    "boolean" != typeof isDuplex && (isDuplex = stream instanceof Duplex),
                    (this.objectMode = !!options.objectMode),
                    isDuplex && (this.objectMode = this.objectMode || !!options.readableObjectMode),
                    (this.highWaterMark = getHighWaterMark(this, options, "readableHighWaterMark", isDuplex)),
                    (this.buffer = new BufferList()),
                    (this.length = 0),
                    (this.pipes = null),
                    (this.pipesCount = 0),
                    (this.flowing = null),
                    (this.ended = !1),
                    (this.endEmitted = !1),
                    (this.reading = !1),
                    (this.sync = !0),
                    (this.needReadable = !1),
                    (this.emittedReadable = !1),
                    (this.readableListening = !1),
                    (this.resumeScheduled = !1),
                    (this.paused = !0),
                    (this.emitClose = !1 !== options.emitClose),
                    (this.autoDestroy = !!options.autoDestroy),
                    (this.destroyed = !1),
                    (this.defaultEncoding = options.defaultEncoding || "utf8"),
                    (this.awaitDrain = 0),
                    (this.readingMore = !1),
                    (this.decoder = null),
                    (this.encoding = null),
                    options.encoding && (StringDecoder || (StringDecoder = __webpack_require__(33893).s), (this.decoder = new StringDecoder(options.encoding)), (this.encoding = options.encoding));
            }
            function Readable(options) {
                if (((Duplex = Duplex || __webpack_require__(62910)), !(this instanceof Readable))) return new Readable(options);
                var isDuplex = this instanceof Duplex;
                (this._readableState = new ReadableState(options, this, isDuplex)),
                    (this.readable = !0),
                    options && ("function" == typeof options.read && (this._read = options.read), "function" == typeof options.destroy && (this._destroy = options.destroy)),
                    Stream.call(this);
            }
            function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
                debug("readableAddChunk", chunk);
                var state,
                    chunk1,
                    er,
                    chunk2,
                    er1,
                    state1 = stream._readableState;
                if (null === chunk)
                    (state1.reading = !1),
                        (function (stream, state) {
                            if ((debug("onEofChunk"), !state.ended)) {
                                if (state.decoder) {
                                    var chunk = state.decoder.end();
                                    chunk && chunk.length && (state.buffer.push(chunk), (state.length += state.objectMode ? 1 : chunk.length));
                                }
                                (state.ended = !0), state.sync ? emitReadable(stream) : ((state.needReadable = !1), state.emittedReadable || ((state.emittedReadable = !0), emitReadable_(stream)));
                            }
                        })(stream, state1);
                else {
                    if (
                        (skipChunkCheck ||
                            ((state = state1),
                            (chunk1 = chunk),
                            Buffer.isBuffer(chunk1) ||
                                chunk1 instanceof OurUint8Array ||
                                "string" == typeof chunk1 ||
                                void 0 === chunk1 ||
                                state.objectMode ||
                                (er = new ERR_INVALID_ARG_TYPE("chunk", ["string", "Buffer", "Uint8Array"], chunk1)),
                            (er1 = er)),
                        er1)
                    )
                        errorOrDestroy(stream, er1);
                    else if (state1.objectMode || (chunk && chunk.length > 0)) {
                        if (("string" == typeof chunk || state1.objectMode || Object.getPrototypeOf(chunk) === Buffer.prototype || ((chunk2 = chunk), (chunk = Buffer.from(chunk2))), addToFront))
                            state1.endEmitted ? errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT()) : addChunk(stream, state1, chunk, !0);
                        else if (state1.ended) errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
                        else {
                            if (state1.destroyed) return !1;
                            (state1.reading = !1),
                                state1.decoder && !encoding
                                    ? ((chunk = state1.decoder.write(chunk)), state1.objectMode || 0 !== chunk.length ? addChunk(stream, state1, chunk, !1) : maybeReadMore(stream, state1))
                                    : addChunk(stream, state1, chunk, !1);
                        }
                    } else addToFront || ((state1.reading = !1), maybeReadMore(stream, state1));
                }
                return !state1.ended && (state1.length < state1.highWaterMark || 0 === state1.length);
            }
            function addChunk(stream, state, chunk, addToFront) {
                state.flowing && 0 === state.length && !state.sync
                    ? ((state.awaitDrain = 0), stream.emit("data", chunk))
                    : ((state.length += state.objectMode ? 1 : chunk.length), addToFront ? state.buffer.unshift(chunk) : state.buffer.push(chunk), state.needReadable && emitReadable(stream)),
                    maybeReadMore(stream, state);
            }
            function howMuchToRead(n, state) {
                if (n <= 0 || (0 === state.length && state.ended)) return 0;
                if (state.objectMode) return 1;
                if (n != n) return state.flowing && state.length ? state.buffer.head.data.length : state.length;
                if (n > state.highWaterMark) {
                    var n1;
                    state.highWaterMark = ((n1 = n) >= 1073741824 ? (n1 = 1073741824) : (n1--, (n1 |= n1 >>> 1), (n1 |= n1 >>> 2), (n1 |= n1 >>> 4), (n1 |= n1 >>> 8), (n1 |= n1 >>> 16), n1++), n1);
                }
                return n <= state.length ? n : state.ended ? state.length : ((state.needReadable = !0), 0);
            }
            function emitReadable(stream) {
                var state = stream._readableState;
                debug("emitReadable", state.needReadable, state.emittedReadable),
                    (state.needReadable = !1),
                    state.emittedReadable || (debug("emitReadable", state.flowing), (state.emittedReadable = !0), process.nextTick(emitReadable_, stream));
            }
            function emitReadable_(stream) {
                var state = stream._readableState;
                debug("emitReadable_", state.destroyed, state.length, state.ended),
                    !state.destroyed && (state.length || state.ended) && (stream.emit("readable"), (state.emittedReadable = !1)),
                    (state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark),
                    flow(stream);
            }
            function maybeReadMore(stream, state) {
                state.readingMore || ((state.readingMore = !0), process.nextTick(maybeReadMore_, stream, state));
            }
            function maybeReadMore_(stream, state) {
                for (; !state.reading && !state.ended && (state.length < state.highWaterMark || (state.flowing && 0 === state.length)); ) {
                    var len = state.length;
                    if ((debug("maybeReadMore read 0"), stream.read(0), len === state.length)) break;
                }
                state.readingMore = !1;
            }
            function updateReadableListening(self1) {
                var state = self1._readableState;
                (state.readableListening = self1.listenerCount("readable") > 0), state.resumeScheduled && !state.paused ? (state.flowing = !0) : self1.listenerCount("data") > 0 && self1.resume();
            }
            function nReadingNextTick(self1) {
                debug("readable nexttick read 0"), self1.read(0);
            }
            function resume_(stream, state) {
                debug("resume", state.reading), state.reading || stream.read(0), (state.resumeScheduled = !1), stream.emit("resume"), flow(stream), state.flowing && !state.reading && stream.read(0);
            }
            function flow(stream) {
                var state = stream._readableState;
                for (debug("flow", state.flowing); state.flowing && null !== stream.read(); );
            }
            function fromList(n, state) {
                var ret;
                return 0 === state.length
                    ? null
                    : (state.objectMode
                          ? (ret = state.buffer.shift())
                          : !n || n >= state.length
                          ? ((ret = state.decoder ? state.buffer.join("") : 1 === state.buffer.length ? state.buffer.first() : state.buffer.concat(state.length)), state.buffer.clear())
                          : (ret = state.buffer.consume(n, state.decoder)),
                      ret);
            }
            function endReadable(stream) {
                var state = stream._readableState;
                debug("endReadable", state.endEmitted), state.endEmitted || ((state.ended = !0), process.nextTick(endReadableNT, state, stream));
            }
            function endReadableNT(state, stream) {
                if ((debug("endReadableNT", state.endEmitted, state.length), !state.endEmitted && 0 === state.length && ((state.endEmitted = !0), (stream.readable = !1), stream.emit("end"), state.autoDestroy))) {
                    var wState = stream._writableState;
                    (!wState || (wState.autoDestroy && wState.finished)) && stream.destroy();
                }
            }
            function indexOf(xs, x) {
                for (var i = 0, l = xs.length; i < l; i++) if (xs[i] === x) return i;
                return -1;
            }
            Object.defineProperty(Readable.prototype, "destroyed", {
                enumerable: !1,
                get: function () {
                    return void 0 !== this._readableState && this._readableState.destroyed;
                },
                set: function (value) {
                    this._readableState && (this._readableState.destroyed = value);
                },
            }),
                (Readable.prototype.destroy = destroyImpl.destroy),
                (Readable.prototype._undestroy = destroyImpl.undestroy),
                (Readable.prototype._destroy = function (err, cb) {
                    cb(err);
                }),
                (Readable.prototype.push = function (chunk, encoding) {
                    var skipChunkCheck,
                        state = this._readableState;
                    return (
                        state.objectMode
                            ? (skipChunkCheck = !0)
                            : "string" == typeof chunk && ((encoding = encoding || state.defaultEncoding) !== state.encoding && ((chunk = Buffer.from(chunk, encoding)), (encoding = "")), (skipChunkCheck = !0)),
                        readableAddChunk(this, chunk, encoding, !1, skipChunkCheck)
                    );
                }),
                (Readable.prototype.unshift = function (chunk) {
                    return readableAddChunk(this, chunk, null, !0, !1);
                }),
                (Readable.prototype.isPaused = function () {
                    return !1 === this._readableState.flowing;
                }),
                (Readable.prototype.setEncoding = function (enc) {
                    StringDecoder || (StringDecoder = __webpack_require__(33893).s);
                    var decoder = new StringDecoder(enc);
                    (this._readableState.decoder = decoder), (this._readableState.encoding = this._readableState.decoder.encoding);
                    for (var p = this._readableState.buffer.head, content = ""; null !== p; ) (content += decoder.write(p.data)), (p = p.next);
                    return this._readableState.buffer.clear(), "" !== content && this._readableState.buffer.push(content), (this._readableState.length = content.length), this;
                }),
                (Readable.prototype.read = function (n) {
                    debug("read", n), (n = parseInt(n, 10));
                    var ret,
                        state = this._readableState,
                        nOrig = n;
                    if ((0 !== n && (state.emittedReadable = !1), 0 === n && state.needReadable && ((0 !== state.highWaterMark ? state.length >= state.highWaterMark : state.length > 0) || state.ended)))
                        return debug("read: emitReadable", state.length, state.ended), 0 === state.length && state.ended ? endReadable(this) : emitReadable(this), null;
                    if (0 === (n = howMuchToRead(n, state)) && state.ended) return 0 === state.length && endReadable(this), null;
                    var doRead = state.needReadable;
                    return (
                        debug("need readable", doRead),
                        (0 === state.length || state.length - n < state.highWaterMark) && debug("length less than watermark", (doRead = !0)),
                        state.ended || state.reading
                            ? debug("reading or ended", (doRead = !1))
                            : doRead &&
                              (debug("do read"),
                              (state.reading = !0),
                              (state.sync = !0),
                              0 === state.length && (state.needReadable = !0),
                              this._read(state.highWaterMark),
                              (state.sync = !1),
                              state.reading || (n = howMuchToRead(nOrig, state))),
                        null === (ret = n > 0 ? fromList(n, state) : null) ? ((state.needReadable = state.length <= state.highWaterMark), (n = 0)) : ((state.length -= n), (state.awaitDrain = 0)),
                        0 === state.length && (state.ended || (state.needReadable = !0), nOrig !== n && state.ended && endReadable(this)),
                        null !== ret && this.emit("data", ret),
                        ret
                    );
                }),
                (Readable.prototype._read = function (n) {
                    errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED("_read()"));
                }),
                (Readable.prototype.pipe = function (dest, pipeOpts) {
                    var src = this,
                        state = this._readableState;
                    switch (state.pipesCount) {
                        case 0:
                            state.pipes = dest;
                            break;
                        case 1:
                            state.pipes = [state.pipes, dest];
                            break;
                        default:
                            state.pipes.push(dest);
                    }
                    (state.pipesCount += 1), debug("pipe count=%d opts=%j", state.pipesCount, pipeOpts);
                    var endFn = (pipeOpts && !1 === pipeOpts.end) || dest === process.stdout || dest === process.stderr ? unpipe : onend;
                    function onend() {
                        debug("onend"), dest.end();
                    }
                    state.endEmitted ? process.nextTick(endFn) : src.once("end", endFn),
                        dest.on("unpipe", function onunpipe(readable, unpipeInfo) {
                            debug("onunpipe"),
                                readable === src &&
                                    unpipeInfo &&
                                    !1 === unpipeInfo.hasUnpiped &&
                                    ((unpipeInfo.hasUnpiped = !0),
                                    debug("cleanup"),
                                    dest.removeListener("close", onclose),
                                    dest.removeListener("finish", onfinish),
                                    dest.removeListener("drain", ondrain),
                                    dest.removeListener("error", onerror),
                                    dest.removeListener("unpipe", onunpipe),
                                    src.removeListener("end", onend),
                                    src.removeListener("end", unpipe),
                                    src.removeListener("data", ondata),
                                    (cleanedUp = !0),
                                    state.awaitDrain && (!dest._writableState || dest._writableState.needDrain) && ondrain());
                        });
                    var ondrain = function () {
                        var state = src._readableState;
                        debug("pipeOnDrain", state.awaitDrain), state.awaitDrain && state.awaitDrain--, 0 === state.awaitDrain && EElistenerCount(src, "data") && ((state.flowing = !0), flow(src));
                    };
                    dest.on("drain", ondrain);
                    var cleanedUp = !1;
                    function ondata(chunk) {
                        debug("ondata");
                        var ret = dest.write(chunk);
                        debug("dest.write", ret),
                            !1 === ret &&
                                (((1 === state.pipesCount && state.pipes === dest) || (state.pipesCount > 1 && -1 !== indexOf(state.pipes, dest))) &&
                                    !cleanedUp &&
                                    (debug("false write response, pause", state.awaitDrain), state.awaitDrain++),
                                src.pause());
                    }
                    function onerror(er) {
                        debug("onerror", er), unpipe(), dest.removeListener("error", onerror), 0 === EElistenerCount(dest, "error") && errorOrDestroy(dest, er);
                    }
                    function onclose() {
                        dest.removeListener("finish", onfinish), unpipe();
                    }
                    function onfinish() {
                        debug("onfinish"), dest.removeListener("close", onclose), unpipe();
                    }
                    function unpipe() {
                        debug("unpipe"), src.unpipe(dest);
                    }
                    return (
                        src.on("data", ondata),
                        (function (emitter, event, fn) {
                            if ("function" == typeof emitter.prependListener) return emitter.prependListener(event, fn);
                            emitter._events && emitter._events[event] ? (Array.isArray(emitter._events[event]) ? emitter._events[event].unshift(fn) : (emitter._events[event] = [fn, emitter._events[event]])) : emitter.on(event, fn);
                        })(dest, "error", onerror),
                        dest.once("close", onclose),
                        dest.once("finish", onfinish),
                        dest.emit("pipe", src),
                        state.flowing || (debug("pipe resume"), src.resume()),
                        dest
                    );
                }),
                (Readable.prototype.unpipe = function (dest) {
                    var state = this._readableState,
                        unpipeInfo = { hasUnpiped: !1 };
                    if (0 === state.pipesCount) return this;
                    if (1 === state.pipesCount)
                        return (dest && dest !== state.pipes) || (dest || (dest = state.pipes), (state.pipes = null), (state.pipesCount = 0), (state.flowing = !1), dest && dest.emit("unpipe", this, unpipeInfo)), this;
                    if (!dest) {
                        var dests = state.pipes,
                            len = state.pipesCount;
                        (state.pipes = null), (state.pipesCount = 0), (state.flowing = !1);
                        for (var i = 0; i < len; i++) dests[i].emit("unpipe", this, { hasUnpiped: !1 });
                        return this;
                    }
                    var index = indexOf(state.pipes, dest);
                    return -1 === index || (state.pipes.splice(index, 1), (state.pipesCount -= 1), 1 === state.pipesCount && (state.pipes = state.pipes[0]), dest.emit("unpipe", this, unpipeInfo)), this;
                }),
                (Readable.prototype.on = function (ev, fn) {
                    var res = Stream.prototype.on.call(this, ev, fn),
                        state = this._readableState;
                    return (
                        "data" === ev
                            ? ((state.readableListening = this.listenerCount("readable") > 0), !1 !== state.flowing && this.resume())
                            : "readable" !== ev ||
                              state.endEmitted ||
                              state.readableListening ||
                              ((state.readableListening = state.needReadable = !0),
                              (state.flowing = !1),
                              (state.emittedReadable = !1),
                              debug("on readable", state.length, state.reading),
                              state.length ? emitReadable(this) : state.reading || process.nextTick(nReadingNextTick, this)),
                        res
                    );
                }),
                (Readable.prototype.addListener = Readable.prototype.on),
                (Readable.prototype.removeListener = function (ev, fn) {
                    var res = Stream.prototype.removeListener.call(this, ev, fn);
                    return "readable" === ev && process.nextTick(updateReadableListening, this), res;
                }),
                (Readable.prototype.removeAllListeners = function (ev) {
                    var res = Stream.prototype.removeAllListeners.apply(this, arguments);
                    return ("readable" === ev || void 0 === ev) && process.nextTick(updateReadableListening, this), res;
                }),
                (Readable.prototype.resume = function () {
                    var state,
                        state1 = this._readableState;
                    return (
                        state1.flowing || (debug("resume"), (state1.flowing = !state1.readableListening), (state = state1).resumeScheduled || ((state.resumeScheduled = !0), process.nextTick(resume_, this, state))),
                        (state1.paused = !1),
                        this
                    );
                }),
                (Readable.prototype.pause = function () {
                    return debug("call pause flowing=%j", this._readableState.flowing), !1 !== this._readableState.flowing && (debug("pause"), (this._readableState.flowing = !1), this.emit("pause")), (this._readableState.paused = !0), this;
                }),
                (Readable.prototype.wrap = function (stream) {
                    var _this = this,
                        state = this._readableState,
                        paused = !1;
                    for (var i in (stream.on("end", function () {
                        if ((debug("wrapped end"), state.decoder && !state.ended)) {
                            var chunk = state.decoder.end();
                            chunk && chunk.length && _this.push(chunk);
                        }
                        _this.push(null);
                    }),
                    stream.on("data", function (chunk) {
                        debug("wrapped data"),
                            state.decoder && (chunk = state.decoder.write(chunk)),
                            (!state.objectMode || null != chunk) && (state.objectMode || (chunk && chunk.length)) && (_this.push(chunk) || ((paused = !0), stream.pause()));
                    }),
                    stream))
                        void 0 === this[i] &&
                            "function" == typeof stream[i] &&
                            (this[i] = (function (method) {
                                return function () {
                                    return stream[method].apply(stream, arguments);
                                };
                            })(i));
                    for (var n = 0; n < kProxyEvents.length; n++) stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
                    return (
                        (this._read = function (n) {
                            debug("wrapped _read", n), paused && ((paused = !1), stream.resume());
                        }),
                        this
                    );
                }),
                "function" == typeof Symbol &&
                    (Readable.prototype[Symbol.asyncIterator] = function () {
                        return void 0 === createReadableStreamAsyncIterator && (createReadableStreamAsyncIterator = __webpack_require__(30527)), createReadableStreamAsyncIterator(this);
                    }),
                Object.defineProperty(Readable.prototype, "readableHighWaterMark", {
                    enumerable: !1,
                    get: function () {
                        return this._readableState.highWaterMark;
                    },
                }),
                Object.defineProperty(Readable.prototype, "readableBuffer", {
                    enumerable: !1,
                    get: function () {
                        return this._readableState && this._readableState.buffer;
                    },
                }),
                Object.defineProperty(Readable.prototype, "readableFlowing", {
                    enumerable: !1,
                    get: function () {
                        return this._readableState.flowing;
                    },
                    set: function (state) {
                        this._readableState && (this._readableState.flowing = state);
                    },
                }),
                (Readable._fromList = fromList),
                Object.defineProperty(Readable.prototype, "readableLength", {
                    enumerable: !1,
                    get: function () {
                        return this._readableState.length;
                    },
                }),
                "function" == typeof Symbol &&
                    (Readable.from = function (iterable, opts) {
                        return void 0 === from && (from = __webpack_require__(5327)), from(Readable, iterable, opts);
                    });
        },
        70421: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            module.exports = Transform;
            var _require$codes = __webpack_require__(9786).q,
                ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
                ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
                ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,
                ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0,
                Duplex = __webpack_require__(62910);
            function afterTransform(er, data) {
                var ts = this._transformState;
                ts.transforming = !1;
                var cb = ts.writecb;
                if (null === cb) return this.emit("error", new ERR_MULTIPLE_CALLBACK());
                (ts.writechunk = null), (ts.writecb = null), null != data && this.push(data), cb(er);
                var rs = this._readableState;
                (rs.reading = !1), (rs.needReadable || rs.length < rs.highWaterMark) && this._read(rs.highWaterMark);
            }
            function Transform(options) {
                if (!(this instanceof Transform)) return new Transform(options);
                Duplex.call(this, options),
                    (this._transformState = { afterTransform: afterTransform.bind(this), needTransform: !1, transforming: !1, writecb: null, writechunk: null, writeencoding: null }),
                    (this._readableState.needReadable = !0),
                    (this._readableState.sync = !1),
                    options && ("function" == typeof options.transform && (this._transform = options.transform), "function" == typeof options.flush && (this._flush = options.flush)),
                    this.on("prefinish", prefinish);
            }
            function prefinish() {
                var _this = this;
                "function" != typeof this._flush || this._readableState.destroyed
                    ? done(this, null, null)
                    : this._flush(function (er, data) {
                          done(_this, er, data);
                      });
            }
            function done(stream, er, data) {
                if (er) return stream.emit("error", er);
                if ((null != data && stream.push(data), stream._writableState.length)) throw new ERR_TRANSFORM_WITH_LENGTH_0();
                if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
                return stream.push(null);
            }
            __webpack_require__(35717)(Transform, Duplex),
                (Transform.prototype.push = function (chunk, encoding) {
                    return (this._transformState.needTransform = !1), Duplex.prototype.push.call(this, chunk, encoding);
                }),
                (Transform.prototype._transform = function (chunk, encoding, cb) {
                    cb(new ERR_METHOD_NOT_IMPLEMENTED("_transform()"));
                }),
                (Transform.prototype._write = function (chunk, encoding, cb) {
                    var ts = this._transformState;
                    if (((ts.writecb = cb), (ts.writechunk = chunk), (ts.writeencoding = encoding), !ts.transforming)) {
                        var rs = this._readableState;
                        (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) && this._read(rs.highWaterMark);
                    }
                }),
                (Transform.prototype._read = function (n) {
                    var ts = this._transformState;
                    null === ts.writechunk || ts.transforming ? (ts.needTransform = !0) : ((ts.transforming = !0), this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform));
                }),
                (Transform.prototype._destroy = function (err, cb) {
                    Duplex.prototype._destroy.call(this, err, function (err2) {
                        cb(err2);
                    });
                });
        },
        70469: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var Duplex,
                realHasInstance,
                process = __webpack_require__(34155);
            function CorkedRequest(state) {
                var _this = this;
                (this.next = null),
                    (this.entry = null),
                    (this.finish = function () {
                        (function (corkReq, state, err) {
                            var entry = corkReq.entry;
                            for (corkReq.entry = null; entry; ) {
                                var cb = entry.callback;
                                state.pendingcb--, cb(void 0), (entry = entry.next);
                            }
                            state.corkedRequestsFree.next = corkReq;
                        })(_this, state);
                    });
            }
            (module.exports = Writable), (Writable.WritableState = WritableState);
            var internalUtil = { deprecate: __webpack_require__(94927) },
                Stream = __webpack_require__(50677),
                Buffer = __webpack_require__(48764).Buffer,
                OurUint8Array = __webpack_require__.g.Uint8Array || function () {},
                destroyImpl = __webpack_require__(35072),
                getHighWaterMark = __webpack_require__(31222).getHighWaterMark,
                _require$codes = __webpack_require__(9786).q,
                ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
                ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
                ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
                ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,
                ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,
                ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,
                ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,
                ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING,
                errorOrDestroy = destroyImpl.errorOrDestroy;
            function nop() {}
            function WritableState(options, stream, isDuplex) {
                (Duplex = Duplex || __webpack_require__(62910)),
                    (options = options || {}),
                    "boolean" != typeof isDuplex && (isDuplex = stream instanceof Duplex),
                    (this.objectMode = !!options.objectMode),
                    isDuplex && (this.objectMode = this.objectMode || !!options.writableObjectMode),
                    (this.highWaterMark = getHighWaterMark(this, options, "writableHighWaterMark", isDuplex)),
                    (this.finalCalled = !1),
                    (this.needDrain = !1),
                    (this.ending = !1),
                    (this.ended = !1),
                    (this.finished = !1),
                    (this.destroyed = !1);
                var noDecode = !1 === options.decodeStrings;
                (this.decodeStrings = !noDecode),
                    (this.defaultEncoding = options.defaultEncoding || "utf8"),
                    (this.length = 0),
                    (this.writing = !1),
                    (this.corked = 0),
                    (this.sync = !0),
                    (this.bufferProcessing = !1),
                    (this.onwrite = function (er) {
                        (function (stream, er) {
                            var state,
                                stream1,
                                state1 = stream._writableState,
                                sync = state1.sync,
                                cb = state1.writecb;
                            if ("function" != typeof cb) throw new ERR_MULTIPLE_CALLBACK();
                            if ((((state = state1).writing = !1), (state.writecb = null), (state.length -= state.writelen), (state.writelen = 0), er))
                                (stream1 = stream),
                                    --state1.pendingcb,
                                    sync
                                        ? (process.nextTick(cb, er), process.nextTick(finishMaybe, stream1, state1), (stream1._writableState.errorEmitted = !0), errorOrDestroy(stream1, er))
                                        : (cb(er), (stream1._writableState.errorEmitted = !0), errorOrDestroy(stream1, er), finishMaybe(stream1, state1));
                            else {
                                var finished = needFinish(state1) || stream.destroyed;
                                finished || state1.corked || state1.bufferProcessing || !state1.bufferedRequest || clearBuffer(stream, state1),
                                    sync ? process.nextTick(afterWrite, stream, state1, finished, cb) : afterWrite(stream, state1, finished, cb);
                            }
                        })(stream, er);
                    }),
                    (this.writecb = null),
                    (this.writelen = 0),
                    (this.bufferedRequest = null),
                    (this.lastBufferedRequest = null),
                    (this.pendingcb = 0),
                    (this.prefinished = !1),
                    (this.errorEmitted = !1),
                    (this.emitClose = !1 !== options.emitClose),
                    (this.autoDestroy = !!options.autoDestroy),
                    (this.bufferedRequestCount = 0),
                    (this.corkedRequestsFree = new CorkedRequest(this));
            }
            function Writable(options) {
                var isDuplex = this instanceof (Duplex = Duplex || __webpack_require__(62910));
                if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);
                (this._writableState = new WritableState(options, this, isDuplex)),
                    (this.writable = !0),
                    options &&
                        ("function" == typeof options.write && (this._write = options.write),
                        "function" == typeof options.writev && (this._writev = options.writev),
                        "function" == typeof options.destroy && (this._destroy = options.destroy),
                        "function" == typeof options.final && (this._final = options.final)),
                    Stream.call(this);
            }
            function doWrite(stream, state, writev, len, chunk, encoding, cb) {
                (state.writelen = len),
                    (state.writecb = cb),
                    (state.writing = !0),
                    (state.sync = !0),
                    state.destroyed ? state.onwrite(new ERR_STREAM_DESTROYED("write")) : writev ? stream._writev(chunk, state.onwrite) : stream._write(chunk, encoding, state.onwrite),
                    (state.sync = !1);
            }
            function afterWrite(stream, state, finished, cb) {
                var state1;
                finished || (0 === (state1 = state).length && state1.needDrain && ((state1.needDrain = !1), stream.emit("drain"))), state.pendingcb--, cb(), finishMaybe(stream, state);
            }
            function clearBuffer(stream, state) {
                state.bufferProcessing = !0;
                var entry = state.bufferedRequest;
                if (stream._writev && entry && entry.next) {
                    var buffer = Array(state.bufferedRequestCount),
                        holder = state.corkedRequestsFree;
                    holder.entry = entry;
                    for (var count = 0, allBuffers = !0; entry; ) (buffer[count] = entry), entry.isBuf || (allBuffers = !1), (entry = entry.next), (count += 1);
                    (buffer.allBuffers = allBuffers),
                        doWrite(stream, state, !0, state.length, buffer, "", holder.finish),
                        state.pendingcb++,
                        (state.lastBufferedRequest = null),
                        holder.next ? ((state.corkedRequestsFree = holder.next), (holder.next = null)) : (state.corkedRequestsFree = new CorkedRequest(state)),
                        (state.bufferedRequestCount = 0);
                } else {
                    for (; entry; ) {
                        var chunk = entry.chunk,
                            encoding = entry.encoding,
                            cb = entry.callback,
                            len = state.objectMode ? 1 : chunk.length;
                        if ((doWrite(stream, state, !1, len, chunk, encoding, cb), (entry = entry.next), state.bufferedRequestCount--, state.writing)) break;
                    }
                    null === entry && (state.lastBufferedRequest = null);
                }
                (state.bufferedRequest = entry), (state.bufferProcessing = !1);
            }
            function needFinish(state) {
                return state.ending && 0 === state.length && null === state.bufferedRequest && !state.finished && !state.writing;
            }
            function callFinal(stream, state) {
                stream._final(function (err) {
                    state.pendingcb--, err && errorOrDestroy(stream, err), (state.prefinished = !0), stream.emit("prefinish"), finishMaybe(stream, state);
                });
            }
            function finishMaybe(stream, state) {
                var state1,
                    need = needFinish(state);
                if (
                    need &&
                    ((state1 = state).prefinished ||
                        state1.finalCalled ||
                        ("function" != typeof stream._final || state1.destroyed ? ((state1.prefinished = !0), stream.emit("prefinish")) : (state1.pendingcb++, (state1.finalCalled = !0), process.nextTick(callFinal, stream, state1))),
                    0 === state.pendingcb && ((state.finished = !0), stream.emit("finish"), state.autoDestroy))
                ) {
                    var rState = stream._readableState;
                    (!rState || (rState.autoDestroy && rState.endEmitted)) && stream.destroy();
                }
                return need;
            }
            __webpack_require__(35717)(Writable, Stream),
                (WritableState.prototype.getBuffer = function () {
                    for (var current = this.bufferedRequest, out = []; current; ) out.push(current), (current = current.next);
                    return out;
                }),
                (function () {
                    try {
                        Object.defineProperty(WritableState.prototype, "buffer", {
                            get: internalUtil.deprecate(
                                function () {
                                    return this.getBuffer();
                                },
                                "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.",
                                "DEP0003"
                            ),
                        });
                    } catch (_) {}
                })(),
                "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance]
                    ? ((realHasInstance = Function.prototype[Symbol.hasInstance]),
                      Object.defineProperty(Writable, Symbol.hasInstance, {
                          value: function (object) {
                              return !!realHasInstance.call(this, object) || (this === Writable && object && object._writableState instanceof WritableState);
                          },
                      }))
                    : (realHasInstance = function (object) {
                          return object instanceof this;
                      }),
                (Writable.prototype.pipe = function () {
                    errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
                }),
                (Writable.prototype.write = function (chunk, encoding, cb) {
                    var obj,
                        chunk1,
                        cb1,
                        er,
                        chunk2,
                        cb2,
                        er1,
                        state = this._writableState,
                        ret = !1,
                        isBuf = !state.objectMode && ((obj = chunk), Buffer.isBuffer(obj) || obj instanceof OurUint8Array);
                    return (
                        isBuf && !Buffer.isBuffer(chunk) && ((chunk1 = chunk), (chunk = Buffer.from(chunk1))),
                        ("function" == typeof encoding && ((cb = encoding), (encoding = null)), isBuf ? (encoding = "buffer") : encoding || (encoding = state.defaultEncoding), "function" != typeof cb && (cb = nop), state.ending)
                            ? ((cb1 = cb), errorOrDestroy(this, (er = new ERR_STREAM_WRITE_AFTER_END())), process.nextTick(cb1, er))
                            : (isBuf ||
                                  ((chunk2 = chunk),
                                  (cb2 = cb),
                                  null === chunk2 ? (er1 = new ERR_STREAM_NULL_VALUES()) : "string" == typeof chunk2 || state.objectMode || (er1 = new ERR_INVALID_ARG_TYPE("chunk", ["string", "Buffer"], chunk2)),
                                  !er1 || (errorOrDestroy(this, er1), process.nextTick(cb2, er1), 0))) &&
                              (state.pendingcb++,
                              (ret = (function (stream, state, isBuf, chunk, encoding, cb) {
                                  if (!isBuf) {
                                      var chunk1,
                                          encoding1,
                                          newChunk = ((chunk1 = chunk), (encoding1 = encoding), state.objectMode || !1 === state.decodeStrings || "string" != typeof chunk1 || (chunk1 = Buffer.from(chunk1, encoding1)), chunk1);
                                      chunk !== newChunk && ((isBuf = !0), (encoding = "buffer"), (chunk = newChunk));
                                  }
                                  var len = state.objectMode ? 1 : chunk.length;
                                  state.length += len;
                                  var ret = state.length < state.highWaterMark;
                                  if ((ret || (state.needDrain = !0), state.writing || state.corked)) {
                                      var last = state.lastBufferedRequest;
                                      (state.lastBufferedRequest = { chunk: chunk, encoding: encoding, isBuf: isBuf, callback: cb, next: null }),
                                          last ? (last.next = state.lastBufferedRequest) : (state.bufferedRequest = state.lastBufferedRequest),
                                          (state.bufferedRequestCount += 1);
                                  } else doWrite(stream, state, !1, len, chunk, encoding, cb);
                                  return ret;
                              })(this, state, isBuf, chunk, encoding, cb))),
                        ret
                    );
                }),
                (Writable.prototype.cork = function () {
                    this._writableState.corked++;
                }),
                (Writable.prototype.uncork = function () {
                    var state = this._writableState;
                    !state.corked || (state.corked--, state.writing || state.corked || state.bufferProcessing || !state.bufferedRequest || clearBuffer(this, state));
                }),
                (Writable.prototype.setDefaultEncoding = function (encoding) {
                    if (
                        ("string" == typeof encoding && (encoding = encoding.toLowerCase()),
                        !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((encoding + "").toLowerCase()) > -1))
                    )
                        throw new ERR_UNKNOWN_ENCODING(encoding);
                    return (this._writableState.defaultEncoding = encoding), this;
                }),
                Object.defineProperty(Writable.prototype, "writableBuffer", {
                    enumerable: !1,
                    get: function () {
                        return this._writableState && this._writableState.getBuffer();
                    },
                }),
                Object.defineProperty(Writable.prototype, "writableHighWaterMark", {
                    enumerable: !1,
                    get: function () {
                        return this._writableState.highWaterMark;
                    },
                }),
                (Writable.prototype._write = function (chunk, encoding, cb) {
                    cb(new ERR_METHOD_NOT_IMPLEMENTED("_write()"));
                }),
                (Writable.prototype._writev = null),
                (Writable.prototype.end = function (chunk, encoding, cb) {
                    var stream,
                        state,
                        cb1,
                        state1 = this._writableState;
                    return (
                        "function" == typeof chunk ? ((cb = chunk), (chunk = null), (encoding = null)) : "function" == typeof encoding && ((cb = encoding), (encoding = null)),
                        null != chunk && this.write(chunk, encoding),
                        state1.corked && ((state1.corked = 1), this.uncork()),
                        state1.ending ||
                            ((stream = this),
                            (state = state1),
                            (cb1 = cb),
                            (state.ending = !0),
                            finishMaybe(stream, state),
                            cb1 && (state.finished ? process.nextTick(cb1) : stream.once("finish", cb1)),
                            (state.ended = !0),
                            (stream.writable = !1)),
                        this
                    );
                }),
                Object.defineProperty(Writable.prototype, "writableLength", {
                    enumerable: !1,
                    get: function () {
                        return this._writableState.length;
                    },
                }),
                Object.defineProperty(Writable.prototype, "destroyed", {
                    enumerable: !1,
                    get: function () {
                        return void 0 !== this._writableState && this._writableState.destroyed;
                    },
                    set: function (value) {
                        this._writableState && (this._writableState.destroyed = value);
                    },
                }),
                (Writable.prototype.destroy = destroyImpl.destroy),
                (Writable.prototype._undestroy = destroyImpl.undestroy),
                (Writable.prototype._destroy = function (err, cb) {
                    cb(err);
                });
        },
        30527: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var _Object$setPrototypeO,
                process = __webpack_require__(34155);
            function _defineProperty(obj, key, value) {
                return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : (obj[key] = value), obj;
            }
            var finished = __webpack_require__(28640),
                kLastResolve = Symbol("lastResolve"),
                kLastReject = Symbol("lastReject"),
                kError = Symbol("error"),
                kEnded = Symbol("ended"),
                kLastPromise = Symbol("lastPromise"),
                kHandlePromise = Symbol("handlePromise"),
                kStream = Symbol("stream");
            function createIterResult(value, done) {
                return { value: value, done: done };
            }
            function readAndResolve(iter) {
                var resolve = iter[kLastResolve];
                if (null !== resolve) {
                    var data = iter[kStream].read();
                    null !== data && ((iter[kLastPromise] = null), (iter[kLastResolve] = null), (iter[kLastReject] = null), resolve(createIterResult(data, !1)));
                }
            }
            function onReadable(iter) {
                process.nextTick(readAndResolve, iter);
            }
            var AsyncIteratorPrototype = Object.getPrototypeOf(function () {}),
                ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf(
                    (_defineProperty(
                        (_Object$setPrototypeO = {
                            get stream() {
                                return this[kStream];
                            },
                            next: function () {
                                var iter,
                                    promise,
                                    _this = this,
                                    error = this[kError];
                                if (null !== error) return Promise.reject(error);
                                if (this[kEnded]) return Promise.resolve(createIterResult(void 0, !0));
                                if (this[kStream].destroyed)
                                    return new Promise(function (resolve, reject) {
                                        process.nextTick(function () {
                                            _this[kError] ? reject(_this[kError]) : resolve(createIterResult(void 0, !0));
                                        });
                                    });
                                var lastPromise = this[kLastPromise];
                                if (lastPromise)
                                    promise = new Promise(
                                        ((iter = this),
                                        function (resolve, reject) {
                                            lastPromise.then(function () {
                                                if (iter[kEnded]) {
                                                    resolve(createIterResult(void 0, !0));
                                                    return;
                                                }
                                                iter[kHandlePromise](resolve, reject);
                                            }, reject);
                                        })
                                    );
                                else {
                                    var data = this[kStream].read();
                                    if (null !== data) return Promise.resolve(createIterResult(data, !1));
                                    promise = new Promise(this[kHandlePromise]);
                                }
                                return (this[kLastPromise] = promise), promise;
                            },
                        }),
                        Symbol.asyncIterator,
                        function () {
                            return this;
                        }
                    ),
                    _defineProperty(_Object$setPrototypeO, "return", function () {
                        var _this2 = this;
                        return new Promise(function (resolve, reject) {
                            _this2[kStream].destroy(null, function (err) {
                                if (err) {
                                    reject(err);
                                    return;
                                }
                                resolve(createIterResult(void 0, !0));
                            });
                        });
                    }),
                    _Object$setPrototypeO),
                    AsyncIteratorPrototype
                );
            module.exports = function (stream) {
                var _Object$create,
                    iterator = Object.create(
                        ReadableStreamAsyncIteratorPrototype,
                        (_defineProperty((_Object$create = {}), kStream, { value: stream, writable: !0 }),
                        _defineProperty(_Object$create, kLastResolve, { value: null, writable: !0 }),
                        _defineProperty(_Object$create, kLastReject, { value: null, writable: !0 }),
                        _defineProperty(_Object$create, kError, { value: null, writable: !0 }),
                        _defineProperty(_Object$create, kEnded, { value: stream._readableState.endEmitted, writable: !0 }),
                        _defineProperty(_Object$create, kHandlePromise, {
                            value: function (resolve, reject) {
                                var data = iterator[kStream].read();
                                data
                                    ? ((iterator[kLastPromise] = null), (iterator[kLastResolve] = null), (iterator[kLastReject] = null), resolve(createIterResult(data, !1)))
                                    : ((iterator[kLastResolve] = resolve), (iterator[kLastReject] = reject));
                            },
                            writable: !0,
                        }),
                        _Object$create)
                    );
                return (
                    (iterator[kLastPromise] = null),
                    finished(stream, function (err) {
                        if (err && "ERR_STREAM_PREMATURE_CLOSE" !== err.code) {
                            var reject = iterator[kLastReject];
                            null !== reject && ((iterator[kLastPromise] = null), (iterator[kLastResolve] = null), (iterator[kLastReject] = null), reject(err)), (iterator[kError] = err);
                            return;
                        }
                        var resolve = iterator[kLastResolve];
                        null !== resolve && ((iterator[kLastPromise] = null), (iterator[kLastResolve] = null), (iterator[kLastReject] = null), resolve(createIterResult(void 0, !0))), (iterator[kEnded] = !0);
                    }),
                    stream.on("readable", onReadable.bind(null, iterator)),
                    iterator
                );
            };
        },
        98354: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            function ownKeys(object, enumerableOnly) {
                var keys = Object.keys(object);
                if (Object.getOwnPropertySymbols) {
                    var symbols = Object.getOwnPropertySymbols(object);
                    enumerableOnly &&
                        (symbols = symbols.filter(function (sym) {
                            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
                        })),
                        keys.push.apply(keys, symbols);
                }
                return keys;
            }
            function _defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    (descriptor.enumerable = descriptor.enumerable || !1), (descriptor.configurable = !0), "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            var Buffer = __webpack_require__(48764).Buffer,
                inspect = __webpack_require__(69386).inspect,
                custom = (inspect && inspect.custom) || "inspect";
            module.exports = (function () {
                var protoProps, staticProps;
                function BufferList() {
                    !(function (instance, Constructor) {
                        if (!(instance instanceof Constructor)) throw TypeError("Cannot call a class as a function");
                    })(this, BufferList),
                        (this.head = null),
                        (this.tail = null),
                        (this.length = 0);
                }
                return (
                    (protoProps = [
                        {
                            key: "push",
                            value: function (v) {
                                var entry = { data: v, next: null };
                                this.length > 0 ? (this.tail.next = entry) : (this.head = entry), (this.tail = entry), ++this.length;
                            },
                        },
                        {
                            key: "unshift",
                            value: function (v) {
                                var entry = { data: v, next: this.head };
                                0 === this.length && (this.tail = entry), (this.head = entry), ++this.length;
                            },
                        },
                        {
                            key: "shift",
                            value: function () {
                                if (0 !== this.length) {
                                    var ret = this.head.data;
                                    return 1 === this.length ? (this.head = this.tail = null) : (this.head = this.head.next), --this.length, ret;
                                }
                            },
                        },
                        {
                            key: "clear",
                            value: function () {
                                (this.head = this.tail = null), (this.length = 0);
                            },
                        },
                        {
                            key: "join",
                            value: function (s) {
                                if (0 === this.length) return "";
                                for (var p = this.head, ret = "" + p.data; (p = p.next); ) ret += s + p.data;
                                return ret;
                            },
                        },
                        {
                            key: "concat",
                            value: function (n) {
                                if (0 === this.length) return Buffer.alloc(0);
                                for (var src, offset, ret = Buffer.allocUnsafe(n >>> 0), p = this.head, i = 0; p; ) (src = p.data), (offset = i), Buffer.prototype.copy.call(src, ret, offset), (i += p.data.length), (p = p.next);
                                return ret;
                            },
                        },
                        {
                            key: "consume",
                            value: function (n, hasStrings) {
                                var ret;
                                return (
                                    n < this.head.data.length
                                        ? ((ret = this.head.data.slice(0, n)), (this.head.data = this.head.data.slice(n)))
                                        : (ret = n === this.head.data.length ? this.shift() : hasStrings ? this._getString(n) : this._getBuffer(n)),
                                    ret
                                );
                            },
                        },
                        {
                            key: "first",
                            value: function () {
                                return this.head.data;
                            },
                        },
                        {
                            key: "_getString",
                            value: function (n) {
                                var p = this.head,
                                    c = 1,
                                    ret = p.data;
                                for (n -= ret.length; (p = p.next); ) {
                                    var str = p.data,
                                        nb = n > str.length ? str.length : n;
                                    if ((nb === str.length ? (ret += str) : (ret += str.slice(0, n)), 0 == (n -= nb))) {
                                        nb === str.length ? (++c, p.next ? (this.head = p.next) : (this.head = this.tail = null)) : ((this.head = p), (p.data = str.slice(nb)));
                                        break;
                                    }
                                    ++c;
                                }
                                return (this.length -= c), ret;
                            },
                        },
                        {
                            key: "_getBuffer",
                            value: function (n) {
                                var ret = Buffer.allocUnsafe(n),
                                    p = this.head,
                                    c = 1;
                                for (p.data.copy(ret), n -= p.data.length; (p = p.next); ) {
                                    var buf = p.data,
                                        nb = n > buf.length ? buf.length : n;
                                    if ((buf.copy(ret, ret.length - n, 0, nb), 0 == (n -= nb))) {
                                        nb === buf.length ? (++c, p.next ? (this.head = p.next) : (this.head = this.tail = null)) : ((this.head = p), (p.data = buf.slice(nb)));
                                        break;
                                    }
                                    ++c;
                                }
                                return (this.length -= c), ret;
                            },
                        },
                        {
                            key: custom,
                            value: function (_, options) {
                                return inspect(
                                    this,
                                    (function (target) {
                                        for (var i = 1; i < arguments.length; i++) {
                                            var source = null != arguments[i] ? arguments[i] : {};
                                            i % 2
                                                ? ownKeys(Object(source), !0).forEach(function (key) {
                                                      var obj, value;
                                                      (obj = target), (value = source[key]), key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : (obj[key] = value);
                                                  })
                                                : Object.getOwnPropertyDescriptors
                                                ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source))
                                                : ownKeys(Object(source)).forEach(function (key) {
                                                      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
                                                  });
                                        }
                                        return target;
                                    })({}, options, { depth: 0, customInspect: !1 })
                                );
                            },
                        },
                    ]),
                    _defineProperties(BufferList.prototype, protoProps),
                    staticProps && _defineProperties(BufferList, staticProps),
                    BufferList
                );
            })();
        },
        35072: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var process = __webpack_require__(34155);
            function emitErrorAndCloseNT(self1, err) {
                emitErrorNT(self1, err), emitCloseNT(self1);
            }
            function emitCloseNT(self1) {
                (!self1._writableState || self1._writableState.emitClose) && (!self1._readableState || self1._readableState.emitClose) && self1.emit("close");
            }
            function emitErrorNT(self1, err) {
                self1.emit("error", err);
            }
            module.exports = {
                destroy: function (err, cb) {
                    var _this = this,
                        readableDestroyed = this._readableState && this._readableState.destroyed,
                        writableDestroyed = this._writableState && this._writableState.destroyed;
                    return readableDestroyed || writableDestroyed
                        ? (cb ? cb(err) : err && (this._writableState ? this._writableState.errorEmitted || ((this._writableState.errorEmitted = !0), process.nextTick(emitErrorNT, this, err)) : process.nextTick(emitErrorNT, this, err)),
                          this)
                        : (this._readableState && (this._readableState.destroyed = !0),
                          this._writableState && (this._writableState.destroyed = !0),
                          this._destroy(err || null, function (err) {
                              !cb && err
                                  ? _this._writableState
                                      ? _this._writableState.errorEmitted
                                          ? process.nextTick(emitCloseNT, _this)
                                          : ((_this._writableState.errorEmitted = !0), process.nextTick(emitErrorAndCloseNT, _this, err))
                                      : process.nextTick(emitErrorAndCloseNT, _this, err)
                                  : cb
                                  ? (process.nextTick(emitCloseNT, _this), cb(err))
                                  : process.nextTick(emitCloseNT, _this);
                          }),
                          this);
                },
                undestroy: function () {
                    this._readableState && ((this._readableState.destroyed = !1), (this._readableState.reading = !1), (this._readableState.ended = !1), (this._readableState.endEmitted = !1)),
                        this._writableState &&
                            ((this._writableState.destroyed = !1),
                            (this._writableState.ended = !1),
                            (this._writableState.ending = !1),
                            (this._writableState.finalCalled = !1),
                            (this._writableState.prefinished = !1),
                            (this._writableState.finished = !1),
                            (this._writableState.errorEmitted = !1));
                },
                errorOrDestroy: function (stream, err) {
                    var rState = stream._readableState,
                        wState = stream._writableState;
                    (rState && rState.autoDestroy) || (wState && wState.autoDestroy) ? stream.destroy(err) : stream.emit("error", err);
                },
            };
        },
        28640: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var ERR_STREAM_PREMATURE_CLOSE = __webpack_require__(9786).q.ERR_STREAM_PREMATURE_CLOSE;
            function noop() {}
            module.exports = function eos(stream, opts, callback) {
                if ("function" == typeof opts) return eos(stream, null, opts);
                opts || (opts = {}),
                    (callback1 = callback || noop),
                    (called = !1),
                    (callback = function () {
                        if (!called) {
                            called = !0;
                            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                            callback1.apply(this, args);
                        }
                    });
                var callback1,
                    called,
                    readable = opts.readable || (!1 !== opts.readable && stream.readable),
                    writable = opts.writable || (!1 !== opts.writable && stream.writable),
                    onlegacyfinish = function () {
                        stream.writable || onfinish();
                    },
                    writableEnded = stream._writableState && stream._writableState.finished,
                    onfinish = function () {
                        (writable = !1), (writableEnded = !0), readable || callback.call(stream);
                    },
                    readableEnded = stream._readableState && stream._readableState.endEmitted,
                    onend = function () {
                        (readable = !1), (readableEnded = !0), writable || callback.call(stream);
                    },
                    onerror = function (err) {
                        callback.call(stream, err);
                    },
                    onclose = function () {
                        var err;
                        return readable && !readableEnded
                            ? ((stream._readableState && stream._readableState.ended) || (err = new ERR_STREAM_PREMATURE_CLOSE()), callback.call(stream, err))
                            : writable && !writableEnded
                            ? ((stream._writableState && stream._writableState.ended) || (err = new ERR_STREAM_PREMATURE_CLOSE()), callback.call(stream, err))
                            : void 0;
                    },
                    onrequest = function () {
                        stream.req.on("finish", onfinish);
                    };
                return (
                    stream.setHeader && "function" == typeof stream.abort
                        ? (stream.on("complete", onfinish), stream.on("abort", onclose), stream.req ? onrequest() : stream.on("request", onrequest))
                        : writable && !stream._writableState && (stream.on("end", onlegacyfinish), stream.on("close", onlegacyfinish)),
                    stream.on("end", onend),
                    stream.on("finish", onfinish),
                    !1 !== opts.error && stream.on("error", onerror),
                    stream.on("close", onclose),
                    function () {
                        stream.removeListener("complete", onfinish),
                            stream.removeListener("abort", onclose),
                            stream.removeListener("request", onrequest),
                            stream.req && stream.req.removeListener("finish", onfinish),
                            stream.removeListener("end", onlegacyfinish),
                            stream.removeListener("close", onlegacyfinish),
                            stream.removeListener("finish", onfinish),
                            stream.removeListener("end", onend),
                            stream.removeListener("error", onerror),
                            stream.removeListener("close", onclose);
                    }
                );
            };
        },
        5327: function (module) {
            module.exports = function () {
                throw Error("Readable.from is not available in the browser");
            };
        },
        64218: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var eos,
                _require$codes = __webpack_require__(9786).q,
                ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,
                ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;
            function noop(err) {
                if (err) throw err;
            }
            function call(fn) {
                fn();
            }
            function pipe(from, to) {
                return from.pipe(to);
            }
            module.exports = function () {
                for (var streams, error, _len = arguments.length, streams1 = Array(_len), _key = 0; _key < _len; _key++) streams1[_key] = arguments[_key];
                var callback = (streams = streams1).length && "function" == typeof streams[streams.length - 1] ? streams.pop() : noop;
                if ((Array.isArray(streams1[0]) && (streams1 = streams1[0]), streams1.length < 2)) throw new ERR_MISSING_ARGS("streams");
                var destroys = streams1.map(function (stream, i) {
                    var callback1,
                        callback2,
                        called,
                        closed,
                        destroyed,
                        reading = i < streams1.length - 1;
                    return (
                        (callback2 = callback1 = function (err) {
                            error || (error = err), err && destroys.forEach(call), reading || (destroys.forEach(call), callback(error));
                        }),
                        (called = !1),
                        (callback1 = function () {
                            called || ((called = !0), callback2.apply(void 0, arguments));
                        }),
                        (closed = !1),
                        stream.on("close", function () {
                            closed = !0;
                        }),
                        void 0 === eos && (eos = __webpack_require__(28640)),
                        eos(stream, { readable: reading, writable: i > 0 }, function (err) {
                            if (err) return callback1(err);
                            (closed = !0), callback1();
                        }),
                        (destroyed = !1),
                        function (err) {
                            if (!closed && !destroyed) {
                                if (((destroyed = !0), stream.setHeader && "function" == typeof stream.abort)) return stream.abort();
                                if ("function" == typeof stream.destroy) return stream.destroy();
                                callback1(err || new ERR_STREAM_DESTROYED("pipe"));
                            }
                        }
                    );
                });
                return streams1.reduce(pipe);
            };
        },
        31222: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var ERR_INVALID_OPT_VALUE = __webpack_require__(9786).q.ERR_INVALID_OPT_VALUE;
            module.exports = {
                getHighWaterMark: function (state, options, duplexKey, isDuplex) {
                    var hwm = null != options.highWaterMark ? options.highWaterMark : isDuplex ? options[duplexKey] : null;
                    if (null != hwm) {
                        if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) throw new ERR_INVALID_OPT_VALUE(isDuplex ? duplexKey : "highWaterMark", hwm);
                        return Math.floor(hwm);
                    }
                    return state.objectMode ? 16 : 16384;
                },
            };
        },
        50677: function (module, __unused_webpack_exports, __webpack_require__) {
            module.exports = __webpack_require__(17187).EventEmitter;
        },
        70326: function (module, exports, __webpack_require__) {
            ((exports = module.exports = __webpack_require__(45789)).Stream = exports),
                (exports.Readable = exports),
                (exports.Writable = __webpack_require__(70469)),
                (exports.Duplex = __webpack_require__(62910)),
                (exports.Transform = __webpack_require__(70421)),
                (exports.PassThrough = __webpack_require__(58994)),
                (exports.finished = __webpack_require__(28640)),
                (exports.pipeline = __webpack_require__(64218));
        },
        33893: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var Buffer = __webpack_require__(89509).Buffer,
                isEncoding =
                    Buffer.isEncoding ||
                    function (encoding) {
                        switch ((encoding = "" + encoding) && encoding.toLowerCase()) {
                            case "hex":
                            case "utf8":
                            case "utf-8":
                            case "ascii":
                            case "binary":
                            case "base64":
                            case "ucs2":
                            case "ucs-2":
                            case "utf16le":
                            case "utf-16le":
                            case "raw":
                                return !0;
                            default:
                                return !1;
                        }
                    };
            function StringDecoder(encoding) {
                var nb;
                switch (
                    ((this.encoding = (function (enc) {
                        var nenc = (function (enc) {
                            var retried;
                            if (!enc) return "utf8";
                            for (;;)
                                switch (enc) {
                                    case "utf8":
                                    case "utf-8":
                                        return "utf8";
                                    case "ucs2":
                                    case "ucs-2":
                                    case "utf16le":
                                    case "utf-16le":
                                        return "utf16le";
                                    case "latin1":
                                    case "binary":
                                        return "latin1";
                                    case "base64":
                                    case "ascii":
                                    case "hex":
                                        return enc;
                                    default:
                                        if (retried) return;
                                        (enc = ("" + enc).toLowerCase()), (retried = !0);
                                }
                        })(enc);
                        if ("string" != typeof nenc && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw Error("Unknown encoding: " + enc);
                        return nenc || enc;
                    })(encoding)),
                    this.encoding)
                ) {
                    case "utf16le":
                        (this.text = utf16Text), (this.end = utf16End), (nb = 4);
                        break;
                    case "utf8":
                        (this.fillLast = utf8FillLast), (nb = 4);
                        break;
                    case "base64":
                        (this.text = base64Text), (this.end = base64End), (nb = 3);
                        break;
                    default:
                        (this.write = simpleWrite), (this.end = simpleEnd);
                        return;
                }
                (this.lastNeed = 0), (this.lastTotal = 0), (this.lastChar = Buffer.allocUnsafe(nb));
            }
            function utf8CheckByte(byte) {
                return byte <= 127 ? 0 : byte >> 5 == 6 ? 2 : byte >> 4 == 14 ? 3 : byte >> 3 == 30 ? 4 : byte >> 6 == 2 ? -1 : -2;
            }
            function utf8FillLast(buf) {
                var p = this.lastTotal - this.lastNeed,
                    r = (function (self1, buf, p) {
                        if ((192 & buf[0]) != 128) return (self1.lastNeed = 0), "�";
                        if (self1.lastNeed > 1 && buf.length > 1) {
                            if ((192 & buf[1]) != 128) return (self1.lastNeed = 1), "�";
                            if (self1.lastNeed > 2 && buf.length > 2 && (192 & buf[2]) != 128) return (self1.lastNeed = 2), "�";
                        }
                    })(this, buf, 0);
                return void 0 !== r
                    ? r
                    : this.lastNeed <= buf.length
                    ? (buf.copy(this.lastChar, p, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal))
                    : void (buf.copy(this.lastChar, p, 0, buf.length), (this.lastNeed -= buf.length));
            }
            function utf16Text(buf, i) {
                if ((buf.length - i) % 2 == 0) {
                    var r = buf.toString("utf16le", i);
                    if (r) {
                        var c = r.charCodeAt(r.length - 1);
                        if (c >= 55296 && c <= 56319) return (this.lastNeed = 2), (this.lastTotal = 4), (this.lastChar[0] = buf[buf.length - 2]), (this.lastChar[1] = buf[buf.length - 1]), r.slice(0, -1);
                    }
                    return r;
                }
                return (this.lastNeed = 1), (this.lastTotal = 2), (this.lastChar[0] = buf[buf.length - 1]), buf.toString("utf16le", i, buf.length - 1);
            }
            function utf16End(buf) {
                var r = buf && buf.length ? this.write(buf) : "";
                if (this.lastNeed) {
                    var end = this.lastTotal - this.lastNeed;
                    return r + this.lastChar.toString("utf16le", 0, end);
                }
                return r;
            }
            function base64Text(buf, i) {
                var n = (buf.length - i) % 3;
                return 0 === n
                    ? buf.toString("base64", i)
                    : ((this.lastNeed = 3 - n),
                      (this.lastTotal = 3),
                      1 === n ? (this.lastChar[0] = buf[buf.length - 1]) : ((this.lastChar[0] = buf[buf.length - 2]), (this.lastChar[1] = buf[buf.length - 1])),
                      buf.toString("base64", i, buf.length - n));
            }
            function base64End(buf) {
                var r = buf && buf.length ? this.write(buf) : "";
                return this.lastNeed ? r + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : r;
            }
            function simpleWrite(buf) {
                return buf.toString(this.encoding);
            }
            function simpleEnd(buf) {
                return buf && buf.length ? this.write(buf) : "";
            }
            (exports.s = StringDecoder),
                (StringDecoder.prototype.write = function (buf) {
                    var r, i;
                    if (0 === buf.length) return "";
                    if (this.lastNeed) {
                        if (void 0 === (r = this.fillLast(buf))) return "";
                        (i = this.lastNeed), (this.lastNeed = 0);
                    } else i = 0;
                    return i < buf.length ? (r ? r + this.text(buf, i) : this.text(buf, i)) : r || "";
                }),
                (StringDecoder.prototype.end = function (buf) {
                    var r = buf && buf.length ? this.write(buf) : "";
                    return this.lastNeed ? r + "�" : r;
                }),
                (StringDecoder.prototype.text = function (buf, i) {
                    var total = (function (self1, buf, i) {
                        var j = buf.length - 1;
                        if (j < i) return 0;
                        var nb = utf8CheckByte(buf[j]);
                        return nb >= 0
                            ? (nb > 0 && (self1.lastNeed = nb - 1), nb)
                            : --j < i || -2 === nb
                            ? 0
                            : (nb = utf8CheckByte(buf[j])) >= 0
                            ? (nb > 0 && (self1.lastNeed = nb - 2), nb)
                            : --j < i || -2 === nb
                            ? 0
                            : (nb = utf8CheckByte(buf[j])) >= 0
                            ? (nb > 0 && (2 === nb ? (nb = 0) : (self1.lastNeed = nb - 3)), nb)
                            : 0;
                    })(this, buf, i);
                    if (!this.lastNeed) return buf.toString("utf8", i);
                    this.lastTotal = total;
                    var end = buf.length - (total - this.lastNeed);
                    return buf.copy(this.lastChar, 0, end), buf.toString("utf8", i, end);
                }),
                (StringDecoder.prototype.fillLast = function (buf) {
                    if (this.lastNeed <= buf.length) return buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
                    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length), (this.lastNeed -= buf.length);
                });
        },
        33715: function (__unused_webpack_module, exports, __webpack_require__) {
            var hash = exports;
            (hash.utils = __webpack_require__(26436)),
                (hash.common = __webpack_require__(95772)),
                (hash.sha = __webpack_require__(89041)),
                (hash.ripemd = __webpack_require__(12949)),
                (hash.hmac = __webpack_require__(52344)),
                (hash.sha1 = hash.sha.sha1),
                (hash.sha256 = hash.sha.sha256),
                (hash.sha224 = hash.sha.sha224),
                (hash.sha384 = hash.sha.sha384),
                (hash.sha512 = hash.sha.sha512),
                (hash.ripemd160 = hash.ripemd.ripemd160);
        },
        95772: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var utils = __webpack_require__(26436),
                assert = __webpack_require__(79746);
            function BlockHash() {
                (this.pending = null),
                    (this.pendingTotal = 0),
                    (this.blockSize = this.constructor.blockSize),
                    (this.outSize = this.constructor.outSize),
                    (this.hmacStrength = this.constructor.hmacStrength),
                    (this.padLength = this.constructor.padLength / 8),
                    (this.endian = "big"),
                    (this._delta8 = this.blockSize / 8),
                    (this._delta32 = this.blockSize / 32);
            }
            (exports.BlockHash = BlockHash),
                (BlockHash.prototype.update = function (msg, enc) {
                    if (((msg = utils.toArray(msg, enc)), this.pending ? (this.pending = this.pending.concat(msg)) : (this.pending = msg), (this.pendingTotal += msg.length), this.pending.length >= this._delta8)) {
                        var r = (msg = this.pending).length % this._delta8;
                        (this.pending = msg.slice(msg.length - r, msg.length)), 0 === this.pending.length && (this.pending = null), (msg = utils.join32(msg, 0, msg.length - r, this.endian));
                        for (var i = 0; i < msg.length; i += this._delta32) this._update(msg, i, i + this._delta32);
                    }
                    return this;
                }),
                (BlockHash.prototype.digest = function (enc) {
                    return this.update(this._pad()), assert(null === this.pending), this._digest(enc);
                }),
                (BlockHash.prototype._pad = function () {
                    var len = this.pendingTotal,
                        bytes = this._delta8,
                        k = bytes - ((len + this.padLength) % bytes),
                        res = Array(k + this.padLength);
                    res[0] = 128;
                    for (var i = 1; i < k; i++) res[i] = 0;
                    if (((len <<= 3), "big" === this.endian)) {
                        for (var t = 8; t < this.padLength; t++) res[i++] = 0;
                        (res[i++] = 0), (res[i++] = 0), (res[i++] = 0), (res[i++] = 0), (res[i++] = (len >>> 24) & 255), (res[i++] = (len >>> 16) & 255), (res[i++] = (len >>> 8) & 255), (res[i++] = 255 & len);
                    } else
                        for (t = 8, res[i++] = 255 & len, res[i++] = (len >>> 8) & 255, res[i++] = (len >>> 16) & 255, res[i++] = (len >>> 24) & 255, res[i++] = 0, res[i++] = 0, res[i++] = 0, res[i++] = 0; t < this.padLength; t++)
                            res[i++] = 0;
                    return res;
                });
        },
        52344: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var utils = __webpack_require__(26436),
                assert = __webpack_require__(79746);
            function Hmac(hash, key, enc) {
                if (!(this instanceof Hmac)) return new Hmac(hash, key, enc);
                (this.Hash = hash), (this.blockSize = hash.blockSize / 8), (this.outSize = hash.outSize / 8), (this.inner = null), (this.outer = null), this._init(utils.toArray(key, enc));
            }
            (module.exports = Hmac),
                (Hmac.prototype._init = function (key) {
                    key.length > this.blockSize && (key = new this.Hash().update(key).digest()), assert(key.length <= this.blockSize);
                    for (var i = key.length; i < this.blockSize; i++) key.push(0);
                    for (i = 0; i < key.length; i++) key[i] ^= 54;
                    for (i = 0, this.inner = new this.Hash().update(key); i < key.length; i++) key[i] ^= 106;
                    this.outer = new this.Hash().update(key);
                }),
                (Hmac.prototype.update = function (msg, enc) {
                    return this.inner.update(msg, enc), this;
                }),
                (Hmac.prototype.digest = function (enc) {
                    return this.outer.update(this.inner.digest()), this.outer.digest(enc);
                });
        },
        12949: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var utils = __webpack_require__(26436),
                common = __webpack_require__(95772),
                rotl32 = utils.rotl32,
                sum32 = utils.sum32,
                sum32_3 = utils.sum32_3,
                sum32_4 = utils.sum32_4,
                BlockHash = common.BlockHash;
            function RIPEMD160() {
                if (!(this instanceof RIPEMD160)) return new RIPEMD160();
                BlockHash.call(this), (this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520]), (this.endian = "little");
            }
            function f(j, x, y, z) {
                return j <= 15 ? x ^ y ^ z : j <= 31 ? (x & y) | (~x & z) : j <= 47 ? (x | ~y) ^ z : j <= 63 ? (x & z) | (y & ~z) : x ^ (y | ~z);
            }
            utils.inherits(RIPEMD160, BlockHash),
                (exports.ripemd160 = RIPEMD160),
                (RIPEMD160.blockSize = 512),
                (RIPEMD160.outSize = 160),
                (RIPEMD160.hmacStrength = 192),
                (RIPEMD160.padLength = 64),
                (RIPEMD160.prototype._update = function (msg, start) {
                    for (var A = this.h[0], B = this.h[1], C = this.h[2], D = this.h[3], E = this.h[4], Ah = A, Bh = B, Ch = C, Dh = D, Eh = E, j = 0; j < 80; j++) {
                        var j1,
                            j2,
                            T = sum32(rotl32(sum32_4(A, f(j, B, C, D), msg[r[j] + start], (j1 = j) <= 15 ? 0 : j1 <= 31 ? 1518500249 : j1 <= 47 ? 1859775393 : j1 <= 63 ? 2400959708 : 2840853838), s[j]), E);
                        (A = E),
                            (E = D),
                            (D = rotl32(C, 10)),
                            (C = B),
                            (B = T),
                            (T = sum32(rotl32(sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], (j2 = j) <= 15 ? 1352829926 : j2 <= 31 ? 1548603684 : j2 <= 47 ? 1836072691 : j2 <= 63 ? 2053994217 : 0), sh[j]), Eh)),
                            (Ah = Eh),
                            (Eh = Dh),
                            (Dh = rotl32(Ch, 10)),
                            (Ch = Bh),
                            (Bh = T);
                    }
                    (T = sum32_3(this.h[1], C, Dh)), (this.h[1] = sum32_3(this.h[2], D, Eh)), (this.h[2] = sum32_3(this.h[3], E, Ah)), (this.h[3] = sum32_3(this.h[4], A, Bh)), (this.h[4] = sum32_3(this.h[0], B, Ch)), (this.h[0] = T);
                }),
                (RIPEMD160.prototype._digest = function (enc) {
                    return "hex" === enc ? utils.toHex32(this.h, "little") : utils.split32(this.h, "little");
                });
            var r = [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    7,
                    4,
                    13,
                    1,
                    10,
                    6,
                    15,
                    3,
                    12,
                    0,
                    9,
                    5,
                    2,
                    14,
                    11,
                    8,
                    3,
                    10,
                    14,
                    4,
                    9,
                    15,
                    8,
                    1,
                    2,
                    7,
                    0,
                    6,
                    13,
                    11,
                    5,
                    12,
                    1,
                    9,
                    11,
                    10,
                    0,
                    8,
                    12,
                    4,
                    13,
                    3,
                    7,
                    15,
                    14,
                    5,
                    6,
                    2,
                    4,
                    0,
                    5,
                    9,
                    7,
                    12,
                    2,
                    10,
                    14,
                    1,
                    3,
                    8,
                    11,
                    6,
                    15,
                    13,
                ],
                rh = [
                    5,
                    14,
                    7,
                    0,
                    9,
                    2,
                    11,
                    4,
                    13,
                    6,
                    15,
                    8,
                    1,
                    10,
                    3,
                    12,
                    6,
                    11,
                    3,
                    7,
                    0,
                    13,
                    5,
                    10,
                    14,
                    15,
                    8,
                    12,
                    4,
                    9,
                    1,
                    2,
                    15,
                    5,
                    1,
                    3,
                    7,
                    14,
                    6,
                    9,
                    11,
                    8,
                    12,
                    2,
                    10,
                    0,
                    4,
                    13,
                    8,
                    6,
                    4,
                    1,
                    3,
                    11,
                    15,
                    0,
                    5,
                    12,
                    2,
                    13,
                    9,
                    7,
                    10,
                    14,
                    12,
                    15,
                    10,
                    4,
                    1,
                    5,
                    8,
                    7,
                    6,
                    2,
                    13,
                    14,
                    0,
                    3,
                    9,
                    11,
                ],
                s = [
                    11,
                    14,
                    15,
                    12,
                    5,
                    8,
                    7,
                    9,
                    11,
                    13,
                    14,
                    15,
                    6,
                    7,
                    9,
                    8,
                    7,
                    6,
                    8,
                    13,
                    11,
                    9,
                    7,
                    15,
                    7,
                    12,
                    15,
                    9,
                    11,
                    7,
                    13,
                    12,
                    11,
                    13,
                    6,
                    7,
                    14,
                    9,
                    13,
                    15,
                    14,
                    8,
                    13,
                    6,
                    5,
                    12,
                    7,
                    5,
                    11,
                    12,
                    14,
                    15,
                    14,
                    15,
                    9,
                    8,
                    9,
                    14,
                    5,
                    6,
                    8,
                    6,
                    5,
                    12,
                    9,
                    15,
                    5,
                    11,
                    6,
                    8,
                    13,
                    12,
                    5,
                    12,
                    13,
                    14,
                    11,
                    8,
                    5,
                    6,
                ],
                sh = [
                    8,
                    9,
                    9,
                    11,
                    13,
                    15,
                    15,
                    5,
                    7,
                    7,
                    8,
                    11,
                    14,
                    14,
                    12,
                    6,
                    9,
                    13,
                    15,
                    7,
                    12,
                    8,
                    9,
                    11,
                    7,
                    7,
                    12,
                    7,
                    6,
                    15,
                    13,
                    11,
                    9,
                    7,
                    15,
                    11,
                    8,
                    6,
                    6,
                    14,
                    12,
                    13,
                    5,
                    14,
                    13,
                    13,
                    7,
                    5,
                    15,
                    5,
                    8,
                    11,
                    14,
                    14,
                    6,
                    14,
                    6,
                    9,
                    12,
                    9,
                    12,
                    5,
                    15,
                    8,
                    8,
                    5,
                    12,
                    9,
                    12,
                    5,
                    14,
                    6,
                    8,
                    13,
                    6,
                    5,
                    15,
                    13,
                    11,
                    11,
                ];
        },
        89041: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            (exports.sha1 = __webpack_require__(84761)),
                (exports.sha224 = __webpack_require__(10799)),
                (exports.sha256 = __webpack_require__(89344)),
                (exports.sha384 = __webpack_require__(80772)),
                (exports.sha512 = __webpack_require__(45900));
        },
        84761: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var utils = __webpack_require__(26436),
                common = __webpack_require__(95772),
                shaCommon = __webpack_require__(37038),
                rotl32 = utils.rotl32,
                sum32 = utils.sum32,
                sum32_5 = utils.sum32_5,
                ft_1 = shaCommon.ft_1,
                BlockHash = common.BlockHash,
                sha1_K = [1518500249, 1859775393, 2400959708, 3395469782];
            function SHA1() {
                if (!(this instanceof SHA1)) return new SHA1();
                BlockHash.call(this), (this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520]), (this.W = Array(80));
            }
            utils.inherits(SHA1, BlockHash),
                (module.exports = SHA1),
                (SHA1.blockSize = 512),
                (SHA1.outSize = 160),
                (SHA1.hmacStrength = 80),
                (SHA1.padLength = 64),
                (SHA1.prototype._update = function (msg, start) {
                    for (var W = this.W, i = 0; i < 16; i++) W[i] = msg[start + i];
                    for (; i < W.length; i++) W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);
                    var a = this.h[0],
                        b = this.h[1],
                        c = this.h[2],
                        d = this.h[3],
                        e = this.h[4];
                    for (i = 0; i < W.length; i++) {
                        var s = ~~(i / 20),
                            t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
                        (e = d), (d = c), (c = rotl32(b, 30)), (b = a), (a = t);
                    }
                    (this.h[0] = sum32(this.h[0], a)), (this.h[1] = sum32(this.h[1], b)), (this.h[2] = sum32(this.h[2], c)), (this.h[3] = sum32(this.h[3], d)), (this.h[4] = sum32(this.h[4], e));
                }),
                (SHA1.prototype._digest = function (enc) {
                    return "hex" === enc ? utils.toHex32(this.h, "big") : utils.split32(this.h, "big");
                });
        },
        10799: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var utils = __webpack_require__(26436),
                SHA256 = __webpack_require__(89344);
            function SHA224() {
                if (!(this instanceof SHA224)) return new SHA224();
                SHA256.call(this), (this.h = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428]);
            }
            utils.inherits(SHA224, SHA256),
                (module.exports = SHA224),
                (SHA224.blockSize = 512),
                (SHA224.outSize = 224),
                (SHA224.hmacStrength = 192),
                (SHA224.padLength = 64),
                (SHA224.prototype._digest = function (enc) {
                    return "hex" === enc ? utils.toHex32(this.h.slice(0, 7), "big") : utils.split32(this.h.slice(0, 7), "big");
                });
        },
        89344: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var utils = __webpack_require__(26436),
                common = __webpack_require__(95772),
                shaCommon = __webpack_require__(37038),
                assert = __webpack_require__(79746),
                sum32 = utils.sum32,
                sum32_4 = utils.sum32_4,
                sum32_5 = utils.sum32_5,
                ch32 = shaCommon.ch32,
                maj32 = shaCommon.maj32,
                s0_256 = shaCommon.s0_256,
                s1_256 = shaCommon.s1_256,
                g0_256 = shaCommon.g0_256,
                g1_256 = shaCommon.g1_256,
                BlockHash = common.BlockHash,
                sha256_K = [
                    1116352408,
                    1899447441,
                    3049323471,
                    3921009573,
                    961987163,
                    1508970993,
                    2453635748,
                    2870763221,
                    3624381080,
                    310598401,
                    607225278,
                    1426881987,
                    1925078388,
                    2162078206,
                    2614888103,
                    3248222580,
                    3835390401,
                    4022224774,
                    264347078,
                    604807628,
                    770255983,
                    1249150122,
                    1555081692,
                    1996064986,
                    2554220882,
                    2821834349,
                    2952996808,
                    3210313671,
                    3336571891,
                    3584528711,
                    113926993,
                    338241895,
                    666307205,
                    773529912,
                    1294757372,
                    1396182291,
                    1695183700,
                    1986661051,
                    2177026350,
                    2456956037,
                    2730485921,
                    2820302411,
                    3259730800,
                    3345764771,
                    3516065817,
                    3600352804,
                    4094571909,
                    275423344,
                    430227734,
                    506948616,
                    659060556,
                    883997877,
                    958139571,
                    1322822218,
                    1537002063,
                    1747873779,
                    1955562222,
                    2024104815,
                    2227730452,
                    2361852424,
                    2428436474,
                    2756734187,
                    3204031479,
                    3329325298,
                ];
            function SHA256() {
                if (!(this instanceof SHA256)) return new SHA256();
                BlockHash.call(this), (this.h = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225]), (this.k = sha256_K), (this.W = Array(64));
            }
            utils.inherits(SHA256, BlockHash),
                (module.exports = SHA256),
                (SHA256.blockSize = 512),
                (SHA256.outSize = 256),
                (SHA256.hmacStrength = 192),
                (SHA256.padLength = 64),
                (SHA256.prototype._update = function (msg, start) {
                    for (var W = this.W, i = 0; i < 16; i++) W[i] = msg[start + i];
                    for (; i < W.length; i++) W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);
                    var a = this.h[0],
                        b = this.h[1],
                        c = this.h[2],
                        d = this.h[3],
                        e = this.h[4],
                        f = this.h[5],
                        g = this.h[6],
                        h = this.h[7];
                    for (assert(this.k.length === W.length), i = 0; i < W.length; i++) {
                        var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]),
                            T2 = sum32(s0_256(a), maj32(a, b, c));
                        (h = g), (g = f), (f = e), (e = sum32(d, T1)), (d = c), (c = b), (b = a), (a = sum32(T1, T2));
                    }
                    (this.h[0] = sum32(this.h[0], a)),
                        (this.h[1] = sum32(this.h[1], b)),
                        (this.h[2] = sum32(this.h[2], c)),
                        (this.h[3] = sum32(this.h[3], d)),
                        (this.h[4] = sum32(this.h[4], e)),
                        (this.h[5] = sum32(this.h[5], f)),
                        (this.h[6] = sum32(this.h[6], g)),
                        (this.h[7] = sum32(this.h[7], h));
                }),
                (SHA256.prototype._digest = function (enc) {
                    return "hex" === enc ? utils.toHex32(this.h, "big") : utils.split32(this.h, "big");
                });
        },
        80772: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var utils = __webpack_require__(26436),
                SHA512 = __webpack_require__(45900);
            function SHA384() {
                if (!(this instanceof SHA384)) return new SHA384();
                SHA512.call(this), (this.h = [3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428]);
            }
            utils.inherits(SHA384, SHA512),
                (module.exports = SHA384),
                (SHA384.blockSize = 1024),
                (SHA384.outSize = 384),
                (SHA384.hmacStrength = 192),
                (SHA384.padLength = 128),
                (SHA384.prototype._digest = function (enc) {
                    return "hex" === enc ? utils.toHex32(this.h.slice(0, 12), "big") : utils.split32(this.h.slice(0, 12), "big");
                });
        },
        45900: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var utils = __webpack_require__(26436),
                common = __webpack_require__(95772),
                assert = __webpack_require__(79746),
                rotr64_hi = utils.rotr64_hi,
                rotr64_lo = utils.rotr64_lo,
                shr64_hi = utils.shr64_hi,
                shr64_lo = utils.shr64_lo,
                sum64 = utils.sum64,
                sum64_hi = utils.sum64_hi,
                sum64_lo = utils.sum64_lo,
                sum64_4_hi = utils.sum64_4_hi,
                sum64_4_lo = utils.sum64_4_lo,
                sum64_5_hi = utils.sum64_5_hi,
                sum64_5_lo = utils.sum64_5_lo,
                BlockHash = common.BlockHash,
                sha512_K = [
                    1116352408,
                    3609767458,
                    1899447441,
                    602891725,
                    3049323471,
                    3964484399,
                    3921009573,
                    2173295548,
                    961987163,
                    4081628472,
                    1508970993,
                    3053834265,
                    2453635748,
                    2937671579,
                    2870763221,
                    3664609560,
                    3624381080,
                    2734883394,
                    310598401,
                    1164996542,
                    607225278,
                    1323610764,
                    1426881987,
                    3590304994,
                    1925078388,
                    4068182383,
                    2162078206,
                    991336113,
                    2614888103,
                    633803317,
                    3248222580,
                    3479774868,
                    3835390401,
                    2666613458,
                    4022224774,
                    944711139,
                    264347078,
                    2341262773,
                    604807628,
                    2007800933,
                    770255983,
                    1495990901,
                    1249150122,
                    1856431235,
                    1555081692,
                    3175218132,
                    1996064986,
                    2198950837,
                    2554220882,
                    3999719339,
                    2821834349,
                    766784016,
                    2952996808,
                    2566594879,
                    3210313671,
                    3203337956,
                    3336571891,
                    1034457026,
                    3584528711,
                    2466948901,
                    113926993,
                    3758326383,
                    338241895,
                    168717936,
                    666307205,
                    1188179964,
                    773529912,
                    1546045734,
                    1294757372,
                    1522805485,
                    1396182291,
                    2643833823,
                    1695183700,
                    2343527390,
                    1986661051,
                    1014477480,
                    2177026350,
                    1206759142,
                    2456956037,
                    344077627,
                    2730485921,
                    1290863460,
                    2820302411,
                    3158454273,
                    3259730800,
                    3505952657,
                    3345764771,
                    106217008,
                    3516065817,
                    3606008344,
                    3600352804,
                    1432725776,
                    4094571909,
                    1467031594,
                    275423344,
                    851169720,
                    430227734,
                    3100823752,
                    506948616,
                    1363258195,
                    659060556,
                    3750685593,
                    883997877,
                    3785050280,
                    958139571,
                    3318307427,
                    1322822218,
                    3812723403,
                    1537002063,
                    2003034995,
                    1747873779,
                    3602036899,
                    1955562222,
                    1575990012,
                    2024104815,
                    1125592928,
                    2227730452,
                    2716904306,
                    2361852424,
                    442776044,
                    2428436474,
                    593698344,
                    2756734187,
                    3733110249,
                    3204031479,
                    2999351573,
                    3329325298,
                    3815920427,
                    3391569614,
                    3928383900,
                    3515267271,
                    566280711,
                    3940187606,
                    3454069534,
                    4118630271,
                    4000239992,
                    116418474,
                    1914138554,
                    174292421,
                    2731055270,
                    289380356,
                    3203993006,
                    460393269,
                    320620315,
                    685471733,
                    587496836,
                    852142971,
                    1086792851,
                    1017036298,
                    365543100,
                    1126000580,
                    2618297676,
                    1288033470,
                    3409855158,
                    1501505948,
                    4234509866,
                    1607167915,
                    987167468,
                    1816402316,
                    1246189591,
                ];
            function SHA512() {
                if (!(this instanceof SHA512)) return new SHA512();
                BlockHash.call(this),
                    (this.h = [1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209]),
                    (this.k = sha512_K),
                    (this.W = Array(160));
            }
            utils.inherits(SHA512, BlockHash),
                (module.exports = SHA512),
                (SHA512.blockSize = 1024),
                (SHA512.outSize = 512),
                (SHA512.hmacStrength = 192),
                (SHA512.padLength = 128),
                (SHA512.prototype._prepareBlock = function (msg, start) {
                    for (var W = this.W, i = 0; i < 32; i++) W[i] = msg[start + i];
                    for (; i < W.length; i += 2) {
                        var c0_hi = (function (xh, xl) {
                                var r = rotr64_hi(xh, xl, 19) ^ rotr64_hi(xl, xh, 29) ^ shr64_hi(xh, xl, 6);
                                return r < 0 && (r += 4294967296), r;
                            })(W[i - 4], W[i - 3]),
                            c0_lo = (function (xh, xl) {
                                var r = rotr64_lo(xh, xl, 19) ^ rotr64_lo(xl, xh, 29) ^ shr64_lo(xh, xl, 6);
                                return r < 0 && (r += 4294967296), r;
                            })(W[i - 4], W[i - 3]),
                            c1_hi = W[i - 14],
                            c1_lo = W[i - 13],
                            c2_hi = (function (xh, xl) {
                                var r = rotr64_hi(xh, xl, 1) ^ rotr64_hi(xh, xl, 8) ^ shr64_hi(xh, xl, 7);
                                return r < 0 && (r += 4294967296), r;
                            })(W[i - 30], W[i - 29]),
                            c2_lo = (function (xh, xl) {
                                var r = rotr64_lo(xh, xl, 1) ^ rotr64_lo(xh, xl, 8) ^ shr64_lo(xh, xl, 7);
                                return r < 0 && (r += 4294967296), r;
                            })(W[i - 30], W[i - 29]),
                            c3_hi = W[i - 32],
                            c3_lo = W[i - 31];
                        (W[i] = sum64_4_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo)), (W[i + 1] = sum64_4_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo));
                    }
                }),
                (SHA512.prototype._update = function (msg, start) {
                    this._prepareBlock(msg, start);
                    var W = this.W,
                        ah = this.h[0],
                        al = this.h[1],
                        bh = this.h[2],
                        bl = this.h[3],
                        ch = this.h[4],
                        cl = this.h[5],
                        dh = this.h[6],
                        dl = this.h[7],
                        eh = this.h[8],
                        el = this.h[9],
                        fh = this.h[10],
                        fl = this.h[11],
                        gh = this.h[12],
                        gl = this.h[13],
                        hh = this.h[14],
                        hl = this.h[15];
                    assert(this.k.length === W.length);
                    for (var i = 0; i < W.length; i += 2) {
                        var c0_hi = hh,
                            c0_lo = hl,
                            c1_hi = (function (xh, xl) {
                                var r = rotr64_hi(xh, xl, 14) ^ rotr64_hi(xh, xl, 18) ^ rotr64_hi(xl, xh, 9);
                                return r < 0 && (r += 4294967296), r;
                            })(eh, el),
                            c1_lo = (function (xh, xl) {
                                var r = rotr64_lo(xh, xl, 14) ^ rotr64_lo(xh, xl, 18) ^ rotr64_lo(xl, xh, 9);
                                return r < 0 && (r += 4294967296), r;
                            })(eh, el),
                            c2_hi = (function (xh, xl, yh, yl, zh) {
                                var r = (xh & yh) ^ (~xh & zh);
                                return r < 0 && (r += 4294967296), r;
                            })(eh, 0, fh, 0, gh, gl),
                            c2_lo = (function (xh, xl, yh, yl, zh, zl) {
                                var r = (xl & yl) ^ (~xl & zl);
                                return r < 0 && (r += 4294967296), r;
                            })(0, el, 0, fl, 0, gl),
                            c3_hi = this.k[i],
                            c3_lo = this.k[i + 1],
                            c4_hi = W[i],
                            c4_lo = W[i + 1],
                            T1_hi = sum64_5_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo),
                            T1_lo = sum64_5_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);
                        (c0_hi = (function (xh, xl) {
                            var r = rotr64_hi(xh, xl, 28) ^ rotr64_hi(xl, xh, 2) ^ rotr64_hi(xl, xh, 7);
                            return r < 0 && (r += 4294967296), r;
                        })(ah, al)),
                            (c0_lo = (function (xh, xl) {
                                var r = rotr64_lo(xh, xl, 28) ^ rotr64_lo(xl, xh, 2) ^ rotr64_lo(xl, xh, 7);
                                return r < 0 && (r += 4294967296), r;
                            })(ah, al)),
                            (c1_hi = (function (xh, xl, yh, yl, zh) {
                                var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
                                return r < 0 && (r += 4294967296), r;
                            })(ah, 0, bh, 0, ch, cl)),
                            (c1_lo = (function (xh, xl, yh, yl, zh, zl) {
                                var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
                                return r < 0 && (r += 4294967296), r;
                            })(0, al, 0, bl, 0, cl));
                        var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo),
                            T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);
                        (hh = gh),
                            (hl = gl),
                            (gh = fh),
                            (gl = fl),
                            (fh = eh),
                            (fl = el),
                            (eh = sum64_hi(dh, dl, T1_hi, T1_lo)),
                            (el = sum64_lo(dl, dl, T1_hi, T1_lo)),
                            (dh = ch),
                            (dl = cl),
                            (ch = bh),
                            (cl = bl),
                            (bh = ah),
                            (bl = al),
                            (ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo)),
                            (al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo));
                    }
                    sum64(this.h, 0, ah, al), sum64(this.h, 2, bh, bl), sum64(this.h, 4, ch, cl), sum64(this.h, 6, dh, dl), sum64(this.h, 8, eh, el), sum64(this.h, 10, fh, fl), sum64(this.h, 12, gh, gl), sum64(this.h, 14, hh, hl);
                }),
                (SHA512.prototype._digest = function (enc) {
                    return "hex" === enc ? utils.toHex32(this.h, "big") : utils.split32(this.h, "big");
                });
        },
        37038: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var rotr32 = __webpack_require__(26436).rotr32;
            function maj32(x, y, z) {
                return (x & y) ^ (x & z) ^ (y & z);
            }
            (exports.ft_1 = function (s, x, y, z) {
                return 0 === s ? (x & y) ^ (~x & z) : 1 === s || 3 === s ? x ^ y ^ z : 2 === s ? maj32(x, y, z) : void 0;
            }),
                (exports.ch32 = function (x, y, z) {
                    return (x & y) ^ (~x & z);
                }),
                (exports.maj32 = maj32),
                (exports.p32 = function (x, y, z) {
                    return x ^ y ^ z;
                }),
                (exports.s0_256 = function (x) {
                    return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
                }),
                (exports.s1_256 = function (x) {
                    return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
                }),
                (exports.g0_256 = function (x) {
                    return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
                }),
                (exports.g1_256 = function (x) {
                    return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
                });
        },
        26436: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var assert = __webpack_require__(79746),
                inherits = __webpack_require__(35717);
            function htonl(w) {
                return ((w >>> 24) | ((w >>> 8) & 65280) | ((w << 8) & 16711680) | ((255 & w) << 24)) >>> 0;
            }
            function zero2(word) {
                return 1 === word.length ? "0" + word : word;
            }
            function zero8(word) {
                if (7 === word.length) return "0" + word;
                if (6 === word.length) return "00" + word;
                if (5 === word.length) return "000" + word;
                if (4 === word.length) return "0000" + word;
                if (3 === word.length) return "00000" + word;
                if (2 === word.length) return "000000" + word;
                if (1 === word.length) return "0000000" + word;
                else return word;
            }
            (exports.inherits = inherits),
                (exports.toArray = function (msg, enc) {
                    if (Array.isArray(msg)) return msg.slice();
                    if (!msg) return [];
                    var res = [];
                    if ("string" == typeof msg) {
                        if (enc) {
                            if ("hex" === enc) for ((msg = msg.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (msg = "0" + msg), i = 0; i < msg.length; i += 2) res.push(parseInt(msg[i] + msg[i + 1], 16));
                        } else
                            for (var p = 0, i = 0; i < msg.length; i++) {
                                var msg1,
                                    i1,
                                    c = msg.charCodeAt(i);
                                c < 128
                                    ? (res[p++] = c)
                                    : c < 2048
                                    ? ((res[p++] = (c >> 6) | 192), (res[p++] = (63 & c) | 128))
                                    : ((msg1 = msg), (i1 = i), (64512 & msg1.charCodeAt(i1)) != 55296 || i1 < 0 || i1 + 1 >= msg1.length ? 1 : (64512 & msg1.charCodeAt(i1 + 1)) != 56320)
                                    ? ((res[p++] = (c >> 12) | 224), (res[p++] = ((c >> 6) & 63) | 128), (res[p++] = (63 & c) | 128))
                                    : ((c = 65536 + ((1023 & c) << 10) + (1023 & msg.charCodeAt(++i))), (res[p++] = (c >> 18) | 240), (res[p++] = ((c >> 12) & 63) | 128), (res[p++] = ((c >> 6) & 63) | 128), (res[p++] = (63 & c) | 128));
                            }
                    } else for (i = 0; i < msg.length; i++) res[i] = 0 | msg[i];
                    return res;
                }),
                (exports.toHex = function (msg) {
                    for (var res = "", i = 0; i < msg.length; i++) res += zero2(msg[i].toString(16));
                    return res;
                }),
                (exports.htonl = htonl),
                (exports.toHex32 = function (msg, endian) {
                    for (var res = "", i = 0; i < msg.length; i++) {
                        var w = msg[i];
                        "little" === endian && (w = htonl(w)), (res += zero8(w.toString(16)));
                    }
                    return res;
                }),
                (exports.zero2 = zero2),
                (exports.zero8 = zero8),
                (exports.join32 = function (msg, start, end, endian) {
                    var w,
                        len = end - start;
                    assert(len % 4 == 0);
                    for (var res = Array(len / 4), i = 0, k = start; i < res.length; i++, k += 4)
                        (w = "big" === endian ? (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3] : (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k]), (res[i] = w >>> 0);
                    return res;
                }),
                (exports.split32 = function (msg, endian) {
                    for (var res = Array(4 * msg.length), i = 0, k = 0; i < msg.length; i++, k += 4) {
                        var m = msg[i];
                        "big" === endian
                            ? ((res[k] = m >>> 24), (res[k + 1] = (m >>> 16) & 255), (res[k + 2] = (m >>> 8) & 255), (res[k + 3] = 255 & m))
                            : ((res[k + 3] = m >>> 24), (res[k + 2] = (m >>> 16) & 255), (res[k + 1] = (m >>> 8) & 255), (res[k] = 255 & m));
                    }
                    return res;
                }),
                (exports.rotr32 = function (w, b) {
                    return (w >>> b) | (w << (32 - b));
                }),
                (exports.rotl32 = function (w, b) {
                    return (w << b) | (w >>> (32 - b));
                }),
                (exports.sum32 = function (a, b) {
                    return (a + b) >>> 0;
                }),
                (exports.sum32_3 = function (a, b, c) {
                    return (a + b + c) >>> 0;
                }),
                (exports.sum32_4 = function (a, b, c, d) {
                    return (a + b + c + d) >>> 0;
                }),
                (exports.sum32_5 = function (a, b, c, d, e) {
                    return (a + b + c + d + e) >>> 0;
                }),
                (exports.sum64 = function (buf, pos, ah, al) {
                    var bh = buf[pos],
                        lo = (al + buf[pos + 1]) >>> 0;
                    (buf[pos] = ((lo < al ? 1 : 0) + ah + bh) >>> 0), (buf[pos + 1] = lo);
                }),
                (exports.sum64_hi = function (ah, al, bh, bl) {
                    return (((al + bl) >>> 0 < al ? 1 : 0) + ah + bh) >>> 0;
                }),
                (exports.sum64_lo = function (ah, al, bh, bl) {
                    return (al + bl) >>> 0;
                }),
                (exports.sum64_4_hi = function (ah, al, bh, bl, ch, cl, dh, dl) {
                    var carry,
                        lo = al;
                    return (ah + bh + ch + dh + (0 + ((lo = (lo + bl) >>> 0) < al ? 1 : 0) + ((lo = (lo + cl) >>> 0) < cl ? 1 : 0) + ((lo = (lo + dl) >>> 0) < dl ? 1 : 0))) >>> 0;
                }),
                (exports.sum64_4_lo = function (ah, al, bh, bl, ch, cl, dh, dl) {
                    return (al + bl + cl + dl) >>> 0;
                }),
                (exports.sum64_5_hi = function (ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
                    var carry,
                        lo = al;
                    return (ah + bh + ch + dh + eh + (0 + ((lo = (lo + bl) >>> 0) < al ? 1 : 0) + ((lo = (lo + cl) >>> 0) < cl ? 1 : 0) + ((lo = (lo + dl) >>> 0) < dl ? 1 : 0) + ((lo = (lo + el) >>> 0) < el ? 1 : 0))) >>> 0;
                }),
                (exports.sum64_5_lo = function (ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
                    return (al + bl + cl + dl + el) >>> 0;
                }),
                (exports.rotr64_hi = function (ah, al, num) {
                    return ((al << (32 - num)) | (ah >>> num)) >>> 0;
                }),
                (exports.rotr64_lo = function (ah, al, num) {
                    return ((ah << (32 - num)) | (al >>> num)) >>> 0;
                }),
                (exports.shr64_hi = function (ah, al, num) {
                    return ah >>> num;
                }),
                (exports.shr64_lo = function (ah, al, num) {
                    return ((ah << (32 - num)) | (al >>> num)) >>> 0;
                });
        },
        82717: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            function extends_extends() {
                return (extends_extends = Object.assign
                    ? Object.assign.bind()
                    : function (target) {
                          for (var i = 1; i < arguments.length; i++) {
                              var source = arguments[i];
                              for (var key in source) Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
                          }
                          return target;
                      }).apply(this, arguments);
            }
            __webpack_require__.d(__webpack_exports__, {
                aU: function () {
                    return Action1;
                },
                lX: function () {
                    return createBrowserHistory;
                },
                Ep: function () {
                    return createPath;
                },
                cP: function () {
                    return parsePath;
                },
            }),
                ((Action = Action1 || (Action1 = {})).Pop = "POP"),
                (Action.Push = "PUSH"),
                (Action.Replace = "REPLACE");
            var Action,
                Action1,
                readOnly = function (obj) {
                    return obj;
                },
                BeforeUnloadEventType = "beforeunload";
            function createBrowserHistory(options) {
                void 0 === options && (options = {});
                var _options$window = options.window,
                    window1 = void 0 === _options$window ? document.defaultView : _options$window,
                    globalHistory = window1.history;
                function getIndexAndLocation() {
                    var _window$location = window1.location,
                        pathname = _window$location.pathname,
                        search = _window$location.search,
                        hash = _window$location.hash,
                        state = globalHistory.state || {};
                    return [state.idx, readOnly({ pathname: pathname, search: search, hash: hash, state: state.usr || null, key: state.key || "default" })];
                }
                var blockedPopTx = null;
                window1.addEventListener("popstate", function () {
                    if (blockedPopTx) blockers.call(blockedPopTx), (blockedPopTx = null);
                    else {
                        var nextAction = Action1.Pop,
                            _getIndexAndLocation = getIndexAndLocation(),
                            nextIndex = _getIndexAndLocation[0],
                            nextLocation = _getIndexAndLocation[1];
                        if (blockers.length) {
                            if (null != nextIndex) {
                                var delta = index - nextIndex;
                                delta &&
                                    ((blockedPopTx = {
                                        action: nextAction,
                                        location: nextLocation,
                                        retry: function () {
                                            go(-1 * delta);
                                        },
                                    }),
                                    go(delta));
                            }
                        } else applyTx(nextAction);
                    }
                });
                var action = Action1.Pop,
                    _getIndexAndLocation2 = getIndexAndLocation(),
                    index = _getIndexAndLocation2[0],
                    location1 = _getIndexAndLocation2[1],
                    listeners = createEvents(),
                    blockers = createEvents();
                function createHref(to) {
                    return "string" == typeof to ? to : createPath(to);
                }
                function getNextLocation(to, state) {
                    return (
                        void 0 === state && (state = null),
                        readOnly(extends_extends({ pathname: location1.pathname, hash: "", search: "" }, "string" == typeof to ? parsePath(to) : to, { state: state, key: Math.random().toString(36).substr(2, 8) }))
                    );
                }
                function getHistoryStateAndUrl(nextLocation, index) {
                    return [{ usr: nextLocation.state, key: nextLocation.key, idx: index }, createHref(nextLocation)];
                }
                function allowTx(action, location1, retry) {
                    return !blockers.length || (blockers.call({ action: action, location: location1, retry: retry }), !1);
                }
                function applyTx(nextAction) {
                    action = nextAction;
                    var _getIndexAndLocation3 = getIndexAndLocation();
                    (index = _getIndexAndLocation3[0]), (location1 = _getIndexAndLocation3[1]), listeners.call({ action: action, location: location1 });
                }
                function go(delta) {
                    globalHistory.go(delta);
                }
                return (
                    null == index && ((index = 0), globalHistory.replaceState(extends_extends({}, globalHistory.state, { idx: index }), "")),
                    {
                        get action() {
                            return action;
                        },
                        get location() {
                            return location1;
                        },
                        createHref: createHref,
                        push: function push(to, state) {
                            var nextAction = Action1.Push,
                                nextLocation = getNextLocation(to, state);
                            if (
                                allowTx(nextAction, nextLocation, function () {
                                    push(to, state);
                                })
                            ) {
                                var _getHistoryStateAndUr = getHistoryStateAndUrl(nextLocation, index + 1),
                                    historyState = _getHistoryStateAndUr[0],
                                    url = _getHistoryStateAndUr[1];
                                try {
                                    globalHistory.pushState(historyState, "", url);
                                } catch (error) {
                                    window1.location.assign(url);
                                }
                                applyTx(nextAction);
                            }
                        },
                        replace: function replace(to, state) {
                            var nextAction = Action1.Replace,
                                nextLocation = getNextLocation(to, state);
                            if (
                                allowTx(nextAction, nextLocation, function () {
                                    replace(to, state);
                                })
                            ) {
                                var _getHistoryStateAndUr2 = getHistoryStateAndUrl(nextLocation, index),
                                    historyState = _getHistoryStateAndUr2[0],
                                    url = _getHistoryStateAndUr2[1];
                                globalHistory.replaceState(historyState, "", url), applyTx(nextAction);
                            }
                        },
                        go: go,
                        back: function () {
                            go(-1);
                        },
                        forward: function () {
                            go(1);
                        },
                        listen: function (listener) {
                            return listeners.push(listener);
                        },
                        block: function (blocker) {
                            var unblock = blockers.push(blocker);
                            return (
                                1 === blockers.length && window1.addEventListener(BeforeUnloadEventType, promptBeforeUnload),
                                function () {
                                    unblock(), blockers.length || window1.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);
                                }
                            );
                        },
                    }
                );
            }
            function promptBeforeUnload(event) {
                event.preventDefault(), (event.returnValue = "");
            }
            function createEvents() {
                var handlers = [];
                return {
                    get length() {
                        return handlers.length;
                    },
                    push: function (fn) {
                        return (
                            handlers.push(fn),
                            function () {
                                handlers = handlers.filter(function (handler) {
                                    return handler !== fn;
                                });
                            }
                        );
                    },
                    call: function (arg) {
                        handlers.forEach(function (fn) {
                            return fn && fn(arg);
                        });
                    },
                };
            }
            function createPath(_ref) {
                var _ref$pathname = _ref.pathname,
                    pathname = void 0 === _ref$pathname ? "/" : _ref$pathname,
                    _ref$search = _ref.search,
                    search = void 0 === _ref$search ? "" : _ref$search,
                    _ref$hash = _ref.hash,
                    hash = void 0 === _ref$hash ? "" : _ref$hash;
                return search && "?" !== search && (pathname += "?" === search.charAt(0) ? search : "?" + search), hash && "#" !== hash && (pathname += "#" === hash.charAt(0) ? hash : "#" + hash), pathname;
            }
            function parsePath(path) {
                var parsedPath = {};
                if (path) {
                    var hashIndex = path.indexOf("#");
                    hashIndex >= 0 && ((parsedPath.hash = path.substr(hashIndex)), (path = path.substr(0, hashIndex)));
                    var searchIndex = path.indexOf("?");
                    searchIndex >= 0 && ((parsedPath.search = path.substr(searchIndex)), (path = path.substr(0, searchIndex))), path && (parsedPath.pathname = path);
                }
                return parsedPath;
            }
        },
        2156: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var hash = __webpack_require__(33715),
                utils = __webpack_require__(34504),
                assert = __webpack_require__(79746);
            function HmacDRBG(options) {
                if (!(this instanceof HmacDRBG)) return new HmacDRBG(options);
                (this.hash = options.hash),
                    (this.predResist = !!options.predResist),
                    (this.outLen = this.hash.outSize),
                    (this.minEntropy = options.minEntropy || this.hash.hmacStrength),
                    (this._reseed = null),
                    (this.reseedInterval = null),
                    (this.K = null),
                    (this.V = null);
                var entropy = utils.toArray(options.entropy, options.entropyEnc || "hex"),
                    nonce = utils.toArray(options.nonce, options.nonceEnc || "hex"),
                    pers = utils.toArray(options.pers, options.persEnc || "hex");
                assert(entropy.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(entropy, nonce, pers);
            }
            (module.exports = HmacDRBG),
                (HmacDRBG.prototype._init = function (entropy, nonce, pers) {
                    var seed = entropy.concat(nonce).concat(pers);
                    (this.K = Array(this.outLen / 8)), (this.V = Array(this.outLen / 8));
                    for (var i = 0; i < this.V.length; i++) (this.K[i] = 0), (this.V[i] = 1);
                    this._update(seed), (this._reseed = 1), (this.reseedInterval = 281474976710656);
                }),
                (HmacDRBG.prototype._hmac = function () {
                    return new hash.hmac(this.hash, this.K);
                }),
                (HmacDRBG.prototype._update = function (seed) {
                    var kmac = this._hmac().update(this.V).update([0]);
                    seed && (kmac = kmac.update(seed)),
                        (this.K = kmac.digest()),
                        (this.V = this._hmac().update(this.V).digest()),
                        seed && ((this.K = this._hmac().update(this.V).update([1]).update(seed).digest()), (this.V = this._hmac().update(this.V).digest()));
                }),
                (HmacDRBG.prototype.reseed = function (entropy, entropyEnc, add, addEnc) {
                    "string" != typeof entropyEnc && ((addEnc = add), (add = entropyEnc), (entropyEnc = null)),
                        (entropy = utils.toArray(entropy, entropyEnc)),
                        (add = utils.toArray(add, addEnc)),
                        assert(entropy.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"),
                        this._update(entropy.concat(add || [])),
                        (this._reseed = 1);
                }),
                (HmacDRBG.prototype.generate = function (len, enc, add, addEnc) {
                    if (this._reseed > this.reseedInterval) throw Error("Reseed is required");
                    "string" != typeof enc && ((addEnc = add), (add = enc), (enc = null)), add && ((add = utils.toArray(add, addEnc || "hex")), this._update(add));
                    for (var temp = []; temp.length < len; ) (this.V = this._hmac().update(this.V).digest()), (temp = temp.concat(this.V));
                    var res = temp.slice(0, len);
                    return this._update(add), this._reseed++, utils.encode(res, enc);
                });
        },
        8679: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var reactIs = __webpack_require__(59864),
                REACT_STATICS = {
                    childContextTypes: !0,
                    contextType: !0,
                    contextTypes: !0,
                    defaultProps: !0,
                    displayName: !0,
                    getDefaultProps: !0,
                    getDerivedStateFromError: !0,
                    getDerivedStateFromProps: !0,
                    mixins: !0,
                    propTypes: !0,
                    type: !0,
                },
                KNOWN_STATICS = { name: !0, length: !0, prototype: !0, caller: !0, callee: !0, arguments: !0, arity: !0 },
                MEMO_STATICS = { $$typeof: !0, compare: !0, defaultProps: !0, displayName: !0, propTypes: !0, type: !0 },
                TYPE_STATICS = {};
            function getStatics(component) {
                return reactIs.isMemo(component) ? MEMO_STATICS : TYPE_STATICS[component.$$typeof] || REACT_STATICS;
            }
            (TYPE_STATICS[reactIs.ForwardRef] = { $$typeof: !0, render: !0, defaultProps: !0, displayName: !0, propTypes: !0 }), (TYPE_STATICS[reactIs.Memo] = MEMO_STATICS);
            var defineProperty = Object.defineProperty,
                getOwnPropertyNames = Object.getOwnPropertyNames,
                getOwnPropertySymbols = Object.getOwnPropertySymbols,
                getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor,
                getPrototypeOf = Object.getPrototypeOf,
                objectPrototype = Object.prototype;
            module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
                if ("string" != typeof sourceComponent) {
                    if (objectPrototype) {
                        var inheritedComponent = getPrototypeOf(sourceComponent);
                        inheritedComponent && inheritedComponent !== objectPrototype && hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
                    }
                    var keys = getOwnPropertyNames(sourceComponent);
                    getOwnPropertySymbols && (keys = keys.concat(getOwnPropertySymbols(sourceComponent)));
                    for (var targetStatics = getStatics(targetComponent), sourceStatics = getStatics(sourceComponent), i = 0; i < keys.length; ++i) {
                        var key = keys[i];
                        if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
                            var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
                            try {
                                defineProperty(targetComponent, key, descriptor);
                            } catch (e) {}
                        }
                    }
                }
                return targetComponent;
            };
        },
        80645: function (__unused_webpack_module, exports) {
            /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */ (exports.read = function (buffer, offset, isLE, mLen, nBytes) {
                var e,
                    m,
                    eLen = 8 * nBytes - mLen - 1,
                    eMax = (1 << eLen) - 1,
                    eBias = eMax >> 1,
                    nBits = -7,
                    i = isLE ? nBytes - 1 : 0,
                    d = isLE ? -1 : 1,
                    s = buffer[offset + i];
                for (i += d, e = s & ((1 << -nBits) - 1), s >>= -nBits, nBits += eLen; nBits > 0; e = 256 * e + buffer[offset + i], i += d, nBits -= 8);
                for (m = e & ((1 << -nBits) - 1), e >>= -nBits, nBits += mLen; nBits > 0; m = 256 * m + buffer[offset + i], i += d, nBits -= 8);
                if (0 === e) e = 1 - eBias;
                else {
                    if (e === eMax) return m ? NaN : (s ? -1 : 1) * (1 / 0);
                    (m += Math.pow(2, mLen)), (e -= eBias);
                }
                return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
            }),
                (exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
                    var e,
                        m,
                        c,
                        eLen = 8 * nBytes - mLen - 1,
                        eMax = (1 << eLen) - 1,
                        eBias = eMax >> 1,
                        rt = 23 === mLen ? 5960464477539062e-23 : 0,
                        i = isLE ? 0 : nBytes - 1,
                        d = isLE ? 1 : -1,
                        s = value < 0 || (0 === value && 1 / value < 0) ? 1 : 0;
                    for (
                        isNaN((value = Math.abs(value))) || value === 1 / 0
                            ? ((m = isNaN(value) ? 1 : 0), (e = eMax))
                            : ((e = Math.floor(Math.log(value) / Math.LN2)),
                              value * (c = Math.pow(2, -e)) < 1 && (e--, (c *= 2)),
                              e + eBias >= 1 ? (value += rt / c) : (value += rt * Math.pow(2, 1 - eBias)),
                              value * c >= 2 && (e++, (c /= 2)),
                              e + eBias >= eMax ? ((m = 0), (e = eMax)) : e + eBias >= 1 ? ((m = (value * c - 1) * Math.pow(2, mLen)), (e += eBias)) : ((m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)), (e = 0)));
                        mLen >= 8;
                        buffer[offset + i] = 255 & m, i += d, m /= 256, mLen -= 8
                    );
                    for (e = (e << mLen) | m, eLen += mLen; eLen > 0; buffer[offset + i] = 255 & e, i += d, e /= 256, eLen -= 8);
                    buffer[offset + i - d] |= 128 * s;
                });
        },
        35717: function (module) {
            "function" == typeof Object.create
                ? (module.exports = function (ctor, superCtor) {
                      superCtor && ((ctor.super_ = superCtor), (ctor.prototype = Object.create(superCtor.prototype, { constructor: { value: ctor, enumerable: !1, writable: !0, configurable: !0 } })));
                  })
                : (module.exports = function (ctor, superCtor) {
                      if (superCtor) {
                          ctor.super_ = superCtor;
                          var TempCtor = function () {};
                          (TempCtor.prototype = superCtor.prototype), (ctor.prototype = new TempCtor()), (ctor.prototype.constructor = ctor);
                      }
                  });
        },
        82584: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var hasToStringTag = __webpack_require__(96410)(),
                $toString = __webpack_require__(21924)("Object.prototype.toString"),
                isStandardArguments = function (value) {
                    return (!hasToStringTag || !value || "object" != typeof value || !(Symbol.toStringTag in value)) && "[object Arguments]" === $toString(value);
                },
                isLegacyArguments = function (value) {
                    return (
                        !!isStandardArguments(value) ||
                        (null !== value && "object" == typeof value && "number" == typeof value.length && value.length >= 0 && "[object Array]" !== $toString(value) && "[object Function]" === $toString(value.callee))
                    );
                },
                supportsStandardArguments = (function () {
                    return isStandardArguments(arguments);
                })();
            (isStandardArguments.isLegacyArguments = isLegacyArguments), (module.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments);
        },
        48662: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var GeneratorFunction,
                toStr = Object.prototype.toString,
                fnToStr = Function.prototype.toString,
                isFnRegex = /^\s*(?:function)?\*/,
                hasToStringTag = __webpack_require__(96410)(),
                getProto = Object.getPrototypeOf,
                getGeneratorFunc = function () {
                    if (!hasToStringTag) return !1;
                    try {
                        return Function("return function*() {}")();
                    } catch (e) {}
                };
            module.exports = function (fn) {
                if ("function" != typeof fn) return !1;
                if (isFnRegex.test(fnToStr.call(fn))) return !0;
                if (!hasToStringTag) return "[object GeneratorFunction]" === toStr.call(fn);
                if (!getProto) return !1;
                if (void 0 === GeneratorFunction) {
                    var generatorFunc = getGeneratorFunc();
                    GeneratorFunction = !!generatorFunc && getProto(generatorFunc);
                }
                return getProto(fn) === GeneratorFunction;
            };
        },
        23944: function (module) {
            module.exports = function (str) {
                if ("string" != typeof str) throw Error("[is-hex-prefixed] value must be type 'string', is currently type " + typeof str + ", while checking isHexPrefixed.");
                return "0x" === str.slice(0, 2);
            };
        },
        85692: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var forEach = __webpack_require__(49804),
                availableTypedArrays = __webpack_require__(63083),
                callBound = __webpack_require__(21924),
                $toString = callBound("Object.prototype.toString"),
                hasToStringTag = __webpack_require__(96410)(),
                g = "undefined" == typeof globalThis ? __webpack_require__.g : globalThis,
                typedArrays = availableTypedArrays(),
                $indexOf =
                    callBound("Array.prototype.indexOf", !0) ||
                    function (array, value) {
                        for (var i = 0; i < array.length; i += 1) if (array[i] === value) return i;
                        return -1;
                    },
                $slice = callBound("String.prototype.slice"),
                toStrTags = {},
                gOPD = __webpack_require__(20882),
                getPrototypeOf = Object.getPrototypeOf;
            hasToStringTag &&
                gOPD &&
                getPrototypeOf &&
                forEach(typedArrays, function (typedArray) {
                    var arr = new g[typedArray]();
                    if (Symbol.toStringTag in arr) {
                        var proto = getPrototypeOf(arr),
                            descriptor = gOPD(proto, Symbol.toStringTag);
                        descriptor || (descriptor = gOPD(getPrototypeOf(proto), Symbol.toStringTag)), (toStrTags[typedArray] = descriptor.get);
                    }
                });
            var tryTypedArrays = function (value) {
                var anyTrue = !1;
                return (
                    forEach(toStrTags, function (getter, typedArray) {
                        if (!anyTrue)
                            try {
                                anyTrue = getter.call(value) === typedArray;
                            } catch (e) {}
                    }),
                    anyTrue
                );
            };
            module.exports = function (value) {
                return !!value && "object" == typeof value && (hasToStringTag && Symbol.toStringTag in value ? !!gOPD && tryTypedArrays(value) : $indexOf(typedArrays, $slice($toString(value), 8, -1)) > -1);
            };
        },
        4501: function (module) {
            (module.exports = isTypedArray), (isTypedArray.strict = isStrictTypedArray), (isTypedArray.loose = isLooseTypedArray);
            var toString = Object.prototype.toString,
                names = {
                    "[object Int8Array]": !0,
                    "[object Int16Array]": !0,
                    "[object Int32Array]": !0,
                    "[object Uint8Array]": !0,
                    "[object Uint8ClampedArray]": !0,
                    "[object Uint16Array]": !0,
                    "[object Uint32Array]": !0,
                    "[object Float32Array]": !0,
                    "[object Float64Array]": !0,
                };
            function isTypedArray(arr) {
                return isStrictTypedArray(arr) || isLooseTypedArray(arr);
            }
            function isStrictTypedArray(arr) {
                return (
                    arr instanceof Int8Array ||
                    arr instanceof Int16Array ||
                    arr instanceof Int32Array ||
                    arr instanceof Uint8Array ||
                    arr instanceof Uint8ClampedArray ||
                    arr instanceof Uint16Array ||
                    arr instanceof Uint32Array ||
                    arr instanceof Float32Array ||
                    arr instanceof Float64Array
                );
            }
            function isLooseTypedArray(arr) {
                return names[toString.call(arr)];
            }
        },
        91094: function (module, exports, __webpack_require__) {
            var __WEBPACK_AMD_DEFINE_RESULT__,
                process = __webpack_require__(34155);
            !(function () {
                "use strict";
                var INPUT_ERROR = "input is invalid type",
                    WINDOW = "object" == typeof window,
                    root = WINDOW ? window : {};
                root.JS_SHA3_NO_WINDOW && (WINDOW = !1);
                var WEB_WORKER = !WINDOW && "object" == typeof self;
                !root.JS_SHA3_NO_NODE_JS && "object" == typeof process && process.versions && process.versions.node ? (root = __webpack_require__.g) : WEB_WORKER && (root = self);
                var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && module.exports,
                    AMD = __webpack_require__.amdO,
                    ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && "undefined" != typeof ArrayBuffer,
                    HEX_CHARS = "0123456789abcdef".split(""),
                    CSHAKE_PADDING = [4, 1024, 262144, 67108864],
                    SHIFT = [0, 8, 16, 24],
                    RC = [
                        1,
                        0,
                        32898,
                        0,
                        32906,
                        2147483648,
                        2147516416,
                        2147483648,
                        32907,
                        0,
                        2147483649,
                        0,
                        2147516545,
                        2147483648,
                        32777,
                        2147483648,
                        138,
                        0,
                        136,
                        0,
                        2147516425,
                        0,
                        2147483658,
                        0,
                        2147516555,
                        0,
                        139,
                        2147483648,
                        32905,
                        2147483648,
                        32771,
                        2147483648,
                        32770,
                        2147483648,
                        128,
                        2147483648,
                        32778,
                        0,
                        2147483658,
                        2147483648,
                        2147516545,
                        2147483648,
                        32896,
                        2147483648,
                        2147483649,
                        0,
                        2147516424,
                        2147483648,
                    ],
                    BITS = [224, 256, 384, 512],
                    SHAKE_BITS = [128, 256],
                    OUTPUT_TYPES = ["hex", "buffer", "arrayBuffer", "array", "digest"],
                    CSHAKE_BYTEPAD = { 128: 168, 256: 136 };
                (root.JS_SHA3_NO_NODE_JS || !Array.isArray) &&
                    (Array.isArray = function (obj) {
                        return "[object Array]" === Object.prototype.toString.call(obj);
                    }),
                    ARRAY_BUFFER &&
                        (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView) &&
                        (ArrayBuffer.isView = function (obj) {
                            return "object" == typeof obj && obj.buffer && obj.buffer.constructor === ArrayBuffer;
                        });
                for (
                    var createOutputMethod = function (bits, padding, outputType) {
                            return function (message) {
                                return new Keccak(bits, padding, bits).update(message)[outputType]();
                            };
                        },
                        createShakeOutputMethod = function (bits, padding, outputType) {
                            return function (message, outputBits) {
                                return new Keccak(bits, padding, outputBits).update(message)[outputType]();
                            };
                        },
                        createCshakeOutputMethod = function (bits, padding, outputType) {
                            return function (message, outputBits, n, s) {
                                return methods["cshake" + bits].update(message, outputBits, n, s)[outputType]();
                            };
                        },
                        createKmacOutputMethod = function (bits, padding, outputType) {
                            return function (key, message, outputBits, s) {
                                return methods["kmac" + bits].update(key, message, outputBits, s)[outputType]();
                            };
                        },
                        createOutputMethods = function (method, createMethod, bits, padding) {
                            for (var i = 0; i < OUTPUT_TYPES.length; ++i) {
                                var type = OUTPUT_TYPES[i];
                                method[type] = createMethod(bits, padding, type);
                            }
                            return method;
                        },
                        createMethod = function (bits, padding) {
                            var method = createOutputMethod(bits, padding, "hex");
                            return (
                                (method.create = function () {
                                    return new Keccak(bits, padding, bits);
                                }),
                                (method.update = function (message) {
                                    return method.create().update(message);
                                }),
                                createOutputMethods(method, createOutputMethod, bits, padding)
                            );
                        },
                        algorithms = [
                            { name: "keccak", padding: [1, 256, 65536, 16777216], bits: BITS, createMethod: createMethod },
                            { name: "sha3", padding: [6, 1536, 393216, 100663296], bits: BITS, createMethod: createMethod },
                            {
                                name: "shake",
                                padding: [31, 7936, 2031616, 520093696],
                                bits: SHAKE_BITS,
                                createMethod: function (bits, padding) {
                                    var method = createShakeOutputMethod(bits, padding, "hex");
                                    return (
                                        (method.create = function (outputBits) {
                                            return new Keccak(bits, padding, outputBits);
                                        }),
                                        (method.update = function (message, outputBits) {
                                            return method.create(outputBits).update(message);
                                        }),
                                        createOutputMethods(method, createShakeOutputMethod, bits, padding)
                                    );
                                },
                            },
                            {
                                name: "cshake",
                                padding: CSHAKE_PADDING,
                                bits: SHAKE_BITS,
                                createMethod: function (bits, padding) {
                                    var w = CSHAKE_BYTEPAD[bits],
                                        method = createCshakeOutputMethod(bits, padding, "hex");
                                    return (
                                        (method.create = function (outputBits, n, s) {
                                            return n || s ? new Keccak(bits, padding, outputBits).bytepad([n, s], w) : methods["shake" + bits].create(outputBits);
                                        }),
                                        (method.update = function (message, outputBits, n, s) {
                                            return method.create(outputBits, n, s).update(message);
                                        }),
                                        createOutputMethods(method, createCshakeOutputMethod, bits, padding)
                                    );
                                },
                            },
                            {
                                name: "kmac",
                                padding: CSHAKE_PADDING,
                                bits: SHAKE_BITS,
                                createMethod: function (bits, padding) {
                                    var w = CSHAKE_BYTEPAD[bits],
                                        method = createKmacOutputMethod(bits, padding, "hex");
                                    return (
                                        (method.create = function (key, outputBits, s) {
                                            return new Kmac(bits, padding, outputBits).bytepad(["KMAC", s], w).bytepad([key], w);
                                        }),
                                        (method.update = function (key, message, outputBits, s) {
                                            return method.create(key, outputBits, s).update(message);
                                        }),
                                        createOutputMethods(method, createKmacOutputMethod, bits, padding)
                                    );
                                },
                            },
                        ],
                        methods = {},
                        methodNames = [],
                        i = 0;
                    i < algorithms.length;
                    ++i
                )
                    for (var algorithm = algorithms[i], bits = algorithm.bits, j = 0; j < bits.length; ++j) {
                        var methodName = algorithm.name + "_" + bits[j];
                        if ((methodNames.push(methodName), (methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding)), "sha3" !== algorithm.name)) {
                            var newMethodName = algorithm.name + bits[j];
                            methodNames.push(newMethodName), (methods[newMethodName] = methods[methodName]);
                        }
                    }
                function Keccak(bits, padding, outputBits) {
                    (this.blocks = []),
                        (this.s = []),
                        (this.padding = padding),
                        (this.outputBits = outputBits),
                        (this.reset = !0),
                        (this.finalized = !1),
                        (this.block = 0),
                        (this.start = 0),
                        (this.blockCount = (1600 - (bits << 1)) >> 5),
                        (this.byteCount = this.blockCount << 2),
                        (this.outputBlocks = outputBits >> 5),
                        (this.extraBytes = (31 & outputBits) >> 3);
                    for (var i = 0; i < 50; ++i) this.s[i] = 0;
                }
                function Kmac(bits, padding, outputBits) {
                    Keccak.call(this, bits, padding, outputBits);
                }
                (Keccak.prototype.update = function (message) {
                    if (this.finalized) throw Error("finalize already called");
                    var notString,
                        type = typeof message;
                    if ("string" !== type) {
                        if ("object" === type) {
                            if (null === message) throw Error(INPUT_ERROR);
                            if (ARRAY_BUFFER && message.constructor === ArrayBuffer) message = new Uint8Array(message);
                            else if (!Array.isArray(message) && (!ARRAY_BUFFER || !ArrayBuffer.isView(message))) throw Error(INPUT_ERROR);
                        } else throw Error(INPUT_ERROR);
                        notString = !0;
                    }
                    for (var i, code, blocks = this.blocks, byteCount = this.byteCount, length = message.length, blockCount = this.blockCount, index = 0, s = this.s; index < length; ) {
                        if (this.reset) for (i = 1, this.reset = !1, blocks[0] = this.block; i < blockCount + 1; ++i) blocks[i] = 0;
                        if (notString) for (i = this.start; index < length && i < byteCount; ++index) blocks[i >> 2] |= message[index] << SHIFT[3 & i++];
                        else
                            for (i = this.start; index < length && i < byteCount; ++index)
                                (code = message.charCodeAt(index)) < 128
                                    ? (blocks[i >> 2] |= code << SHIFT[3 & i++])
                                    : code < 2048
                                    ? ((blocks[i >> 2] |= (192 | (code >> 6)) << SHIFT[3 & i++]), (blocks[i >> 2] |= (128 | (63 & code)) << SHIFT[3 & i++]))
                                    : code < 55296 || code >= 57344
                                    ? ((blocks[i >> 2] |= (224 | (code >> 12)) << SHIFT[3 & i++]), (blocks[i >> 2] |= (128 | ((code >> 6) & 63)) << SHIFT[3 & i++]), (blocks[i >> 2] |= (128 | (63 & code)) << SHIFT[3 & i++]))
                                    : ((code = 65536 + (((1023 & code) << 10) | (1023 & message.charCodeAt(++index)))),
                                      (blocks[i >> 2] |= (240 | (code >> 18)) << SHIFT[3 & i++]),
                                      (blocks[i >> 2] |= (128 | ((code >> 12) & 63)) << SHIFT[3 & i++]),
                                      (blocks[i >> 2] |= (128 | ((code >> 6) & 63)) << SHIFT[3 & i++]),
                                      (blocks[i >> 2] |= (128 | (63 & code)) << SHIFT[3 & i++]));
                        if (((this.lastByteIndex = i), i >= byteCount)) {
                            for (this.start = i - byteCount, this.block = blocks[blockCount], i = 0; i < blockCount; ++i) s[i] ^= blocks[i];
                            f(s), (this.reset = !0);
                        } else this.start = i;
                    }
                    return this;
                }),
                    (Keccak.prototype.encode = function (x, right) {
                        var o = 255 & x,
                            n = 1,
                            bytes = [o];
                        for (x >>= 8, o = 255 & x; o > 0; ) bytes.unshift(o), (x >>= 8), (o = 255 & x), ++n;
                        return right ? bytes.push(n) : bytes.unshift(n), this.update(bytes), bytes.length;
                    }),
                    (Keccak.prototype.encodeString = function (str) {
                        var notString,
                            type = typeof str;
                        if ("string" !== type) {
                            if ("object" === type) {
                                if (null === str) throw Error(INPUT_ERROR);
                                if (ARRAY_BUFFER && str.constructor === ArrayBuffer) str = new Uint8Array(str);
                                else if (!Array.isArray(str) && (!ARRAY_BUFFER || !ArrayBuffer.isView(str))) throw Error(INPUT_ERROR);
                            } else throw Error(INPUT_ERROR);
                            notString = !0;
                        }
                        var bytes = 0,
                            length = str.length;
                        if (notString) bytes = length;
                        else
                            for (var i = 0; i < str.length; ++i) {
                                var code = str.charCodeAt(i);
                                code < 128 ? (bytes += 1) : code < 2048 ? (bytes += 2) : code < 55296 || code >= 57344 ? (bytes += 3) : ((code = 65536 + (((1023 & code) << 10) | (1023 & str.charCodeAt(++i)))), (bytes += 4));
                            }
                        return (bytes += this.encode(8 * bytes)), this.update(str), bytes;
                    }),
                    (Keccak.prototype.bytepad = function (strs, w) {
                        for (var bytes = this.encode(w), i = 0; i < strs.length; ++i) bytes += this.encodeString(strs[i]);
                        var paddingBytes = w - (bytes % w),
                            zeros = [];
                        return (zeros.length = paddingBytes), this.update(zeros), this;
                    }),
                    (Keccak.prototype.finalize = function () {
                        if (!this.finalized) {
                            this.finalized = !0;
                            var blocks = this.blocks,
                                i = this.lastByteIndex,
                                blockCount = this.blockCount,
                                s = this.s;
                            if (((blocks[i >> 2] |= this.padding[3 & i]), this.lastByteIndex === this.byteCount)) for (i = 1, blocks[0] = blocks[blockCount]; i < blockCount + 1; ++i) blocks[i] = 0;
                            for (blocks[blockCount - 1] |= 2147483648, i = 0; i < blockCount; ++i) s[i] ^= blocks[i];
                            f(s);
                        }
                    }),
                    (Keccak.prototype.toString = Keccak.prototype.hex = function () {
                        this.finalize();
                        for (var block, blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i = 0, j = 0, hex = ""; j < outputBlocks; ) {
                            for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j)
                                hex +=
                                    HEX_CHARS[((block = s[i]) >> 4) & 15] +
                                    HEX_CHARS[15 & block] +
                                    HEX_CHARS[(block >> 12) & 15] +
                                    HEX_CHARS[(block >> 8) & 15] +
                                    HEX_CHARS[(block >> 20) & 15] +
                                    HEX_CHARS[(block >> 16) & 15] +
                                    HEX_CHARS[(block >> 28) & 15] +
                                    HEX_CHARS[(block >> 24) & 15];
                            j % blockCount == 0 && (f(s), (i = 0));
                        }
                        return (
                            extraBytes &&
                                ((hex += HEX_CHARS[((block = s[i]) >> 4) & 15] + HEX_CHARS[15 & block]),
                                extraBytes > 1 && (hex += HEX_CHARS[(block >> 12) & 15] + HEX_CHARS[(block >> 8) & 15]),
                                extraBytes > 2 && (hex += HEX_CHARS[(block >> 20) & 15] + HEX_CHARS[(block >> 16) & 15])),
                            hex
                        );
                    }),
                    (Keccak.prototype.arrayBuffer = function () {
                        this.finalize();
                        var buffer,
                            blockCount = this.blockCount,
                            s = this.s,
                            outputBlocks = this.outputBlocks,
                            extraBytes = this.extraBytes,
                            i = 0,
                            j = 0,
                            bytes = this.outputBits >> 3;
                        buffer = new ArrayBuffer(extraBytes ? (outputBlocks + 1) << 2 : bytes);
                        for (var array = new Uint32Array(buffer); j < outputBlocks; ) {
                            for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) array[j] = s[i];
                            j % blockCount == 0 && f(s);
                        }
                        return extraBytes && ((array[i] = s[i]), (buffer = buffer.slice(0, bytes))), buffer;
                    }),
                    (Keccak.prototype.buffer = Keccak.prototype.arrayBuffer),
                    (Keccak.prototype.digest = Keccak.prototype.array = function () {
                        this.finalize();
                        for (var offset, block, blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i = 0, j = 0, array = []; j < outputBlocks; ) {
                            for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j)
                                (offset = j << 2), (block = s[i]), (array[offset] = 255 & block), (array[offset + 1] = (block >> 8) & 255), (array[offset + 2] = (block >> 16) & 255), (array[offset + 3] = (block >> 24) & 255);
                            j % blockCount == 0 && f(s);
                        }
                        return extraBytes && ((offset = j << 2), (block = s[i]), (array[offset] = 255 & block), extraBytes > 1 && (array[offset + 1] = (block >> 8) & 255), extraBytes > 2 && (array[offset + 2] = (block >> 16) & 255)), array;
                    }),
                    (Kmac.prototype = new Keccak()),
                    (Kmac.prototype.finalize = function () {
                        return this.encode(this.outputBits, !0), Keccak.prototype.finalize.call(this);
                    });
                var f = function (s) {
                    var h,
                        l,
                        n,
                        c0,
                        c1,
                        c2,
                        c3,
                        c4,
                        c5,
                        c6,
                        c7,
                        c8,
                        c9,
                        b0,
                        b1,
                        b2,
                        b3,
                        b4,
                        b5,
                        b6,
                        b7,
                        b8,
                        b9,
                        b10,
                        b11,
                        b12,
                        b13,
                        b14,
                        b15,
                        b16,
                        b17,
                        b18,
                        b19,
                        b20,
                        b21,
                        b22,
                        b23,
                        b24,
                        b25,
                        b26,
                        b27,
                        b28,
                        b29,
                        b30,
                        b31,
                        b32,
                        b33,
                        b34,
                        b35,
                        b36,
                        b37,
                        b38,
                        b39,
                        b40,
                        b41,
                        b42,
                        b43,
                        b44,
                        b45,
                        b46,
                        b47,
                        b48,
                        b49;
                    for (n = 0; n < 48; n += 2)
                        (c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40]),
                            (c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41]),
                            (c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42]),
                            (c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43]),
                            (c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44]),
                            (c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45]),
                            (c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46]),
                            (c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47]),
                            (c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48]),
                            (c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49]),
                            (h = c8 ^ ((c2 << 1) | (c3 >>> 31))),
                            (l = c9 ^ ((c3 << 1) | (c2 >>> 31))),
                            (s[0] ^= h),
                            (s[1] ^= l),
                            (s[10] ^= h),
                            (s[11] ^= l),
                            (s[20] ^= h),
                            (s[21] ^= l),
                            (s[30] ^= h),
                            (s[31] ^= l),
                            (s[40] ^= h),
                            (s[41] ^= l),
                            (h = c0 ^ ((c4 << 1) | (c5 >>> 31))),
                            (l = c1 ^ ((c5 << 1) | (c4 >>> 31))),
                            (s[2] ^= h),
                            (s[3] ^= l),
                            (s[12] ^= h),
                            (s[13] ^= l),
                            (s[22] ^= h),
                            (s[23] ^= l),
                            (s[32] ^= h),
                            (s[33] ^= l),
                            (s[42] ^= h),
                            (s[43] ^= l),
                            (h = c2 ^ ((c6 << 1) | (c7 >>> 31))),
                            (l = c3 ^ ((c7 << 1) | (c6 >>> 31))),
                            (s[4] ^= h),
                            (s[5] ^= l),
                            (s[14] ^= h),
                            (s[15] ^= l),
                            (s[24] ^= h),
                            (s[25] ^= l),
                            (s[34] ^= h),
                            (s[35] ^= l),
                            (s[44] ^= h),
                            (s[45] ^= l),
                            (h = c4 ^ ((c8 << 1) | (c9 >>> 31))),
                            (l = c5 ^ ((c9 << 1) | (c8 >>> 31))),
                            (s[6] ^= h),
                            (s[7] ^= l),
                            (s[16] ^= h),
                            (s[17] ^= l),
                            (s[26] ^= h),
                            (s[27] ^= l),
                            (s[36] ^= h),
                            (s[37] ^= l),
                            (s[46] ^= h),
                            (s[47] ^= l),
                            (h = c6 ^ ((c0 << 1) | (c1 >>> 31))),
                            (l = c7 ^ ((c1 << 1) | (c0 >>> 31))),
                            (s[8] ^= h),
                            (s[9] ^= l),
                            (s[18] ^= h),
                            (s[19] ^= l),
                            (s[28] ^= h),
                            (s[29] ^= l),
                            (s[38] ^= h),
                            (s[39] ^= l),
                            (s[48] ^= h),
                            (s[49] ^= l),
                            (b0 = s[0]),
                            (b1 = s[1]),
                            (b32 = (s[11] << 4) | (s[10] >>> 28)),
                            (b33 = (s[10] << 4) | (s[11] >>> 28)),
                            (b14 = (s[20] << 3) | (s[21] >>> 29)),
                            (b15 = (s[21] << 3) | (s[20] >>> 29)),
                            (b46 = (s[31] << 9) | (s[30] >>> 23)),
                            (b47 = (s[30] << 9) | (s[31] >>> 23)),
                            (b28 = (s[40] << 18) | (s[41] >>> 14)),
                            (b29 = (s[41] << 18) | (s[40] >>> 14)),
                            (b20 = (s[2] << 1) | (s[3] >>> 31)),
                            (b21 = (s[3] << 1) | (s[2] >>> 31)),
                            (b2 = (s[13] << 12) | (s[12] >>> 20)),
                            (b3 = (s[12] << 12) | (s[13] >>> 20)),
                            (b34 = (s[22] << 10) | (s[23] >>> 22)),
                            (b35 = (s[23] << 10) | (s[22] >>> 22)),
                            (b16 = (s[33] << 13) | (s[32] >>> 19)),
                            (b17 = (s[32] << 13) | (s[33] >>> 19)),
                            (b48 = (s[42] << 2) | (s[43] >>> 30)),
                            (b49 = (s[43] << 2) | (s[42] >>> 30)),
                            (b40 = (s[5] << 30) | (s[4] >>> 2)),
                            (b41 = (s[4] << 30) | (s[5] >>> 2)),
                            (b22 = (s[14] << 6) | (s[15] >>> 26)),
                            (b23 = (s[15] << 6) | (s[14] >>> 26)),
                            (b4 = (s[25] << 11) | (s[24] >>> 21)),
                            (b5 = (s[24] << 11) | (s[25] >>> 21)),
                            (b36 = (s[34] << 15) | (s[35] >>> 17)),
                            (b37 = (s[35] << 15) | (s[34] >>> 17)),
                            (b18 = (s[45] << 29) | (s[44] >>> 3)),
                            (b19 = (s[44] << 29) | (s[45] >>> 3)),
                            (b10 = (s[6] << 28) | (s[7] >>> 4)),
                            (b11 = (s[7] << 28) | (s[6] >>> 4)),
                            (b42 = (s[17] << 23) | (s[16] >>> 9)),
                            (b43 = (s[16] << 23) | (s[17] >>> 9)),
                            (b24 = (s[26] << 25) | (s[27] >>> 7)),
                            (b25 = (s[27] << 25) | (s[26] >>> 7)),
                            (b6 = (s[36] << 21) | (s[37] >>> 11)),
                            (b7 = (s[37] << 21) | (s[36] >>> 11)),
                            (b38 = (s[47] << 24) | (s[46] >>> 8)),
                            (b39 = (s[46] << 24) | (s[47] >>> 8)),
                            (b30 = (s[8] << 27) | (s[9] >>> 5)),
                            (b31 = (s[9] << 27) | (s[8] >>> 5)),
                            (b12 = (s[18] << 20) | (s[19] >>> 12)),
                            (b13 = (s[19] << 20) | (s[18] >>> 12)),
                            (b44 = (s[29] << 7) | (s[28] >>> 25)),
                            (b45 = (s[28] << 7) | (s[29] >>> 25)),
                            (b26 = (s[38] << 8) | (s[39] >>> 24)),
                            (b27 = (s[39] << 8) | (s[38] >>> 24)),
                            (b8 = (s[48] << 14) | (s[49] >>> 18)),
                            (b9 = (s[49] << 14) | (s[48] >>> 18)),
                            (s[0] = b0 ^ (~b2 & b4)),
                            (s[1] = b1 ^ (~b3 & b5)),
                            (s[10] = b10 ^ (~b12 & b14)),
                            (s[11] = b11 ^ (~b13 & b15)),
                            (s[20] = b20 ^ (~b22 & b24)),
                            (s[21] = b21 ^ (~b23 & b25)),
                            (s[30] = b30 ^ (~b32 & b34)),
                            (s[31] = b31 ^ (~b33 & b35)),
                            (s[40] = b40 ^ (~b42 & b44)),
                            (s[41] = b41 ^ (~b43 & b45)),
                            (s[2] = b2 ^ (~b4 & b6)),
                            (s[3] = b3 ^ (~b5 & b7)),
                            (s[12] = b12 ^ (~b14 & b16)),
                            (s[13] = b13 ^ (~b15 & b17)),
                            (s[22] = b22 ^ (~b24 & b26)),
                            (s[23] = b23 ^ (~b25 & b27)),
                            (s[32] = b32 ^ (~b34 & b36)),
                            (s[33] = b33 ^ (~b35 & b37)),
                            (s[42] = b42 ^ (~b44 & b46)),
                            (s[43] = b43 ^ (~b45 & b47)),
                            (s[4] = b4 ^ (~b6 & b8)),
                            (s[5] = b5 ^ (~b7 & b9)),
                            (s[14] = b14 ^ (~b16 & b18)),
                            (s[15] = b15 ^ (~b17 & b19)),
                            (s[24] = b24 ^ (~b26 & b28)),
                            (s[25] = b25 ^ (~b27 & b29)),
                            (s[34] = b34 ^ (~b36 & b38)),
                            (s[35] = b35 ^ (~b37 & b39)),
                            (s[44] = b44 ^ (~b46 & b48)),
                            (s[45] = b45 ^ (~b47 & b49)),
                            (s[6] = b6 ^ (~b8 & b0)),
                            (s[7] = b7 ^ (~b9 & b1)),
                            (s[16] = b16 ^ (~b18 & b10)),
                            (s[17] = b17 ^ (~b19 & b11)),
                            (s[26] = b26 ^ (~b28 & b20)),
                            (s[27] = b27 ^ (~b29 & b21)),
                            (s[36] = b36 ^ (~b38 & b30)),
                            (s[37] = b37 ^ (~b39 & b31)),
                            (s[46] = b46 ^ (~b48 & b40)),
                            (s[47] = b47 ^ (~b49 & b41)),
                            (s[8] = b8 ^ (~b0 & b2)),
                            (s[9] = b9 ^ (~b1 & b3)),
                            (s[18] = b18 ^ (~b10 & b12)),
                            (s[19] = b19 ^ (~b11 & b13)),
                            (s[28] = b28 ^ (~b20 & b22)),
                            (s[29] = b29 ^ (~b21 & b23)),
                            (s[38] = b38 ^ (~b30 & b32)),
                            (s[39] = b39 ^ (~b31 & b33)),
                            (s[48] = b48 ^ (~b40 & b42)),
                            (s[49] = b49 ^ (~b41 & b43)),
                            (s[0] ^= RC[n]),
                            (s[1] ^= RC[n + 1]);
                };
                if (COMMON_JS) module.exports = methods;
                else {
                    for (i = 0; i < methodNames.length; ++i) root[methodNames[i]] = methods[methodNames[i]];
                    AMD &&
                        void 0 !==
                            (__WEBPACK_AMD_DEFINE_RESULT__ = function () {
                                return methods;
                            }.call(exports, __webpack_require__, exports, module)) &&
                        (module.exports = __WEBPACK_AMD_DEFINE_RESULT__);
                }
            })();
        },
        21497: function (module) {
            module.exports = function (asyncMiddleware) {
                return (req, res, next, end) => {
                    let resolveNextPromise, returnHandlerCallback, nextWasCalled;
                    let nextPromise = new Promise((resolve) => {
                            resolveNextPromise = resolve;
                        }),
                        asyncNext = async () => {
                            (nextWasCalled = !0),
                                next((callback) => {
                                    (returnHandlerCallback = callback), resolveNextPromise();
                                }),
                                await nextPromise;
                        };
                    asyncMiddleware(req, res, asyncNext)
                        .then(async () => {
                            nextWasCalled ? (await nextPromise, returnHandlerCallback(null)) : end(null);
                        })
                        .catch((error) => {
                            returnHandlerCallback ? returnHandlerCallback(error) : end(error);
                        });
                };
            };
        },
        52121: function (module) {
            module.exports = function (handlers) {
                return (req, res, next, end) => {
                    let handler = handlers[req.method];
                    return void 0 === handler ? next() : "function" == typeof handler ? handler(req, res, next, end) : ((res.result = handler), end());
                };
            };
        },
        23420: function (module) {
            module.exports = function (opts) {
                var max = (opts = opts || {}).max || Number.MAX_SAFE_INTEGER,
                    idCounter = void 0 !== opts.start ? opts.start : Math.floor(Math.random() * max);
                return function () {
                    return (idCounter %= max), idCounter++;
                };
            };
        },
        67266: function (module, __unused_webpack_exports, __webpack_require__) {
            var json = "undefined" != typeof JSON ? JSON : __webpack_require__(58418);
            module.exports = function (obj, opts) {
                opts || (opts = {}), "function" == typeof opts && (opts = { cmp: opts });
                var f,
                    space = opts.space || "";
                "number" == typeof space && (space = Array(space + 1).join(" "));
                var cycles = "boolean" == typeof opts.cycles && opts.cycles,
                    replacer =
                        opts.replacer ||
                        function (key, value) {
                            return value;
                        },
                    cmp =
                        opts.cmp &&
                        ((f = opts.cmp),
                        function (node) {
                            return function (a, b) {
                                return f({ key: a, value: node[a] }, { key: b, value: node[b] });
                            };
                        }),
                    seen = [];
                return (function stringify(parent, key, node, level) {
                    var indent = space ? "\n" + Array(level + 1).join(space) : "",
                        colonSeparator = space ? ": " : ":";
                    if ((node && node.toJSON && "function" == typeof node.toJSON && (node = node.toJSON()), void 0 !== (node = replacer.call(parent, key, node)))) {
                        if ("object" != typeof node || null === node) return json.stringify(node);
                        if (isArray(node)) {
                            for (var out = [], i = 0; i < node.length; i++) {
                                var item = stringify(node, i, node[i], level + 1) || json.stringify(null);
                                out.push(indent + space + item);
                            }
                            return "[" + out.join(",") + indent + "]";
                        }
                        if (-1 !== seen.indexOf(node)) {
                            if (cycles) return json.stringify("__cycle__");
                            throw TypeError("Converting circular structure to JSON");
                        }
                        seen.push(node);
                        for (var keys = objectKeys(node).sort(cmp && cmp(node)), out = [], i = 0; i < keys.length; i++) {
                            var key = keys[i],
                                value = stringify(node, key, node[key], level + 1);
                            if (value) {
                                var keyValue = json.stringify(key) + colonSeparator + value;
                                out.push(indent + space + keyValue);
                            }
                        }
                        return seen.splice(seen.indexOf(node), 1), "{" + out.join(",") + indent + "}";
                    }
                })({ "": obj }, "", obj, 0);
            };
            var isArray =
                    Array.isArray ||
                    function (x) {
                        return "[object Array]" === {}.toString.call(x);
                    },
                objectKeys =
                    Object.keys ||
                    function (obj) {
                        var has =
                                Object.prototype.hasOwnProperty ||
                                function () {
                                    return !0;
                                },
                            keys = [];
                        for (var key in obj) has.call(obj, key) && keys.push(key);
                        return keys;
                    };
        },
        58418: function (__unused_webpack_module, exports, __webpack_require__) {
            (exports.parse = __webpack_require__(51396)), (exports.stringify = __webpack_require__(66177));
        },
        51396: function (module) {
            var at,
                ch,
                text,
                value,
                escapee = { '"': '"', "\\": "\\", "/": "/", b: "\b", f: "\f", n: "\n", r: "\r", t: "	" },
                error = function (m) {
                    throw { name: "SyntaxError", message: m, at: at, text: text };
                },
                next = function (c) {
                    return c && c !== ch && error("Expected '" + c + "' instead of '" + ch + "'"), (ch = text.charAt(at)), (at += 1), ch;
                },
                number = function () {
                    var number,
                        string = "";
                    for ("-" === ch && ((string = "-"), next("-")); ch >= "0" && ch <= "9"; ) (string += ch), next();
                    if ("." === ch) for (string += "."; next() && ch >= "0" && ch <= "9"; ) string += ch;
                    if ("e" === ch || "E" === ch) for (string += ch, next(), ("-" === ch || "+" === ch) && ((string += ch), next()); ch >= "0" && ch <= "9"; ) (string += ch), next();
                    if (isFinite((number = +string))) return number;
                    error("Bad number");
                },
                string = function () {
                    var hex,
                        i,
                        uffff,
                        string = "";
                    if ('"' === ch)
                        for (; next(); ) {
                            if ('"' === ch) return next(), string;
                            if ("\\" === ch) {
                                if ((next(), "u" === ch)) {
                                    for (i = 0, uffff = 0; i < 4 && isFinite((hex = parseInt(next(), 16))); i += 1) uffff = 16 * uffff + hex;
                                    string += String.fromCharCode(uffff);
                                } else if ("string" == typeof escapee[ch]) string += escapee[ch];
                                else break;
                            } else string += ch;
                        }
                    error("Bad string");
                },
                white = function () {
                    for (; ch && ch <= " "; ) next();
                },
                word = function () {
                    switch (ch) {
                        case "t":
                            return next("t"), next("r"), next("u"), next("e"), !0;
                        case "f":
                            return next("f"), next("a"), next("l"), next("s"), next("e"), !1;
                        case "n":
                            return next("n"), next("u"), next("l"), next("l"), null;
                    }
                    error("Unexpected '" + ch + "'");
                },
                array = function () {
                    var array = [];
                    if ("[" === ch) {
                        if ((next("["), white(), "]" === ch)) return next("]"), array;
                        for (; ch; ) {
                            if ((array.push(value()), white(), "]" === ch)) return next("]"), array;
                            next(","), white();
                        }
                    }
                    error("Bad array");
                },
                object = function () {
                    var key,
                        object = {};
                    if ("{" === ch) {
                        if ((next("{"), white(), "}" === ch)) return next("}"), object;
                        for (; ch; ) {
                            if (((key = string()), white(), next(":"), Object.hasOwnProperty.call(object, key) && error('Duplicate key "' + key + '"'), (object[key] = value()), white(), "}" === ch)) return next("}"), object;
                            next(","), white();
                        }
                    }
                    error("Bad object");
                };
            (value = function () {
                switch ((white(), ch)) {
                    case "{":
                        return object();
                    case "[":
                        return array();
                    case '"':
                        return string();
                    case "-":
                        return number();
                    default:
                        return ch >= "0" && ch <= "9" ? number() : word();
                }
            }),
                (module.exports = function (source, reviver) {
                    var result;
                    return (
                        (text = source),
                        (at = 0),
                        (ch = " "),
                        (result = value()),
                        white(),
                        ch && error("Syntax error"),
                        "function" == typeof reviver
                            ? (function walk(holder, key) {
                                  var k,
                                      v,
                                      value = holder[key];
                                  if (value && "object" == typeof value) for (k in value) Object.prototype.hasOwnProperty.call(value, k) && (void 0 !== (v = walk(value, k)) ? (value[k] = v) : delete value[k]);
                                  return reviver.call(holder, key, value);
                              })({ "": result }, "")
                            : result
                    );
                });
        },
        66177: function (module) {
            var gap,
                indent,
                escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
                meta = { "\b": "\\b", "	": "\\t", "\n": "\\n", "\f": "\\f", "\r": "\\r", '"': '\\"', "\\": "\\\\" };
            function quote(string) {
                return (
                    (escapable.lastIndex = 0),
                    escapable.test(string)
                        ? '"' +
                          string.replace(escapable, function (a) {
                              var c = meta[a];
                              return "string" == typeof c ? c : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4);
                          }) +
                          '"'
                        : '"' + string + '"'
                );
            }
            module.exports = function (value, replacer, space) {
                var i;
                if (((gap = ""), (indent = ""), "number" == typeof space)) for (i = 0; i < space; i += 1) indent += " ";
                else "string" == typeof space && (indent = space);
                if (replacer && "function" != typeof replacer && ("object" != typeof replacer || "number" != typeof replacer.length)) throw Error("JSON.stringify");
                return (function str(key, holder) {
                    var i,
                        k,
                        v,
                        length,
                        partial,
                        mind = gap,
                        value = holder[key];
                    switch ((value && "object" == typeof value && "function" == typeof value.toJSON && (value = value.toJSON(key)), "function" == typeof replacer && (value = replacer.call(holder, key, value)), typeof value)) {
                        case "string":
                            return quote(value);
                        case "number":
                            return isFinite(value) ? String(value) : "null";
                        case "boolean":
                        case "null":
                            return String(value);
                        case "object":
                            if (!value) return "null";
                            if (((gap += indent), (partial = []), "[object Array]" === Object.prototype.toString.apply(value))) {
                                for (i = 0, length = value.length; i < length; i += 1) partial[i] = str(i, value) || "null";
                                return (v = 0 === partial.length ? "[]" : gap ? "[\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "]" : "[" + partial.join(",") + "]"), (gap = mind), v;
                            }
                            if (replacer && "object" == typeof replacer)
                                for (i = 0, length = replacer.length; i < length; i += 1) "string" == typeof (k = replacer[i]) && (v = str(k, value)) && partial.push(quote(k) + (gap ? ": " : ":") + v);
                            else for (k in value) Object.prototype.hasOwnProperty.call(value, k) && (v = str(k, value)) && partial.push(quote(k) + (gap ? ": " : ":") + v);
                            return (v = 0 === partial.length ? "{}" : gap ? "{\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "}" : "{" + partial.join(",") + "}"), (gap = mind), v;
                    }
                })("", { "": value });
            };
        },
        95811: function (module, __unused_webpack_exports, __webpack_require__) {
            module.exports = __webpack_require__(26066)(__webpack_require__(79653));
        },
        26066: function (module, __unused_webpack_exports, __webpack_require__) {
            let createKeccak = __webpack_require__(37016),
                createShake = __webpack_require__(5675);
            module.exports = function (KeccakState) {
                let Keccak = createKeccak(KeccakState),
                    Shake = createShake(KeccakState);
                return function (algorithm, options) {
                    let hash = "string" == typeof algorithm ? algorithm.toLowerCase() : algorithm;
                    switch (hash) {
                        case "keccak224":
                            return new Keccak(1152, 448, null, 224, options);
                        case "keccak256":
                            return new Keccak(1088, 512, null, 256, options);
                        case "keccak384":
                            return new Keccak(832, 768, null, 384, options);
                        case "keccak512":
                            return new Keccak(576, 1024, null, 512, options);
                        case "sha3-224":
                            return new Keccak(1152, 448, 6, 224, options);
                        case "sha3-256":
                            return new Keccak(1088, 512, 6, 256, options);
                        case "sha3-384":
                            return new Keccak(832, 768, 6, 384, options);
                        case "sha3-512":
                            return new Keccak(576, 1024, 6, 512, options);
                        case "shake128":
                            return new Shake(1344, 256, 31, options);
                        case "shake256":
                            return new Shake(1088, 512, 31, options);
                        default:
                            throw Error("Invald algorithm: " + algorithm);
                    }
                };
            };
        },
        37016: function (module, __unused_webpack_exports, __webpack_require__) {
            var Buffer = __webpack_require__(48764).Buffer;
            let { Transform } = __webpack_require__(35092);
            module.exports = (KeccakState) =>
                class Keccak extends Transform {
                    constructor(rate, capacity, delimitedSuffix, hashBitLength, options) {
                        super(options),
                            (this._rate = rate),
                            (this._capacity = capacity),
                            (this._delimitedSuffix = delimitedSuffix),
                            (this._hashBitLength = hashBitLength),
                            (this._options = options),
                            (this._state = new KeccakState()),
                            this._state.initialize(rate, capacity),
                            (this._finalized = !1);
                    }
                    _transform(chunk, encoding, callback) {
                        let error = null;
                        try {
                            this.update(chunk, encoding);
                        } catch (err) {
                            error = err;
                        }
                        callback(error);
                    }
                    _flush(callback) {
                        let error = null;
                        try {
                            this.push(this.digest());
                        } catch (err) {
                            error = err;
                        }
                        callback(error);
                    }
                    update(data, encoding) {
                        if (!Buffer.isBuffer(data) && "string" != typeof data) throw TypeError("Data must be a string or a buffer");
                        if (this._finalized) throw Error("Digest already called");
                        return Buffer.isBuffer(data) || (data = Buffer.from(data, encoding)), this._state.absorb(data), this;
                    }
                    digest(encoding) {
                        if (this._finalized) throw Error("Digest already called");
                        (this._finalized = !0), this._delimitedSuffix && this._state.absorbLastFewBits(this._delimitedSuffix);
                        let digest = this._state.squeeze(this._hashBitLength / 8);
                        return void 0 !== encoding && (digest = digest.toString(encoding)), this._resetState(), digest;
                    }
                    _resetState() {
                        return this._state.initialize(this._rate, this._capacity), this;
                    }
                    _clone() {
                        let clone = new Keccak(this._rate, this._capacity, this._delimitedSuffix, this._hashBitLength, this._options);
                        return this._state.copy(clone._state), (clone._finalized = this._finalized), clone;
                    }
                };
        },
        5675: function (module, __unused_webpack_exports, __webpack_require__) {
            var Buffer = __webpack_require__(48764).Buffer;
            let { Transform } = __webpack_require__(35092);
            module.exports = (KeccakState) =>
                class Shake extends Transform {
                    constructor(rate, capacity, delimitedSuffix, options) {
                        super(options),
                            (this._rate = rate),
                            (this._capacity = capacity),
                            (this._delimitedSuffix = delimitedSuffix),
                            (this._options = options),
                            (this._state = new KeccakState()),
                            this._state.initialize(rate, capacity),
                            (this._finalized = !1);
                    }
                    _transform(chunk, encoding, callback) {
                        let error = null;
                        try {
                            this.update(chunk, encoding);
                        } catch (err) {
                            error = err;
                        }
                        callback(error);
                    }
                    _flush() {}
                    _read(size) {
                        this.push(this.squeeze(size));
                    }
                    update(data, encoding) {
                        if (!Buffer.isBuffer(data) && "string" != typeof data) throw TypeError("Data must be a string or a buffer");
                        if (this._finalized) throw Error("Squeeze already called");
                        return Buffer.isBuffer(data) || (data = Buffer.from(data, encoding)), this._state.absorb(data), this;
                    }
                    squeeze(dataByteLength, encoding) {
                        this._finalized || ((this._finalized = !0), this._state.absorbLastFewBits(this._delimitedSuffix));
                        let data = this._state.squeeze(dataByteLength);
                        return void 0 !== encoding && (data = data.toString(encoding)), data;
                    }
                    _resetState() {
                        return this._state.initialize(this._rate, this._capacity), this;
                    }
                    _clone() {
                        let clone = new Shake(this._rate, this._capacity, this._delimitedSuffix, this._options);
                        return this._state.copy(clone._state), (clone._finalized = this._finalized), clone;
                    }
                };
        },
        34040: function (__unused_webpack_module, exports) {
            let P1600_ROUND_CONSTANTS = [
                1,
                0,
                32898,
                0,
                32906,
                2147483648,
                2147516416,
                2147483648,
                32907,
                0,
                2147483649,
                0,
                2147516545,
                2147483648,
                32777,
                2147483648,
                138,
                0,
                136,
                0,
                2147516425,
                0,
                2147483658,
                0,
                2147516555,
                0,
                139,
                2147483648,
                32905,
                2147483648,
                32771,
                2147483648,
                32770,
                2147483648,
                128,
                2147483648,
                32778,
                0,
                2147483658,
                2147483648,
                2147516545,
                2147483648,
                32896,
                2147483648,
                2147483649,
                0,
                2147516424,
                2147483648,
            ];
            exports.p1600 = function (s) {
                for (let round = 0; round < 24; ++round) {
                    let lo0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40],
                        hi0 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41],
                        lo1 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42],
                        hi1 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43],
                        lo2 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44],
                        hi2 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45],
                        lo3 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46],
                        hi3 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47],
                        lo4 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48],
                        hi4 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49],
                        lo = lo4 ^ ((lo1 << 1) | (hi1 >>> 31)),
                        hi = hi4 ^ ((hi1 << 1) | (lo1 >>> 31)),
                        t1slo0 = s[0] ^ lo,
                        t1shi0 = s[1] ^ hi,
                        t1slo5 = s[10] ^ lo,
                        t1shi5 = s[11] ^ hi,
                        t1slo10 = s[20] ^ lo,
                        t1shi10 = s[21] ^ hi,
                        t1slo15 = s[30] ^ lo,
                        t1shi15 = s[31] ^ hi,
                        t1slo20 = s[40] ^ lo,
                        t1shi20 = s[41] ^ hi;
                    (lo = lo0 ^ ((lo2 << 1) | (hi2 >>> 31))), (hi = hi0 ^ ((hi2 << 1) | (lo2 >>> 31)));
                    let t1slo1 = s[2] ^ lo,
                        t1shi1 = s[3] ^ hi,
                        t1slo6 = s[12] ^ lo,
                        t1shi6 = s[13] ^ hi,
                        t1slo11 = s[22] ^ lo,
                        t1shi11 = s[23] ^ hi,
                        t1slo16 = s[32] ^ lo,
                        t1shi16 = s[33] ^ hi,
                        t1slo21 = s[42] ^ lo,
                        t1shi21 = s[43] ^ hi;
                    (lo = lo1 ^ ((lo3 << 1) | (hi3 >>> 31))), (hi = hi1 ^ ((hi3 << 1) | (lo3 >>> 31)));
                    let t1slo2 = s[4] ^ lo,
                        t1shi2 = s[5] ^ hi,
                        t1slo7 = s[14] ^ lo,
                        t1shi7 = s[15] ^ hi,
                        t1slo12 = s[24] ^ lo,
                        t1shi12 = s[25] ^ hi,
                        t1slo17 = s[34] ^ lo,
                        t1shi17 = s[35] ^ hi,
                        t1slo22 = s[44] ^ lo,
                        t1shi22 = s[45] ^ hi;
                    (lo = lo2 ^ ((lo4 << 1) | (hi4 >>> 31))), (hi = hi2 ^ ((hi4 << 1) | (lo4 >>> 31)));
                    let t1slo3 = s[6] ^ lo,
                        t1shi3 = s[7] ^ hi,
                        t1slo8 = s[16] ^ lo,
                        t1shi8 = s[17] ^ hi,
                        t1slo13 = s[26] ^ lo,
                        t1shi13 = s[27] ^ hi,
                        t1slo18 = s[36] ^ lo,
                        t1shi18 = s[37] ^ hi,
                        t1slo23 = s[46] ^ lo,
                        t1shi23 = s[47] ^ hi;
                    (lo = lo3 ^ ((lo0 << 1) | (hi0 >>> 31))), (hi = hi3 ^ ((hi0 << 1) | (lo0 >>> 31)));
                    let t1slo4 = s[8] ^ lo,
                        t1shi4 = s[9] ^ hi,
                        t1slo9 = s[18] ^ lo,
                        t1shi9 = s[19] ^ hi,
                        t1slo14 = s[28] ^ lo,
                        t1shi14 = s[29] ^ hi,
                        t1slo19 = s[38] ^ lo,
                        t1shi19 = s[39] ^ hi,
                        t1slo24 = s[48] ^ lo,
                        t1shi24 = s[49] ^ hi,
                        t2slo16 = (t1shi5 << 4) | (t1slo5 >>> 28),
                        t2shi16 = (t1slo5 << 4) | (t1shi5 >>> 28),
                        t2slo7 = (t1slo10 << 3) | (t1shi10 >>> 29),
                        t2shi7 = (t1shi10 << 3) | (t1slo10 >>> 29),
                        t2slo23 = (t1shi15 << 9) | (t1slo15 >>> 23),
                        t2shi23 = (t1slo15 << 9) | (t1shi15 >>> 23),
                        t2slo14 = (t1slo20 << 18) | (t1shi20 >>> 14),
                        t2shi14 = (t1shi20 << 18) | (t1slo20 >>> 14),
                        t2slo10 = (t1slo1 << 1) | (t1shi1 >>> 31),
                        t2shi10 = (t1shi1 << 1) | (t1slo1 >>> 31),
                        t2slo1 = (t1shi6 << 12) | (t1slo6 >>> 20),
                        t2shi1 = (t1slo6 << 12) | (t1shi6 >>> 20),
                        t2slo17 = (t1slo11 << 10) | (t1shi11 >>> 22),
                        t2shi17 = (t1shi11 << 10) | (t1slo11 >>> 22),
                        t2slo8 = (t1shi16 << 13) | (t1slo16 >>> 19),
                        t2shi8 = (t1slo16 << 13) | (t1shi16 >>> 19),
                        t2slo24 = (t1slo21 << 2) | (t1shi21 >>> 30),
                        t2shi24 = (t1shi21 << 2) | (t1slo21 >>> 30),
                        t2slo20 = (t1shi2 << 30) | (t1slo2 >>> 2),
                        t2shi20 = (t1slo2 << 30) | (t1shi2 >>> 2),
                        t2slo11 = (t1slo7 << 6) | (t1shi7 >>> 26),
                        t2shi11 = (t1shi7 << 6) | (t1slo7 >>> 26),
                        t2slo2 = (t1shi12 << 11) | (t1slo12 >>> 21),
                        t2shi2 = (t1slo12 << 11) | (t1shi12 >>> 21),
                        t2slo18 = (t1slo17 << 15) | (t1shi17 >>> 17),
                        t2shi18 = (t1shi17 << 15) | (t1slo17 >>> 17),
                        t2slo9 = (t1shi22 << 29) | (t1slo22 >>> 3),
                        t2shi9 = (t1slo22 << 29) | (t1shi22 >>> 3),
                        t2slo5 = (t1slo3 << 28) | (t1shi3 >>> 4),
                        t2shi5 = (t1shi3 << 28) | (t1slo3 >>> 4),
                        t2slo21 = (t1shi8 << 23) | (t1slo8 >>> 9),
                        t2shi21 = (t1slo8 << 23) | (t1shi8 >>> 9),
                        t2slo12 = (t1slo13 << 25) | (t1shi13 >>> 7),
                        t2shi12 = (t1shi13 << 25) | (t1slo13 >>> 7),
                        t2slo3 = (t1slo18 << 21) | (t1shi18 >>> 11),
                        t2shi3 = (t1shi18 << 21) | (t1slo18 >>> 11),
                        t2slo19 = (t1shi23 << 24) | (t1slo23 >>> 8),
                        t2shi19 = (t1slo23 << 24) | (t1shi23 >>> 8),
                        t2slo15 = (t1slo4 << 27) | (t1shi4 >>> 5),
                        t2shi15 = (t1shi4 << 27) | (t1slo4 >>> 5),
                        t2slo6 = (t1slo9 << 20) | (t1shi9 >>> 12),
                        t2shi6 = (t1shi9 << 20) | (t1slo9 >>> 12),
                        t2slo22 = (t1shi14 << 7) | (t1slo14 >>> 25),
                        t2shi22 = (t1slo14 << 7) | (t1shi14 >>> 25),
                        t2slo13 = (t1slo19 << 8) | (t1shi19 >>> 24),
                        t2shi13 = (t1shi19 << 8) | (t1slo19 >>> 24),
                        t2slo4 = (t1slo24 << 14) | (t1shi24 >>> 18),
                        t2shi4 = (t1shi24 << 14) | (t1slo24 >>> 18);
                    (s[0] = t1slo0 ^ (~t2slo1 & t2slo2)),
                        (s[1] = t1shi0 ^ (~t2shi1 & t2shi2)),
                        (s[10] = t2slo5 ^ (~t2slo6 & t2slo7)),
                        (s[11] = t2shi5 ^ (~t2shi6 & t2shi7)),
                        (s[20] = t2slo10 ^ (~t2slo11 & t2slo12)),
                        (s[21] = t2shi10 ^ (~t2shi11 & t2shi12)),
                        (s[30] = t2slo15 ^ (~t2slo16 & t2slo17)),
                        (s[31] = t2shi15 ^ (~t2shi16 & t2shi17)),
                        (s[40] = t2slo20 ^ (~t2slo21 & t2slo22)),
                        (s[41] = t2shi20 ^ (~t2shi21 & t2shi22)),
                        (s[2] = t2slo1 ^ (~t2slo2 & t2slo3)),
                        (s[3] = t2shi1 ^ (~t2shi2 & t2shi3)),
                        (s[12] = t2slo6 ^ (~t2slo7 & t2slo8)),
                        (s[13] = t2shi6 ^ (~t2shi7 & t2shi8)),
                        (s[22] = t2slo11 ^ (~t2slo12 & t2slo13)),
                        (s[23] = t2shi11 ^ (~t2shi12 & t2shi13)),
                        (s[32] = t2slo16 ^ (~t2slo17 & t2slo18)),
                        (s[33] = t2shi16 ^ (~t2shi17 & t2shi18)),
                        (s[42] = t2slo21 ^ (~t2slo22 & t2slo23)),
                        (s[43] = t2shi21 ^ (~t2shi22 & t2shi23)),
                        (s[4] = t2slo2 ^ (~t2slo3 & t2slo4)),
                        (s[5] = t2shi2 ^ (~t2shi3 & t2shi4)),
                        (s[14] = t2slo7 ^ (~t2slo8 & t2slo9)),
                        (s[15] = t2shi7 ^ (~t2shi8 & t2shi9)),
                        (s[24] = t2slo12 ^ (~t2slo13 & t2slo14)),
                        (s[25] = t2shi12 ^ (~t2shi13 & t2shi14)),
                        (s[34] = t2slo17 ^ (~t2slo18 & t2slo19)),
                        (s[35] = t2shi17 ^ (~t2shi18 & t2shi19)),
                        (s[44] = t2slo22 ^ (~t2slo23 & t2slo24)),
                        (s[45] = t2shi22 ^ (~t2shi23 & t2shi24)),
                        (s[6] = t2slo3 ^ (~t2slo4 & t1slo0)),
                        (s[7] = t2shi3 ^ (~t2shi4 & t1shi0)),
                        (s[16] = t2slo8 ^ (~t2slo9 & t2slo5)),
                        (s[17] = t2shi8 ^ (~t2shi9 & t2shi5)),
                        (s[26] = t2slo13 ^ (~t2slo14 & t2slo10)),
                        (s[27] = t2shi13 ^ (~t2shi14 & t2shi10)),
                        (s[36] = t2slo18 ^ (~t2slo19 & t2slo15)),
                        (s[37] = t2shi18 ^ (~t2shi19 & t2shi15)),
                        (s[46] = t2slo23 ^ (~t2slo24 & t2slo20)),
                        (s[47] = t2shi23 ^ (~t2shi24 & t2shi20)),
                        (s[8] = t2slo4 ^ (~t1slo0 & t2slo1)),
                        (s[9] = t2shi4 ^ (~t1shi0 & t2shi1)),
                        (s[18] = t2slo9 ^ (~t2slo5 & t2slo6)),
                        (s[19] = t2shi9 ^ (~t2shi5 & t2shi6)),
                        (s[28] = t2slo14 ^ (~t2slo10 & t2slo11)),
                        (s[29] = t2shi14 ^ (~t2shi10 & t2shi11)),
                        (s[38] = t2slo19 ^ (~t2slo15 & t2slo16)),
                        (s[39] = t2shi19 ^ (~t2shi15 & t2shi16)),
                        (s[48] = t2slo24 ^ (~t2slo20 & t2slo21)),
                        (s[49] = t2shi24 ^ (~t2shi20 & t2shi21)),
                        (s[0] ^= P1600_ROUND_CONSTANTS[2 * round]),
                        (s[1] ^= P1600_ROUND_CONSTANTS[2 * round + 1]);
                }
            };
        },
        79653: function (module, __unused_webpack_exports, __webpack_require__) {
            var Buffer = __webpack_require__(48764).Buffer;
            let keccakState = __webpack_require__(34040);
            function Keccak() {
                (this.state = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), (this.blockSize = null), (this.count = 0), (this.squeezing = !1);
            }
            (Keccak.prototype.initialize = function (rate, capacity) {
                for (let i = 0; i < 50; ++i) this.state[i] = 0;
                (this.blockSize = rate / 8), (this.count = 0), (this.squeezing = !1);
            }),
                (Keccak.prototype.absorb = function (data) {
                    for (let i = 0; i < data.length; ++i) (this.state[~~(this.count / 4)] ^= data[i] << (8 * (this.count % 4))), (this.count += 1), this.count === this.blockSize && (keccakState.p1600(this.state), (this.count = 0));
                }),
                (Keccak.prototype.absorbLastFewBits = function (bits) {
                    (this.state[~~(this.count / 4)] ^= bits << (8 * (this.count % 4))),
                        (128 & bits) != 0 && this.count === this.blockSize - 1 && keccakState.p1600(this.state),
                        (this.state[~~((this.blockSize - 1) / 4)] ^= 128 << (8 * ((this.blockSize - 1) % 4))),
                        keccakState.p1600(this.state),
                        (this.count = 0),
                        (this.squeezing = !0);
                }),
                (Keccak.prototype.squeeze = function (length) {
                    this.squeezing || this.absorbLastFewBits(1);
                    let output = Buffer.alloc(length);
                    for (let i = 0; i < length; ++i) (output[i] = (this.state[~~(this.count / 4)] >>> (8 * (this.count % 4))) & 255), (this.count += 1), this.count === this.blockSize && (keccakState.p1600(this.state), (this.count = 0));
                    return output;
                }),
                (Keccak.prototype.copy = function (dest) {
                    for (let i = 0; i < 50; ++i) dest.state[i] = this.state[i];
                    (dest.blockSize = this.blockSize), (dest.count = this.count), (dest.squeezing = this.squeezing);
                }),
                (module.exports = Keccak);
        },
        97630: function (module) {
            "use strict";
            var codes = {};
            function createErrorType(code, message, Base) {
                Base || (Base = Error);
                var NodeError = (function (_Base) {
                    var subClass;
                    function NodeError(arg1, arg2, arg3) {
                        return _Base.call(this, "string" == typeof message ? message : message(arg1, arg2, arg3)) || this;
                    }
                    return ((subClass = NodeError).prototype = Object.create(_Base.prototype)), (subClass.prototype.constructor = subClass), (subClass.__proto__ = _Base), NodeError;
                })(Base);
                (NodeError.prototype.name = Base.name), (NodeError.prototype.code = code), (codes[code] = NodeError);
            }
            function oneOf(expected, thing) {
                if (!Array.isArray(expected)) return "of ".concat(thing, " ").concat(String(expected));
                var len = expected.length;
                return ((expected = expected.map(function (i) {
                    return String(i);
                })),
                len > 2)
                    ? "one of ".concat(thing, " ").concat(expected.slice(0, len - 1).join(", "), ", or ") + expected[len - 1]
                    : 2 === len
                    ? "one of ".concat(thing, " ").concat(expected[0], " or ").concat(expected[1])
                    : "of ".concat(thing, " ").concat(expected[0]);
            }
            createErrorType(
                "ERR_INVALID_OPT_VALUE",
                function (name, value) {
                    return 'The value "' + value + '" is invalid for option "' + name + '"';
                },
                TypeError
            ),
                createErrorType(
                    "ERR_INVALID_ARG_TYPE",
                    function (name, expected, actual) {
                        if (
                            ("string" == typeof expected && ((search = "not "), expected.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search)
                                ? ((determiner = "must not be"), (expected = expected.replace(/^not /, "")))
                                : (determiner = "must be"),
                            (search1 = " argument"),
                            (void 0 === this_len || this_len > name.length) && (this_len = name.length),
                            name.substring(this_len - search1.length, this_len) === search1)
                        )
                            msg = "The ".concat(name, " ").concat(determiner, " ").concat(oneOf(expected, "type"));
                        else {
                            var search,
                                pos,
                                search1,
                                this_len,
                                start,
                                determiner,
                                msg,
                                type = ("number" != typeof start && (start = 0), start + 1 > name.length || -1 === name.indexOf(".", start)) ? "argument" : "property";
                            msg = 'The "'.concat(name, '" ').concat(type, " ").concat(determiner, " ").concat(oneOf(expected, "type"));
                        }
                        return msg + ". Received type ".concat(typeof actual);
                    },
                    TypeError
                ),
                createErrorType("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"),
                createErrorType("ERR_METHOD_NOT_IMPLEMENTED", function (name) {
                    return "The " + name + " method is not implemented";
                }),
                createErrorType("ERR_STREAM_PREMATURE_CLOSE", "Premature close"),
                createErrorType("ERR_STREAM_DESTROYED", function (name) {
                    return "Cannot call " + name + " after a stream was destroyed";
                }),
                createErrorType("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"),
                createErrorType("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"),
                createErrorType("ERR_STREAM_WRITE_AFTER_END", "write after end"),
                createErrorType("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError),
                createErrorType(
                    "ERR_UNKNOWN_ENCODING",
                    function (arg) {
                        return "Unknown encoding: " + arg;
                    },
                    TypeError
                ),
                createErrorType("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"),
                (module.exports.q = codes);
        },
        37735: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var process = __webpack_require__(34155),
                objectKeys =
                    Object.keys ||
                    function (obj) {
                        var keys = [];
                        for (var key in obj) keys.push(key);
                        return keys;
                    };
            module.exports = Duplex;
            var Readable = __webpack_require__(83875),
                Writable = __webpack_require__(69843);
            __webpack_require__(35717)(Duplex, Readable);
            for (var keys = objectKeys(Writable.prototype), v = 0; v < keys.length; v++) {
                var method = keys[v];
                Duplex.prototype[method] || (Duplex.prototype[method] = Writable.prototype[method]);
            }
            function Duplex(options) {
                if (!(this instanceof Duplex)) return new Duplex(options);
                Readable.call(this, options),
                    Writable.call(this, options),
                    (this.allowHalfOpen = !0),
                    options && (!1 === options.readable && (this.readable = !1), !1 === options.writable && (this.writable = !1), !1 === options.allowHalfOpen && ((this.allowHalfOpen = !1), this.once("end", onend)));
            }
            function onend() {
                this._writableState.ended || process.nextTick(onEndNT, this);
            }
            function onEndNT(self1) {
                self1.end();
            }
            Object.defineProperty(Duplex.prototype, "writableHighWaterMark", {
                enumerable: !1,
                get: function () {
                    return this._writableState.highWaterMark;
                },
            }),
                Object.defineProperty(Duplex.prototype, "writableBuffer", {
                    enumerable: !1,
                    get: function () {
                        return this._writableState && this._writableState.getBuffer();
                    },
                }),
                Object.defineProperty(Duplex.prototype, "writableLength", {
                    enumerable: !1,
                    get: function () {
                        return this._writableState.length;
                    },
                }),
                Object.defineProperty(Duplex.prototype, "destroyed", {
                    enumerable: !1,
                    get: function () {
                        return void 0 !== this._readableState && void 0 !== this._writableState && this._readableState.destroyed && this._writableState.destroyed;
                    },
                    set: function (value) {
                        void 0 !== this._readableState && void 0 !== this._writableState && ((this._readableState.destroyed = value), (this._writableState.destroyed = value));
                    },
                });
        },
        36485: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            module.exports = PassThrough;
            var Transform = __webpack_require__(96311);
            function PassThrough(options) {
                if (!(this instanceof PassThrough)) return new PassThrough(options);
                Transform.call(this, options);
            }
            __webpack_require__(35717)(PassThrough, Transform),
                (PassThrough.prototype._transform = function (chunk, encoding, cb) {
                    cb(null, chunk);
                });
        },
        83875: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var Duplex,
                debug,
                StringDecoder,
                createReadableStreamAsyncIterator,
                from,
                process = __webpack_require__(34155);
            (module.exports = Readable), (Readable.ReadableState = ReadableState), __webpack_require__(17187).EventEmitter;
            var EElistenerCount = function (emitter, type) {
                    return emitter.listeners(type).length;
                },
                Stream = __webpack_require__(89868),
                Buffer = __webpack_require__(48764).Buffer,
                OurUint8Array = __webpack_require__.g.Uint8Array || function () {},
                debugUtil = __webpack_require__(46586);
            debug = debugUtil && debugUtil.debuglog ? debugUtil.debuglog("stream") : function () {};
            var BufferList = __webpack_require__(30070),
                destroyImpl = __webpack_require__(73505),
                getHighWaterMark = __webpack_require__(65482).getHighWaterMark,
                _require$codes = __webpack_require__(97630).q,
                ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
                ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,
                ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
                ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
            __webpack_require__(35717)(Readable, Stream);
            var errorOrDestroy = destroyImpl.errorOrDestroy,
                kProxyEvents = ["error", "close", "destroy", "pause", "resume"];
            function ReadableState(options, stream, isDuplex) {
                (Duplex = Duplex || __webpack_require__(37735)),
                    (options = options || {}),
                    "boolean" != typeof isDuplex && (isDuplex = stream instanceof Duplex),
                    (this.objectMode = !!options.objectMode),
                    isDuplex && (this.objectMode = this.objectMode || !!options.readableObjectMode),
                    (this.highWaterMark = getHighWaterMark(this, options, "readableHighWaterMark", isDuplex)),
                    (this.buffer = new BufferList()),
                    (this.length = 0),
                    (this.pipes = null),
                    (this.pipesCount = 0),
                    (this.flowing = null),
                    (this.ended = !1),
                    (this.endEmitted = !1),
                    (this.reading = !1),
                    (this.sync = !0),
                    (this.needReadable = !1),
                    (this.emittedReadable = !1),
                    (this.readableListening = !1),
                    (this.resumeScheduled = !1),
                    (this.paused = !0),
                    (this.emitClose = !1 !== options.emitClose),
                    (this.autoDestroy = !!options.autoDestroy),
                    (this.destroyed = !1),
                    (this.defaultEncoding = options.defaultEncoding || "utf8"),
                    (this.awaitDrain = 0),
                    (this.readingMore = !1),
                    (this.decoder = null),
                    (this.encoding = null),
                    options.encoding && (StringDecoder || (StringDecoder = __webpack_require__(92809).s), (this.decoder = new StringDecoder(options.encoding)), (this.encoding = options.encoding));
            }
            function Readable(options) {
                if (((Duplex = Duplex || __webpack_require__(37735)), !(this instanceof Readable))) return new Readable(options);
                var isDuplex = this instanceof Duplex;
                (this._readableState = new ReadableState(options, this, isDuplex)),
                    (this.readable = !0),
                    options && ("function" == typeof options.read && (this._read = options.read), "function" == typeof options.destroy && (this._destroy = options.destroy)),
                    Stream.call(this);
            }
            function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
                debug("readableAddChunk", chunk);
                var state,
                    chunk1,
                    er,
                    chunk2,
                    er1,
                    state1 = stream._readableState;
                if (null === chunk)
                    (state1.reading = !1),
                        (function (stream, state) {
                            if ((debug("onEofChunk"), !state.ended)) {
                                if (state.decoder) {
                                    var chunk = state.decoder.end();
                                    chunk && chunk.length && (state.buffer.push(chunk), (state.length += state.objectMode ? 1 : chunk.length));
                                }
                                (state.ended = !0), state.sync ? emitReadable(stream) : ((state.needReadable = !1), state.emittedReadable || ((state.emittedReadable = !0), emitReadable_(stream)));
                            }
                        })(stream, state1);
                else {
                    if (
                        (skipChunkCheck ||
                            ((state = state1),
                            (chunk1 = chunk),
                            Buffer.isBuffer(chunk1) ||
                                chunk1 instanceof OurUint8Array ||
                                "string" == typeof chunk1 ||
                                void 0 === chunk1 ||
                                state.objectMode ||
                                (er = new ERR_INVALID_ARG_TYPE("chunk", ["string", "Buffer", "Uint8Array"], chunk1)),
                            (er1 = er)),
                        er1)
                    )
                        errorOrDestroy(stream, er1);
                    else if (state1.objectMode || (chunk && chunk.length > 0)) {
                        if (("string" == typeof chunk || state1.objectMode || Object.getPrototypeOf(chunk) === Buffer.prototype || ((chunk2 = chunk), (chunk = Buffer.from(chunk2))), addToFront))
                            state1.endEmitted ? errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT()) : addChunk(stream, state1, chunk, !0);
                        else if (state1.ended) errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
                        else {
                            if (state1.destroyed) return !1;
                            (state1.reading = !1),
                                state1.decoder && !encoding
                                    ? ((chunk = state1.decoder.write(chunk)), state1.objectMode || 0 !== chunk.length ? addChunk(stream, state1, chunk, !1) : maybeReadMore(stream, state1))
                                    : addChunk(stream, state1, chunk, !1);
                        }
                    } else addToFront || ((state1.reading = !1), maybeReadMore(stream, state1));
                }
                return !state1.ended && (state1.length < state1.highWaterMark || 0 === state1.length);
            }
            function addChunk(stream, state, chunk, addToFront) {
                state.flowing && 0 === state.length && !state.sync
                    ? ((state.awaitDrain = 0), stream.emit("data", chunk))
                    : ((state.length += state.objectMode ? 1 : chunk.length), addToFront ? state.buffer.unshift(chunk) : state.buffer.push(chunk), state.needReadable && emitReadable(stream)),
                    maybeReadMore(stream, state);
            }
            function howMuchToRead(n, state) {
                if (n <= 0 || (0 === state.length && state.ended)) return 0;
                if (state.objectMode) return 1;
                if (n != n) return state.flowing && state.length ? state.buffer.head.data.length : state.length;
                if (n > state.highWaterMark) {
                    var n1;
                    state.highWaterMark = ((n1 = n) >= 1073741824 ? (n1 = 1073741824) : (n1--, (n1 |= n1 >>> 1), (n1 |= n1 >>> 2), (n1 |= n1 >>> 4), (n1 |= n1 >>> 8), (n1 |= n1 >>> 16), n1++), n1);
                }
                return n <= state.length ? n : state.ended ? state.length : ((state.needReadable = !0), 0);
            }
            function emitReadable(stream) {
                var state = stream._readableState;
                debug("emitReadable", state.needReadable, state.emittedReadable),
                    (state.needReadable = !1),
                    state.emittedReadable || (debug("emitReadable", state.flowing), (state.emittedReadable = !0), process.nextTick(emitReadable_, stream));
            }
            function emitReadable_(stream) {
                var state = stream._readableState;
                debug("emitReadable_", state.destroyed, state.length, state.ended),
                    !state.destroyed && (state.length || state.ended) && (stream.emit("readable"), (state.emittedReadable = !1)),
                    (state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark),
                    flow(stream);
            }
            function maybeReadMore(stream, state) {
                state.readingMore || ((state.readingMore = !0), process.nextTick(maybeReadMore_, stream, state));
            }
            function maybeReadMore_(stream, state) {
                for (; !state.reading && !state.ended && (state.length < state.highWaterMark || (state.flowing && 0 === state.length)); ) {
                    var len = state.length;
                    if ((debug("maybeReadMore read 0"), stream.read(0), len === state.length)) break;
                }
                state.readingMore = !1;
            }
            function updateReadableListening(self1) {
                var state = self1._readableState;
                (state.readableListening = self1.listenerCount("readable") > 0), state.resumeScheduled && !state.paused ? (state.flowing = !0) : self1.listenerCount("data") > 0 && self1.resume();
            }
            function nReadingNextTick(self1) {
                debug("readable nexttick read 0"), self1.read(0);
            }
            function resume_(stream, state) {
                debug("resume", state.reading), state.reading || stream.read(0), (state.resumeScheduled = !1), stream.emit("resume"), flow(stream), state.flowing && !state.reading && stream.read(0);
            }
            function flow(stream) {
                var state = stream._readableState;
                for (debug("flow", state.flowing); state.flowing && null !== stream.read(); );
            }
            function fromList(n, state) {
                var ret;
                return 0 === state.length
                    ? null
                    : (state.objectMode
                          ? (ret = state.buffer.shift())
                          : !n || n >= state.length
                          ? ((ret = state.decoder ? state.buffer.join("") : 1 === state.buffer.length ? state.buffer.first() : state.buffer.concat(state.length)), state.buffer.clear())
                          : (ret = state.buffer.consume(n, state.decoder)),
                      ret);
            }
            function endReadable(stream) {
                var state = stream._readableState;
                debug("endReadable", state.endEmitted), state.endEmitted || ((state.ended = !0), process.nextTick(endReadableNT, state, stream));
            }
            function endReadableNT(state, stream) {
                if ((debug("endReadableNT", state.endEmitted, state.length), !state.endEmitted && 0 === state.length && ((state.endEmitted = !0), (stream.readable = !1), stream.emit("end"), state.autoDestroy))) {
                    var wState = stream._writableState;
                    (!wState || (wState.autoDestroy && wState.finished)) && stream.destroy();
                }
            }
            function indexOf(xs, x) {
                for (var i = 0, l = xs.length; i < l; i++) if (xs[i] === x) return i;
                return -1;
            }
            Object.defineProperty(Readable.prototype, "destroyed", {
                enumerable: !1,
                get: function () {
                    return void 0 !== this._readableState && this._readableState.destroyed;
                },
                set: function (value) {
                    this._readableState && (this._readableState.destroyed = value);
                },
            }),
                (Readable.prototype.destroy = destroyImpl.destroy),
                (Readable.prototype._undestroy = destroyImpl.undestroy),
                (Readable.prototype._destroy = function (err, cb) {
                    cb(err);
                }),
                (Readable.prototype.push = function (chunk, encoding) {
                    var skipChunkCheck,
                        state = this._readableState;
                    return (
                        state.objectMode
                            ? (skipChunkCheck = !0)
                            : "string" == typeof chunk && ((encoding = encoding || state.defaultEncoding) !== state.encoding && ((chunk = Buffer.from(chunk, encoding)), (encoding = "")), (skipChunkCheck = !0)),
                        readableAddChunk(this, chunk, encoding, !1, skipChunkCheck)
                    );
                }),
                (Readable.prototype.unshift = function (chunk) {
                    return readableAddChunk(this, chunk, null, !0, !1);
                }),
                (Readable.prototype.isPaused = function () {
                    return !1 === this._readableState.flowing;
                }),
                (Readable.prototype.setEncoding = function (enc) {
                    StringDecoder || (StringDecoder = __webpack_require__(92809).s);
                    var decoder = new StringDecoder(enc);
                    (this._readableState.decoder = decoder), (this._readableState.encoding = this._readableState.decoder.encoding);
                    for (var p = this._readableState.buffer.head, content = ""; null !== p; ) (content += decoder.write(p.data)), (p = p.next);
                    return this._readableState.buffer.clear(), "" !== content && this._readableState.buffer.push(content), (this._readableState.length = content.length), this;
                }),
                (Readable.prototype.read = function (n) {
                    debug("read", n), (n = parseInt(n, 10));
                    var ret,
                        state = this._readableState,
                        nOrig = n;
                    if ((0 !== n && (state.emittedReadable = !1), 0 === n && state.needReadable && ((0 !== state.highWaterMark ? state.length >= state.highWaterMark : state.length > 0) || state.ended)))
                        return debug("read: emitReadable", state.length, state.ended), 0 === state.length && state.ended ? endReadable(this) : emitReadable(this), null;
                    if (0 === (n = howMuchToRead(n, state)) && state.ended) return 0 === state.length && endReadable(this), null;
                    var doRead = state.needReadable;
                    return (
                        debug("need readable", doRead),
                        (0 === state.length || state.length - n < state.highWaterMark) && debug("length less than watermark", (doRead = !0)),
                        state.ended || state.reading
                            ? debug("reading or ended", (doRead = !1))
                            : doRead &&
                              (debug("do read"),
                              (state.reading = !0),
                              (state.sync = !0),
                              0 === state.length && (state.needReadable = !0),
                              this._read(state.highWaterMark),
                              (state.sync = !1),
                              state.reading || (n = howMuchToRead(nOrig, state))),
                        null === (ret = n > 0 ? fromList(n, state) : null) ? ((state.needReadable = state.length <= state.highWaterMark), (n = 0)) : ((state.length -= n), (state.awaitDrain = 0)),
                        0 === state.length && (state.ended || (state.needReadable = !0), nOrig !== n && state.ended && endReadable(this)),
                        null !== ret && this.emit("data", ret),
                        ret
                    );
                }),
                (Readable.prototype._read = function (n) {
                    errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED("_read()"));
                }),
                (Readable.prototype.pipe = function (dest, pipeOpts) {
                    var src = this,
                        state = this._readableState;
                    switch (state.pipesCount) {
                        case 0:
                            state.pipes = dest;
                            break;
                        case 1:
                            state.pipes = [state.pipes, dest];
                            break;
                        default:
                            state.pipes.push(dest);
                    }
                    (state.pipesCount += 1), debug("pipe count=%d opts=%j", state.pipesCount, pipeOpts);
                    var endFn = (pipeOpts && !1 === pipeOpts.end) || dest === process.stdout || dest === process.stderr ? unpipe : onend;
                    function onend() {
                        debug("onend"), dest.end();
                    }
                    state.endEmitted ? process.nextTick(endFn) : src.once("end", endFn),
                        dest.on("unpipe", function onunpipe(readable, unpipeInfo) {
                            debug("onunpipe"),
                                readable === src &&
                                    unpipeInfo &&
                                    !1 === unpipeInfo.hasUnpiped &&
                                    ((unpipeInfo.hasUnpiped = !0),
                                    debug("cleanup"),
                                    dest.removeListener("close", onclose),
                                    dest.removeListener("finish", onfinish),
                                    dest.removeListener("drain", ondrain),
                                    dest.removeListener("error", onerror),
                                    dest.removeListener("unpipe", onunpipe),
                                    src.removeListener("end", onend),
                                    src.removeListener("end", unpipe),
                                    src.removeListener("data", ondata),
                                    (cleanedUp = !0),
                                    state.awaitDrain && (!dest._writableState || dest._writableState.needDrain) && ondrain());
                        });
                    var ondrain = function () {
                        var state = src._readableState;
                        debug("pipeOnDrain", state.awaitDrain), state.awaitDrain && state.awaitDrain--, 0 === state.awaitDrain && EElistenerCount(src, "data") && ((state.flowing = !0), flow(src));
                    };
                    dest.on("drain", ondrain);
                    var cleanedUp = !1;
                    function ondata(chunk) {
                        debug("ondata");
                        var ret = dest.write(chunk);
                        debug("dest.write", ret),
                            !1 === ret &&
                                (((1 === state.pipesCount && state.pipes === dest) || (state.pipesCount > 1 && -1 !== indexOf(state.pipes, dest))) &&
                                    !cleanedUp &&
                                    (debug("false write response, pause", state.awaitDrain), state.awaitDrain++),
                                src.pause());
                    }
                    function onerror(er) {
                        debug("onerror", er), unpipe(), dest.removeListener("error", onerror), 0 === EElistenerCount(dest, "error") && errorOrDestroy(dest, er);
                    }
                    function onclose() {
                        dest.removeListener("finish", onfinish), unpipe();
                    }
                    function onfinish() {
                        debug("onfinish"), dest.removeListener("close", onclose), unpipe();
                    }
                    function unpipe() {
                        debug("unpipe"), src.unpipe(dest);
                    }
                    return (
                        src.on("data", ondata),
                        (function (emitter, event, fn) {
                            if ("function" == typeof emitter.prependListener) return emitter.prependListener(event, fn);
                            emitter._events && emitter._events[event] ? (Array.isArray(emitter._events[event]) ? emitter._events[event].unshift(fn) : (emitter._events[event] = [fn, emitter._events[event]])) : emitter.on(event, fn);
                        })(dest, "error", onerror),
                        dest.once("close", onclose),
                        dest.once("finish", onfinish),
                        dest.emit("pipe", src),
                        state.flowing || (debug("pipe resume"), src.resume()),
                        dest
                    );
                }),
                (Readable.prototype.unpipe = function (dest) {
                    var state = this._readableState,
                        unpipeInfo = { hasUnpiped: !1 };
                    if (0 === state.pipesCount) return this;
                    if (1 === state.pipesCount)
                        return (dest && dest !== state.pipes) || (dest || (dest = state.pipes), (state.pipes = null), (state.pipesCount = 0), (state.flowing = !1), dest && dest.emit("unpipe", this, unpipeInfo)), this;
                    if (!dest) {
                        var dests = state.pipes,
                            len = state.pipesCount;
                        (state.pipes = null), (state.pipesCount = 0), (state.flowing = !1);
                        for (var i = 0; i < len; i++) dests[i].emit("unpipe", this, { hasUnpiped: !1 });
                        return this;
                    }
                    var index = indexOf(state.pipes, dest);
                    return -1 === index || (state.pipes.splice(index, 1), (state.pipesCount -= 1), 1 === state.pipesCount && (state.pipes = state.pipes[0]), dest.emit("unpipe", this, unpipeInfo)), this;
                }),
                (Readable.prototype.on = function (ev, fn) {
                    var res = Stream.prototype.on.call(this, ev, fn),
                        state = this._readableState;
                    return (
                        "data" === ev
                            ? ((state.readableListening = this.listenerCount("readable") > 0), !1 !== state.flowing && this.resume())
                            : "readable" !== ev ||
                              state.endEmitted ||
                              state.readableListening ||
                              ((state.readableListening = state.needReadable = !0),
                              (state.flowing = !1),
                              (state.emittedReadable = !1),
                              debug("on readable", state.length, state.reading),
                              state.length ? emitReadable(this) : state.reading || process.nextTick(nReadingNextTick, this)),
                        res
                    );
                }),
                (Readable.prototype.addListener = Readable.prototype.on),
                (Readable.prototype.removeListener = function (ev, fn) {
                    var res = Stream.prototype.removeListener.call(this, ev, fn);
                    return "readable" === ev && process.nextTick(updateReadableListening, this), res;
                }),
                (Readable.prototype.removeAllListeners = function (ev) {
                    var res = Stream.prototype.removeAllListeners.apply(this, arguments);
                    return ("readable" === ev || void 0 === ev) && process.nextTick(updateReadableListening, this), res;
                }),
                (Readable.prototype.resume = function () {
                    var state,
                        state1 = this._readableState;
                    return (
                        state1.flowing || (debug("resume"), (state1.flowing = !state1.readableListening), (state = state1).resumeScheduled || ((state.resumeScheduled = !0), process.nextTick(resume_, this, state))),
                        (state1.paused = !1),
                        this
                    );
                }),
                (Readable.prototype.pause = function () {
                    return debug("call pause flowing=%j", this._readableState.flowing), !1 !== this._readableState.flowing && (debug("pause"), (this._readableState.flowing = !1), this.emit("pause")), (this._readableState.paused = !0), this;
                }),
                (Readable.prototype.wrap = function (stream) {
                    var _this = this,
                        state = this._readableState,
                        paused = !1;
                    for (var i in (stream.on("end", function () {
                        if ((debug("wrapped end"), state.decoder && !state.ended)) {
                            var chunk = state.decoder.end();
                            chunk && chunk.length && _this.push(chunk);
                        }
                        _this.push(null);
                    }),
                    stream.on("data", function (chunk) {
                        debug("wrapped data"),
                            state.decoder && (chunk = state.decoder.write(chunk)),
                            (!state.objectMode || null != chunk) && (state.objectMode || (chunk && chunk.length)) && (_this.push(chunk) || ((paused = !0), stream.pause()));
                    }),
                    stream))
                        void 0 === this[i] &&
                            "function" == typeof stream[i] &&
                            (this[i] = (function (method) {
                                return function () {
                                    return stream[method].apply(stream, arguments);
                                };
                            })(i));
                    for (var n = 0; n < kProxyEvents.length; n++) stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
                    return (
                        (this._read = function (n) {
                            debug("wrapped _read", n), paused && ((paused = !1), stream.resume());
                        }),
                        this
                    );
                }),
                "function" == typeof Symbol &&
                    (Readable.prototype[Symbol.asyncIterator] = function () {
                        return void 0 === createReadableStreamAsyncIterator && (createReadableStreamAsyncIterator = __webpack_require__(13471)), createReadableStreamAsyncIterator(this);
                    }),
                Object.defineProperty(Readable.prototype, "readableHighWaterMark", {
                    enumerable: !1,
                    get: function () {
                        return this._readableState.highWaterMark;
                    },
                }),
                Object.defineProperty(Readable.prototype, "readableBuffer", {
                    enumerable: !1,
                    get: function () {
                        return this._readableState && this._readableState.buffer;
                    },
                }),
                Object.defineProperty(Readable.prototype, "readableFlowing", {
                    enumerable: !1,
                    get: function () {
                        return this._readableState.flowing;
                    },
                    set: function (state) {
                        this._readableState && (this._readableState.flowing = state);
                    },
                }),
                (Readable._fromList = fromList),
                Object.defineProperty(Readable.prototype, "readableLength", {
                    enumerable: !1,
                    get: function () {
                        return this._readableState.length;
                    },
                }),
                "function" == typeof Symbol &&
                    (Readable.from = function (iterable, opts) {
                        return void 0 === from && (from = __webpack_require__(96435)), from(Readable, iterable, opts);
                    });
        },
        96311: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            module.exports = Transform;
            var _require$codes = __webpack_require__(97630).q,
                ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
                ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
                ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,
                ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0,
                Duplex = __webpack_require__(37735);
            function afterTransform(er, data) {
                var ts = this._transformState;
                ts.transforming = !1;
                var cb = ts.writecb;
                if (null === cb) return this.emit("error", new ERR_MULTIPLE_CALLBACK());
                (ts.writechunk = null), (ts.writecb = null), null != data && this.push(data), cb(er);
                var rs = this._readableState;
                (rs.reading = !1), (rs.needReadable || rs.length < rs.highWaterMark) && this._read(rs.highWaterMark);
            }
            function Transform(options) {
                if (!(this instanceof Transform)) return new Transform(options);
                Duplex.call(this, options),
                    (this._transformState = { afterTransform: afterTransform.bind(this), needTransform: !1, transforming: !1, writecb: null, writechunk: null, writeencoding: null }),
                    (this._readableState.needReadable = !0),
                    (this._readableState.sync = !1),
                    options && ("function" == typeof options.transform && (this._transform = options.transform), "function" == typeof options.flush && (this._flush = options.flush)),
                    this.on("prefinish", prefinish);
            }
            function prefinish() {
                var _this = this;
                "function" != typeof this._flush || this._readableState.destroyed
                    ? done(this, null, null)
                    : this._flush(function (er, data) {
                          done(_this, er, data);
                      });
            }
            function done(stream, er, data) {
                if (er) return stream.emit("error", er);
                if ((null != data && stream.push(data), stream._writableState.length)) throw new ERR_TRANSFORM_WITH_LENGTH_0();
                if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
                return stream.push(null);
            }
            __webpack_require__(35717)(Transform, Duplex),
                (Transform.prototype.push = function (chunk, encoding) {
                    return (this._transformState.needTransform = !1), Duplex.prototype.push.call(this, chunk, encoding);
                }),
                (Transform.prototype._transform = function (chunk, encoding, cb) {
                    cb(new ERR_METHOD_NOT_IMPLEMENTED("_transform()"));
                }),
                (Transform.prototype._write = function (chunk, encoding, cb) {
                    var ts = this._transformState;
                    if (((ts.writecb = cb), (ts.writechunk = chunk), (ts.writeencoding = encoding), !ts.transforming)) {
                        var rs = this._readableState;
                        (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) && this._read(rs.highWaterMark);
                    }
                }),
                (Transform.prototype._read = function (n) {
                    var ts = this._transformState;
                    null === ts.writechunk || ts.transforming ? (ts.needTransform = !0) : ((ts.transforming = !0), this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform));
                }),
                (Transform.prototype._destroy = function (err, cb) {
                    Duplex.prototype._destroy.call(this, err, function (err2) {
                        cb(err2);
                    });
                });
        },
        69843: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var Duplex,
                realHasInstance,
                process = __webpack_require__(34155);
            function CorkedRequest(state) {
                var _this = this;
                (this.next = null),
                    (this.entry = null),
                    (this.finish = function () {
                        (function (corkReq, state, err) {
                            var entry = corkReq.entry;
                            for (corkReq.entry = null; entry; ) {
                                var cb = entry.callback;
                                state.pendingcb--, cb(void 0), (entry = entry.next);
                            }
                            state.corkedRequestsFree.next = corkReq;
                        })(_this, state);
                    });
            }
            (module.exports = Writable), (Writable.WritableState = WritableState);
            var internalUtil = { deprecate: __webpack_require__(94927) },
                Stream = __webpack_require__(89868),
                Buffer = __webpack_require__(48764).Buffer,
                OurUint8Array = __webpack_require__.g.Uint8Array || function () {},
                destroyImpl = __webpack_require__(73505),
                getHighWaterMark = __webpack_require__(65482).getHighWaterMark,
                _require$codes = __webpack_require__(97630).q,
                ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
                ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
                ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
                ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,
                ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,
                ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,
                ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,
                ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING,
                errorOrDestroy = destroyImpl.errorOrDestroy;
            function nop() {}
            function WritableState(options, stream, isDuplex) {
                (Duplex = Duplex || __webpack_require__(37735)),
                    (options = options || {}),
                    "boolean" != typeof isDuplex && (isDuplex = stream instanceof Duplex),
                    (this.objectMode = !!options.objectMode),
                    isDuplex && (this.objectMode = this.objectMode || !!options.writableObjectMode),
                    (this.highWaterMark = getHighWaterMark(this, options, "writableHighWaterMark", isDuplex)),
                    (this.finalCalled = !1),
                    (this.needDrain = !1),
                    (this.ending = !1),
                    (this.ended = !1),
                    (this.finished = !1),
                    (this.destroyed = !1);
                var noDecode = !1 === options.decodeStrings;
                (this.decodeStrings = !noDecode),
                    (this.defaultEncoding = options.defaultEncoding || "utf8"),
                    (this.length = 0),
                    (this.writing = !1),
                    (this.corked = 0),
                    (this.sync = !0),
                    (this.bufferProcessing = !1),
                    (this.onwrite = function (er) {
                        (function (stream, er) {
                            var state,
                                stream1,
                                state1 = stream._writableState,
                                sync = state1.sync,
                                cb = state1.writecb;
                            if ("function" != typeof cb) throw new ERR_MULTIPLE_CALLBACK();
                            if ((((state = state1).writing = !1), (state.writecb = null), (state.length -= state.writelen), (state.writelen = 0), er))
                                (stream1 = stream),
                                    --state1.pendingcb,
                                    sync
                                        ? (process.nextTick(cb, er), process.nextTick(finishMaybe, stream1, state1), (stream1._writableState.errorEmitted = !0), errorOrDestroy(stream1, er))
                                        : (cb(er), (stream1._writableState.errorEmitted = !0), errorOrDestroy(stream1, er), finishMaybe(stream1, state1));
                            else {
                                var finished = needFinish(state1) || stream.destroyed;
                                finished || state1.corked || state1.bufferProcessing || !state1.bufferedRequest || clearBuffer(stream, state1),
                                    sync ? process.nextTick(afterWrite, stream, state1, finished, cb) : afterWrite(stream, state1, finished, cb);
                            }
                        })(stream, er);
                    }),
                    (this.writecb = null),
                    (this.writelen = 0),
                    (this.bufferedRequest = null),
                    (this.lastBufferedRequest = null),
                    (this.pendingcb = 0),
                    (this.prefinished = !1),
                    (this.errorEmitted = !1),
                    (this.emitClose = !1 !== options.emitClose),
                    (this.autoDestroy = !!options.autoDestroy),
                    (this.bufferedRequestCount = 0),
                    (this.corkedRequestsFree = new CorkedRequest(this));
            }
            function Writable(options) {
                var isDuplex = this instanceof (Duplex = Duplex || __webpack_require__(37735));
                if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);
                (this._writableState = new WritableState(options, this, isDuplex)),
                    (this.writable = !0),
                    options &&
                        ("function" == typeof options.write && (this._write = options.write),
                        "function" == typeof options.writev && (this._writev = options.writev),
                        "function" == typeof options.destroy && (this._destroy = options.destroy),
                        "function" == typeof options.final && (this._final = options.final)),
                    Stream.call(this);
            }
            function doWrite(stream, state, writev, len, chunk, encoding, cb) {
                (state.writelen = len),
                    (state.writecb = cb),
                    (state.writing = !0),
                    (state.sync = !0),
                    state.destroyed ? state.onwrite(new ERR_STREAM_DESTROYED("write")) : writev ? stream._writev(chunk, state.onwrite) : stream._write(chunk, encoding, state.onwrite),
                    (state.sync = !1);
            }
            function afterWrite(stream, state, finished, cb) {
                var state1;
                finished || (0 === (state1 = state).length && state1.needDrain && ((state1.needDrain = !1), stream.emit("drain"))), state.pendingcb--, cb(), finishMaybe(stream, state);
            }
            function clearBuffer(stream, state) {
                state.bufferProcessing = !0;
                var entry = state.bufferedRequest;
                if (stream._writev && entry && entry.next) {
                    var buffer = Array(state.bufferedRequestCount),
                        holder = state.corkedRequestsFree;
                    holder.entry = entry;
                    for (var count = 0, allBuffers = !0; entry; ) (buffer[count] = entry), entry.isBuf || (allBuffers = !1), (entry = entry.next), (count += 1);
                    (buffer.allBuffers = allBuffers),
                        doWrite(stream, state, !0, state.length, buffer, "", holder.finish),
                        state.pendingcb++,
                        (state.lastBufferedRequest = null),
                        holder.next ? ((state.corkedRequestsFree = holder.next), (holder.next = null)) : (state.corkedRequestsFree = new CorkedRequest(state)),
                        (state.bufferedRequestCount = 0);
                } else {
                    for (; entry; ) {
                        var chunk = entry.chunk,
                            encoding = entry.encoding,
                            cb = entry.callback,
                            len = state.objectMode ? 1 : chunk.length;
                        if ((doWrite(stream, state, !1, len, chunk, encoding, cb), (entry = entry.next), state.bufferedRequestCount--, state.writing)) break;
                    }
                    null === entry && (state.lastBufferedRequest = null);
                }
                (state.bufferedRequest = entry), (state.bufferProcessing = !1);
            }
            function needFinish(state) {
                return state.ending && 0 === state.length && null === state.bufferedRequest && !state.finished && !state.writing;
            }
            function callFinal(stream, state) {
                stream._final(function (err) {
                    state.pendingcb--, err && errorOrDestroy(stream, err), (state.prefinished = !0), stream.emit("prefinish"), finishMaybe(stream, state);
                });
            }
            function finishMaybe(stream, state) {
                var state1,
                    need = needFinish(state);
                if (
                    need &&
                    ((state1 = state).prefinished ||
                        state1.finalCalled ||
                        ("function" != typeof stream._final || state1.destroyed ? ((state1.prefinished = !0), stream.emit("prefinish")) : (state1.pendingcb++, (state1.finalCalled = !0), process.nextTick(callFinal, stream, state1))),
                    0 === state.pendingcb && ((state.finished = !0), stream.emit("finish"), state.autoDestroy))
                ) {
                    var rState = stream._readableState;
                    (!rState || (rState.autoDestroy && rState.endEmitted)) && stream.destroy();
                }
                return need;
            }
            __webpack_require__(35717)(Writable, Stream),
                (WritableState.prototype.getBuffer = function () {
                    for (var current = this.bufferedRequest, out = []; current; ) out.push(current), (current = current.next);
                    return out;
                }),
                (function () {
                    try {
                        Object.defineProperty(WritableState.prototype, "buffer", {
                            get: internalUtil.deprecate(
                                function () {
                                    return this.getBuffer();
                                },
                                "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.",
                                "DEP0003"
                            ),
                        });
                    } catch (_) {}
                })(),
                "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance]
                    ? ((realHasInstance = Function.prototype[Symbol.hasInstance]),
                      Object.defineProperty(Writable, Symbol.hasInstance, {
                          value: function (object) {
                              return !!realHasInstance.call(this, object) || (this === Writable && object && object._writableState instanceof WritableState);
                          },
                      }))
                    : (realHasInstance = function (object) {
                          return object instanceof this;
                      }),
                (Writable.prototype.pipe = function () {
                    errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
                }),
                (Writable.prototype.write = function (chunk, encoding, cb) {
                    var obj,
                        chunk1,
                        cb1,
                        er,
                        chunk2,
                        cb2,
                        er1,
                        state = this._writableState,
                        ret = !1,
                        isBuf = !state.objectMode && ((obj = chunk), Buffer.isBuffer(obj) || obj instanceof OurUint8Array);
                    return (
                        isBuf && !Buffer.isBuffer(chunk) && ((chunk1 = chunk), (chunk = Buffer.from(chunk1))),
                        ("function" == typeof encoding && ((cb = encoding), (encoding = null)), isBuf ? (encoding = "buffer") : encoding || (encoding = state.defaultEncoding), "function" != typeof cb && (cb = nop), state.ending)
                            ? ((cb1 = cb), errorOrDestroy(this, (er = new ERR_STREAM_WRITE_AFTER_END())), process.nextTick(cb1, er))
                            : (isBuf ||
                                  ((chunk2 = chunk),
                                  (cb2 = cb),
                                  null === chunk2 ? (er1 = new ERR_STREAM_NULL_VALUES()) : "string" == typeof chunk2 || state.objectMode || (er1 = new ERR_INVALID_ARG_TYPE("chunk", ["string", "Buffer"], chunk2)),
                                  !er1 || (errorOrDestroy(this, er1), process.nextTick(cb2, er1), 0))) &&
                              (state.pendingcb++,
                              (ret = (function (stream, state, isBuf, chunk, encoding, cb) {
                                  if (!isBuf) {
                                      var chunk1,
                                          encoding1,
                                          newChunk = ((chunk1 = chunk), (encoding1 = encoding), state.objectMode || !1 === state.decodeStrings || "string" != typeof chunk1 || (chunk1 = Buffer.from(chunk1, encoding1)), chunk1);
                                      chunk !== newChunk && ((isBuf = !0), (encoding = "buffer"), (chunk = newChunk));
                                  }
                                  var len = state.objectMode ? 1 : chunk.length;
                                  state.length += len;
                                  var ret = state.length < state.highWaterMark;
                                  if ((ret || (state.needDrain = !0), state.writing || state.corked)) {
                                      var last = state.lastBufferedRequest;
                                      (state.lastBufferedRequest = { chunk: chunk, encoding: encoding, isBuf: isBuf, callback: cb, next: null }),
                                          last ? (last.next = state.lastBufferedRequest) : (state.bufferedRequest = state.lastBufferedRequest),
                                          (state.bufferedRequestCount += 1);
                                  } else doWrite(stream, state, !1, len, chunk, encoding, cb);
                                  return ret;
                              })(this, state, isBuf, chunk, encoding, cb))),
                        ret
                    );
                }),
                (Writable.prototype.cork = function () {
                    this._writableState.corked++;
                }),
                (Writable.prototype.uncork = function () {
                    var state = this._writableState;
                    !state.corked || (state.corked--, state.writing || state.corked || state.bufferProcessing || !state.bufferedRequest || clearBuffer(this, state));
                }),
                (Writable.prototype.setDefaultEncoding = function (encoding) {
                    if (
                        ("string" == typeof encoding && (encoding = encoding.toLowerCase()),
                        !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((encoding + "").toLowerCase()) > -1))
                    )
                        throw new ERR_UNKNOWN_ENCODING(encoding);
                    return (this._writableState.defaultEncoding = encoding), this;
                }),
                Object.defineProperty(Writable.prototype, "writableBuffer", {
                    enumerable: !1,
                    get: function () {
                        return this._writableState && this._writableState.getBuffer();
                    },
                }),
                Object.defineProperty(Writable.prototype, "writableHighWaterMark", {
                    enumerable: !1,
                    get: function () {
                        return this._writableState.highWaterMark;
                    },
                }),
                (Writable.prototype._write = function (chunk, encoding, cb) {
                    cb(new ERR_METHOD_NOT_IMPLEMENTED("_write()"));
                }),
                (Writable.prototype._writev = null),
                (Writable.prototype.end = function (chunk, encoding, cb) {
                    var stream,
                        state,
                        cb1,
                        state1 = this._writableState;
                    return (
                        "function" == typeof chunk ? ((cb = chunk), (chunk = null), (encoding = null)) : "function" == typeof encoding && ((cb = encoding), (encoding = null)),
                        null != chunk && this.write(chunk, encoding),
                        state1.corked && ((state1.corked = 1), this.uncork()),
                        state1.ending ||
                            ((stream = this),
                            (state = state1),
                            (cb1 = cb),
                            (state.ending = !0),
                            finishMaybe(stream, state),
                            cb1 && (state.finished ? process.nextTick(cb1) : stream.once("finish", cb1)),
                            (state.ended = !0),
                            (stream.writable = !1)),
                        this
                    );
                }),
                Object.defineProperty(Writable.prototype, "writableLength", {
                    enumerable: !1,
                    get: function () {
                        return this._writableState.length;
                    },
                }),
                Object.defineProperty(Writable.prototype, "destroyed", {
                    enumerable: !1,
                    get: function () {
                        return void 0 !== this._writableState && this._writableState.destroyed;
                    },
                    set: function (value) {
                        this._writableState && (this._writableState.destroyed = value);
                    },
                }),
                (Writable.prototype.destroy = destroyImpl.destroy),
                (Writable.prototype._undestroy = destroyImpl.undestroy),
                (Writable.prototype._destroy = function (err, cb) {
                    cb(err);
                });
        },
        13471: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var _Object$setPrototypeO,
                process = __webpack_require__(34155);
            function _defineProperty(obj, key, value) {
                return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : (obj[key] = value), obj;
            }
            var finished = __webpack_require__(48186),
                kLastResolve = Symbol("lastResolve"),
                kLastReject = Symbol("lastReject"),
                kError = Symbol("error"),
                kEnded = Symbol("ended"),
                kLastPromise = Symbol("lastPromise"),
                kHandlePromise = Symbol("handlePromise"),
                kStream = Symbol("stream");
            function createIterResult(value, done) {
                return { value: value, done: done };
            }
            function readAndResolve(iter) {
                var resolve = iter[kLastResolve];
                if (null !== resolve) {
                    var data = iter[kStream].read();
                    null !== data && ((iter[kLastPromise] = null), (iter[kLastResolve] = null), (iter[kLastReject] = null), resolve(createIterResult(data, !1)));
                }
            }
            function onReadable(iter) {
                process.nextTick(readAndResolve, iter);
            }
            var AsyncIteratorPrototype = Object.getPrototypeOf(function () {}),
                ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf(
                    (_defineProperty(
                        (_Object$setPrototypeO = {
                            get stream() {
                                return this[kStream];
                            },
                            next: function () {
                                var iter,
                                    promise,
                                    _this = this,
                                    error = this[kError];
                                if (null !== error) return Promise.reject(error);
                                if (this[kEnded]) return Promise.resolve(createIterResult(void 0, !0));
                                if (this[kStream].destroyed)
                                    return new Promise(function (resolve, reject) {
                                        process.nextTick(function () {
                                            _this[kError] ? reject(_this[kError]) : resolve(createIterResult(void 0, !0));
                                        });
                                    });
                                var lastPromise = this[kLastPromise];
                                if (lastPromise)
                                    promise = new Promise(
                                        ((iter = this),
                                        function (resolve, reject) {
                                            lastPromise.then(function () {
                                                if (iter[kEnded]) {
                                                    resolve(createIterResult(void 0, !0));
                                                    return;
                                                }
                                                iter[kHandlePromise](resolve, reject);
                                            }, reject);
                                        })
                                    );
                                else {
                                    var data = this[kStream].read();
                                    if (null !== data) return Promise.resolve(createIterResult(data, !1));
                                    promise = new Promise(this[kHandlePromise]);
                                }
                                return (this[kLastPromise] = promise), promise;
                            },
                        }),
                        Symbol.asyncIterator,
                        function () {
                            return this;
                        }
                    ),
                    _defineProperty(_Object$setPrototypeO, "return", function () {
                        var _this2 = this;
                        return new Promise(function (resolve, reject) {
                            _this2[kStream].destroy(null, function (err) {
                                if (err) {
                                    reject(err);
                                    return;
                                }
                                resolve(createIterResult(void 0, !0));
                            });
                        });
                    }),
                    _Object$setPrototypeO),
                    AsyncIteratorPrototype
                );
            module.exports = function (stream) {
                var _Object$create,
                    iterator = Object.create(
                        ReadableStreamAsyncIteratorPrototype,
                        (_defineProperty((_Object$create = {}), kStream, { value: stream, writable: !0 }),
                        _defineProperty(_Object$create, kLastResolve, { value: null, writable: !0 }),
                        _defineProperty(_Object$create, kLastReject, { value: null, writable: !0 }),
                        _defineProperty(_Object$create, kError, { value: null, writable: !0 }),
                        _defineProperty(_Object$create, kEnded, { value: stream._readableState.endEmitted, writable: !0 }),
                        _defineProperty(_Object$create, kHandlePromise, {
                            value: function (resolve, reject) {
                                var data = iterator[kStream].read();
                                data
                                    ? ((iterator[kLastPromise] = null), (iterator[kLastResolve] = null), (iterator[kLastReject] = null), resolve(createIterResult(data, !1)))
                                    : ((iterator[kLastResolve] = resolve), (iterator[kLastReject] = reject));
                            },
                            writable: !0,
                        }),
                        _Object$create)
                    );
                return (
                    (iterator[kLastPromise] = null),
                    finished(stream, function (err) {
                        if (err && "ERR_STREAM_PREMATURE_CLOSE" !== err.code) {
                            var reject = iterator[kLastReject];
                            null !== reject && ((iterator[kLastPromise] = null), (iterator[kLastResolve] = null), (iterator[kLastReject] = null), reject(err)), (iterator[kError] = err);
                            return;
                        }
                        var resolve = iterator[kLastResolve];
                        null !== resolve && ((iterator[kLastPromise] = null), (iterator[kLastResolve] = null), (iterator[kLastReject] = null), resolve(createIterResult(void 0, !0))), (iterator[kEnded] = !0);
                    }),
                    stream.on("readable", onReadable.bind(null, iterator)),
                    iterator
                );
            };
        },
        30070: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            function ownKeys(object, enumerableOnly) {
                var keys = Object.keys(object);
                if (Object.getOwnPropertySymbols) {
                    var symbols = Object.getOwnPropertySymbols(object);
                    enumerableOnly &&
                        (symbols = symbols.filter(function (sym) {
                            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
                        })),
                        keys.push.apply(keys, symbols);
                }
                return keys;
            }
            function _defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    (descriptor.enumerable = descriptor.enumerable || !1), (descriptor.configurable = !0), "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            var Buffer = __webpack_require__(48764).Buffer,
                inspect = __webpack_require__(29120).inspect,
                custom = (inspect && inspect.custom) || "inspect";
            module.exports = (function () {
                var protoProps, staticProps;
                function BufferList() {
                    !(function (instance, Constructor) {
                        if (!(instance instanceof Constructor)) throw TypeError("Cannot call a class as a function");
                    })(this, BufferList),
                        (this.head = null),
                        (this.tail = null),
                        (this.length = 0);
                }
                return (
                    (protoProps = [
                        {
                            key: "push",
                            value: function (v) {
                                var entry = { data: v, next: null };
                                this.length > 0 ? (this.tail.next = entry) : (this.head = entry), (this.tail = entry), ++this.length;
                            },
                        },
                        {
                            key: "unshift",
                            value: function (v) {
                                var entry = { data: v, next: this.head };
                                0 === this.length && (this.tail = entry), (this.head = entry), ++this.length;
                            },
                        },
                        {
                            key: "shift",
                            value: function () {
                                if (0 !== this.length) {
                                    var ret = this.head.data;
                                    return 1 === this.length ? (this.head = this.tail = null) : (this.head = this.head.next), --this.length, ret;
                                }
                            },
                        },
                        {
                            key: "clear",
                            value: function () {
                                (this.head = this.tail = null), (this.length = 0);
                            },
                        },
                        {
                            key: "join",
                            value: function (s) {
                                if (0 === this.length) return "";
                                for (var p = this.head, ret = "" + p.data; (p = p.next); ) ret += s + p.data;
                                return ret;
                            },
                        },
                        {
                            key: "concat",
                            value: function (n) {
                                if (0 === this.length) return Buffer.alloc(0);
                                for (var src, offset, ret = Buffer.allocUnsafe(n >>> 0), p = this.head, i = 0; p; ) (src = p.data), (offset = i), Buffer.prototype.copy.call(src, ret, offset), (i += p.data.length), (p = p.next);
                                return ret;
                            },
                        },
                        {
                            key: "consume",
                            value: function (n, hasStrings) {
                                var ret;
                                return (
                                    n < this.head.data.length
                                        ? ((ret = this.head.data.slice(0, n)), (this.head.data = this.head.data.slice(n)))
                                        : (ret = n === this.head.data.length ? this.shift() : hasStrings ? this._getString(n) : this._getBuffer(n)),
                                    ret
                                );
                            },
                        },
                        {
                            key: "first",
                            value: function () {
                                return this.head.data;
                            },
                        },
                        {
                            key: "_getString",
                            value: function (n) {
                                var p = this.head,
                                    c = 1,
                                    ret = p.data;
                                for (n -= ret.length; (p = p.next); ) {
                                    var str = p.data,
                                        nb = n > str.length ? str.length : n;
                                    if ((nb === str.length ? (ret += str) : (ret += str.slice(0, n)), 0 == (n -= nb))) {
                                        nb === str.length ? (++c, p.next ? (this.head = p.next) : (this.head = this.tail = null)) : ((this.head = p), (p.data = str.slice(nb)));
                                        break;
                                    }
                                    ++c;
                                }
                                return (this.length -= c), ret;
                            },
                        },
                        {
                            key: "_getBuffer",
                            value: function (n) {
                                var ret = Buffer.allocUnsafe(n),
                                    p = this.head,
                                    c = 1;
                                for (p.data.copy(ret), n -= p.data.length; (p = p.next); ) {
                                    var buf = p.data,
                                        nb = n > buf.length ? buf.length : n;
                                    if ((buf.copy(ret, ret.length - n, 0, nb), 0 == (n -= nb))) {
                                        nb === buf.length ? (++c, p.next ? (this.head = p.next) : (this.head = this.tail = null)) : ((this.head = p), (p.data = buf.slice(nb)));
                                        break;
                                    }
                                    ++c;
                                }
                                return (this.length -= c), ret;
                            },
                        },
                        {
                            key: custom,
                            value: function (_, options) {
                                return inspect(
                                    this,
                                    (function (target) {
                                        for (var i = 1; i < arguments.length; i++) {
                                            var source = null != arguments[i] ? arguments[i] : {};
                                            i % 2
                                                ? ownKeys(Object(source), !0).forEach(function (key) {
                                                      var obj, value;
                                                      (obj = target), (value = source[key]), key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : (obj[key] = value);
                                                  })
                                                : Object.getOwnPropertyDescriptors
                                                ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source))
                                                : ownKeys(Object(source)).forEach(function (key) {
                                                      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
                                                  });
                                        }
                                        return target;
                                    })({}, options, { depth: 0, customInspect: !1 })
                                );
                            },
                        },
                    ]),
                    _defineProperties(BufferList.prototype, protoProps),
                    staticProps && _defineProperties(BufferList, staticProps),
                    BufferList
                );
            })();
        },
        73505: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var process = __webpack_require__(34155);
            function emitErrorAndCloseNT(self1, err) {
                emitErrorNT(self1, err), emitCloseNT(self1);
            }
            function emitCloseNT(self1) {
                (!self1._writableState || self1._writableState.emitClose) && (!self1._readableState || self1._readableState.emitClose) && self1.emit("close");
            }
            function emitErrorNT(self1, err) {
                self1.emit("error", err);
            }
            module.exports = {
                destroy: function (err, cb) {
                    var _this = this,
                        readableDestroyed = this._readableState && this._readableState.destroyed,
                        writableDestroyed = this._writableState && this._writableState.destroyed;
                    return readableDestroyed || writableDestroyed
                        ? (cb ? cb(err) : err && (this._writableState ? this._writableState.errorEmitted || ((this._writableState.errorEmitted = !0), process.nextTick(emitErrorNT, this, err)) : process.nextTick(emitErrorNT, this, err)),
                          this)
                        : (this._readableState && (this._readableState.destroyed = !0),
                          this._writableState && (this._writableState.destroyed = !0),
                          this._destroy(err || null, function (err) {
                              !cb && err
                                  ? _this._writableState
                                      ? _this._writableState.errorEmitted
                                          ? process.nextTick(emitCloseNT, _this)
                                          : ((_this._writableState.errorEmitted = !0), process.nextTick(emitErrorAndCloseNT, _this, err))
                                      : process.nextTick(emitErrorAndCloseNT, _this, err)
                                  : cb
                                  ? (process.nextTick(emitCloseNT, _this), cb(err))
                                  : process.nextTick(emitCloseNT, _this);
                          }),
                          this);
                },
                undestroy: function () {
                    this._readableState && ((this._readableState.destroyed = !1), (this._readableState.reading = !1), (this._readableState.ended = !1), (this._readableState.endEmitted = !1)),
                        this._writableState &&
                            ((this._writableState.destroyed = !1),
                            (this._writableState.ended = !1),
                            (this._writableState.ending = !1),
                            (this._writableState.finalCalled = !1),
                            (this._writableState.prefinished = !1),
                            (this._writableState.finished = !1),
                            (this._writableState.errorEmitted = !1));
                },
                errorOrDestroy: function (stream, err) {
                    var rState = stream._readableState,
                        wState = stream._writableState;
                    (rState && rState.autoDestroy) || (wState && wState.autoDestroy) ? stream.destroy(err) : stream.emit("error", err);
                },
            };
        },
        48186: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var ERR_STREAM_PREMATURE_CLOSE = __webpack_require__(97630).q.ERR_STREAM_PREMATURE_CLOSE;
            function noop() {}
            module.exports = function eos(stream, opts, callback) {
                if ("function" == typeof opts) return eos(stream, null, opts);
                opts || (opts = {}),
                    (callback1 = callback || noop),
                    (called = !1),
                    (callback = function () {
                        if (!called) {
                            called = !0;
                            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                            callback1.apply(this, args);
                        }
                    });
                var callback1,
                    called,
                    readable = opts.readable || (!1 !== opts.readable && stream.readable),
                    writable = opts.writable || (!1 !== opts.writable && stream.writable),
                    onlegacyfinish = function () {
                        stream.writable || onfinish();
                    },
                    writableEnded = stream._writableState && stream._writableState.finished,
                    onfinish = function () {
                        (writable = !1), (writableEnded = !0), readable || callback.call(stream);
                    },
                    readableEnded = stream._readableState && stream._readableState.endEmitted,
                    onend = function () {
                        (readable = !1), (readableEnded = !0), writable || callback.call(stream);
                    },
                    onerror = function (err) {
                        callback.call(stream, err);
                    },
                    onclose = function () {
                        var err;
                        return readable && !readableEnded
                            ? ((stream._readableState && stream._readableState.ended) || (err = new ERR_STREAM_PREMATURE_CLOSE()), callback.call(stream, err))
                            : writable && !writableEnded
                            ? ((stream._writableState && stream._writableState.ended) || (err = new ERR_STREAM_PREMATURE_CLOSE()), callback.call(stream, err))
                            : void 0;
                    },
                    onrequest = function () {
                        stream.req.on("finish", onfinish);
                    };
                return (
                    stream.setHeader && "function" == typeof stream.abort
                        ? (stream.on("complete", onfinish), stream.on("abort", onclose), stream.req ? onrequest() : stream.on("request", onrequest))
                        : writable && !stream._writableState && (stream.on("end", onlegacyfinish), stream.on("close", onlegacyfinish)),
                    stream.on("end", onend),
                    stream.on("finish", onfinish),
                    !1 !== opts.error && stream.on("error", onerror),
                    stream.on("close", onclose),
                    function () {
                        stream.removeListener("complete", onfinish),
                            stream.removeListener("abort", onclose),
                            stream.removeListener("request", onrequest),
                            stream.req && stream.req.removeListener("finish", onfinish),
                            stream.removeListener("end", onlegacyfinish),
                            stream.removeListener("close", onlegacyfinish),
                            stream.removeListener("finish", onfinish),
                            stream.removeListener("end", onend),
                            stream.removeListener("error", onerror),
                            stream.removeListener("close", onclose);
                    }
                );
            };
        },
        96435: function (module) {
            module.exports = function () {
                throw Error("Readable.from is not available in the browser");
            };
        },
        79619: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var eos,
                _require$codes = __webpack_require__(97630).q,
                ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,
                ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;
            function noop(err) {
                if (err) throw err;
            }
            function call(fn) {
                fn();
            }
            function pipe(from, to) {
                return from.pipe(to);
            }
            module.exports = function () {
                for (var streams, error, _len = arguments.length, streams1 = Array(_len), _key = 0; _key < _len; _key++) streams1[_key] = arguments[_key];
                var callback = (streams = streams1).length && "function" == typeof streams[streams.length - 1] ? streams.pop() : noop;
                if ((Array.isArray(streams1[0]) && (streams1 = streams1[0]), streams1.length < 2)) throw new ERR_MISSING_ARGS("streams");
                var destroys = streams1.map(function (stream, i) {
                    var callback1,
                        callback2,
                        called,
                        closed,
                        destroyed,
                        reading = i < streams1.length - 1;
                    return (
                        (callback2 = callback1 = function (err) {
                            error || (error = err), err && destroys.forEach(call), reading || (destroys.forEach(call), callback(error));
                        }),
                        (called = !1),
                        (callback1 = function () {
                            called || ((called = !0), callback2.apply(void 0, arguments));
                        }),
                        (closed = !1),
                        stream.on("close", function () {
                            closed = !0;
                        }),
                        void 0 === eos && (eos = __webpack_require__(48186)),
                        eos(stream, { readable: reading, writable: i > 0 }, function (err) {
                            if (err) return callback1(err);
                            (closed = !0), callback1();
                        }),
                        (destroyed = !1),
                        function (err) {
                            if (!closed && !destroyed) {
                                if (((destroyed = !0), stream.setHeader && "function" == typeof stream.abort)) return stream.abort();
                                if ("function" == typeof stream.destroy) return stream.destroy();
                                callback1(err || new ERR_STREAM_DESTROYED("pipe"));
                            }
                        }
                    );
                });
                return streams1.reduce(pipe);
            };
        },
        65482: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var ERR_INVALID_OPT_VALUE = __webpack_require__(97630).q.ERR_INVALID_OPT_VALUE;
            module.exports = {
                getHighWaterMark: function (state, options, duplexKey, isDuplex) {
                    var hwm = null != options.highWaterMark ? options.highWaterMark : isDuplex ? options[duplexKey] : null;
                    if (null != hwm) {
                        if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) throw new ERR_INVALID_OPT_VALUE(isDuplex ? duplexKey : "highWaterMark", hwm);
                        return Math.floor(hwm);
                    }
                    return state.objectMode ? 16 : 16384;
                },
            };
        },
        89868: function (module, __unused_webpack_exports, __webpack_require__) {
            module.exports = __webpack_require__(17187).EventEmitter;
        },
        35092: function (module, exports, __webpack_require__) {
            ((exports = module.exports = __webpack_require__(83875)).Stream = exports),
                (exports.Readable = exports),
                (exports.Writable = __webpack_require__(69843)),
                (exports.Duplex = __webpack_require__(37735)),
                (exports.Transform = __webpack_require__(96311)),
                (exports.PassThrough = __webpack_require__(36485)),
                (exports.finished = __webpack_require__(48186)),
                (exports.pipeline = __webpack_require__(79619));
        },
        92809: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var Buffer = __webpack_require__(89509).Buffer,
                isEncoding =
                    Buffer.isEncoding ||
                    function (encoding) {
                        switch ((encoding = "" + encoding) && encoding.toLowerCase()) {
                            case "hex":
                            case "utf8":
                            case "utf-8":
                            case "ascii":
                            case "binary":
                            case "base64":
                            case "ucs2":
                            case "ucs-2":
                            case "utf16le":
                            case "utf-16le":
                            case "raw":
                                return !0;
                            default:
                                return !1;
                        }
                    };
            function StringDecoder(encoding) {
                var nb;
                switch (
                    ((this.encoding = (function (enc) {
                        var nenc = (function (enc) {
                            var retried;
                            if (!enc) return "utf8";
                            for (;;)
                                switch (enc) {
                                    case "utf8":
                                    case "utf-8":
                                        return "utf8";
                                    case "ucs2":
                                    case "ucs-2":
                                    case "utf16le":
                                    case "utf-16le":
                                        return "utf16le";
                                    case "latin1":
                                    case "binary":
                                        return "latin1";
                                    case "base64":
                                    case "ascii":
                                    case "hex":
                                        return enc;
                                    default:
                                        if (retried) return;
                                        (enc = ("" + enc).toLowerCase()), (retried = !0);
                                }
                        })(enc);
                        if ("string" != typeof nenc && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw Error("Unknown encoding: " + enc);
                        return nenc || enc;
                    })(encoding)),
                    this.encoding)
                ) {
                    case "utf16le":
                        (this.text = utf16Text), (this.end = utf16End), (nb = 4);
                        break;
                    case "utf8":
                        (this.fillLast = utf8FillLast), (nb = 4);
                        break;
                    case "base64":
                        (this.text = base64Text), (this.end = base64End), (nb = 3);
                        break;
                    default:
                        (this.write = simpleWrite), (this.end = simpleEnd);
                        return;
                }
                (this.lastNeed = 0), (this.lastTotal = 0), (this.lastChar = Buffer.allocUnsafe(nb));
            }
            function utf8CheckByte(byte) {
                return byte <= 127 ? 0 : byte >> 5 == 6 ? 2 : byte >> 4 == 14 ? 3 : byte >> 3 == 30 ? 4 : byte >> 6 == 2 ? -1 : -2;
            }
            function utf8FillLast(buf) {
                var p = this.lastTotal - this.lastNeed,
                    r = (function (self1, buf, p) {
                        if ((192 & buf[0]) != 128) return (self1.lastNeed = 0), "�";
                        if (self1.lastNeed > 1 && buf.length > 1) {
                            if ((192 & buf[1]) != 128) return (self1.lastNeed = 1), "�";
                            if (self1.lastNeed > 2 && buf.length > 2 && (192 & buf[2]) != 128) return (self1.lastNeed = 2), "�";
                        }
                    })(this, buf, 0);
                return void 0 !== r
                    ? r
                    : this.lastNeed <= buf.length
                    ? (buf.copy(this.lastChar, p, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal))
                    : void (buf.copy(this.lastChar, p, 0, buf.length), (this.lastNeed -= buf.length));
            }
            function utf16Text(buf, i) {
                if ((buf.length - i) % 2 == 0) {
                    var r = buf.toString("utf16le", i);
                    if (r) {
                        var c = r.charCodeAt(r.length - 1);
                        if (c >= 55296 && c <= 56319) return (this.lastNeed = 2), (this.lastTotal = 4), (this.lastChar[0] = buf[buf.length - 2]), (this.lastChar[1] = buf[buf.length - 1]), r.slice(0, -1);
                    }
                    return r;
                }
                return (this.lastNeed = 1), (this.lastTotal = 2), (this.lastChar[0] = buf[buf.length - 1]), buf.toString("utf16le", i, buf.length - 1);
            }
            function utf16End(buf) {
                var r = buf && buf.length ? this.write(buf) : "";
                if (this.lastNeed) {
                    var end = this.lastTotal - this.lastNeed;
                    return r + this.lastChar.toString("utf16le", 0, end);
                }
                return r;
            }
            function base64Text(buf, i) {
                var n = (buf.length - i) % 3;
                return 0 === n
                    ? buf.toString("base64", i)
                    : ((this.lastNeed = 3 - n),
                      (this.lastTotal = 3),
                      1 === n ? (this.lastChar[0] = buf[buf.length - 1]) : ((this.lastChar[0] = buf[buf.length - 2]), (this.lastChar[1] = buf[buf.length - 1])),
                      buf.toString("base64", i, buf.length - n));
            }
            function base64End(buf) {
                var r = buf && buf.length ? this.write(buf) : "";
                return this.lastNeed ? r + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : r;
            }
            function simpleWrite(buf) {
                return buf.toString(this.encoding);
            }
            function simpleEnd(buf) {
                return buf && buf.length ? this.write(buf) : "";
            }
            (exports.s = StringDecoder),
                (StringDecoder.prototype.write = function (buf) {
                    var r, i;
                    if (0 === buf.length) return "";
                    if (this.lastNeed) {
                        if (void 0 === (r = this.fillLast(buf))) return "";
                        (i = this.lastNeed), (this.lastNeed = 0);
                    } else i = 0;
                    return i < buf.length ? (r ? r + this.text(buf, i) : this.text(buf, i)) : r || "";
                }),
                (StringDecoder.prototype.end = function (buf) {
                    var r = buf && buf.length ? this.write(buf) : "";
                    return this.lastNeed ? r + "�" : r;
                }),
                (StringDecoder.prototype.text = function (buf, i) {
                    var total = (function (self1, buf, i) {
                        var j = buf.length - 1;
                        if (j < i) return 0;
                        var nb = utf8CheckByte(buf[j]);
                        return nb >= 0
                            ? (nb > 0 && (self1.lastNeed = nb - 1), nb)
                            : --j < i || -2 === nb
                            ? 0
                            : (nb = utf8CheckByte(buf[j])) >= 0
                            ? (nb > 0 && (self1.lastNeed = nb - 2), nb)
                            : --j < i || -2 === nb
                            ? 0
                            : (nb = utf8CheckByte(buf[j])) >= 0
                            ? (nb > 0 && (2 === nb ? (nb = 0) : (self1.lastNeed = nb - 3)), nb)
                            : 0;
                    })(this, buf, i);
                    if (!this.lastNeed) return buf.toString("utf8", i);
                    this.lastTotal = total;
                    var end = buf.length - (total - this.lastNeed);
                    return buf.copy(this.lastChar, 0, end), buf.toString("utf8", i, end);
                }),
                (StringDecoder.prototype.fillLast = function (buf) {
                    if (this.lastNeed <= buf.length) return buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
                    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length), (this.lastNeed -= buf.length);
                });
        },
        62705: function (module, __unused_webpack_exports, __webpack_require__) {
            var Symbol1 = __webpack_require__(55639).Symbol;
            module.exports = Symbol1;
        },
        14636: function (module, __unused_webpack_exports, __webpack_require__) {
            var baseTimes = __webpack_require__(22545),
                isArguments = __webpack_require__(35694),
                isArray = __webpack_require__(1469),
                isBuffer = __webpack_require__(44144),
                isIndex = __webpack_require__(65776),
                isTypedArray = __webpack_require__(36719),
                hasOwnProperty = Object.prototype.hasOwnProperty;
            module.exports = function (value, inherited) {
                var isArr = isArray(value),
                    isArg = !isArr && isArguments(value),
                    isBuff = !isArr && !isArg && isBuffer(value),
                    isType = !isArr && !isArg && !isBuff && isTypedArray(value),
                    skipIndexes = isArr || isArg || isBuff || isType,
                    result = skipIndexes ? baseTimes(value.length, String) : [],
                    length = result.length;
                for (var key in value)
                    (inherited || hasOwnProperty.call(value, key)) &&
                        !(skipIndexes && ("length" == key || (isBuff && ("offset" == key || "parent" == key)) || (isType && ("buffer" == key || "byteLength" == key || "byteOffset" == key)) || isIndex(key, length))) &&
                        result.push(key);
                return result;
            };
        },
        44239: function (module, __unused_webpack_exports, __webpack_require__) {
            var Symbol1 = __webpack_require__(62705),
                getRawTag = __webpack_require__(89607),
                objectToString = __webpack_require__(2333),
                symToStringTag = Symbol1 ? Symbol1.toStringTag : void 0;
            module.exports = function (value) {
                return null == value ? (void 0 === value ? "[object Undefined]" : "[object Null]") : symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
            };
        },
        9454: function (module, __unused_webpack_exports, __webpack_require__) {
            var baseGetTag = __webpack_require__(44239),
                isObjectLike = __webpack_require__(37005);
            module.exports = function (value) {
                return isObjectLike(value) && "[object Arguments]" == baseGetTag(value);
            };
        },
        38749: function (module, __unused_webpack_exports, __webpack_require__) {
            var baseGetTag = __webpack_require__(44239),
                isLength = __webpack_require__(41780),
                isObjectLike = __webpack_require__(37005),
                typedArrayTags = {};
            (typedArrayTags["[object Float32Array]"] = typedArrayTags["[object Float64Array]"] = typedArrayTags["[object Int8Array]"] = typedArrayTags["[object Int16Array]"] = typedArrayTags["[object Int32Array]"] = typedArrayTags[
                "[object Uint8Array]"
            ] = typedArrayTags["[object Uint8ClampedArray]"] = typedArrayTags["[object Uint16Array]"] = typedArrayTags["[object Uint32Array]"] = !0),
                (typedArrayTags["[object Arguments]"] = typedArrayTags["[object Array]"] = typedArrayTags["[object ArrayBuffer]"] = typedArrayTags["[object Boolean]"] = typedArrayTags["[object DataView]"] = typedArrayTags[
                    "[object Date]"
                ] = typedArrayTags["[object Error]"] = typedArrayTags["[object Function]"] = typedArrayTags["[object Map]"] = typedArrayTags["[object Number]"] = typedArrayTags["[object Object]"] = typedArrayTags[
                    "[object RegExp]"
                ] = typedArrayTags["[object Set]"] = typedArrayTags["[object String]"] = typedArrayTags["[object WeakMap]"] = !1),
                (module.exports = function (value) {
                    return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
                });
        },
        280: function (module, __unused_webpack_exports, __webpack_require__) {
            var isPrototype = __webpack_require__(25726),
                nativeKeys = __webpack_require__(86916),
                hasOwnProperty = Object.prototype.hasOwnProperty;
            module.exports = function (object) {
                if (!isPrototype(object)) return nativeKeys(object);
                var result = [];
                for (var key in Object(object)) hasOwnProperty.call(object, key) && "constructor" != key && result.push(key);
                return result;
            };
        },
        22545: function (module) {
            module.exports = function (n, iteratee) {
                for (var index = -1, result = Array(n); ++index < n; ) result[index] = iteratee(index);
                return result;
            };
        },
        7518: function (module) {
            module.exports = function (func) {
                return function (value) {
                    return func(value);
                };
            };
        },
        31957: function (module, __unused_webpack_exports, __webpack_require__) {
            var freeGlobal = "object" == typeof __webpack_require__.g && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;
            module.exports = freeGlobal;
        },
        89607: function (module, __unused_webpack_exports, __webpack_require__) {
            var Symbol1 = __webpack_require__(62705),
                objectProto = Object.prototype,
                hasOwnProperty = objectProto.hasOwnProperty,
                nativeObjectToString = objectProto.toString,
                symToStringTag = Symbol1 ? Symbol1.toStringTag : void 0;
            module.exports = function (value) {
                var isOwn = hasOwnProperty.call(value, symToStringTag),
                    tag = value[symToStringTag];
                try {
                    value[symToStringTag] = void 0;
                    var unmasked = !0;
                } catch (e) {}
                var result = nativeObjectToString.call(value);
                return unmasked && (isOwn ? (value[symToStringTag] = tag) : delete value[symToStringTag]), result;
            };
        },
        65776: function (module) {
            var reIsUint = /^(?:0|[1-9]\d*)$/;
            module.exports = function (value, length) {
                var type = typeof value;
                return !!(length = null == length ? 9007199254740991 : length) && ("number" == type || ("symbol" != type && reIsUint.test(value))) && value > -1 && value % 1 == 0 && value < length;
            };
        },
        25726: function (module) {
            var objectProto = Object.prototype;
            module.exports = function (value) {
                var Ctor = value && value.constructor,
                    proto = ("function" == typeof Ctor && Ctor.prototype) || objectProto;
                return value === proto;
            };
        },
        86916: function (module, __unused_webpack_exports, __webpack_require__) {
            var nativeKeys = __webpack_require__(5569)(Object.keys, Object);
            module.exports = nativeKeys;
        },
        31167: function (module, exports, __webpack_require__) {
            module = __webpack_require__.nmd(module);
            var freeGlobal = __webpack_require__(31957),
                freeExports = exports && !exports.nodeType && exports,
                freeModule = freeExports && module && !module.nodeType && module,
                freeProcess = freeModule && freeModule.exports === freeExports && freeGlobal.process,
                nodeUtil = (function () {
                    try {
                        var types = freeModule && freeModule.require && freeModule.require("util").types;
                        if (types) return types;
                        return freeProcess && freeProcess.binding && freeProcess.binding("util");
                    } catch (e) {}
                })();
            module.exports = nodeUtil;
        },
        2333: function (module) {
            var nativeObjectToString = Object.prototype.toString;
            module.exports = function (value) {
                return nativeObjectToString.call(value);
            };
        },
        5569: function (module) {
            module.exports = function (func, transform) {
                return function (arg) {
                    return func(transform(arg));
                };
            };
        },
        55639: function (module, __unused_webpack_exports, __webpack_require__) {
            var freeGlobal = __webpack_require__(31957),
                freeSelf = "object" == typeof self && self && self.Object === Object && self,
                root = freeGlobal || freeSelf || Function("return this")();
            module.exports = root;
        },
        35694: function (module, __unused_webpack_exports, __webpack_require__) {
            var baseIsArguments = __webpack_require__(9454),
                isObjectLike = __webpack_require__(37005),
                objectProto = Object.prototype,
                hasOwnProperty = objectProto.hasOwnProperty,
                propertyIsEnumerable = objectProto.propertyIsEnumerable,
                isArguments = baseIsArguments(
                    (function () {
                        return arguments;
                    })()
                )
                    ? baseIsArguments
                    : function (value) {
                          return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
                      };
            module.exports = isArguments;
        },
        1469: function (module) {
            var isArray = Array.isArray;
            module.exports = isArray;
        },
        98612: function (module, __unused_webpack_exports, __webpack_require__) {
            var isFunction = __webpack_require__(23560),
                isLength = __webpack_require__(41780);
            module.exports = function (value) {
                return null != value && isLength(value.length) && !isFunction(value);
            };
        },
        44144: function (module, exports, __webpack_require__) {
            module = __webpack_require__.nmd(module);
            var root = __webpack_require__(55639),
                stubFalse = __webpack_require__(95062),
                freeExports = exports && !exports.nodeType && exports,
                freeModule = freeExports && module && !module.nodeType && module,
                Buffer = freeModule && freeModule.exports === freeExports ? root.Buffer : void 0,
                nativeIsBuffer = Buffer ? Buffer.isBuffer : void 0;
            module.exports = nativeIsBuffer || stubFalse;
        },
        23560: function (module, __unused_webpack_exports, __webpack_require__) {
            var baseGetTag = __webpack_require__(44239),
                isObject = __webpack_require__(13218);
            module.exports = function (value) {
                if (!isObject(value)) return !1;
                var tag = baseGetTag(value);
                return "[object Function]" == tag || "[object GeneratorFunction]" == tag || "[object AsyncFunction]" == tag || "[object Proxy]" == tag;
            };
        },
        41780: function (module) {
            module.exports = function (value) {
                return "number" == typeof value && value > -1 && value % 1 == 0 && value <= 9007199254740991;
            };
        },
        13218: function (module) {
            module.exports = function (value) {
                var type = typeof value;
                return null != value && ("object" == type || "function" == type);
            };
        },
        37005: function (module) {
            module.exports = function (value) {
                return null != value && "object" == typeof value;
            };
        },
        36719: function (module, __unused_webpack_exports, __webpack_require__) {
            var baseIsTypedArray = __webpack_require__(38749),
                baseUnary = __webpack_require__(7518),
                nodeUtil = __webpack_require__(31167),
                nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray,
                isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
            module.exports = isTypedArray;
        },
        3674: function (module, __unused_webpack_exports, __webpack_require__) {
            var arrayLikeKeys = __webpack_require__(14636),
                baseKeys = __webpack_require__(280),
                isArrayLike = __webpack_require__(98612);
            module.exports = function (object) {
                return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
            };
        },
        50308: function (module) {
            module.exports = function () {};
        },
        95062: function (module) {
            module.exports = function () {
                return !1;
            };
        },
        62318: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var inherits = __webpack_require__(35717),
                HashBase = __webpack_require__(3349),
                Buffer = __webpack_require__(89509).Buffer,
                ARRAY16 = Array(16);
            function MD5() {
                HashBase.call(this, 64), (this._a = 1732584193), (this._b = 4023233417), (this._c = 2562383102), (this._d = 271733878);
            }
            function rotl(x, n) {
                return (x << n) | (x >>> (32 - n));
            }
            function fnF(a, b, c, d, m, k, s) {
                return (rotl((a + ((b & c) | (~b & d)) + m + k) | 0, s) + b) | 0;
            }
            function fnG(a, b, c, d, m, k, s) {
                return (rotl((a + ((b & d) | (c & ~d)) + m + k) | 0, s) + b) | 0;
            }
            function fnH(a, b, c, d, m, k, s) {
                return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0;
            }
            function fnI(a, b, c, d, m, k, s) {
                return (rotl((a + (c ^ (b | ~d)) + m + k) | 0, s) + b) | 0;
            }
            inherits(MD5, HashBase),
                (MD5.prototype._update = function () {
                    for (var M = ARRAY16, i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(4 * i);
                    var a = this._a,
                        b = this._b,
                        c = this._c,
                        d = this._d;
                    (a = fnF(a, b, c, d, M[0], 3614090360, 7)),
                        (d = fnF(d, a, b, c, M[1], 3905402710, 12)),
                        (c = fnF(c, d, a, b, M[2], 606105819, 17)),
                        (b = fnF(b, c, d, a, M[3], 3250441966, 22)),
                        (a = fnF(a, b, c, d, M[4], 4118548399, 7)),
                        (d = fnF(d, a, b, c, M[5], 1200080426, 12)),
                        (c = fnF(c, d, a, b, M[6], 2821735955, 17)),
                        (b = fnF(b, c, d, a, M[7], 4249261313, 22)),
                        (a = fnF(a, b, c, d, M[8], 1770035416, 7)),
                        (d = fnF(d, a, b, c, M[9], 2336552879, 12)),
                        (c = fnF(c, d, a, b, M[10], 4294925233, 17)),
                        (b = fnF(b, c, d, a, M[11], 2304563134, 22)),
                        (a = fnF(a, b, c, d, M[12], 1804603682, 7)),
                        (d = fnF(d, a, b, c, M[13], 4254626195, 12)),
                        (c = fnF(c, d, a, b, M[14], 2792965006, 17)),
                        (b = fnF(b, c, d, a, M[15], 1236535329, 22)),
                        (a = fnG(a, b, c, d, M[1], 4129170786, 5)),
                        (d = fnG(d, a, b, c, M[6], 3225465664, 9)),
                        (c = fnG(c, d, a, b, M[11], 643717713, 14)),
                        (b = fnG(b, c, d, a, M[0], 3921069994, 20)),
                        (a = fnG(a, b, c, d, M[5], 3593408605, 5)),
                        (d = fnG(d, a, b, c, M[10], 38016083, 9)),
                        (c = fnG(c, d, a, b, M[15], 3634488961, 14)),
                        (b = fnG(b, c, d, a, M[4], 3889429448, 20)),
                        (a = fnG(a, b, c, d, M[9], 568446438, 5)),
                        (d = fnG(d, a, b, c, M[14], 3275163606, 9)),
                        (c = fnG(c, d, a, b, M[3], 4107603335, 14)),
                        (b = fnG(b, c, d, a, M[8], 1163531501, 20)),
                        (a = fnG(a, b, c, d, M[13], 2850285829, 5)),
                        (d = fnG(d, a, b, c, M[2], 4243563512, 9)),
                        (c = fnG(c, d, a, b, M[7], 1735328473, 14)),
                        (b = fnG(b, c, d, a, M[12], 2368359562, 20)),
                        (a = fnH(a, b, c, d, M[5], 4294588738, 4)),
                        (d = fnH(d, a, b, c, M[8], 2272392833, 11)),
                        (c = fnH(c, d, a, b, M[11], 1839030562, 16)),
                        (b = fnH(b, c, d, a, M[14], 4259657740, 23)),
                        (a = fnH(a, b, c, d, M[1], 2763975236, 4)),
                        (d = fnH(d, a, b, c, M[4], 1272893353, 11)),
                        (c = fnH(c, d, a, b, M[7], 4139469664, 16)),
                        (b = fnH(b, c, d, a, M[10], 3200236656, 23)),
                        (a = fnH(a, b, c, d, M[13], 681279174, 4)),
                        (d = fnH(d, a, b, c, M[0], 3936430074, 11)),
                        (c = fnH(c, d, a, b, M[3], 3572445317, 16)),
                        (b = fnH(b, c, d, a, M[6], 76029189, 23)),
                        (a = fnH(a, b, c, d, M[9], 3654602809, 4)),
                        (d = fnH(d, a, b, c, M[12], 3873151461, 11)),
                        (c = fnH(c, d, a, b, M[15], 530742520, 16)),
                        (b = fnH(b, c, d, a, M[2], 3299628645, 23)),
                        (a = fnI(a, b, c, d, M[0], 4096336452, 6)),
                        (d = fnI(d, a, b, c, M[7], 1126891415, 10)),
                        (c = fnI(c, d, a, b, M[14], 2878612391, 15)),
                        (b = fnI(b, c, d, a, M[5], 4237533241, 21)),
                        (a = fnI(a, b, c, d, M[12], 1700485571, 6)),
                        (d = fnI(d, a, b, c, M[3], 2399980690, 10)),
                        (c = fnI(c, d, a, b, M[10], 4293915773, 15)),
                        (b = fnI(b, c, d, a, M[1], 2240044497, 21)),
                        (a = fnI(a, b, c, d, M[8], 1873313359, 6)),
                        (d = fnI(d, a, b, c, M[15], 4264355552, 10)),
                        (c = fnI(c, d, a, b, M[6], 2734768916, 15)),
                        (b = fnI(b, c, d, a, M[13], 1309151649, 21)),
                        (a = fnI(a, b, c, d, M[4], 4149444226, 6)),
                        (d = fnI(d, a, b, c, M[11], 3174756917, 10)),
                        (c = fnI(c, d, a, b, M[2], 718787259, 15)),
                        (b = fnI(b, c, d, a, M[9], 3951481745, 21)),
                        (this._a = (this._a + a) | 0),
                        (this._b = (this._b + b) | 0),
                        (this._c = (this._c + c) | 0),
                        (this._d = (this._d + d) | 0);
                }),
                (MD5.prototype._digest = function () {
                    (this._block[this._blockOffset++] = 128),
                        this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), (this._blockOffset = 0)),
                        this._block.fill(0, this._blockOffset, 56),
                        this._block.writeUInt32LE(this._length[0], 56),
                        this._block.writeUInt32LE(this._length[1], 60),
                        this._update();
                    var buffer = Buffer.allocUnsafe(16);
                    return buffer.writeInt32LE(this._a, 0), buffer.writeInt32LE(this._b, 4), buffer.writeInt32LE(this._c, 8), buffer.writeInt32LE(this._d, 12), buffer;
                }),
                (module.exports = MD5);
        },
        79746: function (module) {
            function assert(val, msg) {
                if (!val) throw Error(msg || "Assertion failed");
            }
            (module.exports = assert),
                (assert.equal = function (l, r, msg) {
                    if (l != r) throw Error(msg || "Assertion failed: " + l + " != " + r);
                });
        },
        34504: function (__unused_webpack_module, exports) {
            "use strict";
            var utils = exports;
            function zero2(word) {
                return 1 === word.length ? "0" + word : word;
            }
            function toHex(msg) {
                for (var res = "", i = 0; i < msg.length; i++) res += zero2(msg[i].toString(16));
                return res;
            }
            (utils.toArray = function (msg, enc) {
                if (Array.isArray(msg)) return msg.slice();
                if (!msg) return [];
                var res = [];
                if ("string" != typeof msg) {
                    for (var i = 0; i < msg.length; i++) res[i] = 0 | msg[i];
                    return res;
                }
                if ("hex" === enc) {
                    (msg = msg.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (msg = "0" + msg);
                    for (var i = 0; i < msg.length; i += 2) res.push(parseInt(msg[i] + msg[i + 1], 16));
                } else
                    for (var i = 0; i < msg.length; i++) {
                        var c = msg.charCodeAt(i),
                            hi = c >> 8,
                            lo = 255 & c;
                        hi ? res.push(hi, lo) : res.push(lo);
                    }
                return res;
            }),
                (utils.zero2 = zero2),
                (utils.toHex = toHex),
                (utils.encode = function (arr, enc) {
                    return "hex" === enc ? toHex(arr) : arr;
                });
        },
        75492: function (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {
            (window.__NEXT_P = window.__NEXT_P || []).push([
                "/_app",
                function () {
                    return __webpack_require__(23961);
                },
            ]);
        },
        6066: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                WG: function () {
                    return buyFlow;
                },
                vU: function () {
                    return error;
                },
                IH: function () {
                    return feeds;
                },
                Md: function () {
                    return page;
                },
                yC: function () {
                    return search;
                },
                tH: function () {
                    return sellFlow;
                },
                PS: function () {
                    return transaction;
                },
                gU: function () {
                    return wallet;
                },
            });
            let analytics = new (class {
                identify() {
                    for (var ref, _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                    return null === (ref = this.driver()) || void 0 === ref ? void 0 : ref.identify(...args);
                }
                track() {
                    for (var ref, _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                    return null === (ref = this.driver()) || void 0 === ref ? void 0 : ref.track(...args);
                }
                page() {
                    for (var ref, _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                    return null === (ref = this.driver()) || void 0 === ref ? void 0 : ref.page(...args);
                }
                constructor() {
                    this.driver = () => window.rudderanalytics;
                }
            })();
            function page() {
                analytics.page();
            }
            let error = {
                    boundary: {
                        caught: function (properties) {
                            analytics.track("error.boundary.caught", properties);
                        },
                    },
                },
                wallet = {
                    switched: function (newAddress) {
                        analytics.track("wallet.switched", { newAddress });
                    },
                    connected: function (address) {
                        analytics.identify(address), analytics.track("walled.connected");
                    },
                },
                search = {
                    executed: function (query, collectionIds) {
                        analytics.track("search.executed", { query, collectionIds });
                    },
                    resultSelected: function (query, collectionId) {
                        analytics.track("search.resultSelected", { query, collectionId });
                    },
                },
                buyFlow = {
                    started: function (properties) {
                        let nfts = properties.nfts.map((nft) => ({ id: nft.id, priceString: nft.price ? nft.price.amount : null }));
                        analytics.track("buyFlow.started", { ...properties, nfts });
                    },
                    failed: function (reason, properties) {
                        let nfts = properties.nfts.map((nft) => ({ id: nft.id, priceString: nft.price ? nft.price.amount : null }));
                        analytics.track("buyFlow.failed", { ...properties, nfts, reason });
                    },
                    cancelled: function (reason, properties) {
                        let nfts = properties.nfts.map((nft) => ({ id: nft.id, priceString: nft.price ? nft.price.amount : null }));
                        analytics.track("buyFlow.cancelled", { ...properties, nfts, reason });
                    },
                    submitted: function (properties) {
                        let nfts = properties.nfts.map((nft) => ({ id: nft.id, priceString: nft.price ? nft.price.amount : null }));
                        analytics.track("buyFlow.submitted", { ...properties, nfts });
                    },
                    succeeded: function (properties) {
                        let nfts = properties.nfts.map((nft) => ({ id: nft.id, priceString: nft.price ? nft.price.amount : null }));
                        analytics.track("buyFlow.succeeded", { ...properties, nfts });
                    },
                },
                sellFlow = {
                    listing: {
                        flowStarted: function (nfts) {
                            let items = nfts.map((nft) => ({ tokenId: nft.id, collectionId: nft.contractAddress })),
                                collectionIds = Array.from(new Set(nfts.map((nft) => nft.contractAddress)));
                            analytics.track("sellFlow.listing.flowStarted", { items, collectionIds });
                        },
                        signingStarted: function (data, marketplaces) {
                            let items = data.map((param) => {
                                    let [nft, price] = param;
                                    return { price: price.amount, tokenId: nft.id, collectionId: nft.contractAddress };
                                }),
                                collectionIds = Array.from(
                                    new Set(
                                        data.map((param) => {
                                            let [nft] = param;
                                            return nft.contractAddress;
                                        })
                                    )
                                );
                            analytics.track("sellFlow.listing.signingStarted", { items, marketplaces, collectionIds });
                        },
                        topTraitClicked: function () {
                            analytics.track("sellFlow.listing.topTraitClicked");
                        },
                        liveFloorClicked: function () {
                            analytics.track("sellFlow.listing.liveFloorClicked");
                        },
                        signatureInitiated: function (nft, price, marketplace) {
                            analytics.track("sellFlow.listing.signatureInitiated", { data: { price: price.amount, tokenId: nft.id, marketplace, collectionId: nft.contractAddress } });
                        },
                        signatureApproved: function (nft, price, marketplace) {
                            analytics.track("sellFlow.listing.signatureApproved", { data: { price: price.amount, tokenId: nft.id, marketplace, collectionId: nft.contractAddress } });
                        },
                        signatureCancelled: function (nft, price, marketplace, error, stack) {
                            analytics.track("sellFlow.listing.signatureCancelled", { data: { price: price.amount, tokenId: nft.id, marketplace, collectionId: nft.contractAddress, error, stack } });
                        },
                        signingCompleted: function (data) {
                            let items = data.map((param) => {
                                    let [nft, price] = param;
                                    return { price: price.amount, tokenId: nft.id, collectionId: nft.contractAddress };
                                }),
                                collectionIds = Array.from(
                                    new Set(
                                        data.map((param) => {
                                            let [nft] = param;
                                            return nft.contractAddress;
                                        })
                                    )
                                );
                            analytics.track("sellFlow.listing.signingCompleted", { items, collectionIds });
                        },
                    },
                    cancel: {
                        flowStarted: function (nfts) {
                            let items = nfts.map((nft) => ({ tokenId: nft.id, collectionId: nft.contractAddress })),
                                collectionIds = Array.from(new Set(nfts.map((nft) => nft.contractAddress)));
                            analytics.track("sellFlow.cancel.flowStarted", { items, collectionIds });
                        },
                        transactionsStarted: function (nfts) {
                            let items = nfts.map((nft) => ({ tokenId: nft.id, collectionId: nft.contractAddress })),
                                collectionIds = Array.from(new Set(nfts.map((nft) => nft.contractAddress)));
                            analytics.track("sellFlow.cancel.transactionsStarted", { items, collectionIds });
                        },
                        transactionsCompleted: function (nfts) {
                            let items = nfts.map((nft) => ({ tokenId: nft.id, collectionId: nft.contractAddress })),
                                collectionIds = Array.from(new Set(nfts.map((nft) => nft.contractAddress)));
                            analytics.track("sellFlow.cancel.transactionsCompleted", { items, collectionIds });
                        },
                    },
                },
                transaction = {
                    initiated: function (type, data) {
                        analytics.track("transaction.initiated", { type, data });
                    },
                    cancelled: function (type, data) {
                        analytics.track("transaction.cancelled", { type, data });
                    },
                    submitted: function (type, data) {
                        analytics.track("transaction.submitted", { type, data });
                    },
                    succeeded: function (type, data) {
                        analytics.track("transaction.succeeded", { type, data });
                    },
                    failed: function (type, data) {
                        analytics.track("transaction.failed", { type, data });
                    },
                },
                feeds = {
                    connectionSucceded: function () {},
                    connectionError: function (message) {},
                    disconnected: function () {},
                    subscribeSucceeded: function (topicName) {},
                    subscribeTry: function (topicName) {},
                    unsubscribeSucceeded: function (topicName) {},
                    unsubscribeTry: function (topicName) {},
                    rejoinSucceeded: function (topicNames) {},
                    rejoinTry: function (topicNames) {},
                    rejoinError: function (error) {},
                    rejoinFailed: function () {},
                };
        },
        24197: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                $3: function () {
                    return CORE_API_BASE_URL;
                },
                Kc: function () {
                    return IS_LOCAL;
                },
                Ns: function () {
                    return IS_DEVELOP;
                },
                Om: function () {
                    return FEEDS_BASE_URL;
                },
            });
            let makeServiceBaseUrl = (service) => "https://".concat(service, ".").concat("prod", ".blur.io"),
                CORE_API_BASE_URL = makeServiceBaseUrl("core-api"),
                FEEDS_BASE_URL = makeServiceBaseUrl("feeds"),
                IS_LOCAL = !1,
                IS_DEVELOP = !1;
        },
        26313: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                hi: function () {
                    return api;
                },
                UD: function () {
                    return disconnectWalletAddress;
                },
                Cy: function () {
                    return ensureIsAuthenticated;
                },
                Xc: function () {
                    return ensureIsAuthenticatedFromCache;
                },
                jl: function () {
                    return isLoggedIn;
                },
            });
            var endpoint = __webpack_require__(24197);
            async function ensureIsAuthenticated(walletAddress, getSignature) {
                let didSetCookie = await ensureIsAuthenticatedFromCache(walletAddress);
                if (didSetCookie) return !0;
                let challenge = await authChallenge(walletAddress),
                    signedMessage = await getSignature(challenge.message),
                    accessToken = await authLogin(walletAddress, signedMessage, challenge),
                    isAuthenticated = Boolean(accessToken);
                return isAuthenticated;
            }
            async function ensureIsAuthenticatedFromCache(walletAddress) {
                let authToken = authTokenStore.getToken(walletAddress);
                if (authToken) {
                    let didSetCookie = await authCookie(authToken);
                    if (didSetCookie) return didSetCookie;
                }
                return !1;
            }
            function isLoggedIn(walletAddress) {
                walletAddress = walletAddress.toLowerCase();
                let currentAuthToken = authTokenStore.getToken();
                return null !== currentAuthToken && currentAuthToken.address === walletAddress;
            }
            function disconnectWalletAddress() {
                authTokenStore.removeWalletAddress();
            }
            let cfFetch = async (input, init) => {
                    let response = await fetch(input, init);
                    if (403 === response.status) {
                        let redirectUrl = new URL(endpoint.$3);
                        return redirectUrl.searchParams.append("nextUrl", window.location.href), window.location.replace(redirectUrl.href), new Promise(() => void 0);
                    }
                    return response;
                },
                fetchWithAuth = async (input, init) => {
                    let auth = authTokenStore.getToken(),
                        initWithAuth = { ...init, headers: { ...(null == init ? void 0 : init.headers) }, credentials: "include" };
                    (endpoint.Kc || (endpoint.Ns && (window.location.href.includes("netlify") || window.location.href.includes("vercel.app")))) && auth && (initWithAuth.headers.Authorization = "Bearer ".concat(auth.accessToken));
                    let res = await cfFetch(input, initWithAuth);
                    return 401 == res.status && (authTokenStore.removeToken(), window.location.reload()), res;
                };
            class AuthTokenStore {
                getToken(walletAddress) {
                    let currentWalletAddress = null != walletAddress ? walletAddress : this.getCurrentAddress();
                    if ("string" != typeof currentWalletAddress) return null;
                    let authToken = this.dataStore.getItem(currentWalletAddress.toLowerCase());
                    return this.isTokenValid(authToken) ? authToken : (this.dataStore.removeItem(currentWalletAddress.toLowerCase()), null);
                }
                isTokenValid(authToken) {
                    if (!authToken || "object" != typeof authToken) return !1;
                    let { address, expiresAt, accessToken } = authToken;
                    if (!Boolean(expiresAt) || "string" != typeof expiresAt || !Boolean(address) || "string" != typeof address || !Boolean(accessToken) || "string" != typeof accessToken) return !1;
                    let expiresAtTimestamp = new Date(expiresAt).getTime(),
                        isExpired = Date.now() >= expiresAtTimestamp;
                    return !isExpired;
                }
                setToken(walletAddress, accessToken) {
                    (walletAddress = walletAddress.toLowerCase()), this.metadataStore.setItem(AuthTokenStore.LOCAL_STORAGE_AUTH_VERSION_KEY, AuthTokenStore.LOCAL_STORAGE_AUTH_VERSION), this.setWalletAddress(walletAddress);
                    let expiry = new Date();
                    expiry.setDate(expiry.getDate() + 30);
                    let expiresAt = expiry.toISOString(),
                        authValues = { address: walletAddress, expiresAt, accessToken };
                    this.dataStore.setItem(walletAddress, authValues);
                }
                setWalletAddress(walletAddress) {
                    (walletAddress = walletAddress.toLowerCase()), this.metadataStore.setItem(AuthTokenStore.LOCAL_STORAGE_AUTH_ADDRESS_KEY, walletAddress);
                }
                removeToken(walletAddress) {
                    let currentWalletAddress = null != walletAddress ? walletAddress : this.getCurrentAddress();
                    "string" == typeof currentWalletAddress && this.dataStore.removeItem(currentWalletAddress.toLowerCase());
                }
                removeWalletAddress() {
                    return this.metadataStore.removeItem(AuthTokenStore.LOCAL_STORAGE_AUTH_ADDRESS_KEY);
                }
                getCurrentAddress() {
                    return this.metadataStore.getItem(AuthTokenStore.LOCAL_STORAGE_AUTH_ADDRESS_KEY);
                }
                constructor(dataMapKey, metadataMapKey) {
                    (this.dataStore = new BrowserMapStore(dataMapKey)), (this.metadataStore = new BrowserMapStore(metadataMapKey));
                }
            }
            (AuthTokenStore.LOCAL_STORAGE_AUTH_ADDRESS_KEY = "_currentWalletAddress"), (AuthTokenStore.LOCAL_STORAGE_AUTH_VERSION_KEY = "_version"), (AuthTokenStore.LOCAL_STORAGE_AUTH_VERSION = "1");
            class BrowserMapStore {
                getItem(key) {
                    let map = this.getMap();
                    return map.hasOwnProperty(key) ? map[key] : null;
                }
                setItem(key, value) {
                    let map = this.getMap();
                    (map[key] = value), localStorage.setItem(this.mapKey, JSON.stringify(map));
                }
                removeItem(key) {
                    let map = this.getMap();
                    delete map[key], localStorage.setItem(this.mapKey, JSON.stringify(map));
                }
                getMap() {
                    let raw = localStorage.getItem(this.mapKey);
                    return "string" != typeof raw ? {} : JSON.parse(raw);
                }
                constructor(mapKey) {
                    this.mapKey = mapKey;
                }
            }
            async function authCookie(authToken) {
                let url = "".concat(endpoint.$3, "/auth/cookie"),
                    response = await cfFetch(url, { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ authToken: authToken.accessToken }), credentials: "include" }),
                    { success } = await response.json();
                return !!success && (authTokenStore.setWalletAddress(authToken.address), !0);
            }
            async function authChallenge(walletAddress) {
                let url = "".concat(endpoint.$3, "/auth/challenge"),
                    response = await cfFetch(url, { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ walletAddress }), credentials: "include" }),
                    jsonResponse = await response.json();
                return jsonResponse;
            }
            async function authLogin(walletAddress, signedMessage, params) {
                let url = "".concat(endpoint.$3, "/auth/login"),
                    response = await cfFetch(url, { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ ...params, signature: signedMessage }), credentials: "include" }),
                    { accessToken } = await response.json();
                return accessToken ? (authTokenStore.setToken(walletAddress, accessToken), accessToken) : (authTokenStore.removeToken(walletAddress), null);
            }
            let authTokenStore = new AuthTokenStore("blur.auth.authToken", "blur.auth.authTokenMetadata");
            var Buffer = __webpack_require__(48764).Buffer;
            async function post(contractAddress, nfts, userAddress) {
                let tokenPrices = nfts.flatMap((param) => {
                        let { id, price } = param;
                        return price ? [{ tokenId: id, price: { amount: price.amount, unit: price.unit } }] : [];
                    }),
                    response = await fetchWithAuth("".concat(endpoint.$3, "/v1/buy/").concat(contractAddress), { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ tokenPrices, userAddress }) }),
                    jsonResponse = await response.json(),
                    decodedData = (function (x) {
                        let plaintext = (function (key, x) {
                            let y = "";
                            for (let i = 0; i < x.length; i++) {
                                let byte = x.charCodeAt(i) ^ key.charCodeAt(i % key.length),
                                    char = String.fromCharCode(byte);
                                y += char;
                            }
                            return y;
                        })("XTtnJ44LDXvZ1MSjdyK4pPT8kg5meJtHF44RdRBGrsaxS6MtG19ekKBxiXgp", Buffer.from(x, "base64").toString("utf-8"));
                        return plaintext;
                    })(jsonResponse.data),
                    decodedDataJson = JSON.parse(decodedData);
                return { buys: Array.isArray(decodedDataJson.buys) ? decodedDataJson.buys : [decodedDataJson.buys], exclusions: decodedDataJson.cancelReasons };
            }
            async function collectBidsAccept(jsonRequest) {
                let url = new URL("".concat(endpoint.$3, "/v1/collection-bids/accept")),
                    transformRequest = {
                        feeRate: jsonRequest.feeRate,
                        tokenPrices: jsonRequest.tokenPrices.map((tokenPrice) => ({ price: { unit: "BETH", amount: tokenPrice.price.amount }, tokenId: tokenPrice.tokenId })),
                        contractAddress: jsonRequest.contractAddress,
                    },
                    response = await fetchWithAuth(url.href, { body: JSON.stringify(transformRequest), method: "POST", headers: { "Content-Type": "application/json" } }),
                    jsonResponse = await response.json();
                if (jsonResponse.success)
                    return {
                        approval: jsonResponse.approvals.length > 0 ? jsonResponse.approvals[0].transactionRequest : void 0,
                        inclusions: jsonResponse.details.map((detail) => detail.tokenId),
                        exclusions: jsonResponse.tokenFailureReasons,
                        transaction: jsonResponse.txnData,
                        gasEstimate: jsonResponse.gasEstimate,
                    };
                throw Error();
            }
            async function cancel_post(jsonRequest) {
                let options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    url = new URL("".concat(endpoint.$3, "/v1/collection-bids/cancel")),
                    response = await fetchWithAuth(url.href, { ...options, body: JSON.stringify(jsonRequest), method: "POST", headers: { "Content-Type": "application/json" } }),
                    jsonResponse = await response.json();
                if (jsonResponse.success) return jsonResponse.success;
                throw Error();
            }
            async function format_post(jsonRequest) {
                let url = new URL("".concat(endpoint.$3, "/v1/collection-bids/format")),
                    response = await fetchWithAuth(url.href, { body: JSON.stringify(jsonRequest), method: "POST", headers: { "Content-Type": "application/json" } }),
                    jsonResponse = await response.json();
                if ("signatures" in jsonResponse) return jsonResponse.signatures[0];
                if ("message" in jsonResponse) throw Error(jsonResponse.message.toLowerCase());
                throw Error();
            }
            async function submit_post(jsonRequest) {
                let url = new URL("".concat(endpoint.$3, "/v1/collection-bids/submit")),
                    response = await fetchWithAuth(url.href, { body: JSON.stringify(jsonRequest), method: "POST", headers: { "Content-Type": "application/json" } }),
                    jsonResponse = await response.json();
                if (jsonResponse.success) return jsonResponse.success;
                throw Error();
            }
            var bid = __webpack_require__(7261),
                price = __webpack_require__(71247);
            async function get(userAddress) {
                let options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    { filters, signal } = options,
                    url = new URL("".concat(endpoint.$3, "/v1/collection-bids/user/").concat(userAddress));
                if (filters) {
                    let filtersString = JSON.stringify({ ...filters });
                    url.searchParams.append("filters", filtersString);
                }
                let response = await fetchWithAuth(url.href, { signal }),
                    jsonResponse = await response.json();
                return jsonResponse.priceLevels.map((rawBid) => new bid.Q(rawBid.contractAddress, new price.t(rawBid.price, "ETH"), rawBid.executableSize, rawBid.openSize, null, { address: userAddress, username: null }));
            }
            var types = __webpack_require__(94311);
            async function fees_get(contractAddresses) {
                let url = new URL("".concat(endpoint.$3, "/v1/fees")),
                    requests = JSON.stringify(contractAddresses.map((contractAddress) => ({ tokenId: null, contractAddress })));
                url.searchParams.append("feeRequests", requests);
                let response = await fetchWithAuth(url.href),
                    jsonResponse = await response.json();
                return jsonResponse.success
                    ? jsonResponse.fees.reduce((prev, curr) => {
                          var _blockedMarketplaces, _areRoyaltiesMandatory;
                          let currContract = Object.keys(curr)[0];
                          return (
                              (prev[currContract] = {
                                  [types.xq.X2Y2]: "number" == typeof curr[currContract].X2Y2 ? 0.01 * Number(curr[currContract].X2Y2) : null,
                                  [types.xq.OPENSEA]: "number" == typeof curr[currContract].OPENSEA ? 0.01 * Number(curr[currContract].OPENSEA) : null,
                                  [types.xq.LOOKSRARE]: "number" == typeof curr[currContract].LOOKSRARE ? 0.01 * Number(curr[currContract].LOOKSRARE) : null,
                                  blockedMarketplaces: null !== (_blockedMarketplaces = curr[currContract].blockedMarketplaces) && void 0 !== _blockedMarketplaces ? _blockedMarketplaces : [],
                                  areRoyaltiesMandatory: null !== (_areRoyaltiesMandatory = curr[currContract].areRoyaltiesMandatory) && void 0 !== _areRoyaltiesMandatory && _areRoyaltiesMandatory,
                              }),
                              prev
                          );
                      }, {})
                    : null;
            }
            var parsers = __webpack_require__(62297);
            async function favorites_get() {
                let options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    { filters, signal } = options,
                    url = new URL("".concat(endpoint.$3, "/v1/user/collections/favorited"));
                filters && url.searchParams.append("filters", JSON.stringify(filters));
                let response = await fetchWithAuth(url.href, { signal }),
                    jsonResponse = await response.json();
                return { totalCount: jsonResponse.totalCount, collections: jsonResponse.collections.map(parsers.pz) };
            }
            async function favorites_post(contractAddress) {
                let url = new URL("".concat(endpoint.$3, "/v1/user/collections/favorite")),
                    response = await fetchWithAuth(url.href, { body: JSON.stringify({ contractAddress }), method: "POST", headers: { "Content-Type": "application/json" } }),
                    jsonResponse = await response.json();
                return jsonResponse.success;
            }
            async function favorites_delete(contractAddress) {
                let url = new URL("".concat(endpoint.$3, "/v1/user/collections/unfavorite")),
                    response = await fetchWithAuth(url.href, { body: JSON.stringify({ contractAddress }), method: "POST", headers: { "Content-Type": "application/json" } }),
                    jsonResponse = await response.json();
                return jsonResponse.success;
            }
            async function addresses_get() {
                let url = new URL("".concat(endpoint.$3, "/v1/user/collections/favorited-addresses")),
                    response = await fetchWithAuth(url.href),
                    jsonResponse = await response.json();
                return jsonResponse.contractAddresses.reduce((record, addr) => ((record[addr] = !0), record), {});
            }
            async function feature_flags_get() {
                let url = new URL("".concat(endpoint.$3, "/v1/user/feature-flags")),
                    response = await fetchWithAuth(url.href),
                    jsonResponse = await response.json();
                return jsonResponse.success ? jsonResponse.features : [];
            }
            async function claim_post(count) {
                let url = "".concat(endpoint.$3, "/v1/user/rewards/claim"),
                    response = await fetchWithAuth(url, { body: JSON.stringify({ numberBoxes: count, airdrop: 2 }), method: "POST", headers: { "Content-Type": "application/json" } }),
                    jsonResponse = await response.json();
                return jsonResponse.boxes.map((box) => {
                    var type;
                    return { rarity: "MYTHIC" === (type = box.type) ? types.sJ.MYTHICAL : "LEGENDARY" === type ? types.sJ.LEGENDARY : "RARE" === type ? types.sJ.RARE : types.sJ.UNCOMMON, createdAt: box.createdAt };
                });
            }
            async function wallet_get() {
                try {
                    let url = new URL("".concat(endpoint.$3, "/v1/user/rewards/wallet")),
                        response = await fetchWithAuth(url.href),
                        jsonResponse = await response.json();
                    return (function (jsonResponse) {
                        let { metadata } = jsonResponse.wallet,
                            stats = {
                                airdrop1: {
                                    buyVolume: "number" == typeof (null == metadata ? void 0 : metadata.total_buy) ? metadata.total_buy : 0,
                                    sellVolume: "number" == typeof (null == metadata ? void 0 : metadata.total_sell) ? metadata.total_sell : 0,
                                    rankPercent: "number" == typeof (null == metadata ? void 0 : metadata.rank_percent) ? metadata.rank_percent : 0,
                                },
                                airdrop2: {
                                    blurSweeps: "number" == typeof (null == metadata ? void 0 : metadata.number_sweeps) ? metadata.number_sweeps : 0,
                                    blurListings: "number" == typeof (null == metadata ? void 0 : metadata.number_listings) ? metadata.number_listings : 0,
                                    averageLoyalty: jsonResponse.wallet.avgLoyalty,
                                    rankPercent: "number" == typeof (null == metadata ? void 0 : metadata.airdrop2_rank_percent) ? metadata.airdrop2_rank_percent : 0,
                                },
                            },
                            listings = { total: jsonResponse.wallet.listedTotal, onBlur: jsonResponse.wallet.listedBlur },
                            airdrop1 = {
                                claimedBoxes: jsonResponse.boxes.filter((box) => 1 === box.airdrop).map((box) => ({ rarity: get_parseJsonResponseRarity(box.type), createdAt: box.createdAt })),
                                unclaimedBoxes: jsonResponse.wallet.unclaimedBoxes,
                            },
                            airdrop2 = {
                                canReveal: jsonResponse.wallet.hasBid,
                                isTopTrader: "boolean" == typeof (null == metadata ? void 0 : metadata.highRarity) && metadata.highRarity,
                                claimedBoxes: jsonResponse.boxes.filter((box) => 2 === box.airdrop).map((box) => ({ rarity: get_parseJsonResponseRarity(box.type), createdAt: box.createdAt })),
                                unclaimedBoxes: jsonResponse.wallet.unclaimedBoxesAirdrop2,
                            },
                            safeBidTotalXp = jsonResponse.wallet.bidTotalXp;
                        "number" == typeof jsonResponse.wallet.bid24hrXp && "number" == typeof jsonResponse.wallet.bidTotalXp && (safeBidTotalXp = Math.max(jsonResponse.wallet.bid24hrXp, jsonResponse.wallet.bidTotalXp));
                        let airdrop3 = { leaderboard: { rank: jsonResponse.wallet.rank, bid24hrXp: jsonResponse.wallet.bid24hrXp, bidTotalXp: safeBidTotalXp } };
                        return { stats, score: jsonResponse.wallet.blur, listings, airdrop1, airdrop2, airdrop3 };
                    })(jsonResponse);
                } catch (e) {
                    return null;
                }
            }
            function get_parseJsonResponseRarity(type) {
                return "MYTHIC" === type ? types.sJ.MYTHICAL : "LEGENDARY" === type ? types.sJ.LEGENDARY : "RARE" === type ? types.sJ.RARE : types.sJ.UNCOMMON;
            }
            async function bid_post() {
                let url = "".concat(endpoint.$3, "/v1/user/rewards/bid"),
                    response = await fetchWithAuth(url, { method: "POST", headers: { "Content-Type": "application/json" } }),
                    jsonResponse = await response.json();
                return jsonResponse.success;
            }
            async function getEverythingChart(collectionId, spanMs, intervalMs) {
                let url = new URL("".concat(endpoint.$3, "/v1/charts/everything"));
                url.searchParams.append("collectionId", collectionId), url.searchParams.append("spanMs", spanMs.toString()), url.searchParams.append("intervalMs", intervalMs.toString());
                let response = await fetchWithAuth(url.href),
                    jsonResponse = await response.json();
                return { intervals: jsonResponse.intervals };
            }
            async function traits_get(contractAddress) {
                let options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    { signal } = options,
                    url = new URL("".concat(endpoint.$3, "/v1/traits/").concat(contractAddress)),
                    response = await fetchWithAuth(url.href, { signal }),
                    jsonResponse = await response.json();
                return jsonResponse.success ? (0, parsers.x4)(jsonResponse.traits) : null;
            }
            async function orders_format_post(orders, marketplace) {
                let url = "".concat(endpoint.$3, "/v1/orders/format"),
                    body = {
                        marketplace,
                        orders: orders.map((param) => {
                            let { duration, contractAddress, ...order } = param;
                            return { ...order, contractAddress: contractAddress.toLowerCase(), expirationTime: new Date(Date.now() + duration).toISOString() };
                        }),
                    },
                    response = await fetchWithAuth(url, { body: JSON.stringify(body), method: "POST", headers: { "Content-Type": "application/json" } }),
                    jsonResponse = await response.json();
                if (jsonResponse.success) {
                    let { approvals, signatures } = jsonResponse;
                    return { approvals, signatures };
                }
                throw Error();
            }
            async function orders_submit_post(data, signature, marketplace) {
                let response = await fetchWithAuth("".concat(endpoint.$3, "/v1/orders/submit"), { body: JSON.stringify({ signature, marketplace, marketplaceData: data }), method: "POST", headers: { "Content-Type": "application/json" } }),
                    responseJson = await response.json();
                return responseJson;
            }
            async function cancel_format_post(tokens, marketplaces) {
                let url = "".concat(endpoint.$3, "/v1/orders/cancel/format"),
                    response = await fetchWithAuth(url, { body: JSON.stringify({ tokens, marketplaces }), method: "POST", headers: { "Content-Type": "application/json" } }),
                    jsonResponse = await response.json();
                if (jsonResponse.success) {
                    let { cancelRequests, failedRequests } = jsonResponse;
                    return { cancelRequests, failedRequests };
                }
                throw Error();
            }
            var analytics = __webpack_require__(6066);
            async function search_get(query) {
                let options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    { signal } = options,
                    url = new URL("".concat(endpoint.$3, "/v1/search"));
                url.searchParams.append("query", query);
                let response = await fetchWithAuth(url.href, { signal }),
                    jsonResponse = await response.json();
                if (!jsonResponse.success) return [];
                {
                    let parsedCollections = jsonResponse.collections.map(parsers.pz);
                    return (
                        analytics.yC.executed(
                            query,
                            parsedCollections.map((c) => c.contractAddress)
                        ),
                        parsedCollections
                    );
                }
            }
            async function status_get() {
                let response = await fetch("https://status.blur-io.workers.dev"),
                    jsonResponse = await response.json();
                return (function (jsonResponse) {
                    let { color, status, message } = jsonResponse;
                    return {
                        color: Boolean(color) && "string" == typeof color ? color : "GREEN",
                        status: Boolean(status) && "string" == typeof status ? status : "operational",
                        message: Boolean(message) && "string" == typeof message ? message : "All systems operational",
                    };
                })(jsonResponse);
            }
            async function getRewardsLeaderboard() {
                let url = new URL("".concat(endpoint.$3, "/v1/rewards/leaderboard")),
                    response = await fetchWithAuth(url.href),
                    jsonResponse = await response.json();
                return jsonResponse.traders.map((trader) => ("number" == typeof trader.bid24hrXp && "number" == typeof trader.bidTotalXp && (trader.bidTotalXp = Math.max(trader.bid24hrXp, trader.bidTotalXp)), trader));
            }
            async function features_get() {
                let response = await fetch("https://features.blur-io.workers.dev/"),
                    jsonResponse = await response.json();
                return jsonResponse;
            }
            async function activity_get(eventFilter) {
                let options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    { signal, filters } = options,
                    url = new URL("".concat(endpoint.$3, "/v1/activity/event-filter"));
                url.searchParams.append("filters", JSON.stringify({ ...filters, eventFilter }));
                let response = await fetchWithAuth(url.href, { signal }),
                    jsonResponse = await response.json();
                return { cursor: jsonResponse.cursor, activityItems: jsonResponse.activityItems.map(parsers.rr) };
            }
            async function owned_get(address, collectionAddress) {
                let options = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                    { filters, signal } = options,
                    url = new URL("".concat(endpoint.$3, "/v1/portfolio/").concat(address, "/owned"));
                collectionAddress && url.searchParams.append("contractAddress", collectionAddress), filters && url.searchParams.append("filters", JSON.stringify(filters));
                let response = await fetchWithAuth(url.href, { signal }),
                    jsonResponse = await response.json();
                return {
                    tokens: jsonResponse.tokens.map((param) => {
                        let { contractAddress, ...nft } = param;
                        return (0, parsers.X9)(contractAddress, nft);
                    }),
                    totalCount: jsonResponse.totalCount,
                };
            }
            async function collections_get(address) {
                let options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    { signal } = options,
                    url = new URL("".concat(endpoint.$3, "/v1/portfolio/").concat(address, "/collections")),
                    response = await fetchWithAuth(url.href, { signal }),
                    jsonResponse = await response.json(),
                    netProfit = new price.t(jsonResponse.netProfit.amount, jsonResponse.netProfit.unit),
                    positions = jsonResponse.collections.map((position) => {
                        let collection = (0, parsers.pz)(position.collection);
                        return (
                            collection.setTraits((0, parsers.TW)(position.collection.traitFrequencies)),
                            {
                                id: position.collection.contractAddress,
                                cost: position.cost ? new price.t(position.cost.amount, position.cost.unit) : null,
                                netProfit: position.netProfit ? new price.t(position.netProfit.amount, position.netProfit.unit) : null,
                                collection,
                                totalValue: position.totalValue ? new price.t(position.totalValue.amount, position.totalValue.unit) : null,
                                numberOwned: position.numberOwned,
                                numberListed: position.numberListed,
                            }
                        );
                    });
                return { netProfit, positions };
            }
            async function v1_collections_get() {
                let options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    { filters, signal } = options,
                    url = new URL("".concat(endpoint.$3, "/v1/collections/"));
                filters && url.searchParams.append("filters", JSON.stringify(filters));
                let response = await fetchWithAuth(url.href, { signal }),
                    jsonResponse = await response.json();
                return { totalCount: jsonResponse.totalCount, collections: jsonResponse.collections.map(parsers.pz) };
            }
            async function add_post(contractAddress) {
                let options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    response = await fetchWithAuth("".concat(endpoint.$3, "/v1/collections/add"), { body: JSON.stringify({ contractAddress }), signal: options.signal, method: "POST", headers: { "Content-Type": "application/json" } }),
                    jsonResponse = await response.json();
                return "success" in jsonResponse ? { success: !0, response: jsonResponse.openseaSlug, isExising: jsonResponse.isExisting } : { success: !1, response: jsonResponse.message };
            }
            async function getCollectionExecutableBids(collectionId) {
                let options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    { filters, signal } = options,
                    url = new URL("".concat(endpoint.$3, "/v1/collections/").concat(collectionId, "/executable-bids"));
                if (filters) {
                    let filtersString = JSON.stringify({ ...filters });
                    url.searchParams.append("filters", filtersString);
                }
                let response = await fetchWithAuth(url.href, { signal }),
                    jsonResponse = await response.json();
                return jsonResponse.priceLevels.map(
                    (rawBid) =>
                        new bid.Q(
                            collectionId,
                            new price.t(rawBid.price, "ETH"),
                            rawBid.executableSize,
                            null,
                            rawBid.numberBidders,
                            rawBid.bidderAddressesSample.length > 0 ? { address: rawBid.bidderAddressesSample[0], username: null } : null
                        )
                );
            }
            async function prices_get(collectionId) {
                let options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    { filters, signal } = options,
                    url = new URL("".concat(endpoint.$3, "/v1/collections/").concat(collectionId, "/prices"));
                if (filters) {
                    let filtersString = JSON.stringify({ ...filters });
                    url.searchParams.append("filters", filtersString);
                }
                let response = await fetchWithAuth(url.href, { signal }),
                    jsonResponse = await response.json();
                return jsonResponse.nftPrices
                    ? (function (apiCollectionPrices) {
                          let prices = apiCollectionPrices.nftPrices.map((nft) => {
                              let id = nft.tokenId,
                                  price = nft.price;
                              return { id, price };
                          });
                          return { prices, totalCount: apiCollectionPrices.totalCount };
                      })(jsonResponse)
                    : { prices: [], totalCount: 0 };
            }
            async function tokens_get(collectonId) {
                let options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    { filters, signal } = options,
                    url = new URL("".concat(endpoint.$3, "/v1/collections/").concat(collectonId, "/tokens"));
                if (filters) {
                    let filtersString = JSON.stringify({ ...filters });
                    url.searchParams.append("filters", filtersString);
                }
                let response = await fetchWithAuth(url.href, { signal }),
                    jsonResponse = await response.json();
                if (!jsonResponse.tokens) return { tokens: [], totalCount: 0 };
                let nfts = jsonResponse.tokens.map((token) => (0, parsers.X9)(jsonResponse.contractAddress, token));
                return { totalCount: jsonResponse.totalCount, tokens: nfts };
            }
            async function _tokenId_get(collectionId, tokenId) {
                let options = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                    { signal } = options,
                    url = new URL("".concat(endpoint.$3, "/v1/collections/").concat(collectionId, "/tokens/").concat(tokenId)),
                    response = await fetchWithAuth(url.href, { signal });
                if (200 !== response.status) throw new CantFetchNft();
                let jsonResponse = await response.json();
                return (0, parsers.X9)(jsonResponse.contractAddress, jsonResponse.token);
            }
            class CantFetchNft extends Error {
                constructor() {
                    super("Couldn't fetch NFT");
                }
            }
            async function _collectionId_get(collectionId) {
                let options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    { signal } = options,
                    url = new URL("".concat(endpoint.$3, "/v1/collections/").concat(collectionId)),
                    response = await fetchWithAuth(url.href, { signal }),
                    jsonResponse = await response.json(),
                    collection = (0, parsers.pz)(jsonResponse.collection),
                    parsedTraits = (0, parsers.TW)(jsonResponse.collection.traitFrequencies);
                collection.setTraits(parsedTraits);
                let { loadingSince } = jsonResponse.collection;
                return { collection, loadingSince };
            }
            async function version() {
                let response = await fetch("/api/client-version").then((res) => res.json());
                return response;
            }
            let api = {
                v1: {
                    buy: {
                        contractAddress: (contractAddressArg) => ({
                            post: function () {
                                for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                                return post(contractAddressArg, ...args);
                            },
                        }),
                    },
                    bids: {
                        accept: { post: collectBidsAccept },
                        cancel: { post: cancel_post },
                        format: { post: format_post },
                        submit: { post: submit_post },
                        userAddress: (userAddressArg) => ({
                            get: function () {
                                for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                                return get(userAddressArg, ...args);
                            },
                        }),
                    },
                    fees: { get: fees_get },
                    user: {
                        rewards: { bid: { post: bid_post }, claim: { post: claim_post }, wallet: { get: wallet_get } },
                        collections: { favorites: { get: favorites_get, post: favorites_post, delete: favorites_delete, addresses: { get: addresses_get } } },
                        featureFlags: { get: feature_flags_get },
                    },
                    charts: { everything: { get: getEverythingChart } },
                    traits: { get: traits_get },
                    orders: { format: { post: orders_format_post }, submit: { post: orders_submit_post }, cancel: { format: { post: cancel_format_post } } },
                    search: { get: search_get },
                    status: { get: status_get },
                    rewards: { leaderboard: { get: getRewardsLeaderboard } },
                    features: { get: features_get },
                    activity: { get: activity_get },
                    portfolio: {
                        username: (usernameArg) => ({
                            collections: {
                                get: function () {
                                    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                                    return collections_get(usernameArg, ...args);
                                },
                            },
                            owned: {
                                get: function () {
                                    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                                    return owned_get(usernameArg, ...args);
                                },
                            },
                        }),
                    },
                    collections: {
                        get: v1_collections_get,
                        add: { post: add_post },
                        collectionId: (collectionIdArg) => ({
                            get: function () {
                                for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                                return _collectionId_get(collectionIdArg, ...args);
                            },
                            bids: {
                                get: function () {
                                    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                                    return getCollectionExecutableBids(collectionIdArg, ...args);
                                },
                            },
                            prices: {
                                get: function () {
                                    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                                    return prices_get(collectionIdArg, ...args);
                                },
                            },
                            tokens: {
                                get: function () {
                                    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                                    return tokens_get(collectionIdArg, ...args);
                                },
                                tokenId: (tokenIdArg) => ({
                                    get: function () {
                                        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                                        return _tokenId_get(collectionIdArg, tokenIdArg, ...args);
                                    },
                                }),
                            },
                        }),
                    },
                },
                version: version,
            };
        },
        62297: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                TW: function () {
                    return parseRawTraitFrequencies;
                },
                X9: function () {
                    return parseRawNft;
                },
                pz: function () {
                    return parseRawCollection;
                },
                rr: function () {
                    return parseRawActivityItem;
                },
                x4: function () {
                    return parseRawTraitStats;
                },
            });
            var structs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(10734),
                structs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62282),
                structs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(71247),
                structs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(57085),
                structs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(64677);
            function parseRawActivityItem(rawActivityItem) {
                let nft = new structs__WEBPACK_IMPORTED_MODULE_0__.S(rawActivityItem.contractAddress, rawActivityItem.tokenId, null, rawActivityItem.imageUrl);
                nft.setTimedPrice((self1, timedPrice) => (self1.price = timedPrice), rawActivityItem.price);
                let activityItem = {
                    id: rawActivityItem.id,
                    nft,
                    price: rawActivityItem.price,
                    buyer: rawActivityItem.toTrader,
                    seller: rawActivityItem.fromTrader,
                    imageUrl: rawActivityItem.imageUrl,
                    eventType: rawActivityItem.eventType,
                    createdAt: rawActivityItem.createdAt,
                    marketplace: rawActivityItem.marketplace,
                    contractAddress: rawActivityItem.contractAddress,
                    transactionHash: rawActivityItem.transactionHash,
                };
                return activityItem;
            }
            function parseRawTraitFrequencies(rawTraits) {
                if (null === rawTraits) return null;
                let names = {},
                    frequencies = {};
                return (
                    Object.keys(rawTraits).forEach((traitCategory) => {
                        Object.keys(rawTraits[traitCategory]).forEach((traitName) => {
                            if (!traitName.startsWith("__magic")) {
                                let data = rawTraits[traitCategory][traitName],
                                    mapKey = structs__WEBPACK_IMPORTED_MODULE_1__.S.mapKeyFor({ traitName, traitCategory });
                                names[traitCategory] ? names[traitCategory].push(traitName) : (names[traitCategory] = [traitName]), ("number" == typeof data || null === data) && (frequencies[mapKey] = data);
                            }
                        });
                    }),
                    new structs__WEBPACK_IMPORTED_MODULE_1__.S(names, null, frequencies)
                );
            }
            function parseRawTraitStats(rawTraits) {
                if (null === rawTraits) return null;
                let names = {},
                    stats = {};
                return (
                    Object.keys(rawTraits).forEach((traitCategory) => {
                        Object.keys(rawTraits[traitCategory]).forEach((traitName) => {
                            if (!traitName.startsWith("__magic")) {
                                let data = rawTraits[traitCategory][traitName],
                                    mapKey = structs__WEBPACK_IMPORTED_MODULE_1__.S.mapKeyFor({ traitName, traitCategory });
                                if ((names[traitCategory] ? names[traitCategory].push(traitName) : (names[traitCategory] = [traitName]), "number" != typeof data && null !== data)) {
                                    let lastSale = null !== data.sale ? new structs__WEBPACK_IMPORTED_MODULE_2__.U(data.sale.amount, data.sale.unit, data.sale.listedAt) : null,
                                        floorPrice = null !== data.floor ? new structs__WEBPACK_IMPORTED_MODULE_2__.t(data.floor.amount, data.floor.unit) : null;
                                    stats[mapKey] = { lastSale, floorPrice };
                                }
                            }
                        });
                    }),
                    new structs__WEBPACK_IMPORTED_MODULE_1__.S(names, stats, null)
                );
            }
            function parseRawNft(contractAddress, rawNft) {
                var ref, ref1;
                let traitNames = {},
                    { traits } = rawNft;
                traits &&
                    Object.keys(traits).forEach((traitCategory) => {
                        traitNames[traitCategory] = [traits[traitCategory]];
                    });
                let nft = new structs__WEBPACK_IMPORTED_MODULE_0__.S(
                        contractAddress,
                        rawNft.tokenId,
                        traits ? new structs__WEBPACK_IMPORTED_MODULE_1__.S(traitNames) : null,
                        rawNft.imageUrl,
                        rawNft.owner,
                        null === (ref = rawNft.owner) || void 0 === ref ? void 0 : ref.address,
                        rawNft.numberOwnedByOwner,
                        null === (ref1 = rawNft.price) || void 0 === ref1 ? void 0 : ref1.marketplace,
                        rawNft.rarityRank,
                        rawNft.rarityScore,
                        rawNft.isSuspicious,
                        rawNft.name,
                        (function (rawAsks) {
                            if (!rawAsks) return null;
                            let parsedAsks = new structs__WEBPACK_IMPORTED_MODULE_3__.l();
                            return (
                                rawAsks.forEach((param) => {
                                    let { marketplace, ...rawTimedPrice } = param;
                                    parsedAsks.setTimedPrice((self1, timedPrice) => (self1.asks[marketplace] = timedPrice), rawTimedPrice);
                                }),
                                parsedAsks
                            );
                        })(rawNft.asks)
                    ),
                    { price, lastSale, highestBid, lastCostBasis } = rawNft;
                return (
                    nft.setTimedPrice((self1, timedPrice) => (self1.price = timedPrice), price),
                    nft.setTimedPrice((self1, timedPrice) => (self1.lastSale = timedPrice), lastSale),
                    nft.setTimedPrice((self1, timedPrice) => (self1.highestBid = timedPrice), highestBid),
                    nft.setTimedPrice((self1, timedPrice) => (self1.lastCostBasis = timedPrice), lastCostBasis),
                    nft
                );
            }
            function parseRawCollection(rawCollection) {
                let collection = new structs__WEBPACK_IMPORTED_MODULE_4__.F(
                        rawCollection.contractAddress,
                        rawCollection.name,
                        rawCollection.collectionSlug,
                        rawCollection.imageUrl,
                        rawCollection.totalSupply,
                        rawCollection.numberOwners ? rawCollection.numberOwners : null
                    ),
                    { floorPrice, volumeOneDay, volumeOneWeek, floorPriceOneDay, floorPriceOneWeek, bestCollectionBid, volumeFifteenMinutes, totalCollectionBidValue } = rawCollection;
                return (
                    collection.setPrice((self1, price) => (self1.topBid = price), bestCollectionBid),
                    collection.setPrice((self1, price) => (self1.bidValue = price), totalCollectionBidValue),
                    collection.setPrice((self1, price) => (self1.floorPrice = price), floorPrice),
                    collection.setPrice((self1, price) => (self1.volumeOneDay = price), volumeOneDay),
                    collection.setPrice((self1, price) => (self1.volumeOneWeek = price), volumeOneWeek),
                    collection.setPrice((self1, price) => (self1.floorPriceOneDay = price), floorPriceOneDay),
                    collection.setPrice((self1, price) => (self1.floorPriceOneWeek = price), floorPriceOneWeek),
                    collection.setPrice((self1, price) => (self1.volumeFifteenMinutes = price), volumeFifteenMinutes),
                    collection
                );
            }
        },
        14931: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                _: function () {
                    return DataGrid;
                },
            });
            var jsx_runtime = __webpack_require__(85893),
                react = __webpack_require__(67294),
                index_esm = __webpack_require__(11728),
                hooks = __webpack_require__(94208),
                index_production = __webpack_require__(62470),
                components = __webpack_require__(69976);
            let getOptions = (options) => ({ getItemId: (item) => item.id, itemIsSelectable: () => !0, estimateRowHeight: () => 0, ...options });
            var _tagged_template_literal = __webpack_require__(7297),
                styled_components_browser_esm = __webpack_require__(87379),
                DataTable = __webpack_require__(95407);
            function _templateObject() {
                let data = (0, _tagged_template_literal.Z)([
                    "\n  width: 100%;\n  height: ",
                    ";\n  position: relative;\n\n  .grid-row {\n    display: grid;\n    grid-gap: 12px;\n    padding-top: 6px;\n    padding-bottom: 6px;\n    grid-template-columns: repeat(\n      ",
                    ",\n      minmax(",
                    "px, 1fr)\n    );\n  }\n\n  &.interactive .grid-row > *:not(.selected):hover {\n    border: 1px solid ",
                    ";\n    box-shadow: 0 0 0 3px ",
                    ";\n  }\n",
                ]);
                return (
                    (_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            function _templateObject1() {
                let data = (0, _tagged_template_literal.Z)(["\n  border-top: 1px solid ", ";\n  padding-top: 12px;\n  border-bottom: 1px solid ", ";\n  padding-bottom: 12px;\n"]);
                return (
                    (_templateObject1 = function () {
                        return data;
                    }),
                    data
                );
            }
            let GridRows = styled_components_browser_esm.ZP.div(
                    _templateObject(),
                    (param) => {
                        let { height } = param;
                        return height;
                    },
                    (param) => {
                        let { itemsPerRow } = param;
                        return itemsPerRow;
                    },
                    (param) => {
                        let { itemWidth } = param;
                        return itemWidth;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.white;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.white;
                    }
                ),
                GridHeader = (0, styled_components_browser_esm.ZP)(DataTable.Tr)(
                    _templateObject1(),
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey600;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey600;
                    }
                ),
                DataGrid = (props) => {
                    let { onItemSelect, onItemsSelect, selectedItemIds, Header } = props,
                        countData = props.data.length,
                        usingSelect = "function" == typeof onItemSelect && "function" == typeof onItemsSelect,
                        definiteOptions = getOptions(props.options),
                        countSelectedIds = Object.keys(selectedItemIds || {}).length,
                        [thMeasure, thMeasureRef] = (0, hooks.xE)();
                    return (0, jsx_runtime.jsxs)("div", {
                        style: { width: "100%", height: "100%" },
                        children: [
                            (0, jsx_runtime.jsxs)(GridHeader, {
                                ref: thMeasureRef,
                                style: { alignItems: "flex-end" },
                                children: [
                                    usingSelect
                                        ? (0, jsx_runtime.jsx)(components.XZ, {
                                              padding: "0px 12px 0px 12px",
                                              checked: countSelectedIds === countData,
                                              onChange: onItemsSelect,
                                              indeterminate: countSelectedIds < countData && 0 !== countSelectedIds,
                                          })
                                        : null,
                                    Header ? (0, jsx_runtime.jsx)(Header, {}) : null,
                                ],
                            }),
                            (0, jsx_runtime.jsx)(index_esm.Z, {
                                children(param) {
                                    let { width, height } = param;
                                    return (0, jsx_runtime.jsx)(GridVirtualizer, { ...props, width: width, height: height - (thMeasure ? thMeasure.height : 0), options: definiteOptions, usingSelect: usingSelect });
                                },
                            }),
                        ],
                    });
                },
                GridVirtualizer = (props) => {
                    let { data, width, height, options, itemWidth, renderItem, onItemHover, onItemSelect, selectedItemIds = {} } = props,
                        usingHover = "function" == typeof onItemHover,
                        usingSelect = "function" == typeof onItemSelect,
                        itemsPerRow = Math.floor((width - 24) / itemWidth),
                        currCountRows = Math.ceil(data.length / itemsPerRow),
                        gridRowsRef = react.useRef(null),
                        virtualizerRef = react.useRef(null),
                        visibleRangeRef = react.useRef([0, 0]),
                        loadMoreTriggersRef = react.useRef({}),
                        rowVirtualizer = (0, index_production.useVirtualizer)({
                            count: currCountRows,
                            overscan: 4,
                            estimateSize: react.useCallback(() => options.estimateRowHeight(width / itemsPerRow) + 16, [width, itemsPerRow, options.estimateRowHeight]),
                            rangeExtractor: react.useCallback((range) => ((visibleRangeRef.current = [Math.max(range.startIndex - 12 / itemsPerRow, 0), range.endIndex]), (0, index_production.defaultRangeExtractor)(range)), []),
                            getScrollElement: () => virtualizerRef.current,
                        }),
                        virtualRows = rowVirtualizer.getVirtualItems();
                    react.useEffect(() => {
                        setTimeout(() => rowVirtualizer.measure(), 0);
                    }, [data, itemWidth, rowVirtualizer]),
                        react.useEffect(() => {
                            loadMoreTriggersRef.current = {};
                        }, [currCountRows]),
                        react.useEffect(() => {
                            if ("function" == typeof props.loadMoreItems) {
                                let triggerIndex = currCountRows - 4,
                                    lastVirtualRow = virtualRows[virtualRows.length - 1],
                                    hasTriggedForIndex = Boolean(loadMoreTriggersRef.current[triggerIndex]);
                                lastVirtualRow && !hasTriggedForIndex && lastVirtualRow.index >= triggerIndex && ((loadMoreTriggersRef.current[triggerIndex] = !0), props.loadMoreItems());
                            }
                        }, [currCountRows, virtualRows, props.loadMoreItems]),
                        react.useEffect(() => {
                            var ref;
                            let timeoutRef;
                            if (!virtualizerRef || !virtualizerRef.current) return;
                            let scrollListener = () => {
                                var ref, ref1;
                                clearTimeout(timeoutRef),
                                    (null === (ref = gridRowsRef.current) || void 0 === ref ? void 0 : ref.classList.contains("interactive")) &&
                                        (null === (ref1 = gridRowsRef.current) || void 0 === ref1 || ref1.classList.remove("interactive")),
                                    (timeoutRef = setTimeout(function () {
                                        var ref;
                                        null === (ref = gridRowsRef.current) || void 0 === ref || ref.classList.add("interactive");
                                    }, 250));
                            };
                            return (
                                null === (ref = virtualizerRef.current) || void 0 === ref || ref.addEventListener("scroll", scrollListener),
                                () => {
                                    var ref;
                                    null === (ref = virtualizerRef.current) || void 0 === ref || ref.removeEventListener("scroll", scrollListener);
                                }
                            );
                        }, [gridRowsRef.current, virtualizerRef.current]);
                    let renderItemsForRow = (rowIndex) => {
                        let endIndex = (rowIndex + 1) * itemsPerRow,
                            startIndex = endIndex - itemsPerRow,
                            renderItems = [];
                        for (let i = startIndex; i < endIndex; i++)
                            if (data[i]) {
                                let renderProps = {
                                    key: "data-grid-row-".concat(rowIndex, "-item-").concat(i),
                                    item: data[i],
                                    className: Boolean(selectedItemIds[options.getItemId(data[i])]) ? "selected grid-item grid-item-".concat(i) : "grid-item grid-item-".concat(i),
                                    isSelected: Boolean(selectedItemIds[options.getItemId(data[i])]),
                                    isSelectable: usingSelect && options.itemIsSelectable(data[i]),
                                };
                                usingSelect &&
                                    (renderProps.onClick = function () {
                                        onItemSelect(data[i]);
                                    }),
                                    usingHover &&
                                        (renderProps.onMouseEnter = function () {
                                            onItemHover(data[i], { itemIndex: i, virtualStartIndex: visibleRangeRef.current[0] * itemsPerRow });
                                        }),
                                    renderItems.push(renderItem(renderProps));
                            }
                        return renderItems;
                    };
                    return (0, jsx_runtime.jsx)("div", {
                        ref: virtualizerRef,
                        style: { width: "".concat(width, "px"), height: "".concat(height, "px"), overflow: "auto", paddingLeft: "".concat(12, "px"), paddingRight: "".concat(12, "px") },
                        children: (0, jsx_runtime.jsx)(GridRows, {
                            ref: gridRowsRef,
                            height: rowVirtualizer.getTotalSize(),
                            itemWidth: itemWidth / itemsPerRow,
                            className: usingHover || usingSelect ? "grid-rows interactive" : "grid-rows",
                            itemsPerRow: itemsPerRow,
                            children: rowVirtualizer.getVirtualItems().map((virtualRow) => {
                                let rowItems = renderItemsForRow(virtualRow.index);
                                return (0, jsx_runtime.jsx)(VirtualRow, { ...virtualRow, children: rowItems }, virtualRow.key);
                            }),
                        }),
                    });
                },
                VirtualRow = (props) =>
                    (0, jsx_runtime.jsx)(
                        "div",
                        { ref: props.measureElement, className: "grid-row", style: { top: 0, left: 0, width: "100%", position: "absolute", transform: "translateY(".concat(props.start, "px)") }, children: props.children },
                        props.index
                    );
        },
        95407: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                UM: function () {
                    return AddressCell;
                },
                XX: function () {
                    return CellAnimator;
                },
                WV: function () {
                    return ChangeCell;
                },
                wQ: function () {
                    return DataTable;
                },
                W8: function () {
                    return DataTableRowHeight1;
                },
                TX: function () {
                    return DateCell;
                },
                M4: function () {
                    return TextCell;
                },
                Tr: function () {
                    return Tr;
                },
            });
            var DataTableRowHeight,
                DataTableRowHeight1,
                jsx_runtime = __webpack_require__(85893),
                react_table = __webpack_require__(79521);
            let getConditionalSelectHeaderCheckboxProps = (param) => {
                let { headerProps, checkIfRowIsSelectable } = param,
                    checkIfAllSelectableRowsSelected = (rows) => rows.filter(checkIfRowIsSelectable).every((row) => row.isSelected),
                    checkboxProps = headerProps.getToggleAllRowsSelectedProps(),
                    disabled = 0 === headerProps.rows.filter(checkIfRowIsSelectable).length,
                    checked = !disabled && checkIfAllSelectableRowsSelected(headerProps.rows),
                    indeterminate = !checked && headerProps.rows.some((row) => row.isSelected),
                    onChange = () => {
                        indeterminate
                            ? headerProps.toggleAllRowsSelected(!1)
                            : checkIfAllSelectableRowsSelected(headerProps.rows)
                            ? headerProps.rows.forEach((row) => {
                                  headerProps.toggleRowSelected(row.id, !1);
                              })
                            : headerProps.rows.forEach((row) => {
                                  let checked = checkIfRowIsSelectable(row);
                                  headerProps.toggleRowSelected(row.id, checked);
                              });
                    };
                return { ...checkboxProps, checked, onChange, disabled, indeterminate };
            };
            function usePercentageColumns(hooks) {
                hooks.useInstance.push(useInstance), hooks.getRowProps.push(getRowStyles), hooks.getHeaderProps.push(getHeaderProps), hooks.getCellProps.push(getCellProps);
            }
            usePercentageColumns.pluginName = "usePercentageColumns";
            let getRowStyles = (props, param) => {
                    let { _ } = param;
                    return [props, { style: { display: "flex" } }];
                },
                generateStyleForHeader = (column) => ({ width: "auto", minWidth: 0, flex: /^[0-9]+%$/.test(column.totalWidth) ? "1 1 ".concat(column.totalWidth) : "0 0 ".concat(column.totalWidth, "px") }),
                getHeaderProps = (props, param) => {
                    let { column } = param;
                    return [props, { style: generateStyleForHeader(column) }];
                },
                getCellProps = (props, param) => {
                    let { cell } = param;
                    return [props, { style: generateStyleForHeader(cell.column) }];
                },
                useInstance = (instance) => {
                    instance.headers.forEach((header) => {
                        /^[0-9]+%$/.test(header.width) && (header.totalWidth = header.width);
                    }),
                        instance.flatHeaders.forEach((header) => {
                            if (header.getResizerProps) {
                                let oldGetResizeProps = header.getResizerProps;
                                header.getResizerProps = (userProps) => {
                                    let { onMouseDown: oldOnMouseDown, ...propsToSpread } = oldGetResizeProps(userProps);
                                    return {
                                        ...propsToSpread,
                                        onMouseDown(e) {
                                            let headersToResize = (function (header) {
                                                let leafHeaders = [],
                                                    recurseHeader = (header) => {
                                                        header.columns && header.columns.length && header.columns.map(recurseHeader), leafHeaders.push(header);
                                                    };
                                                return recurseHeader(header), leafHeaders;
                                            })(header);
                                            return (
                                                headersToResize.forEach((header, index) => {
                                                    header.totalWidth = header.el.getBoundingClientRect().width;
                                                }),
                                                oldOnMouseDown(e, header)
                                            );
                                        },
                                    };
                                };
                            }
                        });
                };
            var react = __webpack_require__(67294),
                index_esm = __webpack_require__(11728),
                hooks = __webpack_require__(94208),
                components = __webpack_require__(69976),
                index_production = __webpack_require__(62470);
            ((DataTableRowHeight = DataTableRowHeight1 || (DataTableRowHeight1 = {}))[(DataTableRowHeight.SMALL = 30)] = "SMALL"),
                (DataTableRowHeight[(DataTableRowHeight.MEDIUM = 38)] = "MEDIUM"),
                (DataTableRowHeight[(DataTableRowHeight.LARGE = 50)] = "LARGE");
            let DEFAULT_BORDERS_OPTIONS = { top: !1, row: !1, head: !0 },
                DEFAULT_PADDING_OPTIONS = { rowsTop: 4, expander: 20, leftRight: !1 },
                DEFAULT_OPTIONS = {
                    fadeIn: !1,
                    borders: DEFAULT_BORDERS_OPTIONS,
                    padding: DEFAULT_PADDING_OPTIONS,
                    rowHeight: DataTableRowHeight1.SMALL,
                    getRowId: (original) => original.id,
                    rowLinkProps: () => null,
                    expandHeight: () => 0,
                    rowClassname: () => "",
                    rowIsSelectable: () => !0,
                    firstHeaderAlign: "left",
                    usePercentageColumns: !1,
                };
            var fast_equals = __webpack_require__(58367),
                _tagged_template_literal = __webpack_require__(7297),
                styled_components_browser_esm = __webpack_require__(87379);
            function _templateObject() {
                let data = (0, _tagged_template_literal.Z)([
                    "\n  width: 100%;\n  height: 100%;\n\n  border-top: ",
                    " ",
                    ";\n  padding-top: ",
                    ";\n\n  .select.cell,\n  .select.columnheader {\n    min-width: max-content !important;\n  }\n\n  .highlighted.columnheader {\n    color: white;\n  }\n\n  .sortable.columnheader {\n    cursor: pointer !important;\n  }\n\n  .row-control-hover {\n    opacity: 0;\n    pointer-events: none;\n  }\n\n  .rows {\n    border-top: ",
                    " ",
                    ";\n  }\n  .interactive.rows > * > .row:hover:not(.selected) {\n    background-color: ",
                    ";\n\n    .row-control-hover {\n      opacity: 1;\n      pointer-events: all;\n    }\n    .row-hover-background {\n      background-color: ",
                    ";\n    }\n  }\n\n  .columnheader {\n    padding-bottom: ",
                    ";\n  }\n\n  .cell > * {\n    height: max-content !important;\n  }\n\n  .row .expanded {\n    left: 0;\n    width: 100%;\n    cursor: auto;\n    border: 1px solid ",
                    ";\n    padding: 20px;\n    overflow: hidden;\n    position: absolute;\n    background: ",
                    ";\n    border-bottom-left-radius: 4px;\n    border-bottom-right-radius: 4px;\n  }\n  & .row + .row {\n    border-top: ",
                    " ",
                    ";\n  }\n  .row.selected {\n    background: ",
                    " !important;\n  }\n",
                ]);
                return (
                    (_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            let Tr = react.forwardRef((props, forwardedRef) => {
                let { ml, mr, pl, pr, style, className, isExpanded, isSelected, isInteractive, ...restProps } = props;
                return (0, jsx_runtime.jsx)("div", {
                    ...restProps,
                    ref: forwardedRef,
                    role: "row",
                    className: "row ".concat(className, " ").concat(isExpanded || isSelected ? "selected" : ""),
                    style: {
                        alignItems: "flex-start",
                        ...style,
                        flex: "0 1 auto",
                        cursor: isInteractive ? "pointer" : "auto",
                        display: "flex",
                        overflow: "hidden",
                        minWidth: "0px",
                        marginLeft: ml ? "12px" : "0px",
                        marginRight: mr ? "12px" : "0px",
                        paddingLeft: pl ? "12px" : "0px",
                        paddingRight: pr ? "12px" : "0px",
                        borderRadius: isExpanded ? "4px" : "0px",
                    },
                });
            });
            Tr.displayName = "Tr";
            let LinkTr = (props) => {
                let { pl, pr, style, className, ...restProps } = props;
                return (0, jsx_runtime.jsx)(components.rU, {
                    ...restProps,
                    role: "row",
                    className: "row ".concat(className),
                    applyStyles: !1,
                    style: { alignItems: "flex-start", ...style, flex: "0 1 auto", display: "flex", overflow: "hidden", minWidth: "0px", paddingLeft: pl ? "12px" : "0px", paddingRight: pr ? "12px" : "0px" },
                });
            };
            LinkTr.displayName = "LinkTr";
            let Th = (props) =>
                    (0, jsx_runtime.jsx)(components.xv, {
                        ...props,
                        role: "columnheader",
                        color: "grey300",
                        weight: 700,
                        variant: "body",
                        transform: "uppercase",
                        className: ""
                            .concat(props.className, " columnheader ")
                            .concat(props.select && "select", " ")
                            .concat(props.highlighted && "highlighted", " ")
                            .concat(props.sortable && "sortable"),
                        style: { ...props.style, display: "flex", alignItems: "center", justifyContent: props.justify || "flex-end" },
                    }),
                Td = (props) =>
                    (0, jsx_runtime.jsx)(components.xv, {
                        ...props,
                        role: "cell",
                        color: "grey100",
                        variant: "body",
                        className: "".concat(props.className, " ").concat(props.select ? "cell select" : "cell"),
                        style: { ...props.style, height: props.height, display: "flex", alignItems: "center", justifyContent: props.justify || "flex-end" },
                    }),
                Table = styled_components_browser_esm.ZP.div(
                    _templateObject(),
                    (param) => {
                        let { borders } = param;
                        return borders.top ? "1px solid" : "0px solid";
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey600;
                    },
                    (param) => {
                        let { borders } = param;
                        return borders.top ? "12px" : "";
                    },
                    (param) => {
                        let { borders } = param;
                        return borders.head ? "1px solid" : "0px solid";
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey600;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey800;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey800;
                    },
                    (param) => {
                        let { borders } = param;
                        return borders.head ? "12px" : "";
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey600;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey900;
                    },
                    (param) => {
                        let { borders } = param;
                        return borders.row ? "1px solid" : "0px solid";
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey600;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey600;
                    }
                ),
                MemoizedRow = react.memo(
                    function (param) {
                        let {
                                data: { rows, prepareRow, onRowClick, onRowHover, onRowExpand, usingSelect, tableOptions, tableControls },
                                index,
                                style: injectStyles,
                                visibleRangeRef,
                            } = param,
                            row = rows[index];
                        prepareRow(row);
                        let usingHover = "function" == typeof onRowHover,
                            usingClick = "function" == typeof onRowClick,
                            usingExpand = "function" == typeof onRowExpand,
                            onClick = () => {
                                let shouldExpand = !0;
                                usingClick && (shouldExpand = onRowClick(row.original, index)), usingExpand && shouldExpand && row.toggleRowExpanded();
                            },
                            onMouseEnter = () => {
                                usingHover && onRowHover(row.original, { originalIndex: index, virtualStartIndex: visibleRangeRef.current[0] });
                            },
                            renderCell = (cell, index) =>
                                (0, jsx_runtime.jsx)(
                                    Td,
                                    { height: "".concat(tableOptions.rowHeight, "px"), select: 0 === index && usingSelect, justify: cell.column.justify, ...cell.getCellProps(), children: cell.render("Cell", { tableOptions }) },
                                    cell.getCellProps().key
                                ),
                            linkProps = tableOptions.rowLinkProps(row.original, index),
                            sharedProps = {
                                ...row.getRowProps({ style: injectStyles }),
                                pl: !usingSelect && tableOptions.padding.leftRight,
                                pr: tableOptions.padding.leftRight,
                                onClick: onClick,
                                className: tableOptions.rowClassname(row),
                                isExpanded: row.isExpanded,
                                isSelected: row.isSelected,
                                onMouseEnter: onMouseEnter,
                                isInteractive: usingClick || usingExpand || Boolean(linkProps),
                            };
                        return linkProps
                            ? (0, jsx_runtime.jsxs)(LinkTr, {
                                  ...linkProps,
                                  ...sharedProps,
                                  children: [
                                      row.cells.map(renderCell),
                                      row.isExpanded && usingExpand
                                          ? (0, jsx_runtime.jsx)("div", {
                                                style: { top: "".concat(tableOptions.rowHeight, "px"), height: "calc(100% - ".concat(tableOptions.rowHeight, "px)") },
                                                onClick: (e) => e.stopPropagation(),
                                                className: "expanded",
                                                children: onRowExpand(row.original, tableControls),
                                            })
                                          : null,
                                  ],
                              })
                            : (0, jsx_runtime.jsxs)(Tr, {
                                  ...sharedProps,
                                  children: [
                                      row.cells.map(renderCell),
                                      row.isExpanded && usingExpand
                                          ? (0, jsx_runtime.jsx)("div", {
                                                style: { top: "".concat(tableOptions.rowHeight, "px"), height: "calc(100% - ".concat(tableOptions.rowHeight, "px)") },
                                                onClick: (e) => e.stopPropagation(),
                                                className: "expanded",
                                                children: onRowExpand(row.original, tableControls),
                                            })
                                          : null,
                                  ],
                              });
                    },
                    (prevProps, nextProps) => {
                        let doOriginalsEqual = (function (prevProps, nextProps) {
                                let prevValue = prevProps.data.rows[prevProps.index],
                                    nextValue = nextProps.data.rows[nextProps.index];
                                return !!prevValue.original.equals && prevValue.original.equals(nextValue.original);
                            })(prevProps, nextProps),
                            doesMetadataEqual = (function (prevProps, nextProps) {
                                let prevValue = prevProps.data.rows[prevProps.index],
                                    nextValue = nextProps.data.rows[nextProps.index];
                                return (
                                    (0, fast_equals.deepEqual)(prevProps.style, nextProps.style) &&
                                    prevValue.isSelected === nextValue.isSelected &&
                                    prevValue.isExpanded === nextValue.isExpanded &&
                                    prevProps.data.columnCount === nextProps.data.columnCount &&
                                    prevProps.data.tableOptions.rowLinkProps === nextProps.data.tableOptions.rowLinkProps &&
                                    prevProps.data.tableOptions.padding.leftRight === nextProps.data.tableOptions.padding.leftRight
                                );
                            })(prevProps, nextProps);
                        return doOriginalsEqual && doesMetadataEqual;
                    }
                ),
                DataTable = (props) => {
                    let { id, data, columns, options = {}, headerSort, onRowClick, onRowHover, onRowExpand, onRowSelect, onRowsSelect, selectedRowIds, onHeaderSortChange } = props,
                        tableOptions = { ...DEFAULT_OPTIONS, ...options, borders: { ...DEFAULT_BORDERS_OPTIONS, ...options.borders }, padding: { ...DEFAULT_PADDING_OPTIONS, ...options.padding } },
                        tablePlugins = (function (tableProps, tableOptions) {
                            let tablePlugins = [react_table.useFlexLayout];
                            tableOptions.usePercentageColumns && tablePlugins.push(usePercentageColumns);
                            let usingExpand = "function" == typeof tableProps.onRowExpand,
                                usingSelect = "function" == typeof tableProps.onRowSelect && "function" == typeof tableProps.onRowsSelect;
                            return (
                                usingExpand &&
                                    (tablePlugins.push(react_table.useExpanded),
                                    tablePlugins.push((hooks) => {
                                        hooks.visibleColumns.push((columns) => [...columns, { id: "expander", Cell: ExpanderCell, width: "5%" }]);
                                    })),
                                usingSelect &&
                                    (tablePlugins.push(react_table.useRowSelect),
                                    tablePlugins.push((hooks) => {
                                        hooks.visibleColumns.push((columns) => [{ id: "selection", Cell: CheckboxCell(tableProps, tableOptions), Header: CheckboxHeader(tableProps, tableOptions), width: "max-content" }, ...columns]);
                                    })),
                                tablePlugins
                            );
                        })(props, tableOptions),
                        usingSort = Boolean(headerSort) && "function" == typeof onHeaderSortChange,
                        usingLink = "function" == typeof options.rowLinkProps,
                        usingSelect = "function" == typeof onRowSelect && "function" == typeof onRowsSelect,
                        [isSorted, setIsSorted] = react.useState(!1),
                        [thMeasure, thMeasureRef] = (0, hooks.xE)(),
                        {
                            rows,
                            state: { expanded },
                            headers,
                            prepareRow,
                            getTableProps,
                            getTableBodyProps,
                            toggleAllRowsExpanded,
                        } = (0, react_table.useTable)(
                            {
                                data,
                                columns,
                                getRowId: (original) => tableOptions.getRowId(original),
                                initialState: { selectedRowIds },
                                autoResetExpanded: !1,
                                autoResetSelectedRows: !1,
                                useControlledState: (state) => react.useMemo(() => (selectedRowIds ? { ...state, selectedRowIds } : state), [state, selectedRowIds]),
                            },
                            ...tablePlugins
                        ),
                        getItemSize = (rowIndex) => {
                            let row = rows[rowIndex],
                                isExpanded = Boolean(expanded && expanded[row.id]);
                            if (!isExpanded) return tableOptions.rowHeight;
                            {
                                let expandedHeight = tableOptions.expandHeight(row.original);
                                return tableOptions.rowHeight + 2 * tableOptions.padding.expander + expandedHeight;
                            }
                        },
                        rowData = { rows, prepareRow, onRowClick, onRowHover, onRowExpand, columnCount: columns.length, usingSelect, tableOptions, tableControls: { scrollToOffset() {}, toggleAllRowsExpanded } },
                        handleHeaderClick = (key) => {
                            usingSort && (setIsSorted(!0), rowData.tableControls.scrollToOffset(0), onHeaderSortChange(key));
                        };
                    return (0, jsx_runtime.jsxs)(Table, {
                        ...getTableProps(),
                        borders: tableOptions.borders,
                        children: [
                            (0, jsx_runtime.jsx)(Tr, {
                                ml: tableOptions.padding.leftRight,
                                mr: tableOptions.padding.leftRight,
                                ref: thMeasureRef,
                                style: { alignItems: "flex-end" },
                                children: headers.map((column, index) => {
                                    let isHighlighted = isSorted && usingSort && (null == headerSort ? void 0 : headerSort.name) === column.sortKey && void 0 !== column.sortKey;
                                    return (0, jsx_runtime.jsxs)(
                                        Th,
                                        {
                                            select: 0 === index && usingSelect,
                                            onClick() {
                                                column.sortKey && handleHeaderClick(column.sortKey);
                                            },
                                            justify: column.justify,
                                            sortable: void 0 !== column.sortKey,
                                            highlighted: isHighlighted,
                                            ...column.getHeaderProps(),
                                            children: [
                                                column.render("Header"),
                                                isHighlighted &&
                                                    (0, jsx_runtime.jsx)(components.JO, {
                                                        style: { marginLeft: "8px" },
                                                        size: "tight",
                                                        name: "arrow-up",
                                                        color: "white",
                                                        transform: "rotate(".concat((null == headerSort ? void 0 : headerSort.dir) === "ASC" ? 0 : -180, "deg)"),
                                                    }),
                                            ],
                                        },
                                        column.getHeaderProps().key
                                    );
                                }),
                            }),
                            (0, jsx_runtime.jsx)(TableBodyVirtualizedRows, {
                                id: id,
                                rows: rows,
                                options: tableOptions,
                                rowData: rowData,
                                thHeight: (null == thMeasure ? void 0 : thMeasure.height) || 0,
                                className: usingLink || "function" == typeof onRowClick || usingSelect || "function" == typeof onRowExpand ? "interactive rows" : "rows",
                                getRowSize: getItemSize,
                                loadMoreRows: props.loadMoreItems,
                                tableBodyProps: getTableBodyProps(),
                            }),
                        ],
                    });
                },
                TableBodyVirtualizedRows = (props) => {
                    let visibleRangeRef = react.useRef([0, 0]),
                        loadMoreTriggersRef = react.useRef({}),
                        virtualizerRef = react.useRef(null),
                        rowVirtualizer = (0, index_production.useVirtualizer)({
                            count: props.rows.length,
                            overscan: 12,
                            estimateSize: props.getRowSize,
                            rangeExtractor: react.useCallback((range) => ((visibleRangeRef.current = [Math.max(range.startIndex - 12, 0), range.endIndex]), (0, index_production.defaultRangeExtractor)(range)), []),
                            getScrollElement: () => virtualizerRef.current,
                            enableSmoothScroll: !1,
                        }),
                        virtualRows = rowVirtualizer.getVirtualItems();
                    return (
                        react.useEffect(() => {
                            loadMoreTriggersRef.current = {};
                        }, [props.rows.length]),
                        react.useEffect(() => {
                            rowVirtualizer.measure(), (props.rowData.tableControls.scrollToOffset = rowVirtualizer.scrollToOffset);
                        }, [props.rows, rowVirtualizer]),
                        react.useEffect(() => {
                            let timeoutRef;
                            if (!virtualizerRef || !virtualizerRef.current) return;
                            let scrollListener = () => {
                                var ref, ref1;
                                clearTimeout(timeoutRef),
                                    (null === (ref = virtualizerRef.current) || void 0 === ref ? void 0 : ref.classList.contains("interactive")) &&
                                        (null === (ref1 = virtualizerRef.current) || void 0 === ref1 || ref1.classList.remove("interactive")),
                                    (timeoutRef = setTimeout(function () {
                                        var ref;
                                        null === (ref = virtualizerRef.current) || void 0 === ref || ref.classList.add("interactive");
                                    }, 250));
                            };
                            return (
                                virtualizerRef.current.addEventListener("scroll", scrollListener),
                                () => {
                                    var ref;
                                    null === (ref = virtualizerRef.current) || void 0 === ref || ref.removeEventListener("scroll", scrollListener);
                                }
                            );
                        }, [virtualizerRef.current]),
                        react.useEffect(() => {
                            if ("function" == typeof props.loadMoreRows) {
                                let totalCount = props.rows.length,
                                    triggerIndex = totalCount - 20,
                                    lastVirtualRow = virtualRows[virtualRows.length - 1],
                                    hasTriggedForIndex = Boolean(loadMoreTriggersRef.current[triggerIndex]);
                                lastVirtualRow && !hasTriggedForIndex && lastVirtualRow.index >= triggerIndex && ((loadMoreTriggersRef.current[triggerIndex] = !0), props.loadMoreRows());
                            }
                        }, [props.rows, virtualRows, props.loadMoreRows]),
                        (0, jsx_runtime.jsx)(index_esm.Z, {
                            children(param) {
                                let { width, height } = param;
                                return (0, jsx_runtime.jsx)("div", {
                                    ...props.tableBodyProps,
                                    id: props.id,
                                    ref: virtualizerRef,
                                    style: { width: "".concat(width, "px"), height: "".concat(height - props.thHeight, "px"), overflow: "auto", paddingTop: "".concat(props.options.padding.rowsTop, "px") },
                                    className: props.className,
                                    onMouseLeave: props.onMouseLeave,
                                    children: (0, jsx_runtime.jsx)("div", {
                                        style: { width: "100%", height: "".concat(rowVirtualizer.getTotalSize(), "px"), position: "relative" },
                                        children: virtualRows.map((virtualRow) =>
                                            (0, jsx_runtime.jsx)(
                                                MemoizedRow,
                                                {
                                                    data: props.rowData,
                                                    index: virtualRow.index,
                                                    style: { position: "absolute", top: 0, left: 0, width: "100%", height: "".concat(virtualRow.size, "px"), transform: "translateY(".concat(virtualRow.start, "px)") },
                                                    visibleRangeRef: visibleRangeRef,
                                                },
                                                virtualRow.index
                                            )
                                        ),
                                    }),
                                });
                            },
                        })
                    );
                },
                CheckboxHeader = (tableProps, tableOptions) =>
                    function (props) {
                        let checkboxProps = getConditionalSelectHeaderCheckboxProps({ headerProps: props, checkIfRowIsSelectable: tableOptions.rowIsSelectable }),
                            onChange = () => {
                                tableProps.onRowsSelect(props.data);
                            },
                            checkboxPropsForRangeSelect = { ...checkboxProps, onChange };
                        return (0, jsx_runtime.jsx)(components.XZ, { ...checkboxPropsForRangeSelect, padding: "0px 12px 0px 0px" });
                    },
                CheckboxCell = (tableProps, tableOptions) =>
                    function (props) {
                        let disabled = !tableOptions.rowIsSelectable(props.row),
                            onChange = (e) => {
                                disabled || (e.stopPropagation(), tableProps.onRowSelect(props.row.original, props.data));
                            },
                            checkboxProps = { disabled, ...props.row.getToggleRowSelectedProps({ onChange }) };
                        return (0, jsx_runtime.jsx)(components.XZ, { ...checkboxProps, padding: "12px" });
                    },
                ExpanderCell = (param) => {
                    let { row } = param;
                    return (0, jsx_runtime.jsx)(components.JO, { name: "chevron", color: "grey300", style: { marginLeft: "20px" }, transform: row.isExpanded ? "rotate(180deg)" : "rotate(0deg)" });
                };
            var dayjs_min = __webpack_require__(27484),
                dayjs_min_default = __webpack_require__.n(dayjs_min),
                lib_esm = __webpack_require__(19485),
                webthree = __webpack_require__(58870);
            let TextCell = (props) => {
                    var ref, ref1;
                    return (0, jsx_runtime.jsx)(components.xv, {
                        ...props.textProps,
                        color: props.cell.value ? (null === (ref = props.textProps) || void 0 === ref ? void 0 : ref.color) : "grey300",
                        variant: (null === (ref1 = props.textProps) || void 0 === ref1 ? void 0 : ref1.variant) || "body",
                        children: props.cell.value || "-",
                    });
                },
                DateCell = (props) => (0, jsx_runtime.jsx)(components.xv, { variant: "body", children: props.cell.value ? dayjs_min_default()(props.cell.value).format("MM/DD/YY") : "-" }),
                ChangeCell = (props) => {
                    if ("number" != typeof props.cell.value) return (0, jsx_runtime.jsx)(TextCell, { ...props });
                    {
                        let safeValue = Math.min(props.cell.value, 1e4),
                            valueString = safeValue.toFixed(2),
                            prefix = "-" === valueString[0] ? "-" : "+",
                            display = props.parentheses ? "(".concat(valueString, "%)") : "".concat(valueString, "%");
                        return (0, jsx_runtime.jsx)(components.xv, { color: "-" === prefix ? "orange400" : "green300", shadow: !0, variant: props.textVariant || "body", children: display });
                    }
                },
                AddressCell = (props) => {
                    var ref, ref1;
                    let { address: userAddress } = react.useContext(webthree._y),
                        address = null === (ref = props.cell.value) || void 0 === ref ? void 0 : ref.address,
                        username = null === (ref1 = props.cell.value) || void 0 === ref1 ? void 0 : ref1.username,
                        displayName = username || address;
                    if (!displayName) return (0, jsx_runtime.jsx)(components.xv, { ...props.textProps, children: "-" });
                    if (null !== userAddress && displayName.toLowerCase() === userAddress.toLowerCase()) return (0, jsx_runtime.jsx)(components.xv, { color: "green300", ...props.textProps, children: "You" });
                    {
                        let checksumAddress = lib_esm.Kn(address),
                            truncatedAddress = checksumAddress.slice(2, 8);
                        return (0, jsx_runtime.jsx)(components.rU, {
                            to: "/".concat(address).concat(props.linkAddress ? "?contractAddress=".concat(props.linkAddress) : ""),
                            style: { maxWidth: "100%" },
                            children: (0, jsx_runtime.jsx)(components.xv, { ...props.textProps, title: Boolean(username) ? displayName : checksumAddress, children: Boolean(username) ? displayName : truncatedAddress }),
                        });
                    }
                };
            var theme = __webpack_require__(87074);
            function CellAnimator_templateObject() {
                let data = (0, _tagged_template_literal.Z)(["\n    from {\n      fill: ", ";\n      color: ", ";\n    }\n  "]);
                return (
                    (CellAnimator_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            function _templateObject1() {
                let data = (0, _tagged_template_literal.Z)(["\n    from {\n      background: ", ";\n    }\n    to {\n      background: initial;\n    }\n  "]);
                return (
                    (_templateObject1 = function () {
                        return data;
                    }),
                    data
                );
            }
            function _templateObject2() {
                let data = (0, _tagged_template_literal.Z)(["\n    from {\n      fill: ", ";\n      color: ", ";\n    }\n  "]);
                return (
                    (_templateObject2 = function () {
                        return data;
                    }),
                    data
                );
            }
            function _templateObject3() {
                let data = (0, _tagged_template_literal.Z)(["\n    from {\n      background: ", ";\n    }\n    to {\n      background: initial;\n    }\n  "]);
                return (
                    (_templateObject3 = function () {
                        return data;
                    }),
                    data
                );
            }
            function _templateObject4() {
                let data = (0, _tagged_template_literal.Z)([
                    "\n  padding: 4px;\n  display: inherit;\n  transform: translateX(4px);\n\n  &.increase:not(.false) {\n    animation: 1.5s ",
                    " ease-out;\n  }\n  &.increase * {\n    animation: 1.5s ",
                    " ease-out;\n  }\n\n  &.decrease:not(.false) {\n    animation: 1.5s ",
                    " ease-out;\n  }\n  &.decrease * {\n    animation: 1.5s ",
                    " ease-out;\n  }\n",
                ]);
                return (
                    (_templateObject4 = function () {
                        return data;
                    }),
                    data
                );
            }
            let CellAnimator = (props) => {
                    let { animateBackround = !0 } = props,
                        oldValueRef = react.useRef(props.value),
                        isMountedRef = react.useRef(!1);
                    react.useEffect(
                        () => (
                            (isMountedRef.current = !0),
                            () => {
                                isMountedRef.current = !1;
                            }
                        ),
                        []
                    ),
                        react.useEffect(() => {
                            oldValueRef.current = props.value;
                        }, [props.value]);
                    let className = react.useMemo(() => (isMountedRef.current ? (props.value > oldValueRef.current ? "increase" : "decrease") : ""), [props.value]);
                    return (0, jsx_runtime.jsx)(AnimationController, { className: "".concat(className, " ").concat(animateBackround), children: props.children }, props.value);
                },
                childrenIncreaseAnimation = (props) => (0, styled_components_browser_esm.F4)(CellAnimator_templateObject(), props.theme.color.green300, props.theme.color.green300),
                backgroundIncreaseAnimation = (props) => (0, styled_components_browser_esm.F4)(_templateObject1(), (0, theme.a7)(props.theme.color.green300, 0.5)),
                childrenDecreaseAnimation = (props) => (0, styled_components_browser_esm.F4)(_templateObject2(), props.theme.color.orange400, props.theme.color.orange400),
                backgroundDecreaseAnimation = (props) => (0, styled_components_browser_esm.F4)(_templateObject3(), (0, theme.a7)(props.theme.color.orange400, 0.5)),
                AnimationController = styled_components_browser_esm.ZP.div(_templateObject4(), backgroundIncreaseAnimation, childrenIncreaseAnimation, backgroundDecreaseAnimation, childrenDecreaseAnimation);
        },
        31593: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                r: function () {
                    return Link;
                },
                W: function () {
                    return linkStyles;
                },
            });
            var _tagged_template_literal = __webpack_require__(7297),
                jsx_runtime = __webpack_require__(85893);
            __webpack_require__(67294);
            var styled_components_browser_esm = __webpack_require__(87379),
                react_router_dom = __webpack_require__(39711);
            function _templateObject() {
                let data = (0, _tagged_template_literal.Z)(["\n  &:hover {\n    color: ", ";\n    * {\n      color: ", ";\n    }\n  }\n"]);
                return (
                    (_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            function _templateObject1() {
                let data = (0, _tagged_template_literal.Z)(["\n  ", ";\n"]);
                return (
                    (_templateObject1 = function () {
                        return data;
                    }),
                    data
                );
            }
            let Link = (props) => {
                    let { Component = react_router_dom.rU } = props,
                        href = "string" == typeof props.to ? props.to : props.to.pathname;
                    return (0, jsx_runtime.jsx)(StyledRouterLink, { as: Component, href: "a" === Component ? href : void 0, ...props });
                },
                linkStyles = (0, styled_components_browser_esm.iv)(
                    _templateObject(),
                    (param) => {
                        let { theme } = param;
                        return theme.color.white;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.white;
                    }
                ),
                StyledRouterLink = styled_components_browser_esm.ZP.a(_templateObject1(), (param) => {
                    let { applyStyles = !0 } = param;
                    return applyStyles ? linkStyles : null;
                });
        },
        69976: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                oM: function () {
                    return AspectRatio;
                },
                rF: function () {
                    return Blockie;
                },
                Oo: function () {
                    return Breadcrumbs;
                },
                zx: function () {
                    return Button;
                },
                XX: function () {
                    return DataTable.XX;
                },
                XZ: function () {
                    return Checkbox;
                },
                UO: function () {
                    return Collapse;
                },
                hx: function () {
                    return ControlledTooltip;
                },
                W8: function () {
                    return DataTable.W8;
                },
                iz: function () {
                    return Divider;
                },
                oT: function () {
                    return Dot;
                },
                SV: function () {
                    return ErrorBoundary;
                },
                kC: function () {
                    return Flex;
                },
                JO: function () {
                    return Icon;
                },
                hU: function () {
                    return IconButton;
                },
                Ee: function () {
                    return Image1;
                },
                rU: function () {
                    return Link.r;
                },
                C$: function () {
                    return LiveTime;
                },
                aN: function () {
                    return Loader;
                },
                u_: function () {
                    return Modal;
                },
                rD: function () {
                    return Popper;
                },
                EU: function () {
                    return RadioButton;
                },
                e_: function () {
                    return RangeSelect;
                },
                Mj: function () {
                    return SearchInput;
                },
                Ph: function () {
                    return Select;
                },
                Kq: function () {
                    return Stack;
                },
                vF: function () {
                    return Stepper;
                },
                rs: function () {
                    return Switch;
                },
                xv: function () {
                    return TextRoot;
                },
                Av: function () {
                    return TextButton;
                },
            });
            var jsx_runtime = __webpack_require__(85893),
                react = __webpack_require__(67294);
            let RATIO_DIV_STYLE = { width: "100%", height: 0, position: "relative" },
                CONTENT_DIV_STYLE = { top: 0, left: 0, width: "100%", height: "100%", position: "absolute" },
                AspectRatio = (param) => {
                    let { style, ratio, children, ...moreProps } = param,
                        cssStyle = { display: "block", ...style };
                    return (0, jsx_runtime.jsx)("div", {
                        ...moreProps,
                        style: cssStyle,
                        children: (0, jsx_runtime.jsx)("div", {
                            style: { ...RATIO_DIV_STYLE, paddingTop: "".concat(0 === ratio ? 100 : 100 / ratio, "%") },
                            children: (0, jsx_runtime.jsx)("div", { style: CONTENT_DIV_STYLE, children: children }),
                        }),
                    });
                };
            var _tagged_template_literal = __webpack_require__(7297),
                styled_components_browser_esm = __webpack_require__(87379),
                c = [, , , ,];
            function o() {
                var e = c[0] ^ (c[0] << 11);
                return (c[0] = c[1]), (c[1] = c[2]), (c[2] = c[3]), (c[3] = c[3] ^ (c[3] >> 19) ^ e ^ (e >> 8)), (c[3] >>> 0) / 2147483648;
            }
            function r() {
                return "hsl(" + Math.floor(360 * o()) + "," + (60 * o() + 40) + "%," + 25 * (o() + o() + o() + o()) + "%)";
            }
            function render(e, o1) {
                var r = (function (e) {
                        for (var l = Math.ceil(e / 2), n = e - l, a = [], c = 0; e > c; c++) {
                            for (var i = [], f = 0; l > f; f++) i[f] = Math.floor(2.3 * o());
                            var s = i.slice(0, n);
                            s.reverse(), (i = i.concat(s));
                            for (var h = 0; h < i.length; h++) a.push(i[h]);
                        }
                        return a;
                    })(e.size),
                    l = Math.sqrt(r.length);
                o1.width = o1.height = e.size * e.scale;
                var n = o1.getContext("2d");
                (n.fillStyle = e.bgcolor), n.fillRect(0, 0, o1.width, o1.height), (n.fillStyle = e.color);
                for (var a = 0; a < r.length; a++)
                    if (r[a]) {
                        var c = Math.floor(a / l),
                            i = a % l;
                        (n.fillStyle = 1 == r[a] ? e.color : e.spotcolor), n.fillRect(i * e.scale, c * e.scale, e.scale, e.scale);
                    }
                return o1;
            }
            var blockies_min = {
                create: function (e) {
                    var o,
                        t,
                        e =
                            ((o = e || {}),
                            ((t = {}).seed = o.seed || Math.floor(1e16 * Math.random()).toString(16)),
                            (function (e) {
                                for (var o = 0; o < c.length; o++) c[o] = 0;
                                for (var o = 0; o < e.length; o++) c[o % 4] = (c[o % 4] << 5) - c[o % 4] + e.charCodeAt(o);
                            })(t.seed),
                            (t.size = o.size || 8),
                            (t.scale = o.scale || 4),
                            (t.color = o.color || r()),
                            (t.bgcolor = o.bgcolor || r()),
                            (t.spotcolor = o.spotcolor || r()),
                            t),
                        o1 = document.createElement("canvas");
                    return render(e, o1), o1;
                },
                render,
            };
            function _templateObject() {
                let data = (0, _tagged_template_literal.Z)(["\n  width: ", ";\n  height: ", ";\n  overflow: hidden;\n  border-radius: 50%;\n\n  & img {\n    width: 100%;\n    height: 100%;\n  }\n"]);
                return (
                    (_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            let SIZES = { small: "16px", regular: "32px" },
                Blockie = (props) => {
                    let { size = "regular" } = props,
                        seed = props.address.toLowerCase(),
                        imgUrl = blockies_min.create({ seed }).toDataURL();
                    return (0, jsx_runtime.jsx)(BlockieRoot, { size: size, children: (0, jsx_runtime.jsx)("img", { src: imgUrl, alt: props.address }) });
                },
                BlockieRoot = styled_components_browser_esm.ZP.div(
                    _templateObject(),
                    (param) => {
                        let { size } = param;
                        return SIZES[size];
                    },
                    (param) => {
                        let { size } = param;
                        return SIZES[size];
                    }
                );
            function Breadcrumbs_templateObject() {
                let data = (0, _tagged_template_literal.Z)([
                    "\n  width: 10px;\n  height: 10px;\n  border: 1px solid ",
                    ";\n  border-radius: 50%;\n\n  &.active {\n    background: ",
                    ";\n    border-color: ",
                    ";\n  }\n\n  &:not(.active):hover {\n    background: ",
                    ";\n    border-color: ",
                    ";\n  }\n",
                ]);
                return (
                    (Breadcrumbs_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            let Breadcrumbs = (props) =>
                    (0, jsx_runtime.jsx)(Stack, {
                        pt: "16px",
                        style: { margin: "0 auto" },
                        spacing: "8px",
                        direction: "row",
                        children: [...Array(props.count)].map((_, i) => (0, jsx_runtime.jsx)(Crumb, { onClick: () => props.onClick(i), className: i === props.activeIndex ? "active" : "" }, "breadcrumb-".concat(i))),
                    }),
                Crumb = styled_components_browser_esm.ZP.button(
                    Breadcrumbs_templateObject(),
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey300;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.yellow300;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.yellow300;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.white;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.white;
                    }
                );
            function Button_templateObject() {
                let data = (0, _tagged_template_literal.Z)([
                    "\n  height: 36px;\n  cursor: pointer;\n  padding: 8px;\n  background: ",
                    ";\n  border-color: ",
                    ";\n  border-style: solid;\n  border-width: 1px;\n  border-radius: 4px;\n\n  &:disabled {\n    cursor: ",
                    ";\n    opacity: ",
                    ";\n    pointer-events: ",
                    ";\n  }\n\n  * {\n    fill: ",
                    " !important;\n    color: ",
                    " !important;\n  }\n\n  &:hover:not([disabled]) {\n    background: ",
                    " !important;\n    border-color: ",
                    " !important;\n\n    & * {\n      fill: ",
                    " !important;\n      color: ",
                    " !important;\n    }\n  }\n",
                ]);
                return (
                    (Button_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            let Button = (props) => (0, jsx_runtime.jsx)(StyledButton, { ...props }),
                StyledButton = styled_components_browser_esm.ZP.button(
                    Button_templateObject(),
                    (param) => {
                        let { theme, variant } = param;
                        return theme.color[theme.button[variant].background];
                    },
                    (param) => {
                        let { theme, variant } = param;
                        return theme.color[theme.button[variant].borderColor];
                    },
                    (param) => {
                        let { variant } = param;
                        return "tertiary" === variant ? "initial" : "not-allowed";
                    },
                    (param) => {
                        let { variant } = param;
                        return "tertiary" === variant ? 1 : 0.5;
                    },
                    (param) => {
                        let { variant } = param;
                        return "tertiary" === variant ? "none" : "initial";
                    },
                    (param) => {
                        let { theme, variant, overrideSvgStyles = !0 } = param;
                        return overrideSvgStyles && theme.color[theme.button[variant].color];
                    },
                    (param) => {
                        let { theme, variant } = param;
                        return theme.color[theme.button[variant].color];
                    },
                    (param) => {
                        let { theme, variant } = param;
                        return theme.color[theme.buttonHover[variant].background];
                    },
                    (param) => {
                        let { theme, variant } = param;
                        return theme.color[theme.buttonHover[variant].borderColor];
                    },
                    (param) => {
                        let { theme, variant, overrideSvgStyles = !0 } = param;
                        return overrideSvgStyles && theme.color[theme.buttonHover[variant].color];
                    },
                    (param) => {
                        let { theme, variant } = param;
                        return theme.color[theme.buttonHover[variant].color];
                    }
                );
            var theme_0 = __webpack_require__(87074);
            function Checkbox_templateObject() {
                let data = (0, _tagged_template_literal.Z)([
                    "\n  appearance: none;\n\n  width: 15px;\n  cursor: inherit;\n  height: 15px;\n  margin: 0;\n  border: 1px solid ",
                    ";\n  padding: 0;\n  background: ",
                    ";\n  box-shadow: ",
                    ";\n  border-radius: 2.5px;\n\n  &:disabled {\n    opacity: 60%;\n    pointer-events: none;\n  }\n",
                ]);
                return (
                    (Checkbox_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            let Checkbox = react.forwardRef((props, forwardedRef) => {
                let { padding, onChange, indeterminate, ...restProps } = props,
                    defaultRef = react.useRef(null),
                    resolvedRef = forwardedRef || defaultRef;
                return (
                    react.useEffect(() => {
                        resolvedRef && resolvedRef.current && (resolvedRef.current.indeterminate = Boolean(indeterminate));
                    }, [resolvedRef, indeterminate]),
                    (0, jsx_runtime.jsxs)(Flex, {
                        style: { cursor: props.disabled ? "not-allowed" : "pointer", padding, position: "relative", userSelect: "none" },
                        align: "center",
                        justify: "center",
                        onClick: onChange,
                        children: [
                            props.checked ? (0, jsx_runtime.jsx)(Icon, { size: "tight", name: "small-check", color: "white", style: { margin: "1.5px", position: "absolute", pointerEvents: "none" } }) : null,
                            indeterminate ? (0, jsx_runtime.jsx)(Dash, {}) : null,
                            (0, jsx_runtime.jsx)(StyledCheckbox, { type: "checkbox", ref: resolvedRef, disabled: restProps.disabled, ...restProps }),
                        ],
                    })
                );
            });
            Checkbox.displayName = "Checkbox";
            let StyledCheckbox = styled_components_browser_esm.ZP.input(
                    Checkbox_templateObject(),
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey400;
                    },
                    (param) => {
                        let { theme, opaque } = param;
                        return (0, theme_0.a7)(theme.color.grey700, opaque ? 0.5 : 1);
                    },
                    (param) => {
                        let { checked } = param;
                        return !checked && "inset 0px 2px 2px rgba(0, 0, 0, 0.25)";
                    }
                ),
                Dash = () => (0, jsx_runtime.jsx)(TextRoot, { style: { position: "absolute", transform: "scaleX(125%)", pointerEvents: "none" }, color: "white", variant: "labelLarge", children: "—" }),
                Collapse = (props) => {
                    let { Header, children, initialOpen = !1 } = props,
                        [isOpen, setIsOpen] = react.useState(initialOpen),
                        [headerHovered, setHeaderHovered] = react.useState(!1);
                    react.useEffect(() => {
                        setIsOpen(initialOpen);
                    }, [initialOpen]),
                        react.useEffect(
                            () =>
                                function () {
                                    setHeaderHovered(!1);
                                },
                            [children]
                        );
                    let onHeaderClick = () => {
                        setIsOpen((oldOpen) => !oldOpen);
                    };
                    return (0, jsx_runtime.jsxs)(react.Fragment, {
                        children: [
                            (0, jsx_runtime.jsx)("button", { style: { width: "100%" }, onClick: onHeaderClick, onMouseEnter: () => setHeaderHovered(!0), onMouseLeave: () => setHeaderHovered(!1), children: Header(isOpen, headerHovered) }),
                            children({ isOpen, isHovered: headerHovered }),
                        ],
                    });
                };
            var react_dom = __webpack_require__(73935);
            function ControlledTooltip_templateObject() {
                let data = (0, _tagged_template_literal.Z)(["\n  border: 1px solid ", ";\n  z-index: 100;\n  position: fixed;\n  background: ", ";\n  border-radius: 4px;\n"]);
                return (
                    (ControlledTooltip_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            let ControlledTooltip = (param) => {
                    let { top, left, width, height, children, container = document.body } = param,
                        adjustedTop = top + 16,
                        adjustedLeft = left + 16,
                        overflowingY = react.useMemo(() => {
                            let viewportHeight = document.documentElement.clientHeight,
                                overflowAmount = adjustedTop + height - viewportHeight + 16;
                            return overflowAmount < 0 ? 0 : overflowAmount;
                        }, [adjustedTop, height]),
                        overflowingX = react.useMemo(() => {
                            let viewportWidth = document.documentElement.clientWidth,
                                overflowAmount = adjustedLeft + width - viewportWidth + 16;
                            return overflowAmount < 0 ? 0 : overflowAmount;
                        }, [adjustedLeft]),
                        mirrorOnX = overflowingX && overflowingY;
                    return react_dom.createPortal(
                        (0, jsx_runtime.jsx)(TooltipRoot, {
                            style: {
                                top: "".concat(adjustedTop - overflowingY, "px"),
                                left: "".concat(adjustedLeft - (mirrorOnX ? 0 : overflowingX) + (mirrorOnX ? -32 : 0), "px"),
                                width: "".concat(width, "px"),
                                height: "".concat(height, "px"),
                                transform: "translateX(".concat(mirrorOnX ? "-100%" : "0px", ")"),
                            },
                            children: children,
                        }),
                        container
                    );
                },
                TooltipRoot = styled_components_browser_esm.ZP.div(
                    ControlledTooltip_templateObject(),
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey600;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey900;
                    }
                );
            __webpack_require__(14931);
            var DataTable = __webpack_require__(95407);
            function Divider_templateObject() {
                let data = (0, _tagged_template_literal.Z)(["\n  width: 100%;\n  height: 1px;\n  border: none;\n  background: ", ";\n  margin-top: ", ";\n  margin-bottom: ", ";\n"]);
                return (
                    (Divider_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            let Divider = styled_components_browser_esm.ZP.hr(
                Divider_templateObject(),
                (param) => {
                    let { theme } = param;
                    return theme.color.grey600;
                },
                (param) => {
                    let { mt = "0px" } = param;
                    return mt;
                },
                (param) => {
                    let { mb = "0px" } = param;
                    return mb;
                }
            );
            function Dot_templateObject() {
                let data = (0, _tagged_template_literal.Z)(["\n  width: 16px;\n  height: 8px;\n  position: relative;\n"]);
                return (
                    (Dot_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            function _templateObject1() {
                let data = (0, _tagged_template_literal.Z)(["\n  0% {\n    opacity: 0.0;\n    transform: scale(0.1, 0.1);\n  }\n  50% {\n    opacity: 1.0;\n  }\n  100% {\n    opacity: 0.0;\n    transform: scale(1.2, 1.2);\n  }\n"]);
                return (
                    (_templateObject1 = function () {
                        return data;
                    }),
                    data
                );
            }
            function _templateObject2() {
                let data = (0, _tagged_template_literal.Z)([
                    "\n  top: -4px;\n  left: -4px;\n  width: 16px;\n  height: 16px;\n  border: 2px solid ",
                    ";\n  opacity: 0;\n  position: absolute;\n  animation: ",
                    " 1.25s cubic-bezier(0.455, 0.03, 0.515, 0.955) -0.4s infinite;\n  border-radius: 50%;\n",
                ]);
                return (
                    (_templateObject2 = function () {
                        return data;
                    }),
                    data
                );
            }
            function _templateObject3() {
                let data = (0, _tagged_template_literal.Z)(["\n  width: 8px;\n  height: 8px;\n  position: absolute;\n  background: ", ";\n  border-radius: 50%;\n"]);
                return (
                    (_templateObject3 = function () {
                        return data;
                    }),
                    data
                );
            }
            let Dot = styled_components_browser_esm.ZP.div.attrs((param) => {
                    let { color = "green300" } = param;
                    return { children: (0, jsx_runtime.jsxs)(react.Fragment, { children: [(0, jsx_runtime.jsx)(Ring, { color: color }), (0, jsx_runtime.jsx)(Circle, { color: color })] }) };
                })(Dot_templateObject()),
                pulsate = (0, styled_components_browser_esm.F4)(_templateObject1()),
                Ring = styled_components_browser_esm.ZP.div(
                    _templateObject2(),
                    (param) => {
                        let { theme, color } = param;
                        return theme.color[color];
                    },
                    pulsate
                ),
                Circle = styled_components_browser_esm.ZP.div(_templateObject3(), (param) => {
                    let { theme, color } = param;
                    return theme.color[color];
                });
            var analytics = __webpack_require__(6066);
            class ErrorBoundary extends react.Component {
                componentDidCatch(error, errorInfo) {
                    analytics.vU.boundary.caught({ ...error, ...errorInfo, pathname: window.location.pathname, error_toString: error.toString() });
                }
                static getDerivedStateFromError(error) {
                    return { error };
                }
                render() {
                    return null !== this.state.error ? this.props.fallback : this.props.children;
                }
                constructor(props) {
                    super(props), (this.state = { error: null });
                }
            }
            function Flex_templateObject() {
                let data = (0, _tagged_template_literal.Z)([
                    "\n  width: ",
                    ";\n  height: ",
                    ";\n  display: flex;\n  align-items: ",
                    ";\n  flex-direction: ",
                    ";\n  justify-content: ",
                    ";\n\n  margin-top: ",
                    ";\n  margin-left: ",
                    ";\n  margin-right: ",
                    ";\n  margin-bottom: ",
                    ";\n\n  padding: ",
                    ";\n  padding-top: ",
                    ";\n  padding-left: ",
                    ";\n  padding-right: ",
                    ";\n  padding-bottom: ",
                    ";\n",
                ]);
                return (
                    (Flex_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            let Flex = styled_components_browser_esm.ZP.div.attrs((props) => ({ as: props.component || "div" }))(
                    Flex_templateObject(),
                    (param) => {
                        let { width = "auto" } = param;
                        return width;
                    },
                    (param) => {
                        let { height = "auto" } = param;
                        return height;
                    },
                    (param) => {
                        let { align = "normal" } = param;
                        return align;
                    },
                    (param) => {
                        let { direction = "row" } = param;
                        return direction;
                    },
                    (param) => {
                        let { justify = "normal" } = param;
                        return justify;
                    },
                    (param) => {
                        let { mt } = param;
                        return mt;
                    },
                    (param) => {
                        let { ml } = param;
                        return ml;
                    },
                    (param) => {
                        let { mr } = param;
                        return mr;
                    },
                    (param) => {
                        let { mb } = param;
                        return mb;
                    },
                    (param) => {
                        let { p } = param;
                        return p;
                    },
                    (param) => {
                        let { pt } = param;
                        return pt;
                    },
                    (param) => {
                        let { pl } = param;
                        return pl;
                    },
                    (param) => {
                        let { pr } = param;
                        return pr;
                    },
                    (param) => {
                        let { pb } = param;
                        return pb;
                    }
                ),
                icons = {
                    pen: (0, jsx_runtime.jsx)("svg", {
                        width: "16",
                        height: "16",
                        viewBox: "0 0 16 16",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: (0, jsx_runtime.jsx)("path", {
                            d:
                                "M12.8 0H11.2V1.6H9.6V3.2H8V4.8H6.4V6.4H4.8V8H3.2V9.6H1.6V11.2H0V16H4.8V14.4H6.4V12.8H8V11.2H9.6V9.6H11.2V8H12.8V6.4H14.4V4.8H16V3.2H14.4V1.6H12.8V0ZM12.8 6.4H11.2V8H9.6V9.6H8V11.2H6.4V12.8H4.8V11.2H3.2V9.6H4.8V8H6.4V6.4H8V4.8H9.6V3.2H11.2V4.8H12.8V6.4ZM3.2 11.2H1.6V14.4H4.8V12.8H3.2V11.2Z",
                        }),
                    }),
                    shine: (0, jsx_runtime.jsx)("svg", {
                        width: "16",
                        height: "16",
                        viewBox: "0 0 16 16",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: (0, jsx_runtime.jsx)("path", {
                            d:
                                "M8.8 0H7.2V7.2H8.8V0ZM8.8 8.8H7.2V16H8.8V8.8ZM16 7.2V8.8H8V7.2H16ZM8 8.8V7.2H0V8.8H8ZM10.4 4H12V5.6H10.4V4ZM13.6 2.4H12V4H13.6V2.4ZM5.6 4H4V5.6H5.6V4ZM2.4 2.4H4V4H2.4V2.4ZM10.4 12H12V13.6H13.6V12H12V10.4H10.4V12ZM4 12V10.4H5.6V12H4V13.6H2.4V12H4Z",
                        }),
                    }),
                    "blur-coin": (0, jsx_runtime.jsxs)("svg", {
                        width: "18",
                        height: "12",
                        viewBox: "0 0 18 12",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [
                            (0, jsx_runtime.jsx)("path", { d: "M7.47803 8.30713V9.09086H8.73064V8.30713H7.47803Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M11.1106 8.30713V9.09086H12.3632V8.30713H11.1106Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M8.73064 9.35205H7.47803V10.0052H8.73064V9.35205Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M14.3674 3.08182V2.42871H13.1147V3.08182H14.3674Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M8.792 5.81612V1.71736H10.9365L11.172 1.97861V2.48104H12.3632V1.71736L12.0688 1.38428H7.60327V5.81612H8.792Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M14.3674 3.34326H13.1147V4.12699H14.3674V3.34326Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M11.1106 9.35205V10.0052H12.3632V9.35205H11.1106Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M16.7799 8.30713V8.41424L16.5294 8.68463H14.3373V8.30713H13.1147V9.09086L17.3188 9.40946L17.9999 8.68463V8.30713H16.7799Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M13.1147 7.44483V8.04569H14.3373V7.6695H16.5344L16.7849 7.89286V8.54023H17.9999V7.6695L17.7018 7.39258H13.1147V7.44483Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M11.8073 3.27123L12.3632 2.74351V2.42871H11.172V2.51884L10.9365 2.74351H8.792V2.42871H7.60327V3.31037L11.8073 3.27123Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M17.9921 7.65562L17.0467 6.60889H13.1147V7.46773L17.9921 7.65562Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M13.1147 9.70173V10.0048H14.3373V9.70173H16.5344L16.7849 9.9264V11.7029H17.9999V9.70173L17.358 9.1272L13.1147 9.00977V9.70173Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M8.792 4.12704V3.7626H10.9365L11.172 4.03299V4.12704H12.3632V3.7626L11.7134 3.02881L7.60327 3.34331V4.12704H8.792Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M12.0851 5.04166L12.3632 4.78042V4.09375H11.172V4.55052L10.9365 4.78042H8.792V4.38855H7.60327V5.04166H12.0851Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M11.1106 7.39258V8.04569H12.3632V7.39258H11.1106Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M7.60327 4.84535V5.82539H11.4112L12.3632 4.78271L7.60327 4.84535Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M13.1304 4.7749L14.078 5.82541H17.4988V4.7749H13.1304Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M14.3674 0.730957H13.1147V4.6886H14.3674V0.730957Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M12.3632 1.70583L11.4629 0.730957H7.60327V1.70583H12.3632Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M7.97925 11.3115L8.44522 11.7034H11.3964L11.8623 11.3115H7.97925Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M14.3674 6.83398H13.1147V11.7035H14.3674V6.83398Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M7.47803 7.6695V8.04569H8.73064V7.39258H7.47803V7.6695Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M17.4989 4.78066H14.8195L14.2108 4.21143L13.1147 4.3888V4.78066L13.4028 5.04191H17.4989V4.78066Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M13.1147 1.71736V2.16801H14.3674V1.38428H13.1147V1.71736Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M12.3632 10.7318V10.2668L11.1732 10.13L10.6534 10.7318H9.18784L8.58189 10.0752L7.47803 10.2668V10.7318L8.30788 11.7114H11.5568L12.3632 10.7318Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M12.3632 6.60889H11.1106V10.3566H12.3632V6.60889Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M14.3674 10.2671H13.1147V11.0508H14.3674V10.2671Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M8.73064 6.60889H7.47803V10.3566H8.73064V6.60889Z" }),
                            (0, jsx_runtime.jsx)("path", {
                                fillRule: "evenodd",
                                clipRule: "evenodd",
                                d:
                                    "M2.5576 0.288574H3.86426V1.17147H3.88695V1.4605H6.71646V2.19572H6.71563V2.55593H3.88613V3.63258H6.71563V6.01707L6.02308 6.53849H6.02219L5.27293 7.10096H3.88613V7.34271H3.88619V8.28452H2.57874V7.38999H2.57868V7.10096H-0.137207V5.94481H2.57868V4.7887H-0.137207V2.55593L0.2647 2.19572H0.256753L1.08631 1.4605H2.5795V1.3915H2.5576V0.288574ZM2.57868 2.55593H1.69503L1.39747 2.85218V3.63258H2.57868V2.55593ZM3.88613 5.94481H4.87799L5.27293 5.65578V4.7887H3.88613V5.94481Z",
                            }),
                        ],
                    }),
                    shield: (0, jsx_runtime.jsxs)("svg", {
                        width: "16",
                        height: "16",
                        viewBox: "0 0 16 16",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [
                            (0, jsx_runtime.jsx)("mask", {
                                id: "path-1-inside-1_5148_1059743",
                                children: (0, jsx_runtime.jsx)("path", {
                                    fillRule: "evenodd",
                                    clipRule: "evenodd",
                                    d:
                                        "M0 0H16V9.6H14.4V1.6H1.6V9.6H0V0ZM3.2 11.2H1.6V9.6H3.2V11.2ZM4.8 12.8H3.2V11.2H4.8V12.8ZM6.4 14.4H4.8V12.8H6.4V14.4ZM9.6 14.4V16H6.4V14.4H9.6ZM11.2 12.8V14.4H9.6V12.8H11.2ZM12.8 11.2V12.8H11.2V11.2H12.8ZM12.8 11.2H14.4V9.6H12.8V11.2ZM8.8 3.2H7.2V5.59972H7.19972H5.59972V7.19972H7.19972H7.2V10.2H8.8V7.19972H10.3997V5.59972H8.8V3.2Z",
                                }),
                            }),
                            (0, jsx_runtime.jsx)("path", {
                                fillRule: "evenodd",
                                clipRule: "evenodd",
                                d:
                                    "M0 0H16V9.6H14.4V1.6H1.6V9.6H0V0ZM3.2 11.2H1.6V9.6H3.2V11.2ZM4.8 12.8H3.2V11.2H4.8V12.8ZM6.4 14.4H4.8V12.8H6.4V14.4ZM9.6 14.4V16H6.4V14.4H9.6ZM11.2 12.8V14.4H9.6V12.8H11.2ZM12.8 11.2V12.8H11.2V11.2H12.8ZM12.8 11.2H14.4V9.6H12.8V11.2ZM8.8 3.2H7.2V5.59972H7.19972H5.59972V7.19972H7.19972H7.2V10.2H8.8V7.19972H10.3997V5.59972H8.8V3.2Z",
                            }),
                            (0, jsx_runtime.jsx)("path", {
                                d:
                                    "M16 0H17V-1H16V0ZM0 0V-1H-1V0H0ZM16 9.6V10.6H17V9.6H16ZM14.4 1.6H15.4V0.6H14.4V1.6ZM1.6 1.6V0.6H0.6V1.6H1.6ZM0 9.6H-1V10.6H0V9.6ZM1.6 11.2H0.6V12.2H1.6V11.2ZM3.2 9.6H4.2V8.6H3.2V9.6ZM3.2 12.8H2.2V13.8H3.2V12.8ZM4.8 11.2H5.8V10.2H4.8V11.2ZM4.8 14.4H3.8V15.4H4.8V14.4ZM6.4 12.8H7.4V11.8H6.4V12.8ZM9.6 16V17H10.6V16H9.6ZM6.4 16H5.4V17H6.4V16ZM11.2 14.4V15.4H12.2V14.4H11.2ZM9.6 12.8V11.8H8.6V12.8H9.6ZM12.8 12.8V13.8H13.8V12.8H12.8ZM11.2 11.2V10.2H10.2V11.2H11.2ZM14.4 11.2V12.2H15.4V11.2H14.4ZM12.8 9.6V8.6H11.8V9.6H12.8ZM7.2 3.2V2.2H6.2V3.2H7.2ZM8.8 3.2H9.8V2.2H8.8V3.2ZM7.2 5.59972V6.59972H8.2V5.59972H7.2ZM5.59972 5.59972V4.59972H4.59972V5.59972H5.59972ZM5.59972 7.19972H4.59972V8.19972H5.59972V7.19972ZM7.2 7.19972H8.2V6.19972H7.2V7.19972ZM7.2 10.2H6.2V11.2H7.2V10.2ZM8.8 10.2V11.2H9.8V10.2H8.8ZM8.8 7.19972V6.19972H7.8V7.19972H8.8ZM10.3997 7.19972V8.19972H11.3997V7.19972H10.3997ZM10.3997 5.59972H11.3997V4.59972H10.3997V5.59972ZM8.8 5.59972H7.8V6.59972H8.8V5.59972ZM16 -1H0V1H16V-1ZM17 9.6V0H15V9.6H17ZM14.4 10.6H16V8.6H14.4V10.6ZM13.4 1.6V9.6H15.4V1.6H13.4ZM1.6 2.6H14.4V0.6H1.6V2.6ZM2.6 9.6V1.6H0.6V9.6H2.6ZM0 10.6H1.6V8.6H0V10.6ZM-1 0V9.6H1V0H-1ZM1.6 12.2H3.2V10.2H1.6V12.2ZM0.6 9.6V11.2H2.6V9.6H0.6ZM3.2 8.6H1.6V10.6H3.2V8.6ZM4.2 11.2V9.6H2.2V11.2H4.2ZM3.2 13.8H4.8V11.8H3.2V13.8ZM2.2 11.2V12.8H4.2V11.2H2.2ZM4.8 10.2H3.2V12.2H4.8V10.2ZM5.8 12.8V11.2H3.8V12.8H5.8ZM4.8 15.4H6.4V13.4H4.8V15.4ZM3.8 12.8V14.4H5.8V12.8H3.8ZM6.4 11.8H4.8V13.8H6.4V11.8ZM7.4 14.4V12.8H5.4V14.4H7.4ZM10.6 16V14.4H8.6V16H10.6ZM6.4 17H9.6V15H6.4V17ZM5.4 14.4V16H7.4V14.4H5.4ZM9.6 13.4H6.4V15.4H9.6V13.4ZM12.2 14.4V12.8H10.2V14.4H12.2ZM9.6 15.4H11.2V13.4H9.6V15.4ZM8.6 12.8V14.4H10.6V12.8H8.6ZM11.2 11.8H9.6V13.8H11.2V11.8ZM13.8 12.8V11.2H11.8V12.8H13.8ZM11.2 13.8H12.8V11.8H11.2V13.8ZM10.2 11.2V12.8H12.2V11.2H10.2ZM12.8 10.2H11.2V12.2H12.8V10.2ZM12.8 12.2H14.4V10.2H12.8V12.2ZM15.4 11.2V9.6H13.4V11.2H15.4ZM14.4 8.6H12.8V10.6H14.4V8.6ZM11.8 9.6V11.2H13.8V9.6H11.8ZM7.2 4.2H8.8V2.2H7.2V4.2ZM8.2 5.59972V3.2H6.2V5.59972H8.2ZM7.19972 6.59972H7.2V4.59972H7.19972V6.59972ZM5.59972 6.59972H7.19972V4.59972H5.59972V6.59972ZM6.59972 7.19972V5.59972H4.59972V7.19972H6.59972ZM7.19972 6.19972H5.59972V8.19972H7.19972V6.19972ZM7.2 6.19972H7.19972V8.19972H7.2V6.19972ZM8.2 10.2V7.19972H6.2V10.2H8.2ZM8.8 9.2H7.2V11.2H8.8V9.2ZM7.8 7.19972V10.2H9.8V7.19972H7.8ZM10.3997 6.19972H8.8V8.19972H10.3997V6.19972ZM9.39972 5.59972V7.19972H11.3997V5.59972H9.39972ZM8.8 6.59972H10.3997V4.59972H8.8V6.59972ZM7.8 3.2V5.59972H9.8V3.2H7.8Z",
                                mask: "url(#path-1-inside-1_5148_1059743)",
                            }),
                        ],
                    }),
                    gavel: (0, jsx_runtime.jsxs)("svg", {
                        width: "16",
                        height: "16",
                        viewBox: "0 0 16 16",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [
                            (0, jsx_runtime.jsxs)("g", {
                                clipPath: "url(#clip0_4955_275392)",
                                children: [
                                    (0, jsx_runtime.jsx)("rect", { x: "4", y: "12", width: "1.33333", height: "1.33333", transform: "rotate(-90 4 12)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "2.66675", y: "13.3335", width: "1.33333", height: "1.33333", transform: "rotate(-90 2.66675 13.3335)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "1.33325", y: "13.3335", width: "1.33333", height: "1.33333", transform: "rotate(-90 1.33325 13.3335)" }),
                                    (0, jsx_runtime.jsx)("rect", { y: "14.6665", width: "1.33333", height: "1.33333", transform: "rotate(-90 0 14.6665)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "1.33325", y: "14.6665", width: "1.33333", height: "1.33333", transform: "rotate(-90 1.33325 14.6665)" }),
                                    (0, jsx_runtime.jsx)("rect", { y: "16", width: "1.33333", height: "1.33333", transform: "rotate(-90 0 16)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "8", y: "16", width: "1.04348", height: "8", transform: "rotate(-90 8 16)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "9.39136", y: "14.6089", width: "1.04348", height: "5.21739", transform: "rotate(-90 9.39136 14.6089)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "2.66675", y: "12", width: "1.33333", height: "1.33333", transform: "rotate(-90 2.66675 12)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "4", y: "10.6665", width: "1.33333", height: "1.33333", transform: "rotate(-90 4 10.6665)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "5.33325", y: "9.3335", width: "1.33333", height: "1.33333", transform: "rotate(-90 5.33325 9.3335)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "5.33325", y: "10.6665", width: "1.33333", height: "1.33333", transform: "rotate(-90 5.33325 10.6665)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "6.66675", y: "9.3335", width: "1.33333", height: "1.33333", transform: "rotate(-90 6.66675 9.3335)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "13.3333", y: "9.3335", width: "1.33333", height: "1.33333", transform: "rotate(-90 13.3333 9.3335)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "12", y: "10.6665", width: "1.33333", height: "1.33333", transform: "rotate(-90 12 10.6665)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "14.6667", y: "8", width: "1.33333", height: "1.33333", transform: "rotate(-90 14.6667 8)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "13.3333", y: "6.6665", width: "1.33333", height: "1.33333", transform: "rotate(-90 13.3333 6.6665)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "12", y: "5.3335", width: "1.33333", height: "1.33333", transform: "rotate(-90 12 5.3335)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "10.6667", y: "4", width: "1.33333", height: "1.33333", transform: "rotate(-90 10.6667 4)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "9.33325", y: "2.6665", width: "1.33333", height: "1.33333", transform: "rotate(-90 9.33325 2.6665)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "8", y: "1.3335", width: "1.33333", height: "1.33333", transform: "rotate(-90 8 1.3335)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "6.66675", y: "2.6665", width: "1.33333", height: "1.33333", transform: "rotate(-90 6.66675 2.6665)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "5.33325", y: "4", width: "1.33333", height: "1.33333", transform: "rotate(-90 5.33325 4)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "4", y: "5.3335", width: "1.33333", height: "1.33333", transform: "rotate(-90 4 5.3335)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "4", y: "6.6665", width: "1.33333", height: "1.33333", transform: "rotate(-90 4 6.6665)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "9.33325", y: "1.3335", width: "1.33333", height: "1.33333", transform: "rotate(-90 9.33325 1.3335)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "14.6667", y: "6.6665", width: "1.33333", height: "1.33333", transform: "rotate(-90 14.6667 6.6665)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "9.33325", y: "12", width: "1.33333", height: "1.33333", transform: "rotate(-90 9.33325 12)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "5.33325", y: "6.6665", width: "1.33333", height: "1.33333", transform: "rotate(-90 5.33325 6.6665)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "8", y: "4", width: "1.33333", height: "1.33333", transform: "rotate(-90 8 4)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "6.66675", y: "5.3335", width: "1.33333", height: "1.33333", transform: "rotate(-90 6.66675 5.3335)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "12", y: "8", width: "1.33333", height: "1.33333", transform: "rotate(-90 12 8)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "10.6667", y: "9.3335", width: "1.33333", height: "1.33333", transform: "rotate(-90 10.6667 9.3335)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "6.66675", y: "8", width: "1.33333", height: "1.33333", transform: "rotate(-90 6.66675 8)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "8", y: "9.3335", width: "1.33333", height: "1.33333", transform: "rotate(-90 8 9.3335)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "9.33325", y: "10.6665", width: "1.33333", height: "1.33333", transform: "rotate(-90 9.33325 10.6665)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "10.6667", y: "12", width: "1.33333", height: "1.33333", transform: "rotate(-90 10.6667 12)" }),
                                ],
                            }),
                            (0, jsx_runtime.jsx)("defs", {
                                children: (0, jsx_runtime.jsx)("clipPath", { id: "clip0_4955_275392", children: (0, jsx_runtime.jsx)("rect", { width: "16", height: "16", fill: "white", transform: "translate(16) rotate(90)" }) }),
                            }),
                        ],
                    }),
                    "plus-circle": (0, jsx_runtime.jsxs)("svg", {
                        width: "20",
                        height: "20",
                        viewBox: "0 0 20 20",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [
                            (0, jsx_runtime.jsx)("path", {
                                d:
                                    "M5.2 2H14.8V3.6H5.2V2ZM3.6 5.2V3.6H5.2V5.2H3.6ZM3.6 14.8V5.2H2V14.8H3.6ZM5.2 16.4V14.8H3.6V16.4H5.2ZM14.8 16.4V18H5.2V16.4H14.8ZM16.4 14.8V16.4H14.8V14.8H16.4ZM16.4 5.2H18V14.8H16.4V5.2ZM16.4 5.2V3.6H14.8V5.2H16.4Z",
                            }),
                            (0, jsx_runtime.jsx)("path", { d: "M14.4446 9.11122H10.889V5.55566H9.11122V9.11122H5.55566V10.889H9.11122V14.4446H10.889V10.889H14.4446V9.11122Z" }),
                        ],
                    }),
                    "arrows-left-right": (0, jsx_runtime.jsxs)("svg", {
                        width: "18",
                        height: "17",
                        viewBox: "0 0 18 17",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [
                            (0, jsx_runtime.jsx)("path", {
                                d:
                                    "M11 4.28571V5.71429H2.75V7.14286H1.375V5.71429H0V4.28571H1.375V2.85714H2.75V4.28571H11ZM4.125 1.42857H2.75V2.85714H4.125V1.42857ZM4.125 1.42857H5.5V0H4.125V1.42857ZM4.125 8.57143H2.75V7.14286H4.125V8.57143ZM4.125 8.57143H5.5V10H4.125V8.57143Z",
                            }),
                            (0, jsx_runtime.jsx)("path", {
                                d:
                                    "M7 12.7143L7 11.2857L15.25 11.2857L15.25 9.85714L16.625 9.85714L16.625 11.2857L18 11.2857L18 12.7143L16.625 12.7143L16.625 14.1429L15.25 14.1429L15.25 12.7143L7 12.7143ZM13.875 15.5714L15.25 15.5714L15.25 14.1429L13.875 14.1429L13.875 15.5714ZM13.875 15.5714L12.5 15.5714L12.5 17L13.875 17L13.875 15.5714ZM13.875 8.42857L15.25 8.42857L15.25 9.85714L13.875 9.85714L13.875 8.42857ZM13.875 8.42857L12.5 8.42857L12.5 7L13.875 7L13.875 8.42857Z",
                            }),
                        ],
                    }),
                    gear: (0, jsx_runtime.jsxs)("svg", {
                        width: "14",
                        height: "14",
                        viewBox: "0 0 14 14",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [
                            (0, jsx_runtime.jsx)("rect", { x: "3.81787", y: "3.81787", width: "2.54545", height: "2.54545", transform: "rotate(180 3.81787 3.81787)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "3.81787", y: "2.96973", width: "1.69697", height: "1.69697", transform: "rotate(180 3.81787 2.96973)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "3.81787", y: "12.7266", width: "2.54545", height: "2.54545", transform: "rotate(180 3.81787 12.7266)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "3.81787", y: "11.8779", width: "1.69697", height: "1.69697", transform: "rotate(180 3.81787 11.8779)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "12.7271", y: "3.81787", width: "2.54545", height: "2.54545", transform: "rotate(180 12.7271 3.81787)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "12.7271", y: "2.96973", width: "1.69697", height: "1.69697", transform: "rotate(180 12.7271 2.96973)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "12.7271", y: "12.7266", width: "2.54545", height: "2.54545", transform: "rotate(180 12.7271 12.7266)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "12.7271", y: "11.8779", width: "1.69697", height: "1.69697", transform: "rotate(180 12.7271 11.8779)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "4.45459", y: "4.45361", width: "1.90909", height: "1.90909", transform: "rotate(180 4.45459 4.45361)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "4.45459", y: "3.81738", width: "1.27273", height: "1.27273", transform: "rotate(180 4.45459 3.81738)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "4.45459", y: "3.81738", width: "1.27273", height: "1.27273", transform: "rotate(180 4.45459 3.81738)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "6.57593", y: "2.54541", width: "2.54545", height: "1.69697", transform: "rotate(-90 6.57593 2.54541)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "5.72729", y: "2.54541", width: "2.54545", height: "1.69697", transform: "rotate(-90 5.72729 2.54541)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "6.36353", y: "11.4536", width: "1.90909", height: "5.09091", transform: "rotate(-90 6.36353 11.4536)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "3.81812", y: "11.4536", width: "1.90909", height: "5.09091", transform: "rotate(-90 3.81812 11.4536)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "5.93945", y: "4.45361", width: "1.90909", height: "4.24242", transform: "rotate(-90 5.93945 4.45361)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "3.81812", y: "4.45361", width: "1.90909", height: "4.24242", transform: "rotate(-90 3.81812 4.45361)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2.54541", y: "6.15137", width: "1.90909", height: "4.66667" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2.54541", y: "3.81787", width: "1.90909", height: "4.66667" }),
                            (0, jsx_runtime.jsx)("rect", { x: "4.45459", y: "4.87842", width: "1.27273", height: "0.848485" }),
                            (0, jsx_runtime.jsx)("rect", { x: "4.45459", y: "4.4541", width: "1.27273", height: "0.848485" }),
                            (0, jsx_runtime.jsx)("rect", { x: "8.27295", y: "4.87842", width: "1.27273", height: "0.848485" }),
                            (0, jsx_runtime.jsx)("rect", { x: "8.27295", y: "4.4541", width: "1.27273", height: "0.848485" }),
                            (0, jsx_runtime.jsx)("rect", { x: "8.27295", y: "8.69678", width: "1.27273", height: "0.848485" }),
                            (0, jsx_runtime.jsx)("rect", { x: "8.27295", y: "8.27246", width: "1.27273", height: "0.848485" }),
                            (0, jsx_runtime.jsx)("rect", { x: "4.45459", y: "8.69678", width: "1.27273", height: "0.848485" }),
                            (0, jsx_runtime.jsx)("rect", { x: "4.45459", y: "8.27246", width: "1.27273", height: "0.848485" }),
                            (0, jsx_runtime.jsx)("rect", { x: "9.54541", y: "5.93945", width: "1.90909", height: "4.24242" }),
                            (0, jsx_runtime.jsx)("rect", { x: "9.54541", y: "3.81787", width: "1.90909", height: "4.24242" }),
                            (0, jsx_runtime.jsx)("rect", { x: "7.42407", y: "11.4541", width: "2.54545", height: "1.69697", transform: "rotate(90 7.42407 11.4541)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "8.27271", y: "11.4541", width: "2.54545", height: "1.69697", transform: "rotate(90 8.27271 11.4541)" }),
                            (0, jsx_runtime.jsx)("rect", { y: "6.36377", width: "2.54545", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { y: "5.72705", width: "2.54545", height: "0.636364" }),
                            (0, jsx_runtime.jsx)("rect", { x: "13.3635", y: "6.99951", width: "2.54545", height: "1.27273", transform: "rotate(-180 13.3635 6.99951)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "13.3635", y: "7.63574", width: "2.54545", height: "0.636364", transform: "rotate(-180 13.3635 7.63574)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "11.4546", y: "6.57568", width: "2.54545", height: "1.69697" }),
                            (0, jsx_runtime.jsx)("rect", { x: "11.4546", y: "5.72705", width: "2.54545", height: "1.69697" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2.54541", y: "7.42383", width: "2.54545", height: "1.69697", transform: "rotate(-180 2.54541 7.42383)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2.54541", y: "8.27246", width: "2.54545", height: "1.69697", transform: "rotate(-180 2.54541 8.27246)" }),
                        ],
                    }),
                    coin: (0, jsx_runtime.jsx)("svg", {
                        width: "16",
                        height: "16",
                        viewBox: "0 0 16 16",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: (0, jsx_runtime.jsx)("path", {
                            d:
                                "M3.2 0H12.8V1.6H3.2V0ZM1.6 3.2V1.6H3.2V3.2H1.6ZM1.6 12.8V3.2H0V12.8H1.6ZM3.2 14.4V12.8H1.6V14.4H3.2ZM12.8 14.4V16H3.2V14.4H12.8ZM14.4 12.8V14.4H12.8V12.8H14.4ZM14.4 3.2H16V12.8H14.4V3.2ZM14.4 3.2V1.6H12.8V3.2H14.4ZM7.2 2.4H8.8V4H11.2V5.6H6.4V7.2H11.2V12H8.8V13.6H7.2V12H4.8V10.4H9.6V8.8H4.8V4H7.2V2.4Z",
                        }),
                    }),
                    "gift-box": (0, jsx_runtime.jsxs)("svg", {
                        width: "16",
                        height: "17",
                        viewBox: "0 0 16 17",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [
                            (0, jsx_runtime.jsx)("path", { d: "M1.45455 6.48864H2.90909V13.7614H1.45455V6.48864Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M2.90909 13.0341H4.36364V14.4886H2.90909V13.0341Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M11.6364 13.0341H13.0909V14.4886H11.6364V13.0341Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M2.90909 7.21591H4.36364V8.67046H2.90909V7.21591Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M1.45455 2.88068H2.90909V4.33523H1.45455V2.88068Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M0 3.60795H1.45455V7.24432H0V3.60795Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M14.5455 3.60795H16V7.24432H14.5455V3.60795Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M14.5455 2.88068H13.0909V4.33523H14.5455V2.88068Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M2.90909 2.15341H4.36364V3.60795H2.90909V2.15341Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M4.36364 1.45455H5.81818V2.90909H4.36364V1.45455Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M5.81818 0.727273H7.27273V2.18182H5.81818V0.727273Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M7.27273 0H8.72727V1.45455H7.27273V0Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M4.36364 13.7614H5.81818V15.2159H4.36364V13.7614Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M10.1818 13.7614H11.6364V15.2159H10.1818V13.7614Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M4.36364 7.94318H5.81818V9.39773H4.36364V7.94318Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M2.90909 3.60795H4.36364V5.0625H2.90909V3.60795Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M8.72727 0.713068H10.1818V2.16761H8.72727V0.713068Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M13.0909 3.60795H11.6364V5.0625H13.0909V3.60795Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M5.81818 14.4886H7.27273V15.9432H5.81818V14.4886Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M8.72727 14.4886H10.1818V15.9432H8.72727V14.4886Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M5.81818 8.67046H7.27273V10.125H5.81818V8.67046Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M10.1818 7.94318H11.6364V9.39773H10.1818V7.94318Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M11.6364 7.21591H13.0909V8.67046H11.6364V7.21591Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M8.72727 8.67046H10.1818V10.125H8.72727V8.67046Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M4.36364 4.33523H5.81818V5.78977H4.36364V4.33523Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M10.1818 1.44034H11.6364V2.89489H10.1818V1.44034Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M11.6364 4.33523H10.1818V5.78977H11.6364V4.33523Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M5.81818 5.03409H7.27273V6.48864H5.81818V5.03409Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M11.6364 2.18182H13.0909V3.63636H11.6364V2.18182Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M10.1818 5.03409H8.72727V6.48864H10.1818V5.03409Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M7.27273 5.78977H8.72727V7.24432H7.27273V5.78977Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M8.72727 5.78977H7.27273V7.24432H8.72727V5.78977Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M7.27273 9.39773H8.72727V16.6705H7.27273V9.39773Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M13.0909 6.48864H14.5455V13.7614H13.0909V6.48864Z" }),
                        ],
                    }),
                    command: (0, jsx_runtime.jsxs)("svg", {
                        width: "14",
                        height: "14",
                        viewBox: "0 0 14 14",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [
                            (0, jsx_runtime.jsx)("rect", { x: "8.75", y: "9.9165", width: "7.58333", height: "1.16666", transform: "rotate(-180 8.75 9.9165)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "4.08325", y: "1.1665", width: "2.91667", height: "1.16667", transform: "rotate(-180 4.08325 1.1665)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "9.91675", y: "12.8335", width: "2.91667", height: "1.16667" }),
                            (0, jsx_runtime.jsx)("rect", { x: "9.33325", y: "4.0835", width: "3.5", height: "1.16667" }),
                            (0, jsx_runtime.jsx)("rect", { x: "4.66675", y: "5.25", width: "3.5", height: "1.16667", transform: "rotate(-180 4.66675 5.25)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "9.33325", y: "8.75", width: "2.33333", height: "1.16667" }),
                            (0, jsx_runtime.jsx)("rect", { x: "9.91675", width: "2.91667", height: "1.16667" }),
                            (0, jsx_runtime.jsx)("rect", { x: "4.08325", y: "14", width: "2.91667", height: "1.16667", transform: "rotate(-180 4.08325 14)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "5.25", y: "4.6665", width: "1.16667", height: "3.5", transform: "rotate(-180 5.25 4.6665)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "5.25", y: "9.3335", width: "1.16667", height: "2.91667", transform: "rotate(-180 5.25 9.3335)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "9.91675", y: "12.8335", width: "1.16667", height: "6.41667", transform: "rotate(-180 9.91675 12.8335)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "12.8333", y: "1.1665", width: "1.16667", height: "2.91667" }),
                            (0, jsx_runtime.jsx)("rect", { x: "1.16675", y: "4.0835", width: "1.16667", height: "2.91667", transform: "rotate(-180 1.16675 4.0835)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "12.8333", y: "9.9165", width: "1.16667", height: "2.91667" }),
                            (0, jsx_runtime.jsx)("rect", { x: "1.16675", y: "11.0835", width: "1.16667", height: "1.16667", transform: "rotate(-180 1.16675 11.0835)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "8.75", y: "5.25", width: "4.08333", height: "1.16667", transform: "rotate(-180 8.75 5.25)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "8.75", y: "1.1665", width: "1.16667", height: "4.08333" }),
                            (0, jsx_runtime.jsx)("rect", { x: "5.25", y: "12.8335", width: "1.16667", height: "2.91667", transform: "rotate(-180 5.25 12.8335)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "11.6667", y: "8.75", width: "1.16667", height: "1.16667" }),
                            (0, jsx_runtime.jsx)("rect", { x: "1.16675", y: "12.8335", width: "1.16667", height: "1.75", transform: "rotate(-180 1.16675 12.8335)" }),
                        ],
                    }),
                    sun: (0, jsx_runtime.jsx)("svg", {
                        width: "16",
                        height: "16",
                        viewBox: "0 0 16 16",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: (0, jsx_runtime.jsx)("path", {
                            d:
                                "M8.88889 0H7.11111V1.77778H8.88889V0ZM12.4444 1.77778H14.2222V3.55556H12.4444V1.77778ZM7.11111 7.11111H8.88889V8.88889H7.11111V7.11111ZM0 7.11111H1.77778V8.88889H0V7.11111ZM16 7.11111H14.2222V8.88889H16V7.11111ZM1.77778 1.77778H3.55556V3.55556H1.77778V1.77778ZM14.2222 14.2222H12.4444V12.4444H14.2222V14.2222ZM7.11111 16H8.88889V14.2222H7.11111V16ZM3.55556 14.2222H1.77778V12.4444H3.55556V14.2222ZM5.33333 3.55556H10.6667V5.33333H5.33333V3.55556ZM5.33333 10.6667H3.55556V5.33333H5.33333V10.6667ZM5.33333 10.6667V12.4444H10.6667V10.6667H12.4444V5.33333H10.6667V10.6667H5.33333Z",
                        }),
                    }),
                    "grid-condensed": (0, jsx_runtime.jsxs)("svg", {
                        width: "14",
                        height: "14",
                        viewBox: "0 0 14 14",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [
                            (0, jsx_runtime.jsx)("rect", { x: "11.4546", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "10.1819", y: "1.27295", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "11.4546", y: "2.54541", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "12.7273", y: "1.27295", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "11.4543", y: "5.09131", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "10.1819", y: "6.36426", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "11.4543", y: "7.63623", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "12.7273", y: "6.36426", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "11.4546", y: "10.1816", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "10.1819", y: "11.4546", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "11.4546", y: "12.7271", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "12.7273", y: "11.4546", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "6.36353", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "5.09082", y: "1.27295", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "6.36353", y: "2.54541", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "7.63647", y: "1.27295", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "6.36353", y: "5.09131", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "5.09082", y: "6.36426", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "6.36353", y: "7.63623", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "7.63623", y: "6.36426", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "6.36353", y: "10.1816", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "5.09082", y: "11.4546", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "6.36353", y: "12.7271", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "7.63647", y: "11.4546", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "1.27271", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { y: "1.27295", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "1.27271", y: "2.54541", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2.54541", y: "1.27295", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "1.27271", y: "5.09131", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { y: "6.36426", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "1.27271", y: "7.63623", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2.54541", y: "6.36426", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "1.27271", y: "10.1816", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { y: "11.4546", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "1.27271", y: "12.7271", width: "1.27273", height: "1.27273" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2.54541", y: "11.4546", width: "1.27273", height: "1.27273" }),
                        ],
                    }),
                    "star-filled": (0, jsx_runtime.jsxs)("svg", {
                        width: "16",
                        height: "16",
                        viewBox: "0 0 16 16",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [
                            (0, jsx_runtime.jsx)("path", { d: "M1.33333 6H2.66667V7.33333H1.33333V6Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M0 5.33333H6V6.66667H0V5.33333Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M2.66667 5.33333H6V8H2.66667V5.33333Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M4 8H5.33333V9.33333H4V8Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M14.6667 6H13.3333V7.33333H14.6667V6Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M16 5.33333H10V6.66667H16V5.33333Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M13.3333 5.33333H10V8H13.3333V5.33333Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M12 6.66667H8.66667V9.33333H12V6.66667Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M4.66667 9.33333H11.3333V10.6667H4.66667V9.33333Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M4.66667 8H6V9.33333H4.66667V8Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M3.33333 12H6.66667V14H3.33333V12Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M4 10.6667H8V12H4V10.6667Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M2.66667 13.3333H4V15.3333H2.66667V13.3333Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M5.33333 10.6667H8V12.6667H5.33333V10.6667Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M7.33333 10H11.3333V12.6667H7.33333V10Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M2.66667 14H4.66667V15.3333H2.66667V14Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M2 14.6667H3.33333V16H2V14.6667Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M12.6667 12H9.33333V14H12.6667V12Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M12 10.6667H8V12H12V10.6667Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M13.3333 13.3333H12V15.3333H13.3333V13.3333Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M13.3333 14H11.3333V15.3333H13.3333V14Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M14 14.6667H12.6667V16H14V14.6667Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M11.3333 8.66667H10V10.6667L11.3333 10.6667V8.66667Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M9.33333 11.3333H8L8 12.6667L9.33333 12.6667V11.3333Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M6 9.33333H7.33333V10.6667H6V9.33333Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M6 4H10V9.33333L6 9.33333V4Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M8.66667 9.33333L10 9.33333V10.6667L8.66667 10.6667V9.33333Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M6.66667 1.33333H9.33333V4.66667H6.66667V1.33333Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M8 1.33333H9.33333V2.66667H8V1.33333Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M7.33333 0H8.66667V1.33333H7.33333V0Z" }),
                        ],
                    }),
                    "star-outlined": (0, jsx_runtime.jsxs)("svg", {
                        width: "16",
                        height: "16",
                        viewBox: "0 0 16 16",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [
                            (0, jsx_runtime.jsx)("rect", { x: "1.33325", y: "6", width: "1.33333", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2.66675", y: "6.6665", width: "1.33333", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { y: "5.3335", width: "6", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2.66675", y: "5.3335", width: "3.33333", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { x: "4", y: "8", width: "1.33333", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { width: "1.33333", height: "1.33333", transform: "matrix(-1 0 0 1 14.6667 6)" }),
                            (0, jsx_runtime.jsx)("rect", { width: "1.33333", height: "1.33333", transform: "matrix(-1 0 0 1 13.3333 6.6665)" }),
                            (0, jsx_runtime.jsx)("rect", { width: "6", height: "1.33333", transform: "matrix(-1 0 0 1 16 5.3335)" }),
                            (0, jsx_runtime.jsx)("rect", { width: "3.33333", height: "1.33333", transform: "matrix(-1 0 0 1 13.3333 5.3335)" }),
                            (0, jsx_runtime.jsx)("rect", { width: "1.33333", height: "1.33333", transform: "matrix(-1 0 0 1 12 8)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "4.66675", y: "12.6665", width: "2", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { x: "3.33325", y: "12", width: "1.33333", height: "2" }),
                            (0, jsx_runtime.jsx)("rect", { x: "4", y: "10.6665", width: "1.33333", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2.66675", y: "13.3335", width: "1.33333", height: "2" }),
                            (0, jsx_runtime.jsx)("rect", { x: "6.66675", y: "11.3335", width: "1.33333", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2.66675", y: "14", width: "2", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2", y: "14.6665", width: "1.33333", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { width: "3.33333", height: "1.33333", transform: "matrix(-1 0 0 1 12.6667 12.6665)" }),
                            (0, jsx_runtime.jsx)("rect", { width: "1.33333", height: "1.33333", transform: "matrix(-1 0 0 1 12 10.6665)" }),
                            (0, jsx_runtime.jsx)("rect", { width: "1.33333", height: "2", transform: "matrix(-1 0 0 1 13.3333 13.3335)" }),
                            (0, jsx_runtime.jsx)("rect", { width: "1.33333", height: "2", transform: "matrix(-1 0 0 1 12.6667 12)" }),
                            (0, jsx_runtime.jsx)("rect", { width: "2", height: "1.33333", transform: "matrix(-1 0 0 1 13.3333 14)" }),
                            (0, jsx_runtime.jsx)("rect", { width: "1.33333", height: "1.33333", transform: "matrix(-1 0 0 1 14 14.6665)" }),
                            (0, jsx_runtime.jsx)("rect", { width: "1.33333", height: "2", transform: "matrix(-1 0 0 1 11.3333 8.6665)" }),
                            (0, jsx_runtime.jsx)("rect", { width: "1.33333", height: "1.33333", transform: "matrix(-1 0 0 1 9.33325 11.3335)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "4.66675", y: "9.3335", width: "1.33333", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { x: "6", y: "4", width: "1.33333", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { x: "8.66675", y: "4", width: "1.33333", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { x: "8", y: "1.3335", width: "1.33333", height: "2.66667" }),
                            (0, jsx_runtime.jsx)("rect", { x: "6.66675", y: "1.3335", width: "1.33333", height: "2.66667" }),
                            (0, jsx_runtime.jsx)("rect", { x: "8", y: "1.3335", width: "1.33333", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { x: "7.33325", width: "1.33333", height: "1.33333" }),
                        ],
                    }),
                    i: (0, jsx_runtime.jsx)("svg", { width: "2", height: "8", viewBox: "0 0 2 8", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: (0, jsx_runtime.jsx)("path", { d: "M0 1.6H1.6V0H0V1.6ZM1.6 8H0V3.2H1.6V8Z" }) }),
                    x: (0, jsx_runtime.jsx)("svg", {
                        width: "12",
                        height: "12",
                        viewBox: "0 0 12 12",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: (0, jsx_runtime.jsx)("path", {
                            d:
                                "M0 0H1.71429V1.71429H0V0ZM3.42857 3.42857H1.71429V1.71429H3.42857V3.42857ZM5.14286 5.14286H3.42857V3.42857H5.14286V5.14286ZM6.85714 5.14286H5.14286V6.85714H3.42857V8.57143H1.71429V10.2857H0V12H1.71429V10.2857H3.42857V8.57143H5.14286V6.85714H6.85714V8.57143H8.57143V10.2857H10.2857V12H12V10.2857H10.2857V8.57143H8.57143V6.85714H6.85714V5.14286ZM8.57143 3.42857V5.14286H6.85714V3.42857H8.57143ZM10.2857 1.71429V3.42857H8.57143V1.71429H10.2857ZM10.2857 1.71429V0H12V1.71429H10.2857Z",
                        }),
                    }),
                    "fuel-pump": (0, jsx_runtime.jsxs)("svg", {
                        width: "16",
                        height: "16",
                        viewBox: "0 0 16 16",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [
                            (0, jsx_runtime.jsx)("rect", { x: "1.39136", width: "1.3913", height: "13.913", fill: "#929292" }),
                            (0, jsx_runtime.jsx)("rect", { x: "9.73901", width: "1.3913", height: "8.34783", transform: "rotate(90 9.73901 0)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "9.73901", y: "4.17383", width: "1.3913", height: "8.34783", transform: "rotate(90 9.73901 4.17383)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "11.1304", y: "13.9131", width: "1.3913", height: "11.1304", transform: "rotate(90 11.1304 13.9131)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "8.34766", width: "1.3913", height: "13.913", fill: "#929292" }),
                            (0, jsx_runtime.jsx)("rect", { x: "9.73901", y: "6.95642", width: "2.78261", height: "1.3913" }),
                            (0, jsx_runtime.jsx)("rect", { x: "13.2175", y: "4.17383", width: "1.3913", height: "1.3913" }),
                            (0, jsx_runtime.jsx)("rect", { x: "13.9128", y: "2.78259", width: "1.3913", height: "1.3913" }),
                            (0, jsx_runtime.jsx)("rect", { x: "11.1304", width: "1.3913", height: "1.3913", fill: "#929292" }),
                            (0, jsx_runtime.jsx)("rect", { x: "12.522", width: "1.3913", height: "1.3913", fill: "#929292" }),
                            (0, jsx_runtime.jsx)("rect", { x: "12.522", y: "2.78259", width: "1.3913", height: "1.3913" }),
                            (0, jsx_runtime.jsx)("rect", { x: "13.2175", y: "1.39124", width: "1.3913", height: "1.3913" }),
                            (0, jsx_runtime.jsx)("rect", { x: "12.522", y: "11.8262", width: "3.47826", height: "1.3913" }),
                            (0, jsx_runtime.jsx)("rect", { x: "11.1304", y: "8.34784", width: "1.3913", height: "4.86957" }),
                            (0, jsx_runtime.jsx)("rect", { x: "14.6086", y: "4.17383", width: "1.3913", height: "7.65217" }),
                        ],
                    }),
                    gauge: (0, jsx_runtime.jsx)("svg", {
                        width: "16",
                        height: "11",
                        viewBox: "0 0 16 11",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: (0, jsx_runtime.jsx)("path", {
                            d:
                                "M10.1818 0H5.81818V1.45455H10.1818V0ZM2.90909 2.90909H5.81818V1.45455H2.90909V2.90909ZM1.45455 4.36364H2.90909V2.90909H1.45455V4.36364ZM1.45455 8.72727V4.36364H-4.76837e-07V8.72727H1.45455ZM1.45455 8.72727V10.1818H2.90909V8.72727H1.45455ZM16 4.36364H14.5455V8.72727H16V4.36364ZM14.5455 8.72727H13.0909V10.1818H14.5455V8.72727ZM6.54545 5.81818H9.45455V4.36364H10.9091V2.90909H12.3636V1.45455H13.8182V2.90909H12.3636V4.36364H10.9091V5.81818H9.45455V8.72727H6.54545V5.81818Z",
                        }),
                    }),
                    twitter: (0, jsx_runtime.jsx)("svg", {
                        width: "14",
                        height: "12",
                        viewBox: "0 0 14 12",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: (0, jsx_runtime.jsx)("path", {
                            d:
                                "M14 1.65946C13.4852 1.88759 12.9321 2.04173 12.3507 2.11141C12.9506 1.75243 13.3994 1.18744 13.6134 0.52187C13.0498 0.856665 12.4329 1.09232 11.7896 1.2186C11.357 0.756703 10.784 0.450549 10.1595 0.347671C9.53511 0.244794 8.89419 0.35095 8.33627 0.649658C7.77835 0.948365 7.33466 1.42291 7.07408 1.99962C6.81351 2.57633 6.75062 3.22294 6.89518 3.83906C5.75309 3.78171 4.63581 3.48486 3.61587 2.96777C2.59593 2.45068 1.69611 1.72491 0.974808 0.837558C0.728178 1.263 0.586365 1.75626 0.586365 2.28158C0.58609 2.75449 0.702548 3.22016 0.925407 3.63727C1.14827 4.05438 1.47064 4.41003 1.86391 4.67267C1.40782 4.65816 0.961782 4.53491 0.562935 4.3132V4.3502C0.562889 5.01347 0.792322 5.65634 1.2123 6.16971C1.63229 6.68309 2.21695 7.03535 2.86708 7.16672C2.44398 7.28123 2.00038 7.2981 1.56981 7.21605C1.75324 7.78676 2.11054 8.28583 2.5917 8.64338C3.07286 9.00093 3.65378 9.19907 4.25315 9.21006C3.23569 10.0088 1.97914 10.442 0.685634 10.4401C0.456502 10.4402 0.227564 10.4268 0 10.4001C1.31299 11.2443 2.8414 11.6923 4.40236 11.6905C9.68643 11.6905 12.5751 7.31408 12.5751 3.51844C12.5751 3.39512 12.572 3.27057 12.5665 3.14726C13.1283 2.74092 13.6134 2.23774 13.9988 1.66131L14 1.65946V1.65946Z",
                        }),
                    }),
                    discord: (0, jsx_runtime.jsx)("svg", {
                        width: "14",
                        height: "12",
                        viewBox: "0 0 14 12",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: (0, jsx_runtime.jsx)("path", {
                            d:
                                "M11.8515 1.62068C10.959 1.21819 10.0024 0.9207 9.00202 0.751538C8.99311 0.749827 8.98389 0.75093 8.97563 0.754692C8.96738 0.758454 8.96049 0.764691 8.95594 0.772537C8.83344 0.987781 8.69695 1.26836 8.60128 1.49002C7.54028 1.33149 6.46162 1.33149 5.40062 1.49002C5.29407 1.24436 5.17392 1.00483 5.04072 0.772537C5.0362 0.764594 5.02937 0.758217 5.02114 0.754256C5.01291 0.750296 5.00366 0.74894 4.99464 0.750371C3.99483 0.919533 3.03819 1.21702 2.14513 1.6201C2.13745 1.62332 2.13094 1.62881 2.12647 1.63585C0.311188 4.30452 -0.186381 6.90728 0.0580287 9.47737C0.0587088 9.48366 0.0606627 9.48975 0.0637714 9.49527C0.0668801 9.50079 0.0710787 9.50561 0.0761115 9.50945C1.13564 10.2808 2.31741 10.8685 3.57193 11.2477C3.58067 11.2504 3.59003 11.2504 3.59877 11.2477C3.60751 11.245 3.61523 11.2397 3.62093 11.2326C3.89088 10.8715 4.1301 10.4885 4.33607 10.0875C4.33893 10.082 4.34058 10.076 4.3409 10.0698C4.34123 10.0637 4.34022 10.0575 4.33795 10.0517C4.33569 10.046 4.33221 10.0408 4.32776 10.0365C4.32331 10.0322 4.31799 10.0289 4.31216 10.0269C3.93534 9.88495 3.57023 9.71371 3.22019 9.5147C3.2139 9.51111 3.2086 9.50602 3.20476 9.49987C3.20093 9.49373 3.19868 9.48673 3.19822 9.4795C3.19775 9.47227 3.19909 9.46504 3.20211 9.45846C3.20513 9.45188 3.20974 9.44615 3.21552 9.44179C3.28902 9.38754 3.36252 9.33096 3.43251 9.27438C3.43882 9.26929 3.4464 9.26605 3.45444 9.26502C3.46247 9.26399 3.47063 9.26521 3.47801 9.26854C5.7687 10.2975 8.24954 10.2975 10.5134 9.26854C10.5208 9.26501 10.529 9.26363 10.5372 9.26456C10.5453 9.26549 10.5531 9.26869 10.5595 9.27379C10.6295 9.33096 10.7024 9.38754 10.7765 9.44179C10.7823 9.44606 10.787 9.45171 10.7901 9.45824C10.7932 9.46476 10.7947 9.47196 10.7943 9.47919C10.794 9.48641 10.7918 9.49343 10.7881 9.49963C10.7844 9.50583 10.7792 9.51101 10.773 9.5147C10.4241 9.71536 10.0613 9.88511 9.68042 10.0263C9.67457 10.0284 9.66924 10.0317 9.66478 10.0361C9.66033 10.0404 9.65686 10.0457 9.65459 10.0515C9.65233 10.0573 9.65133 10.0635 9.65166 10.0697C9.65199 10.0759 9.65364 10.082 9.6565 10.0875C9.8665 10.4883 10.1068 10.8697 10.3711 11.232C10.3766 11.2394 10.3842 11.245 10.393 11.2479C10.4017 11.2508 10.4112 11.251 10.4201 11.2483C11.6767 10.8701 12.8604 10.2822 13.9211 9.50945C13.9263 9.50583 13.9306 9.50115 13.9339 9.49572C13.9371 9.49029 13.9391 9.48423 13.9398 9.47795C14.2315 6.50654 13.451 3.92478 11.8696 1.63701C11.8657 1.62958 11.8593 1.62378 11.8515 1.62068ZM4.67848 7.91233C3.989 7.91233 3.42026 7.28877 3.42026 6.52404C3.42026 5.75873 3.97792 5.13574 4.67848 5.13574C5.38429 5.13574 5.94777 5.76398 5.93669 6.52404C5.93669 7.28935 5.37904 7.91233 4.67848 7.91233V7.91233ZM9.33043 7.91233C8.64036 7.91233 8.07221 7.28877 8.07221 6.52404C8.07221 5.75873 8.62928 5.13574 9.33043 5.13574C10.0362 5.13574 10.5997 5.76398 10.5886 6.52404C10.5886 7.28935 10.0368 7.91233 9.33043 7.91233V7.91233Z",
                        }),
                    }),
                    broom: (0, jsx_runtime.jsxs)("svg", {
                        width: "20",
                        height: "20",
                        viewBox: "0 0 20 20",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [
                            (0, jsx_runtime.jsx)("rect", { x: "13.3335", y: "8.33325", width: "1.66667", height: "1.66667", transform: "rotate(-180 13.3335 8.33325)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "11.6665", y: "6.66675", width: "1.66667", height: "1.66667", transform: "rotate(-180 11.6665 6.66675)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "10", y: "8.33325", width: "1.66667", height: "1.66667", transform: "rotate(-180 10 8.33325)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "15", y: "10", width: "1.66667", height: "1.66667", transform: "rotate(-180 15 10)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "13.3335", y: "11.6667", width: "1.66667", height: "1.66667", transform: "rotate(-180 13.3335 11.6667)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "8.3335", y: "8.33325", width: "1.66667", height: "1.66667", transform: "rotate(-180 8.3335 8.33325)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "13.3335", y: "13.3333", width: "1.66667", height: "1.66667", transform: "rotate(-180 13.3335 13.3333)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "15", y: "5", width: "1.66667", height: "1.66667", transform: "rotate(90 15 5)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "16.6665", y: "3.33325", width: "1.66667", height: "1.66667", transform: "rotate(90 16.6665 3.33325)" }),
                            (0, jsx_runtime.jsx)("rect", { width: "1.66667", height: "1.66667", transform: "matrix(-4.37114e-08 1 1 4.37114e-08 16.6665 1.66675)" }),
                            (0, jsx_runtime.jsx)("rect", { width: "1.66667", height: "1.66667", transform: "matrix(-4.37114e-08 1 1 4.37114e-08 18.3335 0)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "10", y: "8.33325", width: "1.66667", height: "1.66667", transform: "rotate(90 10 8.33325)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "11.6665", y: "8.33325", width: "1.66667", height: "1.66667", transform: "rotate(90 11.6665 8.33325)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "8.3335", y: "10", width: "1.66667", height: "1.66667", transform: "rotate(90 8.3335 10)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "6.6665", y: "11.6667", width: "1.66667", height: "1.66667", transform: "rotate(90 6.6665 11.6667)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "5", y: "13.3333", width: "1.66667", height: "1.66667", transform: "rotate(90 5 13.3333)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "11.6665", y: "10", width: "1.66667", height: "1.66667", transform: "rotate(90 11.6665 10)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "10", y: "11.6667", width: "1.66667", height: "1.66667", transform: "rotate(90 10 11.6667)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "8.3335", y: "13.3333", width: "1.66667", height: "1.66667", transform: "rotate(90 8.3335 13.3333)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "6.6665", y: "7.5", width: "1.66667", height: "1.66667", transform: "rotate(90 6.6665 7.5)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "5", y: "8.33325", width: "1.66667", height: "1.66667", transform: "rotate(90 5 8.33325)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "3.3335", y: "9.16675", width: "1.66667", height: "1.66667", transform: "rotate(90 3.3335 9.16675)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "12.5", y: "13.3333", width: "1.66667", height: "1.66667", transform: "rotate(90 12.5 13.3333)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "11.6665", y: "15", width: "1.66667", height: "1.66667", transform: "rotate(90 11.6665 15)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "10.8335", y: "16.6667", width: "1.66667", height: "1.66667", transform: "rotate(90 10.8335 16.6667)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "10", y: "18.3333", width: "1.66667", height: "1.66667", transform: "rotate(90 10 18.3333)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "6.6665", y: "15", width: "1.66667", height: "1.66667", transform: "rotate(90 6.6665 15)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "8.3335", y: "16.6667", width: "1.66667", height: "1.66667", transform: "rotate(90 8.3335 16.6667)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "3.3335", y: "11.6667", width: "1.66667", height: "1.66667", transform: "rotate(90 3.3335 11.6667)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "1.6665", y: "10", width: "1.66667", height: "1.66667", transform: "rotate(90 1.6665 10)" }),
                        ],
                    }),
                    "arrow-up": (0, jsx_runtime.jsxs)("svg", {
                        width: "10",
                        height: "16",
                        viewBox: "0 0 10 16",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [
                            (0, jsx_runtime.jsx)("rect", { x: "6.66602", y: "2.22217", width: "1.11107", height: "1.11107", transform: "rotate(-180 6.66602 2.22217)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "7.77734", y: "3.3335", width: "1.11107", height: "1.11107", transform: "rotate(-180 7.77734 3.3335)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "8.88916", y: "4.44458", width: "1.11107", height: "1.11107", transform: "rotate(-180 8.88916 4.44458)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "9.99951", y: "5.55566", width: "1.11107", height: "1.11107", transform: "rotate(-180 9.99951 5.55566)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "5.55566", y: "1.11108", width: "1.11107", height: "1.11107", transform: "rotate(-180 5.55566 1.11108)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "5.55566", y: "15.1277", width: "1.11107", height: "14.273", transform: "rotate(-180 5.55566 15.1277)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "4.44434", y: "1.11108", width: "1.11107", height: "1.11107", transform: "rotate(90 4.44434 1.11108)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "3.3335", y: "2.22217", width: "1.11107", height: "1.11107", transform: "rotate(90 3.3335 2.22217)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2.22217", y: "3.3335", width: "1.11107", height: "1.11107", transform: "rotate(90 2.22217 3.3335)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "1.11133", y: "4.44458", width: "1.11107", height: "1.11107", transform: "rotate(90 1.11133 4.44458)" }),
                        ],
                    }),
                    "add-square": (0, jsx_runtime.jsx)("svg", {
                        width: "16",
                        height: "14",
                        viewBox: "0 0 16 14",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: (0, jsx_runtime.jsx)("path", { d: "M16 0.5H0V13.3H8V11.7H1.6V2.1H14.4V5.3H16V0.5ZM13.6 10.9H16V9.3H13.6V6.9H12V9.3H9.6V10.9H12V13.3H13.6V10.9Z" }),
                    }),
                    "plus-square": (0, jsx_runtime.jsx)("svg", {
                        width: "16",
                        height: "16",
                        viewBox: "0 0 16 16",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: (0, jsx_runtime.jsx)("path", {
                            d: "M0 0H16V16H0V0ZM14.2222 14.2222V1.77778H1.77778V14.2222H14.2222ZM8.88889 7.11111H12.4444V8.88889H8.88889V12.4444H7.11111V8.88889H3.55556V7.11111H7.11111V3.55556H8.88889V7.11111Z",
                        }),
                    }),
                    "minus-square": (0, jsx_runtime.jsx)("svg", {
                        width: "16",
                        height: "16",
                        viewBox: "0 0 16 16",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: (0, jsx_runtime.jsx)("path", { d: "M0 0H16V16H0V0ZM14.2222 14.2222V1.77778H1.77778V14.2222H14.2222ZM8.88889 7.11111H12.4444V8.88889H8.88889H7.11111H3.55556V7.11111H7.11111H8.88889Z" }),
                    }),
                    info: (0, jsx_runtime.jsxs)("svg", {
                        width: "14",
                        height: "14",
                        viewBox: "0 0 14 14",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [
                            (0, jsx_runtime.jsx)("path", { d: "M6 4.6H7.6V3H6V4.6ZM7.6 11H6V6.2H7.6V11Z" }),
                            (0, jsx_runtime.jsx)("rect", { x: "10.1816", width: "1.27274", height: "6.36371", transform: "rotate(90 10.1816 0)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2.5459", y: "1.27295", width: "1.27274", height: "1.27274" }),
                            (0, jsx_runtime.jsx)("rect", { x: "3.81787", y: "14", width: "1.27274", height: "6.36371", transform: "rotate(-90 3.81787 14)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "12.7275", y: "11.4546", width: "1.27274", height: "1.27274", transform: "rotate(-180 12.7275 11.4546)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "11.4546", y: "12.7275", width: "1.27274", height: "1.27274", transform: "rotate(-180 11.4546 12.7275)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2.5459", y: "12.7275", width: "1.27274", height: "1.27274", transform: "rotate(-90 2.5459 12.7275)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "12.7275", y: "2.54541", width: "1.27274", height: "1.27274", transform: "rotate(90 12.7275 2.54541)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "11.4546", y: "1.27295", width: "1.27274", height: "1.27274", transform: "rotate(90 11.4546 1.27295)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "14.0005", y: "3.81836", width: "1.27274", height: "1.27274", transform: "rotate(90 14.0005 3.81836)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "1.27295", y: "11.4546", width: "1.27274", height: "1.27274", transform: "rotate(-90 1.27295 11.4546)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "14.0005", y: "5.09131", width: "5.09097", height: "1.27274", transform: "rotate(90 14.0005 5.09131)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2.5459", y: "2.54541", width: "1.27274", height: "1.27274", transform: "rotate(90 2.5459 2.54541)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "1.27295", y: "3.81836", width: "6.36371", height: "1.27274", transform: "rotate(90 1.27295 3.81836)" }),
                        ],
                    }),
                    flag: (0, jsx_runtime.jsxs)("svg", {
                        width: "14",
                        height: "14",
                        viewBox: "0 0 14 14",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [
                            (0, jsx_runtime.jsx)("path", { d: "M8.27246 6.36353L8.27246 7.63622L-6.96739e-05 7.63622L-6.96182e-05 6.36353L8.27246 6.36353Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M13.9995 7L13.9995 9.27L8.27238 9.27L8.27238 7L13.9995 7Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M8.27246 0L8.27246 1.2727L-6.96739e-05 1.2727L-6.96182e-05 -3.61603e-07L8.27246 0Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M13.9995 1.27246L13.9995 2.54516L8.27238 2.54516L8.27238 1.27246L13.9995 1.27246Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M13.9995 7.63599L12.7268 7.63599L12.7268 2.5452L13.9995 2.5452L13.9995 7.63599Z" }),
                            (0, jsx_runtime.jsx)("path", { d: "M1.27246 13.9998L-0.000237226 13.9998L-0.000236003 8.95341e-05L1.27246 8.96454e-05L1.27246 13.9998Z" }),
                            (0, jsx_runtime.jsx)("rect", { width: "8.3998", height: "6.99983" }),
                            (0, jsx_runtime.jsx)("rect", { x: "8.3999", y: "1.40039", width: "5.59987", height: "6.99983" }),
                        ],
                    }),
                    "small-check": (0, jsx_runtime.jsx)("svg", {
                        width: "11",
                        height: "8",
                        viewBox: "0 0 12 9",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: (0, jsx_runtime.jsx)("path", { d: "M10.5 0H12V1.5H10.5V0ZM9 3V1.5H10.5V3H9ZM7.5 4.5V3H9V4.5H7.5ZM6 6H7.5V4.5H6V6ZM4.5 7.5H6V6H4.5V7.5ZM3 7.5V9H4.5V7.5H3ZM1.5 6H3V7.5H1.5V6ZM1.5 6H0V4.5H1.5V6Z" }),
                    }),
                    warning: (0, jsx_runtime.jsxs)("svg", {
                        width: "16",
                        height: "15",
                        viewBox: "0 0 16 15",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [
                            (0, jsx_runtime.jsx)("rect", { x: "10.1816", y: "1.45459", width: "4.36352", height: "1.45451", transform: "rotate(180 10.1816 1.45459)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2.90967", y: "10.1816", width: "1.45451", height: "2.90901", transform: "rotate(180 2.90967 10.1816)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "4.36377", y: "7.27246", width: "1.45451", height: "2.90901", transform: "rotate(180 4.36377 7.27246)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "5.81787", y: "4.36328", width: "1.45451", height: "2.90901", transform: "rotate(180 5.81787 4.36328)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "1.45459", y: "13.0903", width: "1.45451", height: "2.90901", transform: "rotate(180 1.45459 13.0903)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "14.5454", y: "14.5449", width: "13.0906", height: "1.45451", transform: "rotate(180 14.5454 14.5449)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "15.9995", y: "13.0903", width: "1.45451", height: "2.90901", transform: "rotate(180 15.9995 13.0903)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "14.5454", y: "10.1816", width: "1.45451", height: "2.90901", transform: "rotate(180 14.5454 10.1816)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "13.0908", y: "7.27246", width: "1.45451", height: "2.90901", transform: "rotate(180 13.0908 7.27246)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "11.6357", y: "4.36328", width: "1.45451", height: "2.90901", transform: "rotate(180 11.6357 4.36328)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "8.72754", y: "8.72705", width: "1.45451", height: "5.81802", transform: "rotate(180 8.72754 8.72705)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "8.72754", y: "11.6362", width: "1.45451", height: "1.45451", transform: "rotate(180 8.72754 11.6362)" }),
                        ],
                    }),
                    checkmark: (0, jsx_runtime.jsx)("svg", {
                        width: "14",
                        height: "11",
                        viewBox: "0 0 14 11",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: (0, jsx_runtime.jsx)("path", {
                            d: "M12.25 0H14V1.75H12.25V0ZM10.5 3.5V1.75H12.25V3.5H10.5ZM8.75 5.25V3.5H10.5V5.25H8.75ZM7 7H8.75V5.25H7V7ZM5.25 8.75H7V7H5.25V8.75ZM3.5 8.75V10.5H5.25V8.75H3.5ZM1.75 7H3.5V8.75H1.75V7ZM1.75 7H0V5.25H1.75V7Z",
                        }),
                    }),
                    stack: (0, jsx_runtime.jsx)("svg", {
                        width: "13",
                        height: "16",
                        viewBox: "0 0 13 16",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: (0, jsx_runtime.jsx)("path", { d: "M0 0H8.8V1.6H1.6V12H0V0ZM3.2 3.2H12.8V16H3.2V3.2ZM4.8 4.8V14.4H11.2V4.8H4.8Z" }),
                    }),
                    "magnifying-glass": (0, jsx_runtime.jsx)("svg", {
                        width: "16",
                        height: "16",
                        viewBox: "0 0 16 16",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: (0, jsx_runtime.jsx)("path", {
                            d:
                                "M3.2 0H9.6V1.6H3.2V0ZM1.6 3.2V1.6H3.2V3.2H1.6ZM1.6 9.6H0V3.2H1.6V9.6ZM3.2 11.2H1.6V9.6H3.2V11.2ZM9.6 11.2V12.8H3.2V11.2H9.6ZM11.2 9.6H9.6V11.2H11.2V12.8H12.8V14.4H14.4V16H16V14.4H14.4V12.8H12.8V11.2H11.2V9.6ZM11.2 3.2H12.8V9.6H11.2V3.2ZM11.2 3.2V1.6H9.6V3.2H11.2Z",
                        }),
                    }),
                    image: (0, jsx_runtime.jsx)("svg", {
                        width: "16",
                        height: "15",
                        viewBox: "0 0 16 15",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: (0, jsx_runtime.jsx)("path", {
                            fillRule: "evenodd",
                            clipRule: "evenodd",
                            d:
                                "M0.800551 0H0.8V0.8H0V0.800034H0.8V1.60003H0V12.8H0.8V13.6V13.6V14.4H0V14.4H16V0H15.9994V0.8H15.2003H15.1994H14.4003V0H1.60055V0.8H0.800551V0ZM14.4 1.6V12.8H1.6V1.6H14.4ZM9.6 4.8H8V6.4H6.4V8H4.8V9.6H3.2V11.2H4.8V9.6H6.4V8H8V6.4H9.6V8H11.2V9.6H12.8V8H11.2V6.4H9.6V4.8ZM4.8 3.2H3.2V4.8H4.8V3.2ZM15.1994 13.6V12.8H15.9994V13.6V13.6V14.4H15.2003H15.1994H14.4003V13.6H15.1994ZM1.60055 13.6H0.800551V14.4H1.60055V13.6ZM15.9994 0.800034H15.1994V1.60003H15.9994V0.800034Z",
                        }),
                    }),
                    "bar-chart": (0, jsx_runtime.jsxs)("svg", {
                        width: "16",
                        height: "14",
                        viewBox: "0 0 16 14",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [
                            (0, jsx_runtime.jsx)("rect", { x: "3.33228", y: "5.3335", width: "1.33333", height: "1.33333", transform: "rotate(90 3.33228 5.3335)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2", y: "6.6665", width: "5.33333", height: "1.33333", transform: "rotate(90 2 6.6665)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "4.66772", y: "6.6665", width: "5.33333", height: "1.33333", transform: "rotate(90 4.66772 6.6665)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "8.66772", y: "3.3335", width: "1.33333", height: "1.33333", transform: "rotate(90 8.66772 3.3335)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "7.33228", y: "4.6665", width: "7.33333", height: "1.33333", transform: "rotate(90 7.33228 4.6665)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "10", y: "4.6665", width: "7.33333", height: "1.33333", transform: "rotate(90 10 4.6665)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "14", width: "1.33333", height: "1.33333", transform: "rotate(90 14 0)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "12.6677", y: "1.3335", width: "10.6667", height: "1.33333", transform: "rotate(90 12.6677 1.3335)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "15.3323", y: "1.3335", width: "10.6667", height: "1.33333", transform: "rotate(90 15.3323 1.3335)" }),
                            (0, jsx_runtime.jsx)("path", { d: "M16 12L16 13.3333L-5.82819e-08 13.3333L0 12L16 12Z" }),
                        ],
                    }),
                    "vertical-stack": (0, jsx_runtime.jsxs)("svg", {
                        width: "16",
                        height: "16",
                        viewBox: "0 0 16 16",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [
                            (0, jsx_runtime.jsx)("rect", { x: "6.66727", y: "8", width: "2.66667", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { x: "9.33273", y: "1.3335", width: "2.66667", height: "1.33333", transform: "rotate(-180 9.33273 1.3335)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "9.33273", y: "6.6665", width: "2.66667", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { x: "6.66727", y: "2.6665", width: "2.66667", height: "1.33333", transform: "rotate(-180 6.66727 2.6665)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "4", y: "6.6665", width: "2.66667", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { x: "12", y: "2.6665", width: "2.66667", height: "1.33333", transform: "rotate(-180 12 2.6665)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "1.33228", y: "5.3335", width: "2.66667", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { y: "4", width: "1.33333", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { x: "14.6668", y: "4", width: "1.33333", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { x: "14.6668", y: "4", width: "2.66667", height: "1.33333", transform: "rotate(-180 14.6668 4)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "12", y: "5.3335", width: "2.66667", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { x: "4", y: "4", width: "2.66667", height: "1.33333", transform: "rotate(-180 4 4)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "6.66727", y: "11.3335", width: "2.66667", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { x: "9.33273", y: "10", width: "2.66667", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { x: "4", y: "10", width: "2.66667", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { x: "1.33228", y: "8.66699", width: "2.66667", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { x: "12", y: "8.66699", width: "2.66667", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { y: "7.3335", width: "1.33333", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { x: "14.6668", y: "7.3335", width: "1.33333", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { x: "6.66727", y: "14.6665", width: "2.66667", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { x: "9.33273", y: "13.333", width: "2.66667", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { x: "4", y: "13.333", width: "2.66667", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { x: "1.33228", y: "12", width: "2.66667", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { x: "12", y: "12", width: "2.66667", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { y: "10.6665", width: "1.33333", height: "1.33333" }),
                            (0, jsx_runtime.jsx)("rect", { x: "14.6668", y: "10.6665", width: "1.33333", height: "1.33333" }),
                        ],
                    }),
                    "horizontal-stack": (0, jsx_runtime.jsxs)("svg", {
                        width: "17",
                        height: "16",
                        viewBox: "0 0 17 16",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [
                            (0, jsx_runtime.jsx)("rect", { width: "1.45455", height: "1.45455", transform: "matrix(4.37114e-08 1 1 -4.37114e-08 10.4546 3.63638)" }),
                            (0, jsx_runtime.jsx)("rect", { width: "10.1818", height: "1.45454", transform: "matrix(4.37114e-08 1 1 -4.37114e-08 9 5.09091)" }),
                            (0, jsx_runtime.jsx)("path", { d: "M14.8184 0.727295L14.8184 10.9091L16.2729 10.9091L16.2729 0.727295L14.8184 0.727295Z" }),
                            (0, jsx_runtime.jsx)("rect", { width: "1.45455", height: "1.45455", transform: "matrix(4.37114e-08 1 1 -4.37114e-08 11.9092 12.3636)" }),
                            (0, jsx_runtime.jsx)("rect", { width: "1.45455", height: "1.45455", transform: "matrix(4.37114e-08 1 1 -4.37114e-08 11.9092 2.18182)" }),
                            (0, jsx_runtime.jsx)("rect", { width: "1.45455", height: "1.45455", transform: "matrix(4.37114e-08 1 1 -4.37114e-08 13.3638 10.9091)" }),
                            (0, jsx_runtime.jsx)("rect", { width: "1.45455", height: "1.45455", transform: "matrix(4.37114e-08 1 1 -4.37114e-08 13.3638 0.727295)" }),
                            (0, jsx_runtime.jsx)("rect", { width: "1.45455", height: "1.45455", transform: "matrix(4.37114e-08 1 1 -4.37114e-08 6.09082 3.63638)" }),
                            (0, jsx_runtime.jsx)("rect", { width: "10.1818", height: "1.45454", transform: "matrix(4.37114e-08 1 1 -4.37114e-08 4.63623 5.09091)" }),
                            (0, jsx_runtime.jsx)("rect", { width: "1.45455", height: "1.45455", transform: "matrix(4.37114e-08 1 1 -4.37114e-08 7.54541 2.18182)" }),
                            (0, jsx_runtime.jsx)("rect", { width: "1.45455", height: "1.45455", transform: "matrix(4.37114e-08 1 1 -4.37114e-08 9 0.727295)" }),
                            (0, jsx_runtime.jsx)("rect", { width: "1.45455", height: "1.45455", transform: "matrix(4.37114e-08 1 1 -4.37114e-08 1.72754 3.63638)" }),
                            (0, jsx_runtime.jsx)("rect", { width: "10.1818", height: "1.45454", transform: "matrix(4.37114e-08 1 1 -4.37114e-08 0.272949 5.09091)" }),
                            (0, jsx_runtime.jsx)("rect", { width: "1.45455", height: "1.45455", transform: "matrix(4.37114e-08 1 1 -4.37114e-08 3.18213 2.18182)" }),
                            (0, jsx_runtime.jsx)("rect", { width: "1.45455", height: "1.45455", transform: "matrix(4.37114e-08 1 1 -4.37114e-08 4.63672 0.727295)" }),
                            (0, jsx_runtime.jsx)("rect", { width: "1.45455", height: "1.45455", transform: "matrix(4.37114e-08 1 1 -4.37114e-08 10.4546 13.8182)" }),
                        ],
                    }),
                    "clock-outline": (0, jsx_runtime.jsx)("svg", {
                        width: "14",
                        height: "14",
                        viewBox: "0 0 14 14",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: (0, jsx_runtime.jsx)("path", {
                            d:
                                "M11.9778 0.600098H2.0222V2.02232H0.599976V11.9779H2.0222V13.4001H11.9778V11.9779H13.4V2.02232H11.9778V0.600098ZM11.9778 2.02232V11.9779H2.0222V2.02232H11.9778ZM6.28886 3.44454H7.71109V7.71121H10.5555V9.13343H6.28886V3.44454Z",
                        }),
                    }),
                    link: (0, jsx_runtime.jsx)("svg", {
                        width: "14",
                        height: "14",
                        viewBox: "0 0 14 14",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: (0, jsx_runtime.jsx)("path", {
                            d:
                                "M14 6.22222V0H7.77778V1.55556H10.8889V3.11111H9.33333V4.66667H7.77778V6.22222H6.22222V7.77778H4.66667V9.33333H6.22222V7.77778H7.77778V6.22222H9.33333V4.66667H10.8889V3.11111H12.4444V6.22222H14ZM6.22222 1.55556H0V14H12.4444V7.77778H10.8889V12.4444H1.55556V3.11111H6.22222V1.55556Z",
                        }),
                    }),
                    wallet: (0, jsx_runtime.jsx)("svg", {
                        width: "16",
                        height: "15",
                        viewBox: "0 0 16 15",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: (0, jsx_runtime.jsx)("path", {
                            fillRule: "evenodd",
                            clipRule: "evenodd",
                            d:
                                "M12.7996 0H1.60054V0.8H0.800537V0H0.8V0.799805H0V0.8H0.8V1.5998H0V12.7996H0.8L0.8 13.5996H0V13.6004H0.8L0.8 14.4H0V14.4004H0.8V14.4H0.800537V14.4004H1.60054V14.4H12.7996V14.4004H13.5996V14.4H13.6004V14.4004H14.4004V13.6004H14.4V13.5996H14.4004V12.7996H14.4V11.2002H15.1995V11.2H15.2V11.2002H16V11.2H15.2V10.4004H16V10.4002H15.2V9.60039H16V4.8H15.2V4.0002H16V4H15.2V3.2002H16V3.2H14.4V1.5998H14.4004V0.8H14.4V0.799805H14.4004V0H14.4V0.799805H13.6004V0H13.5996V0.8H12.7996V0ZM14.4 0.8H13.6004V1.5998H14.4V0.8ZM15.1995 11.2V10.4002H14.3995V11.2002H14.4V11.2H15.1995ZM14.4 12.7996H13.6004V13.5996H14.4V12.7996ZM14.4 13.6004H13.6004V14.4H14.4V13.6004ZM13.5996 14.4V13.6004H12.7996V14.4H13.5996ZM1.60054 14.4V13.6004H0.800537L0.800537 14.4H1.60054ZM12.8 11.2V12.8H1.6V1.6H12.8V3.2H6.4V11.2H12.8ZM14.4 9.6H8V4.8H14.4V9.6ZM11.2 6.4H9.6V8H11.2V6.4ZM15.1995 4.0002V3.2002H14.3995V4.0002H15.1995Z",
                        }),
                    }),
                    close: (0, jsx_runtime.jsxs)("svg", {
                        width: "16",
                        height: "16",
                        viewBox: "0 0 16 16",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [
                            (0, jsx_runtime.jsx)("rect", { x: "11.6357", width: "1.4545", height: "7.27251", transform: "rotate(90 11.6357 0)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2.90942", y: "1.45508", width: "1.4545", height: "1.4545" }),
                            (0, jsx_runtime.jsx)("rect", { x: "4.36353", y: "15.9995", width: "1.4545", height: "7.27251", transform: "rotate(-90 4.36353 15.9995)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "14.5452", y: "13.0903", width: "1.4545", height: "1.4545", transform: "rotate(-180 14.5452 13.0903)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "13.0903", y: "14.5454", width: "1.4545", height: "1.4545", transform: "rotate(-180 13.0903 14.5454)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2.90942", y: "14.5454", width: "1.4545", height: "1.4545", transform: "rotate(-90 2.90942 14.5454)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "10.1824", y: "10.1816", width: "1.4545", height: "1.4545", transform: "rotate(-180 10.1824 10.1816)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "11.6372", y: "11.6357", width: "1.4545", height: "1.4545", transform: "rotate(-180 11.6372 11.6357)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "8.72729", y: "8.72656", width: "1.4545", height: "1.4545", transform: "rotate(-180 8.72729 8.72656)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "7.27344", y: "7.27246", width: "1.4545", height: "1.4545", transform: "rotate(-180 7.27344 7.27246)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "5.81885", y: "5.81836", width: "1.4545", height: "1.4545", transform: "rotate(-180 5.81885 5.81836)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "10.1824", y: "5.81836", width: "1.4545", height: "1.4545", transform: "rotate(90 10.1824 5.81836)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "11.6372", y: "4.36328", width: "1.4545", height: "1.4545", transform: "rotate(90 11.6372 4.36328)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "7.27344", y: "8.72656", width: "1.4545", height: "1.4545", transform: "rotate(90 7.27344 8.72656)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "5.81885", y: "10.1816", width: "1.4545", height: "1.4545", transform: "rotate(90 5.81885 10.1816)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "14.5452", y: "2.90918", width: "1.4545", height: "1.4545", transform: "rotate(90 14.5452 2.90918)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "13.0903", y: "1.45508", width: "1.4545", height: "1.4545", transform: "rotate(90 13.0903 1.45508)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "16.0002", y: "4.36328", width: "1.4545", height: "1.4545", transform: "rotate(90 16.0002 4.36328)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "1.45459", y: "13.0903", width: "1.4545", height: "1.4545", transform: "rotate(-90 1.45459 13.0903)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "16.0002", y: "5.81836", width: "5.81801", height: "1.4545", transform: "rotate(90 16.0002 5.81836)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2.90942", y: "2.90918", width: "1.4545", height: "1.4545", transform: "rotate(90 2.90942 2.90918)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "1.45459", y: "4.36328", width: "7.27251", height: "1.4545", transform: "rotate(90 1.45459 4.36328)" }),
                        ],
                    }),
                    "shopping-tag": (0, jsx_runtime.jsxs)("svg", {
                        width: "16",
                        height: "16",
                        viewBox: "0 0 16 16",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [
                            (0, jsx_runtime.jsxs)("g", {
                                clipPath: "url(#clip0_1969_37221)",
                                children: [
                                    (0, jsx_runtime.jsx)("rect", { x: "7.51465", y: "0.215332", width: "1.45455", height: "10.1818", transform: "rotate(45 7.51465 0.215332)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "8.54346", y: "15.6436", width: "1.45455", height: "10.1818", transform: "rotate(-135 8.54346 15.6436)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "8.54346", y: "15.6436", width: "1.45455", height: "11.6364", transform: "rotate(135 8.54346 15.6436)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "9.57166", y: "0.215332", width: "1.45455", height: "1.45455", transform: "rotate(45 9.57166 0.215332)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "14.7143", y: "5.35791", width: "1.45455", height: "1.45455", transform: "rotate(45 14.7143 5.35791)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "14.7137", y: "3.30078", width: "1.45455", height: "1.45455", transform: "rotate(45 14.7137 3.30078)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "11.6278", y: "3.30029", width: "1.45455", height: "1.45455", transform: "rotate(45 11.6278 3.30029)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "11.6294", y: "0.21582", width: "1.45455", height: "1.45455", transform: "rotate(45 11.6294 0.21582)" }),
                                    (0, jsx_runtime.jsx)("rect", { x: "13.6851", y: "0.214844", width: "2.9091", height: "1.45455", transform: "rotate(45 13.6851 0.214844)" }),
                                ],
                            }),
                            (0, jsx_runtime.jsx)("defs", { children: (0, jsx_runtime.jsx)("clipPath", { id: "clip0_1969_37221", children: (0, jsx_runtime.jsx)("rect", { width: "16", height: "16" }) }) }),
                        ],
                    }),
                    "shopping-cart": (0, jsx_runtime.jsx)("svg", {
                        width: "16",
                        height: "16",
                        viewBox: "0 0 16 16",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: (0, jsx_runtime.jsx)("path", {
                            fillRule: "evenodd",
                            clipRule: "evenodd",
                            d:
                                "M2.96034 -0.100098H0.799988V1.3399H2.23999V12.4999H2.24034L2.24034 11.7799H2.95928H2.96034H3.67928V12.4999H15.2V12.4999H14.48V11.7799H15.2V11.7798H14.48V11.0598H15.2V2.7799H15.1993V3.49986H14.4803H14.4793H13.7603V2.7799H3.67999V0.619902H2.96034V-0.100098ZM13.76 11.0599H3.67999V4.2199H13.76V11.0599ZM5.83999 13.9399H3.67999L3.67999 13.94H4.39999V14.66H3.67999V15.3799H4.39999V16.0999H3.67999L3.67999 16.0999H5.83999V13.9399ZM11.6 13.9399H13.76V13.94H13.0403V14.66H13.76V15.3799H13.0403V16.0999H13.76V16.0999H11.6V13.9399ZM12.3207 13.94V14.66H11.6007V13.94H12.3207ZM12.3207 16.0999V15.3799H11.6007V16.0999H12.3207ZM5.83964 16.0999V15.3799H5.11964V16.0999H5.83964ZM5.83964 13.94V14.66H5.11964V13.94H5.83964ZM14.4793 3.4999H15.1993V4.2199H14.4793V3.4999ZM14.4793 12.4999V11.7799H13.7593V12.4999H14.4793ZM2.96034 11.7799H2.24034L2.24034 11.0599H2.96034V11.7799Z",
                        }),
                    }),
                    chevron: (0, jsx_runtime.jsx)("svg", {
                        width: "12",
                        height: "7",
                        viewBox: "0 0 12 7",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: (0, jsx_runtime.jsx)("path", {
                            d:
                                "M1.71429 0H0V1.71429H1.71429V3.42857H3.42857V5.14286H5.14286V6.85714H6.85714V5.14286H8.57143V3.42857H10.2857V1.71429H12V0H10.2857V1.71429H8.57143V3.42857H6.85714V5.14286H5.14286V3.42857H3.42857V1.71429H1.71429V0Z",
                        }),
                    }),
                    ethereum: (0, jsx_runtime.jsxs)("svg", {
                        width: "10",
                        height: "16",
                        viewBox: "0 0 10 16",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [
                            (0, jsx_runtime.jsx)("path", {
                                fillRule: "evenodd",
                                clipRule: "evenodd",
                                d:
                                    "M4.99929 0H4.33272V0.666572H3.99943V1.33314H3.33286V2.66629H2.66629V3.33286H1.99972V4.666H1.33314V5.33257H0.666572V6.66572H0V7.33229H0.666572V7.99886H1.99972V8.66543H3.33286V9.332H4.33272V9.99858H4.99929V9.332H5.99915V8.66543H7.33229V7.99886H8.66543V7.33229H9.33201V6.66572H8.66543V5.33257H7.99886V4.666H7.33229V3.33286H6.66572V2.66629H5.99915V1.33314H5.33257V0.666572H4.99929V0ZM3.33286 8.66543V7.99886H1.99972V7.33229H0.666572V6.66572H1.33314V5.33257H1.99972V4.666H2.66629V3.33286H3.33286V2.66629H3.99943V1.33314H4.33272V8.66543H3.33286Z",
                            }),
                            (0, jsx_runtime.jsx)("path", {
                                fillRule: "evenodd",
                                clipRule: "evenodd",
                                d:
                                    "M0 9.332H0.666572V10.6651H1.33314V11.9983H1.99972V12.6649H2.66629V13.999H3.33286V14.6656H3.99943V15.3334H4.33272V16H4.99929V15.3334H4.666V15.3321H5.33257V14.6656H5.99915V13.999H6.66572V12.6649H7.33229V11.9983H7.99886V10.6651H8.66543V9.332H9.33201V8.66543H8.66543V9.332H7.33229V9.99858H5.99915V10.6645L4.99929 10.6651V11.3317H4.33272V10.6651H3.33286V9.99858H1.99972V9.332H0.666572V8.66543H0V9.332ZM1.99972 10.6651H1.33314V9.99858H1.99972V10.6651ZM1.99972 10.6651V11.9983H2.66629V12.6649H3.33286V13.999H3.99943V14.6636H4.666V14.6656H5.33257V14.6636H4.666V11.9983H4.33272V11.3317H3.33286V10.6651H1.99972Z",
                            }),
                        ],
                    }),
                    grid: (0, jsx_runtime.jsxs)("svg", {
                        width: "14",
                        height: "14",
                        viewBox: "0 0 14 14",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [
                            (0, jsx_runtime.jsx)("path", {
                                fillRule: "evenodd",
                                clipRule: "evenodd",
                                d:
                                    "M4.24165 4.24165V1.3L1.3 1.3L1.3 4.24165H4.24165ZM5.54165 1.3L5.54165 2.42233e-07L4.24165 1.85409e-07L1.3 5.68252e-08L2.42233e-07 0L1.85408e-07 1.3L5.68248e-08 4.24165L0 5.54165H1.3H4.24165L5.54165 5.54165V4.24165V1.3Z",
                            }),
                            (0, jsx_runtime.jsx)("path", {
                                fillRule: "evenodd",
                                clipRule: "evenodd",
                                d:
                                    "M4.24165 12.7001V9.7585L1.3 9.7585L1.3 12.7001H4.24165ZM5.54165 9.7585L5.54165 8.4585L4.24165 8.4585L1.3 8.4585L2.42233e-07 8.4585L1.85408e-07 9.7585L5.68248e-08 12.7001L0 14.0001H1.3H4.24165L5.54165 14.0001V12.7001V9.7585Z",
                            }),
                            (0, jsx_runtime.jsx)("path", {
                                fillRule: "evenodd",
                                clipRule: "evenodd",
                                d:
                                    "M12.6994 12.7001V9.7585L9.7577 9.7585L9.7577 12.7001H12.6994ZM13.9994 9.7585L13.9994 8.4585L12.6994 8.4585L9.7577 8.4585L8.4577 8.4585L8.4577 9.7585L8.4577 12.7001L8.4577 14.0001H9.7577H12.6994L13.9994 14.0001V12.7001V9.7585Z",
                            }),
                            (0, jsx_runtime.jsx)("path", {
                                fillRule: "evenodd",
                                clipRule: "evenodd",
                                d:
                                    "M12.6994 4.24165V1.3L9.7577 1.3L9.7577 4.24165H12.6994ZM13.9994 1.3L13.9994 2.42233e-07L12.6994 1.85409e-07L9.7577 5.68252e-08L8.4577 0L8.4577 1.3L8.4577 4.24165L8.4577 5.54165H9.7577H12.6994L13.9994 5.54165V4.24165V1.3Z",
                            }),
                        ],
                    }),
                    "list-bulleted-shapes": (0, jsx_runtime.jsx)("svg", {
                        width: "16",
                        height: "15",
                        viewBox: "0 0 16 15",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: (0, jsx_runtime.jsx)("path", {
                            d:
                                "M14.2222 0H16V1.77778H14.2222V0ZM12.4444 3.55556V1.77778H14.2222V3.55556H12.4444ZM10.6667 3.55556H12.4444V5.33333H10.6667V3.55556ZM10.6667 3.55556H8.88889V1.77778H10.6667V3.55556ZM0 1.77778H7.11111V3.55556H0V1.77778ZM7.11111 10.6667H0V12.4444H7.11111V10.6667ZM13.3333 12.4444V10.6667H15.1111V8.88889H13.3333V10.6667H11.5556V8.88889H9.77778V10.6667H11.5556V12.4444H9.77778V14.2222H11.5556V12.4444H13.3333ZM13.3333 12.4444V14.2222H15.1111V12.4444H13.3333Z",
                        }),
                    }),
                    "list-bulleted-condensed": (0, jsx_runtime.jsxs)("svg", {
                        width: "14",
                        height: "14",
                        viewBox: "0 0 14 14",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [
                            (0, jsx_runtime.jsx)("rect", { x: "1.8512", width: "0.925806", height: "0.925806", transform: "rotate(90 1.8512 0)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "1.8512", y: "1.85156", width: "0.925806", height: "0.925806", transform: "rotate(90 1.8512 1.85156)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2.77765", y: "0.925781", width: "0.925806", height: "0.925806", transform: "rotate(90 2.77765 0.925781)" }),
                            (0, jsx_runtime.jsx)("path", {
                                d:
                                    "M13.7031 0.925781L13.7031 0.825781L13.6031 0.825781L3.83525 0.825781L3.73525 0.825781L3.73525 0.925781L3.73525 1.85159L3.73525 1.95159L3.83525 1.95159L13.6031 1.95159L13.7031 1.95159L13.7031 1.85159L13.7031 0.925781Z",
                                stroke: "white",
                                strokeWidth: "0.2",
                            }),
                            (0, jsx_runtime.jsx)("path", {
                                d:
                                    "M13.7031 4.66602L13.7031 4.56602L13.6031 4.56602L3.83525 4.56602L3.73525 4.56602L3.73525 4.66602L3.73525 5.59182L3.73525 5.69182L3.83525 5.69182L13.6031 5.69182L13.7031 5.69182L13.7031 5.59182L13.7031 4.66602Z",
                                stroke: "white",
                                strokeWidth: "0.2",
                            }),
                            (0, jsx_runtime.jsx)("path", {
                                d:
                                    "M13.7031 8.40674L13.7031 8.30674L13.6031 8.30674L3.83525 8.30674L3.73525 8.30674L3.73525 8.40674L3.73525 9.33254L3.73525 9.43254L3.83525 9.43254L13.6031 9.43254L13.7031 9.43254L13.7031 9.33254L13.7031 8.40674Z",
                                stroke: "white",
                                strokeWidth: "0.2",
                            }),
                            (0, jsx_runtime.jsx)("path", {
                                d:
                                    "M13.7031 12.1475L13.7031 12.0475L13.6031 12.0475L3.83525 12.0475L3.73525 12.0475L3.73525 12.1475L3.73525 13.0733L3.73525 13.1733L3.83525 13.1733L13.6031 13.1733L13.7031 13.1733L13.7031 13.0733L13.7031 12.1475Z",
                                stroke: "white",
                                strokeWidth: "0.2",
                            }),
                            (0, jsx_runtime.jsx)("rect", { y: "0.925781", width: "0.925806", height: "0.925806" }),
                            (0, jsx_runtime.jsx)("rect", { x: "1.8512", y: "3.74072", width: "0.925806", height: "0.925806", transform: "rotate(90 1.8512 3.74072)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "1.8512", y: "5.59229", width: "0.925806", height: "0.925806", transform: "rotate(90 1.8512 5.59229)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2.77765", y: "4.6665", width: "0.925806", height: "0.925806", transform: "rotate(90 2.77765 4.6665)" }),
                            (0, jsx_runtime.jsx)("rect", { y: "4.6665", width: "0.925806", height: "0.925806" }),
                            (0, jsx_runtime.jsx)("rect", { x: "1.8512", y: "7.48193", width: "0.925806", height: "0.925806", transform: "rotate(90 1.8512 7.48193)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "1.8512", y: "9.3335", width: "0.925806", height: "0.925806", transform: "rotate(90 1.8512 9.3335)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2.77765", y: "8.40771", width: "0.925806", height: "0.925806", transform: "rotate(90 2.77765 8.40771)" }),
                            (0, jsx_runtime.jsx)("rect", { y: "8.40771", width: "0.925806", height: "0.925806" }),
                            (0, jsx_runtime.jsx)("rect", { x: "1.8512", y: "11.2227", width: "0.925806", height: "0.925806", transform: "rotate(90 1.8512 11.2227)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "1.8512", y: "13.0742", width: "0.925806", height: "0.925806", transform: "rotate(90 1.8512 13.0742)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2.77765", y: "12.1484", width: "0.925806", height: "0.925806", transform: "rotate(90 2.77765 12.1484)" }),
                            (0, jsx_runtime.jsx)("rect", { y: "12.1484", width: "0.925806", height: "0.925806" }),
                        ],
                    }),
                    "list-bulleted-spaced": (0, jsx_runtime.jsxs)("svg", {
                        width: "15",
                        height: "14",
                        viewBox: "0 0 15 14",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [
                            (0, jsx_runtime.jsx)("rect", { x: "2.63232", width: "1.31624", height: "1.31624", transform: "rotate(90 2.63232 0)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2.63232", y: "2.63232", width: "1.31624", height: "1.31624", transform: "rotate(90 2.63232 2.63232)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "3.94873", y: "1.31641", width: "1.31624", height: "1.31624", transform: "rotate(90 3.94873 1.31641)" }),
                            (0, jsx_runtime.jsx)("path", {
                                d:
                                    "M14.3493 1.31641L14.3493 1.26641L14.2993 1.26641L5.08564 1.26641L5.03564 1.26641L5.03564 1.31641L5.03564 2.63265L5.03564 2.68265L5.08564 2.68265L14.2993 2.68265L14.3493 2.68265L14.3493 2.63265L14.3493 1.31641Z",
                                stroke: "white",
                                strokeWidth: "0.1",
                            }),
                            (0, jsx_runtime.jsx)("path", {
                                d:
                                    "M14.3493 6.46143L14.3493 6.41143L14.2993 6.41143L5.08564 6.41143L5.03564 6.41143L5.03564 6.46143L5.03564 7.77766L5.03564 7.82766L5.08564 7.82766L14.2993 7.82766L14.3493 7.82766L14.3493 7.77767L14.3493 6.46143Z",
                                stroke: "white",
                                strokeWidth: "0.1",
                            }),
                            (0, jsx_runtime.jsx)("path", {
                                d:
                                    "M14.3493 11.4873L14.3493 11.4373L14.2993 11.4373L5.08564 11.4373L5.03564 11.4373L5.03564 11.4873L5.03564 12.8035L5.03564 12.8535L5.08564 12.8535L14.2993 12.8535L14.3493 12.8535L14.3493 12.8035L14.3493 11.4873Z",
                                stroke: "white",
                                strokeWidth: "0.1",
                            }),
                            (0, jsx_runtime.jsx)("rect", { y: "1.31641", width: "1.31624", height: "1.31624" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2.63232", y: "5.02588", width: "1.31624", height: "1.31624", transform: "rotate(90 2.63232 5.02588)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2.63232", y: "7.6582", width: "1.31624", height: "1.31624", transform: "rotate(90 2.63232 7.6582)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "3.94873", y: "6.34229", width: "1.31624", height: "1.31624", transform: "rotate(90 3.94873 6.34229)" }),
                            (0, jsx_runtime.jsx)("rect", { y: "6.34229", width: "1.31624", height: "1.31624" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2.63232", y: "10.0513", width: "1.31624", height: "1.31624", transform: "rotate(90 2.63232 10.0513)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "2.63232", y: "12.6836", width: "1.31624", height: "1.31624", transform: "rotate(90 2.63232 12.6836)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "3.94873", y: "11.3672", width: "1.31624", height: "1.31624", transform: "rotate(90 3.94873 11.3672)" }),
                            (0, jsx_runtime.jsx)("rect", { y: "11.3672", width: "1.31624", height: "1.31624" }),
                        ],
                    }),
                    "eye-outline": (0, jsx_runtime.jsx)("svg", {
                        width: "16",
                        height: "10",
                        viewBox: "0 0 16 10",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: (0, jsx_runtime.jsx)("path", {
                            d:
                                "M5.33333 0H10.6667V1.33333H5.33333V0ZM2.66667 2.66667V1.33333H5.33333V2.66667H2.66667ZM1.33333 4V2.66667H2.66667V4H1.33333ZM1.33333 5.33333V4H0V5.33333H1.33333ZM2.66667 6.66667H1.33333V5.33333H2.66667V6.66667ZM5.33333 8H2.66667V6.66667H5.33333V8ZM10.6667 8V9.33334H5.33333V8H10.6667ZM13.3333 6.66667V8H10.6667V6.66667H13.3333ZM14.6667 5.33333V6.66667H13.3333V5.33333H14.6667ZM14.6667 4H16V5.33333H14.6667V4ZM13.3333 2.66667H14.6667V4H13.3333V2.66667ZM13.3333 2.66667V1.33333H10.6667V2.66667H13.3333ZM6.66667 3.33333H9.33333V6H6.66667V3.33333Z",
                        }),
                    }),
                    "open-book": (0, jsx_runtime.jsxs)("svg", {
                        width: "16",
                        height: "15",
                        viewBox: "0 0 16 15",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [
                            (0, jsx_runtime.jsx)("rect", { x: "7.27271", y: "13.0908", width: "1.45454", height: "1.45454", transform: "rotate(180 7.27271 13.0908)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "7.27271", y: "1.45459", width: "1.45454", height: "1.45454", transform: "rotate(180 7.27271 1.45459)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "16.0002", y: "13.0908", width: "7.27268", height: "1.45454", transform: "rotate(180 16.0002 13.0908)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "16.0002", y: "1.45459", width: "7.27268", height: "1.45454", transform: "rotate(180 16.0002 1.45459)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "5.81812", y: "13.0908", width: "5.81814", height: "1.45454", transform: "rotate(180 5.81812 13.0908)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "0.000244141", y: "11.6362", width: "10.1818", height: "1.45454", transform: "rotate(-90 0.000244141 11.6362)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "14.5452", y: "11.6362", width: "10.1818", height: "1.45454", transform: "rotate(-90 14.5452 11.6362)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "10.1826", y: "2.90918", width: "2.90907", height: "1.45454" }),
                            (0, jsx_runtime.jsx)("rect", { x: "10.1826", y: "5.81836", width: "1.45454", height: "1.45454" }),
                            (0, jsx_runtime.jsx)("rect", { x: "10.1826", y: "8.72705", width: "2.90907", height: "1.45454" }),
                            (0, jsx_runtime.jsx)("rect", { x: "5.81812", y: "1.45459", width: "5.81814", height: "1.45454", transform: "rotate(180 5.81812 1.45459)" }),
                            (0, jsx_runtime.jsx)("rect", { x: "8.72754", y: "14.5454", width: "1.45454", height: "13.0908", transform: "rotate(180 8.72754 14.5454)" }),
                        ],
                    }),
                    "arrow-up-left": (0, jsx_runtime.jsx)("svg", {
                        width: "16",
                        height: "10",
                        viewBox: "0 0 16 10",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: (0, jsx_runtime.jsx)("path", {
                            d:
                                "M9.6 0H16V6.4H14.4V3.2H12.8V1.6H9.6V0ZM11.2 4.8V3.2H12.8V4.8H11.2ZM9.6 6.4V4.8H11.2V6.4H9.6ZM8 6.4H9.6V8H8V6.4ZM6.4 4.8H8V6.4H6.4V4.8ZM4.8 4.8V3.2H6.4V4.8H4.8ZM3.2 6.4V4.8H4.8V6.4H3.2ZM1.6 8V6.4H3.2V8H1.6ZM1.6 8V9.6H0V8H1.6Z",
                        }),
                    }),
                    "dot-chart": (0, jsx_runtime.jsxs)("svg", {
                        width: "16",
                        height: "16",
                        viewBox: "0 0 16 16",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [
                            (0, jsx_runtime.jsx)("rect", { x: "11.1309", y: "1.3916", width: "1.3913", height: "1.3913" }),
                            (0, jsx_runtime.jsx)("rect", { x: "12.5215", width: "1.3913", height: "1.3913" }),
                            (0, jsx_runtime.jsx)("rect", { x: "13.9126", y: "1.3916", width: "1.3913", height: "1.3913" }),
                            (0, jsx_runtime.jsx)("rect", { x: "12.5215", y: "2.7832", width: "1.3913", height: "1.3913" }),
                            (0, jsx_runtime.jsx)("rect", { x: "3.47852", y: "4.1748", width: "1.3913", height: "1.3913" }),
                            (0, jsx_runtime.jsx)("rect", { x: "4.86914", y: "2.7832", width: "1.3913", height: "1.3913" }),
                            (0, jsx_runtime.jsx)("rect", { x: "6.2605", y: "4.1748", width: "1.3913", height: "1.3913" }),
                            (0, jsx_runtime.jsx)("rect", { x: "4.86914", y: "5.56641", width: "1.3913", height: "1.3913" }),
                            (0, jsx_runtime.jsx)("rect", { x: "9.73926", y: "9.73877", width: "1.3913", height: "1.3913" }),
                            (0, jsx_runtime.jsx)("rect", { x: "11.1309", y: "8.34766", width: "1.3913", height: "1.3913" }),
                            (0, jsx_runtime.jsx)("rect", { x: "12.5215", y: "9.73877", width: "1.3913", height: "1.3913" }),
                            (0, jsx_runtime.jsx)("rect", { x: "11.1309", y: "11.1304", width: "1.3913", height: "1.3913" }),
                            (0, jsx_runtime.jsx)("rect", { width: "1.3913", height: "16" }),
                            (0, jsx_runtime.jsx)("rect", { x: "1.3916", y: "14.6084", width: "14.6087", height: "1.3913" }),
                        ],
                    }),
                };
            function Icon_templateObject() {
                let data = (0, _tagged_template_literal.Z)([
                    "\n  transform: ",
                    ";\n  transition: transform 150ms ease-in-out;\n\n  & path,\n  & rect {\n    fill: ",
                    " !important;\n  }\n\n  & svg {\n    transform: scale(",
                    ");\n  }\n\n  @media (-webkit-min-device-pixel-ratio: 2) {\n    & svg {\n      transform: scale(1.05);\n    }\n  }\n\n  ",
                    "\n",
                ]);
                return (
                    (Icon_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            let SIZE_TO_WIDTH = { tight: "max-content", standard: "20px" },
                SIZE_TO_HEIGHT = { tight: "max-content", standard: "20px" },
                Icon = react.forwardRef((param, forwardedRef) => {
                    let { size = "standard", ...props } = param;
                    return (0, jsx_runtime.jsx)(StyledFlex, { ref: forwardedRef, align: "center", width: SIZE_TO_WIDTH[size], height: SIZE_TO_HEIGHT[size], justify: "center", ...props, children: icons[props.name] });
                });
            Icon.displayName = "Icon";
            let StyledFlex = (0, styled_components_browser_esm.ZP)(Flex)(
                Icon_templateObject(),
                (param) => {
                    let { transform } = param;
                    return transform;
                },
                (param) => {
                    let { theme, color } = param;
                    return theme.color[color];
                },
                (param) => {
                    let { nonRetinaScaleFactor = 1.2 } = param;
                    return nonRetinaScaleFactor;
                },
                (param) => {
                    let { theme, hoverColor } = param;
                    return void 0 === hoverColor ? "" : "\n        &:hover path,\n        &:hover rect {\n          fill: ".concat(theme.color[hoverColor], " !important;\n        }  \n      ");
                }
            );
            function IconButton_templateObject() {
                let data = (0, _tagged_template_literal.Z)(["\n  width: max-content:\n  height: max-content;\n\n  &:hover {\n    * {\n      fill: ", " !important;\n    }\n  }\n"]);
                return (
                    (IconButton_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            let IconButton = react.forwardRef((param, forwardedRef) => {
                let { name, active, iconProps, ...restProps } = param;
                return (0, jsx_runtime.jsx)(IconButton_StyledButton, { ref: forwardedRef, active: active, ...restProps, children: (0, jsx_runtime.jsx)(Icon, { ...iconProps, name: name, color: active ? "yellow300" : "grey300" }) });
            });
            IconButton.displayName = "IconButton";
            let IconButton_StyledButton = styled_components_browser_esm.ZP.button(IconButton_templateObject(), (param) => {
                let { theme, active } = param;
                return !active && theme.color.white;
            });
            function Image_templateObject() {
                let data = (0, _tagged_template_literal.Z)([
                    "\n  width: max-content;\n  height: max-content;\n  position: relative;\n\n  img {\n    object-fit: ",
                    ";\n    object-position: ",
                    ";\n  }\n\n  &,\n  & > * {\n    width: ",
                    ";\n    height: ",
                    ";\n    border-radius: ",
                    ";\n  }\n",
                ]);
                return (
                    (Image_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            function Image_templateObject1() {
                let data = (0, _tagged_template_literal.Z)([
                    "\n  top: 0;\n  left: 0;\n  border: ",
                    ";\n  display: flex;\n  position: absolute;\n  background: ",
                    ";\n  align-items: center;\n  padding-top: 1px;\n  aspect-ratio: ",
                    ";\n  justify-content: center;\n",
                ]);
                return (
                    (Image_templateObject1 = function () {
                        return data;
                    }),
                    data
                );
            }
            let Image1 = react.forwardRef((props, forwardedRef) => {
                let { edges, width, height, objectFit, rootStyles, objectPosition, placeholderBorder = !0, placeholderAspect, ...restProps } = props,
                    [isLoaded, setIsLoaded] = react.useState(!1),
                    [hasError, setHasError] = react.useState(!1);
                return (0, jsx_runtime.jsxs)(ImageRoot, {
                    edges: edges,
                    style: rootStyles,
                    width: width,
                    height: height,
                    objectFit: objectFit,
                    objectPosition: objectPosition,
                    children: [
                        isLoaded
                            ? null
                            : (0, jsx_runtime.jsx)(ImagePlaceholder, { placeholderBorder: placeholderBorder, placeholderAspect: placeholderAspect, children: (0, jsx_runtime.jsx)(Icon, { size: "tight", name: "image", color: "grey300" }) }),
                        (0, jsx_runtime.jsx)("img", {
                            ...restProps,
                            ref: forwardedRef,
                            style: { opacity: hasError ? 0 : 1 },
                            onLoad(_) {
                                setIsLoaded(!0), setHasError(!1);
                            },
                            onError(_) {
                                setHasError(!0), setIsLoaded(!1);
                            },
                        }),
                    ],
                });
            });
            Image1.displayName = "Image";
            let ImageRoot = styled_components_browser_esm.ZP.div(
                    Image_templateObject(),
                    (param) => {
                        let { objectFit } = param;
                        return objectFit;
                    },
                    (param) => {
                        let { objectPosition } = param;
                        return objectPosition;
                    },
                    (param) => {
                        let { width = "100%" } = param;
                        return width;
                    },
                    (param) => {
                        let { height = "100%" } = param;
                        return height;
                    },
                    (param) => {
                        let { edges } = param;
                        return "soft" === edges ? "4px" : "round" === edges ? "50%" : "0px";
                    }
                ),
                ImagePlaceholder = styled_components_browser_esm.ZP.div(
                    Image_templateObject1(),
                    (param) => {
                        let { theme, placeholderBorder } = param;
                        return placeholderBorder ? "1px solid ".concat(theme.color.grey600) : "none";
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey900;
                    },
                    (param) => {
                        let { placeholderAspect = "auto" } = param;
                        return placeholderAspect;
                    }
                );
            var Link = __webpack_require__(31593),
                dayjs_min = __webpack_require__(27484),
                dayjs_min_default = __webpack_require__.n(dayjs_min);
            let LiveTime = (props) => {
                let timeRef = react.useRef(null);
                return (
                    react.useLayoutEffect(() => {
                        var ref;
                        let datetime = null === (ref = timeRef.current) || void 0 === ref ? void 0 : ref.getAttribute("datetime"),
                            intervalRef = setInterval(() => {
                                var ref;
                                null === (ref = timeRef.current) || void 0 === ref || ref.replaceChildren(dayjs_min_default()(datetime).fromNow());
                            }, 1e3);
                        return () => {
                            clearInterval(intervalRef);
                        };
                    }, [props.dateTime]),
                    (0, jsx_runtime.jsx)("time", { ref: timeRef, ...props, children: dayjs_min_default()(props.dateTime).fromNow() })
                );
            };
            function Loader_templateObject() {
                let data = (0, _tagged_template_literal.Z)([
                    '\n  width: 20px;\n  height: 20px;\n  display: flex;\n  position: relative;\n  align-items: center;\n  justify-content: center;\n\n  font-size: 10px;\n  font-family: "Proto Mono";\n\n  .loader {\n    top: 9px;\n    left: 9px;\n    width: 2.5px;\n    height: 2.5px;\n    position: absolute;\n    animation: ',
                    " 1s linear infinite;\n  }\n",
                ]);
                return (
                    (Loader_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            function Loader_templateObject1() {
                let data = (0, _tagged_template_literal.Z)([
                    "\n    0% {\n      box-shadow: \n        0px -7.5px ",
                    ", \n        2.5px -7.5px ",
                    ", \n        5px -5px ",
                    ", \n        7.5px -2.5px ",
                    ", \n        7.5px 0px ",
                    ", \n        7.5px 2.5px ",
                    ", \n        5px 5px ",
                    ", \n        2.5px 7.5px ",
                    ", \n        0px 7.5px ",
                    ", \n        -2.5px 7.5px ",
                    ", \n        -5px 5px ",
                    ", \n        -7.5px 2.5px ",
                    ", \n        -7.5px 0px ",
                    ", \n        -7.5px -2.5px ",
                    ", \n        -5px -5px ",
                    ",\n        -2.5px -7.5px ",
                    ";\n    }\n    6.25% {\n      box-shadow: \n        0px -7.5px ",
                    ", \n        2.5px -7.5px ",
                    ", \n        5px -5px ",
                    ", \n        7.5px -2.5px ",
                    ", \n        7.5px 0px ",
                    ", \n        7.5px 2.5px ",
                    ", \n        5px 5px ",
                    ", \n        2.5px 7.5px ",
                    ", \n        0px 7.5px ",
                    ", \n        -2.5px 7.5px ",
                    ", \n        -5px 5px ",
                    ", \n        -7.5px 2.5px ",
                    ", \n        -7.5px 0px ",
                    ", \n        -7.5px -2.5px ",
                    ", \n        -5px -5px ",
                    ",\n        -2.5px -7.5px ",
                    ";\n    }\n    12.5% {\n      box-shadow: \n        0px -7.5px ",
                    ", \n        2.5px -7.5px ",
                    ", \n        5px -5px ",
                    ", \n        7.5px -2.5px ",
                    ", \n        7.5px 0px ",
                    ", \n        7.5px 2.5px ",
                    ", \n        5px 5px ",
                    ", \n        2.5px 7.5px ",
                    ", \n        0px 7.5px ",
                    ", \n        -2.5px 7.5px ",
                    ", \n        -5px 5px ",
                    ", \n        -7.5px 2.5px ",
                    ", \n        -7.5px 0px ",
                    ", \n        -7.5px -2.5px ",
                    ", \n        -5px -5px ",
                    ",\n        -2.5px -7.5px ",
                    ";\n    }\n    18.75% {\n      box-shadow: \n        0px -7.5px ",
                    ", \n        2.5px -7.5px ",
                    ", \n        5px -5px ",
                    ", \n        7.5px -2.5px ",
                    ", \n        7.5px 0px ",
                    ", \n        7.5px 2.5px ",
                    ", \n        5px 5px ",
                    ", \n        2.5px 7.5px ",
                    ", \n        0px 7.5px ",
                    ", \n        -2.5px 7.5px ",
                    ", \n        -5px 5px ",
                    ", \n        -7.5px 2.5px ",
                    ", \n        -7.5px 0px ",
                    ", \n        -7.5px -2.5px ",
                    ", \n        -5px -5px ",
                    ",\n        -2.5px -7.5px ",
                    ";\n    }\n    25% {\n      box-shadow: \n        0px -7.5px ",
                    ", \n        2.5px -7.5px ",
                    ", \n        5px -5px ",
                    ", \n        7.5px -2.5px ",
                    ", \n        7.5px 0px ",
                    ", \n        7.5px 2.5px ",
                    ", \n        5px 5px ",
                    ", \n        2.5px 7.5px ",
                    ", \n        0px 7.5px ",
                    ", \n        -2.5px 7.5px ",
                    ", \n        -5px 5px ",
                    ", \n        -7.5px 2.5px ",
                    ", \n        -7.5px 0px ",
                    ", \n        -7.5px -2.5px ",
                    ", \n        -5px -5px ",
                    ",\n        -2.5px -7.5px ",
                    ";\n    }\n    31.25% {\n      box-shadow: \n        0px -7.5px ",
                    ", \n        2.5px -7.5px ",
                    ", \n        5px -5px ",
                    ", \n        7.5px -2.5px ",
                    ", \n        7.5px 0px ",
                    ", \n        7.5px 2.5px ",
                    ", \n        5px 5px ",
                    ", \n        2.5px 7.5px ",
                    ", \n        0px 7.5px ",
                    ", \n        -2.5px 7.5px ",
                    ", \n        -5px 5px ",
                    ", \n        -7.5px 2.5px ",
                    ", \n        -7.5px 0px ",
                    ", \n        -7.5px -2.5px ",
                    ", \n        -5px -5px ",
                    ",\n        -2.5px -7.5px ",
                    ";\n    }\n    37.5% {\n      box-shadow: \n        0px -7.5px ",
                    ", \n        2.5px -7.5px ",
                    ", \n        5px -5px ",
                    ", \n        7.5px -2.5px ",
                    ", \n        7.5px 0px ",
                    ", \n        7.5px 2.5px ",
                    ", \n        5px 5px ",
                    ", \n        2.5px 7.5px ",
                    ", \n        0px 7.5px ",
                    ", \n        -2.5px 7.5px ",
                    ", \n        -5px 5px ",
                    ", \n        -7.5px 2.5px ",
                    ", \n        -7.5px 0px ",
                    ", \n        -7.5px -2.5px ",
                    ", \n        -5px -5px ",
                    ",\n        -2.5px -7.5px ",
                    ";\n    }\n    43.75% {\n      box-shadow: \n        0px -7.5px ",
                    ", \n        2.5px -7.5px ",
                    ", \n        5px -5px ",
                    ", \n        7.5px -2.5px ",
                    ", \n        7.5px 0px ",
                    ", \n        7.5px 2.5px ",
                    ", \n        5px 5px ",
                    ", \n        2.5px 7.5px ",
                    ", \n        0px 7.5px ",
                    ", \n        -2.5px 7.5px ",
                    ", \n        -5px 5px ",
                    ", \n        -7.5px 2.5px ",
                    ", \n        -7.5px 0px ",
                    ", \n        -7.5px -2.5px ",
                    ", \n        -5px -5px ",
                    ",\n        -2.5px -7.5px ",
                    ";\n    }\n    50% {\n      box-shadow: \n        0px -7.5px ",
                    ", \n        2.5px -7.5px ",
                    ", \n        5px -5px ",
                    ", \n        7.5px -2.5px ",
                    ", \n        7.5px 0px ",
                    ", \n        7.5px 2.5px ",
                    ", \n        5px 5px ",
                    ", \n        2.5px 7.5px ",
                    ", \n        0px 7.5px ",
                    ", \n        -2.5px 7.5px ",
                    ", \n        -5px 5px ",
                    ", \n        -7.5px 2.5px ",
                    ", \n        -7.5px 0px ",
                    ", \n        -7.5px -2.5px ",
                    ", \n        -5px -5px ",
                    ",\n        -2.5px -7.5px ",
                    ";\n    }\n    56.25% {\n      box-shadow: \n        0px -7.5px ",
                    ", \n        2.5px -7.5px ",
                    ", \n        5px -5px ",
                    ", \n        7.5px -2.5px ",
                    ", \n        7.5px 0px ",
                    ", \n        7.5px 2.5px ",
                    ", \n        5px 5px ",
                    ", \n        2.5px 7.5px ",
                    ", \n        0px 7.5px ",
                    ", \n        -2.5px 7.5px ",
                    ", \n        -5px 5px ",
                    ", \n        -7.5px 2.5px ",
                    ", \n        -7.5px 0px ",
                    ", \n        -7.5px -2.5px ",
                    ", \n        -5px -5px ",
                    ",\n        -2.5px -7.5px ",
                    ";\n    }\n    62.5% {\n      box-shadow: \n        0px -7.5px ",
                    ", \n        2.5px -7.5px ",
                    ", \n        5px -5px ",
                    ", \n        7.5px -2.5px ",
                    ", \n        7.5px 0px ",
                    ", \n        7.5px 2.5px ",
                    ", \n        5px 5px ",
                    ", \n        2.5px 7.5px ",
                    ", \n        0px 7.5px ",
                    ", \n        -2.5px 7.5px ",
                    ", \n        -5px 5px ",
                    ", \n        -7.5px 2.5px ",
                    ", \n        -7.5px 0px ",
                    ", \n        -7.5px -2.5px ",
                    ", \n        -5px -5px ",
                    ",\n        -2.5px -7.5px ",
                    ";\n    }\n    68.75% {\n      box-shadow: \n        0px -7.5px ",
                    ", \n        2.5px -7.5px ",
                    ", \n        5px -5px ",
                    ", \n        7.5px -2.5px ",
                    ", \n        7.5px 0px ",
                    ", \n        7.5px 2.5px ",
                    ", \n        5px 5px ",
                    ", \n        2.5px 7.5px ",
                    ", \n        0px 7.5px ",
                    ", \n        -2.5px 7.5px ",
                    ", \n        -5px 5px ",
                    ", \n        -7.5px 2.5px ",
                    ", \n        -7.5px 0px ",
                    ", \n        -7.5px -2.5px ",
                    ", \n        -5px -5px ",
                    ",\n        -2.5px -7.5px ",
                    ";\n    }\n    75% {\n      box-shadow: \n        0px -7.5px ",
                    ", \n        2.5px -7.5px ",
                    ", \n        5px -5px ",
                    ", \n        7.5px -2.5px ",
                    ", \n        7.5px 0px ",
                    ", \n        7.5px 2.5px ",
                    ", \n        5px 5px ",
                    ", \n        2.5px 7.5px ",
                    ", \n        0px 7.5px ",
                    ", \n        -2.5px 7.5px ",
                    ", \n        -5px 5px ",
                    ", \n        -7.5px 2.5px ",
                    ", \n        -7.5px 0px ",
                    ", \n        -7.5px -2.5px ",
                    ", \n        -5px -5px ",
                    ",\n        -2.5px -7.5px ",
                    ";\n    }\n    81.25% {\n      box-shadow: \n        0px -7.5px ",
                    ", \n        2.5px -7.5px ",
                    ", \n        5px -5px ",
                    ", \n        7.5px -2.5px ",
                    ", \n        7.5px 0px ",
                    ", \n        7.5px 2.5px ",
                    ", \n        5px 5px ",
                    ", \n        2.5px 7.5px ",
                    ", \n        0px 7.5px ",
                    ", \n        -2.5px 7.5px ",
                    ", \n        -5px 5px ",
                    ", \n        -7.5px 2.5px ",
                    ", \n        -7.5px 0px ",
                    ", \n        -7.5px -2.5px ",
                    ", \n        -5px -5px ",
                    ",\n        -2.5px -7.5px ",
                    ";\n    }\n    87.5% {\n      box-shadow: \n        0px -7.5px ",
                    ", \n        2.5px -7.5px ",
                    ", \n        5px -5px ",
                    ", \n        7.5px -2.5px ",
                    ", \n        7.5px 0px ",
                    ", \n        7.5px 2.5px ",
                    ", \n        5px 5px ",
                    ", \n        2.5px 7.5px ",
                    ", \n        0px 7.5px ",
                    ", \n        -2.5px 7.5px ",
                    ", \n        -5px 5px ",
                    ", \n        -7.5px 2.5px ",
                    ", \n        -7.5px 0px ",
                    ", \n        -7.5px -2.5px ",
                    ", \n        -5px -5px ",
                    ",\n        -2.5px -7.5px ",
                    ";\n    }\n    93.75% {\n      box-shadow: \n        0px -7.5px ",
                    ", \n        2.5px -7.5px ",
                    ", \n        5px -5px ",
                    ", \n        7.5px -2.5px ",
                    ", \n        7.5px 0px ",
                    ", \n        7.5px 2.5px ",
                    ", \n        5px 5px ",
                    ", \n        2.5px 7.5px ",
                    ", \n        0px 7.5px ",
                    ", \n        -2.5px 7.5px ",
                    ", \n        -5px 5px ",
                    ", \n        -7.5px 2.5px ",
                    ", \n        -7.5px 0px ",
                    ", \n        -7.5px -2.5px ",
                    ", \n        -5px -5px ",
                    ",\n        -2.5px -7.5px ",
                    ";\n    }\n    100% {\n      box-shadow: \n        0px -7.5px ",
                    ", \n        2.5px -7.5px ",
                    ", \n        5px -5px ",
                    ", \n        7.5px -2.5px ",
                    ", \n        7.5px 0px ",
                    ", \n        7.5px 2.5px ",
                    ", \n        5px 5px ",
                    ", \n        2.5px 7.5px ",
                    ", \n        0px 7.5px ",
                    ", \n        -2.5px 7.5px ",
                    ", \n        -5px 5px ",
                    ", \n        -7.5px 2.5px ",
                    ", \n        -7.5px 0px ",
                    ", \n        -7.5px -2.5px ",
                    ", \n        -5px -5px ",
                    ",\n        -2.5px -7.5px ",
                    ";\n    }\n  ",
                ]);
                return (
                    (Loader_templateObject1 = function () {
                        return data;
                    }),
                    data
                );
            }
            let Loader = styled_components_browser_esm.ZP.div.attrs((props) => ({
                    children: (0, jsx_runtime.jsxs)(react.Fragment, { children: [props.count, (0, jsx_runtime.jsx)("div", { className: "loader" })] }),
                }))(Loader_templateObject(), (props) => animation(props)),
                animation = (props) =>
                    (0, styled_components_browser_esm.F4)(
                        Loader_templateObject1(),
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.white,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent,
                        props.theme.color.transparent
                    );
            var hooks = __webpack_require__(94208);
            function Modal_templateObject() {
                let data = (0, _tagged_template_literal.Z)([
                    "\n  top: 50%;\n  left: 50%;\n  border: 1px solid ",
                    ";\n  z-index: 100;\n  overflow: hidden;\n  position: fixed;\n  transform: translateX(-50%) translateY(-50%);\n  background: ",
                    ";\n  border-radius: 4px;\n",
                ]);
                return (
                    (Modal_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            function Modal_templateObject1() {
                let data = (0, _tagged_template_literal.Z)(["\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: 30;\n  position: fixed;\n  background: ", ";\n  padding-top: 80px;\n"]);
                return (
                    (Modal_templateObject1 = function () {
                        return data;
                    }),
                    data
                );
            }
            function Modal_templateObject2() {
                let data = (0, _tagged_template_literal.Z)(["\n  left: 0;\n  width: 0;\n  height: 0;\n  position: absolute;\n  visibility: hidden;\n"]);
                return (
                    (Modal_templateObject2 = function () {
                        return data;
                    }),
                    data
                );
            }
            function Modal_templateObject3() {
                let data = (0, _tagged_template_literal.Z)(["\n  left: 0;\n  width: 0;\n  height: 0;\n  position: absolute;\n  visibility: hidden;\n"]);
                return (
                    (Modal_templateObject3 = function () {
                        return data;
                    }),
                    data
                );
            }
            let Modal = (props) => {
                    let { open, onClose, children } = props,
                        modalRef = react.useRef(null);
                    return ((0, hooks.Kr)("Escape", onClose), open)
                        ? (0, jsx_runtime.jsxs)(react.Fragment, {
                              children: [
                                  (0, jsx_runtime.jsx)(Overlay, { onClick: onClose, tabIndex: -1 }),
                                  (0, jsx_runtime.jsxs)(Dialog, {
                                      ...props,
                                      ref: modalRef,
                                      role: "dialog",
                                      "aria-labelledby": "dialog-title",
                                      "aria-describedby": "dialog-description",
                                      children: [(0, jsx_runtime.jsx)(DialogTitle, { id: "dialog-title", children: "Modal" }), (0, jsx_runtime.jsx)(DialogDescription, { id: "dialog-description", children: "Modal" }), children],
                                  }),
                              ],
                          })
                        : null;
                },
                Dialog = styled_components_browser_esm.ZP.div(
                    Modal_templateObject(),
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey600;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey900;
                    }
                ),
                Overlay = styled_components_browser_esm.ZP.div(Modal_templateObject1(), (param) => {
                    let { theme } = param;
                    return (0, theme_0.a7)(theme.color.grey900, 0.8);
                }),
                DialogTitle = styled_components_browser_esm.ZP.div(Modal_templateObject2()),
                DialogDescription = styled_components_browser_esm.ZP.div(Modal_templateObject3());
            function Popper_templateObject() {
                let data = (0, _tagged_template_literal.Z)([
                    "\n  border: 1px solid ",
                    ";\n  padding: ",
                    "px;\n  display: flex;\n  position: relative;\n  background: ",
                    ";\n  align-items: center;\n  border-radius: 2px;\n  justify-content: center;\n\n  * {\n    line-height: ",
                    ";\n  }\n",
                ]);
                return (
                    (Popper_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            let DEFAULT_OPTIONS = { zIndex: 10, yOffset: 0, xOffset: 0, position: "up", mechanism: "hover", lineHeight: "150%" },
                Popper = (props) => {
                    let { options: maybeOptions = {}, anchorEl, children, onVisibleChange } = props,
                        options = { ...DEFAULT_OPTIONS, ...maybeOptions },
                        [show, setShow] = react.useState(!1),
                        [tooltipRef, setTooltipRef] = react.useState(null),
                        [measure, measureRef] = (0, hooks.x7)(),
                        childrenHeight = measure ? measure.height + 16 : 0,
                        trueTooltipRef = react.useRef(tooltipRef);
                    trueTooltipRef.current = tooltipRef;
                    let mouseEnterHandlerRef = react.useRef((_) => {
                            setShow(!0), "function" == typeof onVisibleChange && onVisibleChange(!0);
                        }),
                        mouseLeaveHandlerRef = react.useRef((_) => {
                            setShow(!1), "function" == typeof onVisibleChange && onVisibleChange(!1);
                        });
                    react.useEffect(() => {
                        "boolean" == typeof props.open && setShow(props.open);
                    }, [props.open]),
                        react.useEffect(() => {
                            let targetEl = null == anchorEl ? void 0 : anchorEl.current;
                            if (!targetEl || "hover" === options.mechanism) return;
                            let documentKeydownHandler = (e) => {
                                    "Escape" === e.key && (setShow(!1), "function" == typeof onVisibleChange && onVisibleChange(!1));
                                },
                                documentMousedownHandler = (e) => {
                                    var ref;
                                    (null !== (ref = trueTooltipRef.current) && void 0 !== ref && ref.contains(e.target)) || (setShow(!1), "function" == typeof onVisibleChange && onVisibleChange(!1));
                                };
                            return (
                                targetEl.addEventListener("mousedown", mouseEnterHandlerRef.current, { capture: !0 }),
                                show
                                    ? setTimeout(() => {
                                          document.addEventListener("keydown", documentKeydownHandler), document.addEventListener("mousedown", documentMousedownHandler);
                                      }, 0)
                                    : (document.removeEventListener("keydown", documentKeydownHandler), document.removeEventListener("mousedown", documentMousedownHandler)),
                                () => {
                                    document.removeEventListener("keydown", documentKeydownHandler),
                                        document.removeEventListener("mousedown", documentMousedownHandler),
                                        targetEl.removeEventListener("mousedown", mouseEnterHandlerRef.current);
                                }
                            );
                        }, [show, anchorEl, options.mechanism]),
                        react.useEffect(() => {
                            let targetEl = null == anchorEl ? void 0 : anchorEl.current;
                            if (targetEl && "click" !== options.mechanism)
                                return (
                                    targetEl.addEventListener("blur", mouseLeaveHandlerRef.current),
                                    targetEl.addEventListener("focus", mouseEnterHandlerRef.current),
                                    targetEl.addEventListener("mouseenter", mouseEnterHandlerRef.current),
                                    targetEl.addEventListener("mouseleave", mouseLeaveHandlerRef.current),
                                    () => {
                                        targetEl.removeEventListener("blur", mouseLeaveHandlerRef.current),
                                            targetEl.removeEventListener("focus", mouseEnterHandlerRef.current),
                                            targetEl.removeEventListener("mouseenter", mouseEnterHandlerRef.current),
                                            targetEl.removeEventListener("mouseleave", mouseLeaveHandlerRef.current);
                                    }
                                );
                        }, [anchorEl, options.mechanism]);
                    let [arrowTop, tooltipTop] = react.useMemo(() => {
                            let targetEl = null == anchorEl ? void 0 : anchorEl.current;
                            if (!show || !tooltipRef || !targetEl) return [0, 0];
                            let anchorRect = targetEl.getBoundingClientRect();
                            return "up" === options.position
                                ? [anchorRect.top - 6 - options.yOffset - 8 - 1, anchorRect.top - 6 - options.yOffset - childrenHeight]
                                : [anchorRect.bottom + 6 + options.yOffset - 8 - 2, anchorRect.bottom + 6 + options.yOffset];
                        }, [show, childrenHeight, anchorEl, tooltipRef]),
                        [arrowLeft, tooltipLeft] = react.useMemo(() => {
                            let targetEl = null == anchorEl ? void 0 : anchorEl.current;
                            if (!show || !tooltipRef || !targetEl) return [0, 0];
                            let anchorRect = targetEl.getBoundingClientRect(),
                                tooltipRect = tooltipRef.getBoundingClientRect(),
                                trueLeft = anchorRect.left - tooltipRect.width / 2 + anchorRect.width / 2,
                                overflowingRight = Math.max(trueLeft + tooltipRect.width - window.innerWidth + 8, 0);
                            return [anchorRect.left + anchorRect.width / 2 - 5, (trueLeft <= 8 ? 8 : trueLeft) - overflowingRight + (options.xOffset + overflowingRight)];
                        }, [show, anchorEl, tooltipRef]);
                    return show
                        ? react_dom.createPortal(
                              (0, jsx_runtime.jsxs)(react.Fragment, {
                                  children: [
                                      (0, jsx_runtime.jsx)("div", {
                                          ref: (newRef) => setTooltipRef(newRef),
                                          style: { top: tooltipTop, left: tooltipLeft, zIndex: options.zIndex, position: "fixed", pointerEvents: "hover" === options.mechanism ? "none" : "auto" },
                                          children: (0, jsx_runtime.jsx)(TooltipBody, {
                                              style: { height: "".concat(childrenHeight, "px") },
                                              lineHeight: options.lineHeight,
                                              children: (0, jsx_runtime.jsxs)("div", {
                                                  children: [
                                                      measureRef,
                                                      "function" == typeof children
                                                          ? children({
                                                                close() {
                                                                    setShow(!1), "function" == typeof onVisibleChange && onVisibleChange(!1);
                                                                },
                                                            })
                                                          : children,
                                                  ],
                                              }),
                                          }),
                                      }),
                                      (0, jsx_runtime.jsx)("span", {
                                          style: { top: arrowTop, left: arrowLeft, zIndex: options.zIndex, position: "fixed", transform: "down" === options.position ? "rotate(180deg)" : void 0, pointerEvents: "none" },
                                          children: (0, jsx_runtime.jsx)(TooltipArrowCaret, {}),
                                      }),
                                  ],
                              }),
                              document.body
                          )
                        : null;
                },
                TooltipBody = styled_components_browser_esm.ZP.div(
                    Popper_templateObject(),
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey600;
                    },
                    8,
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey900;
                    },
                    (param) => {
                        let { lineHeight } = param;
                        return lineHeight;
                    }
                ),
                TooltipArrowCaret = () => {
                    let theme = (0, theme_0.Fg)();
                    return (0, jsx_runtime.jsxs)("svg", {
                        width: "10",
                        height: "9",
                        viewBox: "0 0 10 9",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [
                            (0, jsx_runtime.jsx)("polygon", { points: "0,0 10,0 5,9", fill: theme.color.grey900, stroke: "light" === theme.name ? theme.color.grey700 : theme.color.grey600, strokeWidth: "1" }),
                            (0, jsx_runtime.jsx)("line", { x1: "0", y1: "0", x2: "10", y2: "0", stroke: theme.color.grey900, strokeWidth: "1" }),
                            (0, jsx_runtime.jsx)("line", { x1: "0", y1: "1", x2: "10", y2: "1", stroke: theme.color.grey900, strokeWidth: "1" }),
                        ],
                    });
                };
            function RadioButton_templateObject() {
                let data = (0, _tagged_template_literal.Z)([
                    "\n  width: 16px;\n  height: 16px;\n  border: 1px solid ",
                    ";\n  margin: 0;\n  cursor: pointer;\n  padding: 0;\n  appearance: none;\n  box-shadow: ",
                    ';\n  margin-right: 16px;\n  border-radius: 8px;\n  &[aria-checked="false"] {\n    background: ',
                    ';\n  }\n  &[aria-checked="true"] {\n    background: ',
                    ';\n  }\n  &[aria-checked="false"]:hover {\n    background: ',
                    ";\n  }\n",
                ]);
                return (
                    (RadioButton_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            function RadioButton_templateObject1() {
                let data = (0, _tagged_template_literal.Z)([
                    "\n  display: flex;\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  * {\n    cursor: pointer;\n  }\n  label {\n    color: ",
                    ";\n    position: absolute;\n  }\n  input {\n    width: 108px;\n    margin: 0px;\n    height: 36px;\n    border: 1px solid ",
                    ";\n    padding: 0px;\n    appearance: none;\n    border-radius: 4px;\n  }\n  &:hover {\n    label {\n      color: ",
                    ";\n    }\n    input {\n      border: 1px solid ",
                    ";\n    }\n  }\n  &.checked {\n    label {\n      color: ",
                    ";\n    }\n    input {\n      border: 1px solid ",
                    ";\n      background: ",
                    ";\n    }\n  }\n",
                ]);
                return (
                    (RadioButton_templateObject1 = function () {
                        return data;
                    }),
                    data
                );
            }
            let RadioButton = (param) => {
                    let { id, label, variant = "native", ...props } = param;
                    return "native" === variant
                        ? (0, jsx_runtime.jsxs)(Flex, {
                              align: "center",
                              children: [
                                  (0, jsx_runtime.jsx)(NativeStyledRadio, { ...props, id: id, type: "radio", "aria-checked": props.checked ? "true" : "false" }),
                                  (0, jsx_runtime.jsx)(TextRoot, { as: "label", style: { cursor: "pointer" }, variant: "body", htmlFor: id, transform: "uppercase", children: label }),
                              ],
                          })
                        : (0, jsx_runtime.jsxs)(ButtonStyledRadio, {
                              className: props.checked ? "checked" : "",
                              children: [
                                  (0, jsx_runtime.jsx)("input", { ...props, id: id, type: "radio" }),
                                  (0, jsx_runtime.jsx)(TextRoot, { as: "label", align: "center", variant: "body", htmlFor: id, transform: "uppercase", children: label }),
                              ],
                          });
                },
                NativeStyledRadio = styled_components_browser_esm.ZP.input(
                    RadioButton_templateObject(),
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey400;
                    },
                    (param) => {
                        let { checked } = param;
                        return !checked && "inset 0px 2px 2px rgba(0, 0, 0, 0.25)";
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey700;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.yellow300;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.white;
                    }
                ),
                ButtonStyledRadio = styled_components_browser_esm.ZP.div(
                    RadioButton_templateObject1(),
                    (param) => {
                        let { theme } = param;
                        return theme.color.orange200;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.orange200;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.yellow300;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.yellow300;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.black;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.yellow300;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.yellow300;
                    }
                );
            function _extends() {
                return (_extends =
                    Object.assign ||
                    function (target) {
                        for (var i = 1; i < arguments.length; i++) {
                            var source = arguments[i];
                            for (var key in source) Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
                        }
                        return target;
                    }).apply(this, arguments);
            }
            function _objectWithoutPropertiesLoose(source, excluded) {
                if (null == source) return {};
                var key,
                    i,
                    target = {},
                    sourceKeys = Object.keys(source);
                for (i = 0; i < sourceKeys.length; i++) (key = sourceKeys[i]), excluded.indexOf(key) >= 0 || (target[key] = source[key]);
                return target;
            }
            var getBoundingClientRect = function (element) {
                    var rect = element.getBoundingClientRect();
                    return { left: Math.ceil(rect.left), width: Math.ceil(rect.width) };
                },
                sortNumList = function (arr) {
                    return [].concat(arr).sort(function (a, b) {
                        return Number(a) - Number(b);
                    });
                },
                useGetLatest = function (val) {
                    var ref = react.useRef(val);
                    return (
                        (ref.current = val),
                        react.useCallback(function () {
                            return ref.current;
                        }, [])
                    );
                },
                linearInterpolator = {
                    getPercentageForValue: function (val, min, max) {
                        return Math.max(0, Math.min(100, ((val - min) / (max - min)) * 100));
                    },
                    getValueForClientX: function (clientX, trackDims, min, max) {
                        return (max - min) * ((clientX - trackDims.left) / trackDims.width) + min;
                    },
                };
            function RangeSelect_templateObject() {
                let data = (0, _tagged_template_literal.Z)([
                    "\n  width: 100%;\n  height: 38px;\n  border: 1px solid ",
                    ";\n  display: flex;\n  overflow: hidden;\n  align-items: center;\n  border-radius: 4px;\n\n  * {\n    background: ",
                    ";\n  }\n\n  .icon {\n    width: 40px;\n    height: 100%;\n    background: ",
                    ";\n  }\n  svg {\n    background: ",
                    ";\n  }\n\n  input {\n    width: 48px;\n    color: ",
                    ";\n    border: none;\n    height: 100%;\n    border-left: 1px solid ",
                    ';\n    font-family: "Proto Mono";\n    border-right: 1px solid ',
                    ";\n    padding-left: 8px;\n  }\n\n  .track {\n    flex: 1;\n    height: 1px;\n    background: ",
                    ";\n    margin-left: 16px;\n    margin-right: 16px;\n  }\n\n  .handle {\n    width: 14px;\n    height: 14px;\n    border: 1px solid ",
                    ";\n    border-radius: 7px;\n  }\n",
                ]);
                return (
                    (RangeSelect_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            let RangeSelect_DEFAULT_OPTIONS = { max: 30 },
                RangeSelect = (props) => {
                    var _ref,
                        _ref$interpolator,
                        interpolator,
                        _ref$tickSize,
                        tickSize,
                        values,
                        min,
                        max,
                        controlledTicks,
                        steps,
                        onChange,
                        onDrag,
                        stepSize,
                        _React$useState,
                        activeHandleIndex,
                        setActiveHandleIndex,
                        _React$useState2,
                        tempValues,
                        setTempValues,
                        getLatest,
                        trackElRef,
                        getValueForClientX,
                        getNextStep,
                        roundToStep,
                        handleDrag,
                        handleKeyDown,
                        handlePress,
                        getPercentageForValue,
                        ticks,
                        segments,
                        handles;
                    let { value, onChange: onChange1, options = {} } = props,
                        useOptions = { ...RangeSelect_DEFAULT_OPTIONS, ...options },
                        [isActive, setIsActive] = react.useState(!1),
                        max1 = react.useMemo(() => Math.min(useOptions.max, RangeSelect_DEFAULT_OPTIONS.max), [useOptions.max]),
                        { handles: handles1, getTrackProps } =
                            ((interpolator = void 0 === (_ref$interpolator = (_ref = { min: 0, max: max1, values: value, onDrag: onChange1, stepSize: 1 }).interpolator) ? linearInterpolator : _ref$interpolator),
                            (tickSize = void 0 === (_ref$tickSize = _ref.tickSize) ? 10 : _ref$tickSize),
                            (values = _ref.values),
                            (min = _ref.min),
                            (max = _ref.max),
                            (controlledTicks = _ref.ticks),
                            (steps = _ref.steps),
                            (onChange = _ref.onChange),
                            (onDrag = _ref.onDrag),
                            (stepSize = _ref.stepSize),
                            (activeHandleIndex = (_React$useState = react.useState(null))[0]),
                            (setActiveHandleIndex = _React$useState[1]),
                            (tempValues = (_React$useState2 = react.useState())[0]),
                            (setTempValues = _React$useState2[1]),
                            (getLatest = useGetLatest({ activeHandleIndex: activeHandleIndex, onChange: onChange, onDrag: onDrag, values: values, tempValues: tempValues })),
                            (trackElRef = react.useRef()),
                            (getValueForClientX = react.useCallback(
                                function (clientX) {
                                    var trackDims = getBoundingClientRect(trackElRef.current);
                                    return interpolator.getValueForClientX(clientX, trackDims, min, max);
                                },
                                [interpolator, max, min]
                            )),
                            (getNextStep = react.useCallback(
                                function (val, direction) {
                                    if (steps) {
                                        var nextIndex = steps.indexOf(val) + direction;
                                        return nextIndex >= 0 && nextIndex < steps.length ? steps[nextIndex] : val;
                                    }
                                    var nextVal = val + stepSize * direction;
                                    return nextVal >= min && nextVal <= max ? nextVal : val;
                                },
                                [max, min, stepSize, steps]
                            )),
                            (roundToStep = react.useCallback(
                                function (val) {
                                    var left = min,
                                        right = max;
                                    if (steps)
                                        steps.forEach(function (step) {
                                            step <= val && step > left && (left = step), step >= val && step < right && (right = step);
                                        });
                                    else {
                                        for (; left < val && left + stepSize < val; ) left += stepSize;
                                        right = Math.min(left + stepSize, max);
                                    }
                                    return val - left < right - val ? left : right;
                                },
                                [max, min, stepSize, steps]
                            )),
                            (handleDrag = react.useCallback(
                                function (e) {
                                    var _getLatest = getLatest(),
                                        activeHandleIndex = _getLatest.activeHandleIndex,
                                        onDrag = _getLatest.onDrag,
                                        newRoundedValue = roundToStep(getValueForClientX("touchmove" === e.type ? e.changedTouches[0].clientX : e.clientX)),
                                        newValues = [].concat(values.slice(0, activeHandleIndex), [newRoundedValue], values.slice(activeHandleIndex + 1));
                                    onDrag ? onDrag(newValues) : setTempValues(newValues);
                                },
                                [getLatest, getValueForClientX, roundToStep, values]
                            )),
                            (handleKeyDown = react.useCallback(
                                function (e, i) {
                                    var _getLatest2 = getLatest(),
                                        values = _getLatest2.values,
                                        _getLatest2$onChange = _getLatest2.onChange;
                                    if (37 === e.keyCode || 39 === e.keyCode) {
                                        setActiveHandleIndex(i);
                                        var direction = 37 === e.keyCode ? -1 : 1,
                                            newValue = getNextStep(values[i], direction);
                                        (void 0 === _getLatest2$onChange ? function () {} : _getLatest2$onChange)(sortNumList([].concat(values.slice(0, i), [newValue], values.slice(i + 1))));
                                    }
                                },
                                [getLatest, getNextStep]
                            )),
                            (handlePress = react.useCallback(
                                function (e, i) {
                                    setActiveHandleIndex(i);
                                    var handleRelease = function handleRelease(e) {
                                        var _getLatest3 = getLatest(),
                                            tempValues = _getLatest3.tempValues,
                                            values = _getLatest3.values,
                                            _getLatest3$onChange = _getLatest3.onChange,
                                            _getLatest3$onDrag = _getLatest3.onDrag;
                                        document.removeEventListener("mousemove", handleDrag),
                                            document.removeEventListener("touchmove", handleDrag),
                                            document.removeEventListener("mouseup", handleRelease),
                                            document.removeEventListener("touchend", handleRelease);
                                        var sortedValues = sortNumList(tempValues || values);
                                        (void 0 === _getLatest3$onChange ? function () {} : _getLatest3$onChange)(sortedValues),
                                            (void 0 === _getLatest3$onDrag ? function () {} : _getLatest3$onDrag)(sortedValues),
                                            setActiveHandleIndex(null),
                                            setTempValues();
                                    };
                                    document.addEventListener("mousemove", handleDrag),
                                        document.addEventListener("touchmove", handleDrag),
                                        document.addEventListener("mouseup", handleRelease),
                                        document.addEventListener("touchend", handleRelease);
                                },
                                [getLatest, handleDrag]
                            )),
                            (getPercentageForValue = react.useCallback(
                                function (val) {
                                    return interpolator.getPercentageForValue(val, min, max);
                                },
                                [interpolator, max, min]
                            )),
                            (ticks = react.useMemo(
                                function () {
                                    var ticks = controlledTicks || steps;
                                    if (!ticks) {
                                        for (ticks = [min]; ticks[ticks.length - 1] < max - tickSize; ) ticks.push(ticks[ticks.length - 1] + tickSize);
                                        ticks.push(max);
                                    }
                                    return ticks.map(function (value, i) {
                                        return {
                                            value: value,
                                            getTickProps: function (_temp) {
                                                var _ref2 = void 0 === _temp ? {} : _temp,
                                                    _ref2$key = _ref2.key,
                                                    _ref2$style = _ref2.style,
                                                    rest = _objectWithoutPropertiesLoose(_ref2, ["key", "style"]);
                                                return _extends(
                                                    {
                                                        key: void 0 === _ref2$key ? i : _ref2$key,
                                                        style: _extends({ position: "absolute", width: 0, left: getPercentageForValue(value) + "%", transform: "translateX(-50%)" }, void 0 === _ref2$style ? {} : _ref2$style),
                                                    },
                                                    rest
                                                );
                                            },
                                        };
                                    });
                                },
                                [controlledTicks, getPercentageForValue, max, min, steps, tickSize]
                            )),
                            (segments = react.useMemo(
                                function () {
                                    var sortedValues = sortNumList(tempValues || values);
                                    return [].concat(sortedValues, [max]).map(function (value, i) {
                                        return {
                                            value: value,
                                            getSegmentProps: function (_temp2) {
                                                var _ref3 = void 0 === _temp2 ? {} : _temp2,
                                                    _ref3$key = _ref3.key,
                                                    _ref3$style = _ref3.style,
                                                    rest = _objectWithoutPropertiesLoose(_ref3, ["key", "style"]),
                                                    left = getPercentageForValue(sortedValues[i - 1] ? sortedValues[i - 1] : min),
                                                    width = getPercentageForValue(value) - left;
                                                return _extends(
                                                    { key: void 0 === _ref3$key ? i : _ref3$key, style: _extends({ position: "absolute", left: left + "%", width: width + "%" }, void 0 === _ref3$style ? {} : _ref3$style) },
                                                    rest
                                                );
                                            },
                                        };
                                    });
                                },
                                [getPercentageForValue, max, min, tempValues, values]
                            )),
                            (handles = react.useMemo(
                                function () {
                                    return (tempValues || values).map(function (value, i) {
                                        return {
                                            value: value,
                                            active: i === activeHandleIndex,
                                            getHandleProps: function (_temp3) {
                                                var _ref4 = void 0 === _temp3 ? {} : _temp3,
                                                    _ref4$key = _ref4.key,
                                                    _onKeyDown = (_ref4.ref, _ref4.innerRef, _ref4.onKeyDown),
                                                    _onMouseDown = _ref4.onMouseDown,
                                                    _onTouchStart = _ref4.onTouchStart,
                                                    _ref4$style = _ref4.style,
                                                    rest = _objectWithoutPropertiesLoose(_ref4, ["key", "ref", "innerRef", "onKeyDown", "onMouseDown", "onTouchStart", "style"]);
                                                return _extends(
                                                    {
                                                        key: void 0 === _ref4$key ? i : _ref4$key,
                                                        onKeyDown: function (e) {
                                                            e.persist(), handleKeyDown(e, i), _onKeyDown && _onKeyDown(e);
                                                        },
                                                        onMouseDown: function (e) {
                                                            e.persist(), handlePress(e, i), _onMouseDown && _onMouseDown(e);
                                                        },
                                                        onTouchStart: function (e) {
                                                            e.persist(), handlePress(e, i), _onTouchStart && _onTouchStart(e);
                                                        },
                                                        role: "slider",
                                                        "aria-valuemin": min,
                                                        "aria-valuemax": max,
                                                        "aria-valuenow": value,
                                                        style: _extends(
                                                            { position: "absolute", top: "50%", left: getPercentageForValue(value) + "%", zIndex: i === activeHandleIndex ? "1" : "0", transform: "translate(-50%, -50%)" },
                                                            void 0 === _ref4$style ? {} : _ref4$style
                                                        ),
                                                    },
                                                    rest
                                                );
                                            },
                                        };
                                    });
                                },
                                [activeHandleIndex, getPercentageForValue, handleKeyDown, handlePress, min, max, tempValues, values]
                            )),
                            {
                                activeHandleIndex: activeHandleIndex,
                                getTrackProps: function (_temp4) {
                                    var _ref5 = void 0 === _temp4 ? {} : _temp4,
                                        _ref5$style = _ref5.style,
                                        _ref6 = _ref5.ref,
                                        rest = _objectWithoutPropertiesLoose(_ref5, ["style", "ref"]);
                                    return _extends(
                                        {
                                            ref: function (el) {
                                                (trackElRef.current = el), _ref6 && ("function" == typeof _ref6 ? _ref6(el) : (_ref6.current = el));
                                            },
                                            style: _extends({ position: "relative", userSelect: "none" }, void 0 === _ref5$style ? {} : _ref5$style),
                                        },
                                        rest
                                    );
                                },
                                ticks: ticks,
                                segments: segments,
                                handles: handles,
                            });
                    react.useEffect(() => {
                        void 0 !== props.isActive && setIsActive(props.isActive);
                    }, [props.isActive]),
                        react.useEffect(() => {
                            let mouseUpHandler = () => {
                                setIsActive(Boolean(props.isActive));
                            };
                            return (
                                document.addEventListener("mouseup", mouseUpHandler),
                                () => {
                                    document.removeEventListener("mouseup", mouseUpHandler);
                                }
                            );
                        }, [props.isActive]);
                    let onInputChange = (e) => {
                        let value = e.target.value;
                        "" === value && onChange1([0]);
                        let isOnlyDigits = /^\d+$/.test(value),
                            isThreeOrLessDigits = /^\d{1,3}$/.test(value);
                        isOnlyDigits && isThreeOrLessDigits && onChange1([Math.min(max1, Number(value))]);
                    };
                    return (0, jsx_runtime.jsxs)(RangeSelectRoot, {
                        isActive: isActive,
                        children: [
                            (0, jsx_runtime.jsx)(Icon, { name: "broom", color: isActive ? "yellow300" : "grey300", className: "icon" }),
                            (0, jsx_runtime.jsx)("input", { value: value[0], onChange: onInputChange }),
                            (0, jsx_runtime.jsx)("div", {
                                ...getTrackProps({ className: "track" }),
                                children: handles1.map((param) => {
                                    let { getHandleProps } = param;
                                    return (0, jsx_runtime.jsx)("button", { ...getHandleProps({ className: "handle", onMouseDown: () => setIsActive(!0) }) }, getHandleProps().key);
                                }),
                            }),
                        ],
                    });
                },
                RangeSelectRoot = styled_components_browser_esm.ZP.div(
                    RangeSelect_templateObject(),
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey600;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey900;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey700;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey700;
                    },
                    (param) => {
                        let { theme, isActive } = param;
                        return isActive ? theme.color.yellow300 : theme.color.grey100;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey600;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey600;
                    },
                    (param) => {
                        let { theme, isActive } = param;
                        return isActive ? theme.color.yellow300 : theme.color.grey400;
                    },
                    (param) => {
                        let { theme, isActive } = param;
                        return isActive ? theme.color.yellow300 : theme.color.grey400;
                    }
                );
            function SearchInput_templateObject() {
                let data = (0, _tagged_template_literal.Z)(["\n  width: 100%;\n  height: 36px;\n  position: relative;\n"]);
                return (
                    (SearchInput_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            function SearchInput_templateObject1() {
                let data = (0, _tagged_template_literal.Z)(["\n  width: 100%;\n  height: 100%;\n  color: ", ";\n  border: 1px solid ", ";\n  background: ", ';\n  font-family: "Proto Mono";\n  padding-left: 40px;\n  border-radius: 4px;\n']);
                return (
                    (SearchInput_templateObject1 = function () {
                        return data;
                    }),
                    data
                );
            }
            function SearchInput_templateObject2() {
                let data = (0, _tagged_template_literal.Z)([
                    "\n  top: 8px;\n  right: 8px;\n  display: flex;\n  position: absolute;\n  align-items: center;\n\n  * {\n    font-size: 16px !important;\n    line-height: 100% !important;\n  }\n",
                ]);
                return (
                    (SearchInput_templateObject2 = function () {
                        return data;
                    }),
                    data
                );
            }
            let SearchInput = react.forwardRef((props, forwardedRef) => {
                let { onSearch, showIcons = !1, ...moreProps } = props,
                    [focused, setFocused] = react.useState(!1);
                return (0, jsx_runtime.jsxs)(InputRoot, {
                    children: [
                        (0, jsx_runtime.jsx)("div", { style: { top: "8px", left: "12px", position: "absolute" }, children: (0, jsx_runtime.jsx)(Icon, { name: "magnifying-glass", color: "grey300" }) }),
                        !focused &&
                            showIcons &&
                            (0, jsx_runtime.jsxs)(Hotkeys, { children: [(0, jsx_runtime.jsx)(Icon, { name: "command", color: "grey400" }), (0, jsx_runtime.jsx)(TextRoot, { pl: "4px", color: "grey400", variant: "body", children: "K" })] }),
                        (0, jsx_runtime.jsx)(Input, {
                            ...moreProps,
                            ref: forwardedRef,
                            value: props.value,
                            onBlur(e) {
                                setFocused(!1), "function" == typeof props.onBlur && props.onBlur(e);
                            },
                            onFocus(e) {
                                setFocused(!0), "function" == typeof props.onFocus && props.onFocus(e);
                            },
                            onChange: (e) => props.onSearch(e.target.value),
                        }),
                    ],
                });
            });
            SearchInput.displayName = "SearchInput";
            let InputRoot = styled_components_browser_esm.ZP.div(SearchInput_templateObject()),
                Input = styled_components_browser_esm.ZP.input(
                    SearchInput_templateObject1(),
                    (param) => {
                        let { theme } = param;
                        return theme.color.white;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey600;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey900;
                    }
                ),
                Hotkeys = styled_components_browser_esm.ZP.div(SearchInput_templateObject2());
            function Select_templateObject() {
                let data = (0, _tagged_template_literal.Z)([
                    "\n  /* START SELF STYLES */\n\n  height: 36px;\n  position: relative;\n  background: ",
                    ";\n  border-width: 1px;\n  border-style: solid;\n  border-radius: 4px;\n\n  * {\n    cursor: pointer;\n  }\n\n  &.disabled {\n    opacity: 0.5;\n    pointer-events: none;\n  }\n  &.disabled * {\n    cursor: not-allowed;\n  }\n\n  &.open.direction-up {\n    border-top-left-radius: 0px;\n    border-top-right-radius: 0px;\n    border-bottom-left-radius: 4px;\n    border-bottom-right-radius: 4px;\n  }\n  &.open.direction-down {\n    border-top-left-radius: 4px;\n    border-top-right-radius: 4px;\n    border-bottom-left-radius: 0px;\n    border-bottom-right-radius: 0px;\n  }\n\n  &.open,\n  &:hover {\n    *,\n    path,\n    rect {\n      fill: ",
                    " !important;\n      color: ",
                    " !important;\n    }\n  }\n\n  &.variant-primary {\n    border-color: ",
                    ";\n\n    &.open,\n    &:hover {\n      border-color: ",
                    ";\n    }\n  }\n\n  &.variant-secondary {\n    height: max-content;\n    border-color: ",
                    ";\n  }\n\n  /* END SELF STYLES */\n  /* START DROPDOWN STYLES */\n\n  .dropdown {\n    border: 1px solid ",
                    ";\n    position: absolute;\n    overflow: hidden;\n    background: ",
                    ";\n    visibility: hidden;\n    pointer-events: none;\n  }\n  &.open .dropdown {\n    z-index: 1;\n    visibility: visible;\n    pointer-events: all;\n  }\n  &.direction-up .dropdown {\n    bottom: 100%;\n    border-top-left-radius: 4px;\n    border-top-right-radius: 4px;\n    border-bottom-left-radius: 0px;\n    border-bottom-right-radius: 0px;\n  }\n  &.direction-down .dropdown {\n    top: 100%;\n    border-top-left-radius: 0px;\n    border-top-right-radius: 0px;\n    border-bottom-left-radius: 4px;\n    border-bottom-right-radius: 4px;\n  }\n  &.variant-primary .dropdown {\n    left: -1px;\n    width: calc(100% + 2px);\n  }\n  &.variant-secondary .dropdown {\n    right: 0;\n    width: max-content;\n    border-radius: 4px;\n  }\n  &.variant-secondary.direction-down .dropdown {\n    top: calc(100% + 8px);\n  }\n\n  /* END DROPDOWN STYLES */\n  /* START OPTION STYLES */\n\n  .option {\n    height: 36px;\n    display: flex;\n    align-items: center;\n    padding-left: 8px;\n    padding-right: 8px;\n  }\n  .option.border {\n    border-top: 1px solid ",
                    ";\n  }\n  &.variant-primary .option * {\n    color: ",
                    " !important;\n  }\n  &.variant-secondary .option * {\n    color: ",
                    " !important;\n  }\n  .option.focused {\n    background: ",
                    ";\n    * {\n      color: ",
                    " !important;\n    }\n  }\n  .option.selected {\n    * {\n      color: ",
                    ' !important;\n    }\n  }\n\n  /* END OPTION STYLES */\n  /* START INPUT STYLES */\n\n  input {\n    border: none;\n    height: 100%;\n    background: none;\n    font-weight: 700;\n    font-family: "Proto Mono";\n    padding-left: 8px;\n    padding-right: 24px;\n    border-radius: 4px;\n    text-transform: uppercase;\n\n    /* Add media query styles */\n    ',
                    "\n  }\n  &.variant-primary input {\n    color: ",
                    ";\n    width: 200px;\n    text-align: left;\n  }\n  &.variant-secondary input {\n    color: ",
                    ";\n    width: ",
                    "px;\n    text-align: right;\n  }\n  &.open input {\n    color: ",
                    " !important;\n  }\n  &.open.variant-primary input {\n    background: ",
                    " !important;\n  }\n\n  /* END INPUT STYLES */\n",
                ]);
                return (
                    (Select_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            let Select = (props) => {
                    let { variant = "primary" } = props,
                        [activeIndex, setActiveIndex] = react.useState(null),
                        [open, setOpen] = react.useReducer((_, newOpen) => newOpen, !1),
                        rootRef = react.useRef(null),
                        [dropdownMeasure, dropdownMeasureRef] = (0, hooks.x7)(),
                        [fixWidth, setFixWidth] = react.useState(null == dropdownMeasure ? void 0 : dropdownMeasure.width);
                    react.useEffect(() => {
                        let newWidth = null == dropdownMeasure ? void 0 : dropdownMeasure.width;
                        Number(null != newWidth ? newWidth : 0) >= Number(null != fixWidth ? fixWidth : 0) && setFixWidth(Number(null != newWidth ? newWidth : 0) + 24);
                    }, [fixWidth, dropdownMeasure]);
                    let options = [];
                    react.Children.forEach(props.children, (child) => {
                        let { value, children } = child.props;
                        options.push({ value, label: children, selected: value === props.value });
                    });
                    let selectedOption = options.find((option) => option.selected),
                        selectedOptionIndex = options.findIndex((option) => option.selected),
                        dropdownDirection = react.useMemo(() => {
                            var ref;
                            let selectBottom = null === (ref = rootRef.current) || void 0 === ref ? void 0 : ref.getBoundingClientRect().bottom,
                                dropdownHeight = 36 * options.length,
                                windowConstraint = window.innerHeight;
                            return Number(selectBottom) + dropdownHeight > windowConstraint ? "up" : "down";
                        }, [options, rootRef.current]);
                    react.useEffect(() => {
                        var ref, ref1;
                        open ? (setActiveIndex(selectedOptionIndex), null === (ref = rootRef.current) || void 0 === ref || ref.focus()) : (setActiveIndex(null), null === (ref1 = rootRef.current) || void 0 === ref1 || ref1.blur());
                    }, [open, rootRef.current, selectedOptionIndex]),
                        react.useEffect(() => {
                            let clickAwayHandler = (e) => {
                                e.target.isSameNode(rootRef.current) || setOpen(!1);
                            };
                            return (
                                document.addEventListener("click", clickAwayHandler),
                                () => {
                                    document.removeEventListener("click", clickAwayHandler);
                                }
                            );
                        }, [rootRef.current]),
                        react.useEffect(() => {
                            let handler = (e) => {
                                "Escape" === e.key && setOpen(!1);
                            };
                            return (
                                open ? window.addEventListener("keydown", handler) : window.removeEventListener("keydown", handler),
                                () => {
                                    window.removeEventListener("keydown", handler);
                                }
                            );
                        }, [open, setOpen]),
                        react.useEffect(() => {
                            let handler = (e) => {
                                "Enter" === e.key && (activeIndex === options.length || -1 === activeIndex || props.onChange(options[Number(activeIndex)].value), setOpen(!1));
                            };
                            return (
                                open && null !== activeIndex ? window.addEventListener("keydown", handler) : window.removeEventListener("keydown", handler),
                                () => {
                                    window.removeEventListener("keydown", handler);
                                }
                            );
                        }, [open, options, activeIndex]),
                        react.useEffect(() => {
                            let handler = (e) => {
                                if ("ArrowUp" === e.key) {
                                    if (null === activeIndex) setActiveIndex(options.length - 1);
                                    else {
                                        let nextActiveIndex = activeIndex - 1;
                                        -1 !== nextActiveIndex && setActiveIndex(nextActiveIndex);
                                    }
                                }
                            };
                            return (
                                open ? window.addEventListener("keydown", handler) : window.removeEventListener("keydown", handler),
                                () => {
                                    window.removeEventListener("keydown", handler);
                                }
                            );
                        }, [open, options, activeIndex]),
                        react.useEffect(() => {
                            let handler = (e) => {
                                if ("ArrowDown" === e.key) {
                                    if (null === activeIndex) setActiveIndex(0);
                                    else {
                                        let nextActiveIndex = activeIndex + 1;
                                        nextActiveIndex !== options.length && setActiveIndex(nextActiveIndex);
                                    }
                                }
                            };
                            return (
                                open ? window.addEventListener("keydown", handler) : window.removeEventListener("keydown", handler),
                                () => {
                                    window.removeEventListener("keydown", handler);
                                }
                            );
                        }, [open, options, activeIndex]);
                    let classNames = ["variant-".concat(variant), "direction-".concat(dropdownDirection)];
                    return (
                        open && classNames.push("open"),
                        props.disabled && classNames.push("disabled"),
                        (0, jsx_runtime.jsxs)(StyledRoot, {
                            onClick() {
                                setOpen(!open);
                            },
                            className: classNames.join(" "),
                            onMouseLeave: () => setActiveIndex(null),
                            dropdownMeasureWidth: fixWidth,
                            children: [
                                (0, jsx_runtime.jsx)("input", { readOnly: !0, ref: rootRef, value: open ? props.placeholder : null == selectedOption ? void 0 : selectedOption.label, onMouseEnter: () => setActiveIndex(options.length) }),
                                (0, jsx_runtime.jsxs)("div", {
                                    className: "dropdown",
                                    children: [
                                        dropdownMeasureRef,
                                        options.map((option, index) => {
                                            let classNames = ["option"];
                                            return (
                                                0 !== index && classNames.push("border"),
                                                index === activeIndex && classNames.push("focused"),
                                                index === selectedOptionIndex && classNames.push("selected"),
                                                (0, jsx_runtime.jsx)(
                                                    "div",
                                                    {
                                                        onClick() {
                                                            props.onChange(option.value), setOpen(!1);
                                                        },
                                                        className: classNames.join(" "),
                                                        onMouseEnter: () => setActiveIndex(index),
                                                        children: (0, jsx_runtime.jsx)(TextRoot, { variant: "body", transform: "uppercase", children: option.label }, option.value),
                                                    },
                                                    option.value
                                                )
                                            );
                                        }),
                                    ],
                                }),
                                (0, jsx_runtime.jsx)(Icon, {
                                    name: "chevron",
                                    color: "grey300",
                                    style: { top: "secondary" === variant ? "0px" : "8px", right: "secondary" === variant ? "0px" : "8px", position: "absolute", pointerEvents: "none" },
                                    transform: open ? "rotate(180deg)" : void 0,
                                }),
                            ],
                        })
                    );
                },
                StyledRoot = styled_components_browser_esm.ZP.div(
                    Select_templateObject(),
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey900;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.white;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.white;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey600;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey400;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.transparent;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey400;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey900;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey400;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey100;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey300;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey800;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.white;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.yellow300;
                    },
                    (param) => {
                        let { theme } = param,
                            templateLiteral = "";
                        return (
                            Object.keys(theme.breakpoint).forEach((breakpoint) => {
                                templateLiteral += "\n        @media "
                                    .concat(theme.breakpoint[breakpoint], " {\n          font-size: ")
                                    .concat(theme.text.body[breakpoint].fontSize, ";\n          line-height: ")
                                    .concat(theme.text.body[breakpoint].lineHeight, ";\n        }\n      ");
                            }),
                            templateLiteral
                        );
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey100;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey300;
                    },
                    (param) => {
                        let { dropdownMeasureWidth } = param;
                        return dropdownMeasureWidth;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey300;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey800;
                    }
                );
            function Stack_templateObject() {
                let data = (0, _tagged_template_literal.Z)(["\n  & > * + * {\n    margin-top: ", ";\n    margin-left: ", ";\n  }\n"]);
                return (
                    (Stack_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            let Stack = (0, styled_components_browser_esm.ZP)(Flex)(
                Stack_templateObject(),
                (param) => {
                    let { spacing, direction } = param;
                    return "column" === direction ? spacing : 0;
                },
                (param) => {
                    let { spacing, direction } = param;
                    return "row" === direction ? spacing : 0;
                }
            );
            function Stepper(param) {
                let { steps, children } = param,
                    stepsMapRef = react.useRef(steps.reduce((map, currStep, currIndex) => (map.set(currStep, currIndex), map), new Map())),
                    [currentStepIndex, setCurrentStepIndex] = react.useState(0),
                    nextStep = () => {
                        steps[currentStepIndex + 1] && setCurrentStepIndex(currentStepIndex + 1);
                    },
                    prevStep = () => {
                        currentStepIndex - 1 >= 0 && setCurrentStepIndex(currentStepIndex - 1);
                    },
                    goToStep = (step) => {
                        let foundStep = stepsMapRef.current.get(step);
                        "number" == typeof foundStep && setCurrentStepIndex(foundStep);
                    };
                return children({ nextStep, prevStep, goToStep, currentStep: steps[currentStepIndex] });
            }
            function Switch_templateObject() {
                let data = (0, _tagged_template_literal.Z)([
                    "\n  width: ",
                    "px;\n  height: ",
                    "px;\n  border: 1px solid ",
                    ";\n  padding: 1px;\n  background: ",
                    ";\n  border-radius: 20px;\n\n  .thumb {\n    width: ",
                    "px;\n    height: ",
                    "px;\n    background: ",
                    ';\n    border-radius: 100%;\n  }\n  &[aria-checked="false"] {\n    .thumb {\n      margin-left: 0%;\n    }\n  }\n  &[aria-checked="true"] {\n    background: ',
                    ";\n    .thumb {\n      background: ",
                    ";\n      margin-left: calc(100% - ",
                    'px);\n    }\n  }\n\n  &[aria-checked="false"]:hover {\n    background: ',
                    ";\n    .thumb {\n      background: ",
                    ';\n    }\n  }\n  &[aria-checked="true"]:hover {\n    opacity: 0.80;\n  }\n',
                ]);
                return (
                    (Switch_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            let Switch_SIZES = { small: { width: 36, height: 16 }, large: { width: 46, height: 22 } },
                Track = styled_components_browser_esm.ZP.button(
                    Switch_templateObject(),
                    (param) => {
                        let { size } = param;
                        return Switch_SIZES[size].width;
                    },
                    (param) => {
                        let { size } = param;
                        return Switch_SIZES[size].height + 4;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey600;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey900;
                    },
                    (param) => {
                        let { size } = param;
                        return Switch_SIZES[size].height;
                    },
                    (param) => {
                        let { size } = param;
                        return Switch_SIZES[size].height;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey300;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey600;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.yellow300;
                    },
                    (param) => {
                        let { size } = param;
                        return Switch_SIZES[size].height;
                    },
                    (param) => {
                        let { theme } = param;
                        return "light" === theme.name ? theme.color.grey800 : theme.color.grey700;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey200;
                    }
                ),
                Switch = (props) => {
                    let { on, size = "small", ...restProps } = props;
                    return (0, jsx_runtime.jsx)(Track, { ...restProps, size: size, role: "switch", "aria-checked": on ? "true" : "false", children: (0, jsx_runtime.jsx)("div", { className: "thumb", children: props.Thumb }) });
                };
            function Text_templateObject() {
                let data = (0, _tagged_template_literal.Z)([
                    '\n  font-family: "Proto Mono";\n\n  color: ',
                    ";\n  overflow: ",
                    ";\n  max-width: ",
                    ";\n  text-align: ",
                    ";\n  font-weight: ",
                    ";\n  white-space: ",
                    ";\n  text-overflow: ",
                    ";\n  text-transform: ",
                    ";\n\n  margin-top: ",
                    ";\n  margin-left: ",
                    ";\n  margin-right: ",
                    ";\n  margin-bottom: ",
                    ";\n\n  padding-top: ",
                    ";\n  padding-left: ",
                    ";\n  padding-right: ",
                    ";\n  padding-bottom: ",
                    ";\n\n  text-shadow: ",
                    ";\n\n  /* Add hover styles */\n  ",
                    "\n\n  /* Add media query styles */\n  ",
                    "\n",
                ]);
                return (
                    (Text_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            let TextRoot = styled_components_browser_esm.ZP.div.attrs((props) => ({ as: props.as || props.component || "div" }))(
                Text_templateObject(),
                (param) => {
                    let { theme, color = "grey100" } = param;
                    return theme.color[color];
                },
                (param) => {
                    let { maxWidth } = param;
                    return Boolean(maxWidth) ? "hidden" : null;
                },
                (param) => {
                    let { maxWidth } = param;
                    return maxWidth;
                },
                (param) => {
                    let { align } = param;
                    return align;
                },
                (param) => {
                    let { weight } = param;
                    return weight;
                },
                (param) => {
                    let { maxWidth } = param;
                    return Boolean(maxWidth) ? "nowrap" : null;
                },
                (param) => {
                    let { maxWidth } = param;
                    return Boolean(maxWidth) ? "ellipsis" : null;
                },
                (param) => {
                    let { transform } = param;
                    return transform;
                },
                (param) => {
                    let { mt } = param;
                    return mt;
                },
                (param) => {
                    let { ml } = param;
                    return ml;
                },
                (param) => {
                    let { mr } = param;
                    return mr;
                },
                (param) => {
                    let { mb } = param;
                    return mb;
                },
                (param) => {
                    let { pt } = param;
                    return pt;
                },
                (param) => {
                    let { pl } = param;
                    return pl;
                },
                (param) => {
                    let { pr } = param;
                    return pr;
                },
                (param) => {
                    let { pb } = param;
                    return pb;
                },
                (param) => {
                    let { theme, shadow = !1 } = param;
                    return shadow && "light" !== theme.name ? "0px 0px 20px currentColor" : null;
                },
                (param) => {
                    let { theme, hoverColor } = param;
                    return hoverColor ? "\n        &:hover {\n          color: ".concat(theme.color[hoverColor], ";\n        }  \n      ") : null;
                },
                (param) => {
                    let { theme, variant } = param,
                        templateLiteral = "";
                    return (
                        Object.keys(theme.breakpoint).forEach((breakpoint) => {
                            templateLiteral += "\n      @media "
                                .concat(theme.breakpoint[breakpoint], " {\n        font-size: ")
                                .concat(theme.text[variant][breakpoint].fontSize, ";\n        line-height: ")
                                .concat(theme.text[variant][breakpoint].lineHeight, ";\n      }\n    ");
                        }),
                        templateLiteral
                    );
                }
            );
            function TextButton_templateObject() {
                let data = (0, _tagged_template_literal.Z)(["\n  &:hover * {\n    fill: ", " !important;\n    color: ", " !important;\n  }\n"]);
                return (
                    (TextButton_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            let TextButton = (param) => {
                    let { children, transform, decoration, ...restProps } = param;
                    return (0, jsx_runtime.jsx)(TextButton_StyledButton, {
                        ...restProps,
                        children: (0, jsx_runtime.jsx)(TextRoot, { color: "orange200", style: { textDecoration: decoration }, shadow: !0, variant: "body", transform: transform || "uppercase", children: children }),
                    });
                },
                TextButton_StyledButton = styled_components_browser_esm.ZP.button(
                    TextButton_templateObject(),
                    (param) => {
                        let { theme } = param;
                        return theme.color.white;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.white;
                    }
                );
        },
        30170: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                uY: function () {
                    return CountCell;
                },
                Ic: function () {
                    return PriceCell;
                },
                sP: function () {
                    return TimeCell;
                },
                YT: function () {
                    return TitleCell;
                },
            });
            var jsx_runtime = __webpack_require__(85893),
                react = __webpack_require__(67294),
                components = __webpack_require__(69976);
            let CountCell = (props) => {
                let { value } = props.cell;
                if (null === value) return (0, jsx_runtime.jsx)(components.xv, { variant: "body", ...props.textProps, children: value });
                {
                    var number;
                    let displayValue = (number = Number(value)) < 1e4 ? "".concat(number) : number.toLocaleString(),
                        displaySuffix = props.suffix ? " ".concat(props.suffix) : "";
                    return (0, jsx_runtime.jsx)(react.Fragment, {
                        children: (0, jsx_runtime.jsx)(components.xv, { title: Number(props.cell.value).toLocaleString(), variant: "body", ...props.textProps, children: "".concat(displayValue).concat(displaySuffix) }),
                    });
                }
            };
            var DataTable = __webpack_require__(95407);
            let PriceCell = (props) => {
                let { icon = !0, glow = !1, iconProps, textProps, maxPrecision = 4 } = props,
                    price = props.cell.value;
                if (!price) return (0, jsx_runtime.jsx)(DataTable.M4, { cell: { value: null } });
                let priceNumber = Number(price.amount),
                    priceNumberSign = Math.sign(priceNumber),
                    twoDecimalPlaces = priceNumber.toFixed(2).toString(),
                    moreDecimalPlaces = parseFloat(priceNumber.toFixed(maxPrecision)).toString(),
                    lowestDecimalPlaces = moreDecimalPlaces.length < twoDecimalPlaces.length ? twoDecimalPlaces : moreDecimalPlaces,
                    themeColor = react.useMemo(() => (1 === priceNumberSign ? "green300" : -1 === priceNumberSign ? "orange400" : null), [priceNumberSign]);
                return (0, jsx_runtime.jsxs)(react.Fragment, {
                    children: [
                        (0, jsx_runtime.jsxs)(components.xv, {
                            id: props.id,
                            pr: "6px",
                            color: (glow && themeColor) || "grey100",
                            shadow: glow && null !== themeColor,
                            variant: "body",
                            ...textProps,
                            children: [props.prefix, props.id ? (0, jsx_runtime.jsx)("span", { id: props.id, children: lowestDecimalPlaces }) : lowestDecimalPlaces],
                        }),
                        icon && (0, jsx_runtime.jsx)(components.JO, { size: "tight", name: "ethereum", color: (glow && themeColor) || "grey300", transform: "translateY(-1px)", ...iconProps }),
                    ],
                });
            };
            var dayjs_min = __webpack_require__(27484),
                dayjs_min_default = __webpack_require__.n(dayjs_min);
            let TimeCell = (props) => {
                let tooltipRef = react.useRef(null),
                    currentYear = new Date().getFullYear();
                return (0, jsx_runtime.jsxs)(react.Fragment, {
                    children: [
                        (0, jsx_runtime.jsxs)(components.xv, {
                            ...props.textProps,
                            ref: tooltipRef,
                            variant: "body",
                            children: [props.cell.value ? (0, jsx_runtime.jsx)(components.C$, { dateTime: props.cell.value }) : "-", props.cell.value && props.suffix && " ago"],
                        }),
                        (0, jsx_runtime.jsx)(components.rD, {
                            anchorEl: tooltipRef,
                            children: (0, jsx_runtime.jsx)(components.xv, { variant: "body", children: dayjs_min_default()(props.cell.value).format("MMM DD YYYY h:mm:ss A").replace(" ".concat(currentYear, " "), " ") }),
                        }),
                    ],
                });
            };
            var theft = __webpack_require__(94135),
                utils = __webpack_require__(48048);
            let TitleCell = (props) => {
                let layout = { display: "grid", marginLeft: "16px", alignItems: "center", gridColumnGap: "8px", gridTemplateAreas: "'title suffix'" };
                return (
                    props.Subtitle && (layout.gridTemplateAreas = "'title suffix' 'subtitle suffix'"),
                    (0, jsx_runtime.jsxs)(react.Fragment, {
                        children: [
                            (0, jsx_runtime.jsx)(components.Ee, { ...props.imageProps, src: (0, utils.RR)(props.imageUrl), width: props.condensed ? "20px" : "40px", height: props.condensed ? "20px" : "40px", objectFit: "cover" }),
                            (0, jsx_runtime.jsxs)("div", {
                                style: layout,
                                children: [
                                    (0, jsx_runtime.jsxs)(components.xv, {
                                        title: props.title,
                                        style: { gridArea: "title" },
                                        variant: "body",
                                        className: "text-truncate",
                                        children: [
                                            props.title,
                                            props.isSuspicious && (0, jsx_runtime.jsx)(theft.M, { size: props.condensed ? "small" : "regular", style: { top: 0, left: props.condensed ? "36px" : "32px", position: "absolute" } }),
                                        ],
                                    }),
                                    props.Suffix && (0, jsx_runtime.jsx)("div", { style: { gridArea: "suffix", display: "flex" }, children: props.Suffix }),
                                    props.Subtitle && (0, jsx_runtime.jsx)("div", { style: { gridArea: "subtitle" }, children: props.Subtitle }),
                                ],
                            }),
                        ],
                    })
                );
            };
        },
        88615: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                NP: function () {
                    return PageSection;
                },
                Y6: function () {
                    return TabButton;
                },
                rO: function () {
                    return TabbedPageSection;
                },
            });
            var _tagged_template_literal = __webpack_require__(7297),
                jsx_runtime = __webpack_require__(85893),
                react = __webpack_require__(67294),
                styled_components_browser_esm = __webpack_require__(87379),
                theme_0 = __webpack_require__(87074),
                components = __webpack_require__(69976);
            function _templateObject() {
                let data = (0, _tagged_template_literal.Z)([
                    "\n  position: relative;\n\n  &.active .indicator {\n    width: 100%;\n    height: 1px;\n    bottom: -17px;\n    margin: 0;\n    z-index: 1;\n    position: absolute;\n    background: ",
                    ";\n    box-shadow: 0px 0px 8px 0.5px ",
                    ";\n  }\n\n  & > * + * {\n    margin-left: 8px;\n  }\n\n  &:hover:not(.active) {\n    * {\n      fill: ",
                    " !important;\n      color: ",
                    ";\n    }\n  }\n",
                ]);
                return (
                    (_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            let DEFAULT_OPTIONS = { divider: !1, background: "grey900", headPadding: "0px 0px 0px 0px", rootPadding: "24px 24px 0px 24px", iconNonRetinaScaleFactor: 1.2 },
                DEFAULT_TABBED_OPTIONS = Object.assign({ isUnderlined: !0 }, DEFAULT_OPTIONS),
                PageSection = (props) => {
                    let { icon, title, options = {}, subtitle, controls, children, component = "div", TitleSuffix, ...moreProps } = props,
                        theme = (0, theme_0.Fg)(),
                        definiteOptions = { ...DEFAULT_OPTIONS, ...options };
                    return react.createElement(component, {
                        ...moreProps,
                        style: { width: "100%", height: "100%", display: "flex", padding: definiteOptions.rootPadding, position: "relative", background: theme.color[definiteOptions.background], flexDirection: "column", ...props.style },
                        children: (0, jsx_runtime.jsxs)(react.Fragment, {
                            children: [
                                icon || title
                                    ? (0, jsx_runtime.jsxs)("div", {
                                          style: {
                                              display: "flex",
                                              padding: definiteOptions.headPadding,
                                              borderBottom: definiteOptions.divider ? "1px solid ".concat(theme.color.grey600) : void 0,
                                              marginBottom: "16px",
                                              justifyContent: "space-between",
                                          },
                                          className: "section-header",
                                          children: [
                                              (0, jsx_runtime.jsxs)(components.Kq, {
                                                  align: "center",
                                                  spacing: "8px",
                                                  direction: "row",
                                                  children: [
                                                      icon ? (0, jsx_runtime.jsx)(components.JO, { name: icon, color: "grey300", nonRetinaScaleFactor: definiteOptions.iconNonRetinaScaleFactor }) : null,
                                                      title ? (0, jsx_runtime.jsx)(components.xv, { as: "h2", color: "grey100", weight: 700, variant: "labelLarge", transform: "uppercase", children: title }) : null,
                                                      TitleSuffix,
                                                  ],
                                              }),
                                              void 0 !== controls ? controls : null,
                                          ],
                                      })
                                    : null,
                                subtitle ? (0, jsx_runtime.jsx)(components.xv, { color: "grey300", variant: "body", children: subtitle }) : null,
                                children,
                            ],
                        }),
                    });
                },
                TabbedPageSection = (props) => {
                    let { tabs, options = {}, subtitle, controls, children, component = "div", activeTab, onActiveTabChange, ...moreProps } = props,
                        theme = (0, theme_0.Fg)(),
                        definiteOptions = { ...DEFAULT_TABBED_OPTIONS, ...options };
                    return react.createElement(component, {
                        ...moreProps,
                        style: { width: "100%", height: "100%", display: "flex", padding: definiteOptions.rootPadding, position: "relative", background: theme.color[definiteOptions.background], flexDirection: "column", ...props.style },
                        children: (0, jsx_runtime.jsxs)(react.Fragment, {
                            children: [
                                (0, jsx_runtime.jsxs)("div", {
                                    style: {
                                        display: "flex",
                                        padding: definiteOptions.headPadding,
                                        borderBottom: definiteOptions.divider ? "1px solid ".concat(theme.color.grey600) : void 0,
                                        marginBottom: definiteOptions.isUnderlined ? "16px" : "0px",
                                        justifyContent: "space-between",
                                    },
                                    className: "section-header",
                                    children: [
                                        (0, jsx_runtime.jsx)(components.Kq, {
                                            as: "nav",
                                            role: "tablist",
                                            align: "center",
                                            spacing: "24px",
                                            direction: "row",
                                            children: tabs.map((param) => {
                                                let { id, icon, title } = param;
                                                return (0, jsx_runtime.jsx)(
                                                    TabButton,
                                                    {
                                                        title: title,
                                                        active: activeTab === id,
                                                        onClick: () => onActiveTabChange(id),
                                                        iconProps: { name: icon, nonRetinaScaleFactor: definiteOptions.iconNonRetinaScaleFactor },
                                                        indicator: definiteOptions.isUnderlined,
                                                    },
                                                    id
                                                );
                                            }),
                                        }),
                                        void 0 !== controls ? controls : null,
                                    ],
                                }),
                                subtitle ? (0, jsx_runtime.jsx)(components.xv, { color: "grey300", variant: "body", children: subtitle }) : null,
                                children,
                            ],
                        }),
                    });
                },
                TabButton = (props) => {
                    let { title, active, iconProps, indicator = !0, ...restProps } = props;
                    return (0, jsx_runtime.jsxs)(TabButtonRoot, {
                        id: "tab-".concat(title.split(" ").join("-")),
                        role: "tab",
                        className: props.active ? "active" : "",
                        ...restProps,
                        children: [
                            (0, jsx_runtime.jsxs)("div", {
                                style: { display: "flex", alignItems: "center" },
                                children: [
                                    (0, jsx_runtime.jsx)(components.JO, { ...iconProps, color: active ? "yellow300" : "grey300" }),
                                    (0, jsx_runtime.jsx)(components.xv, { as: "h2", pl: "8px", color: active ? "yellow300" : "grey300", weight: 700, shadow: active, variant: "labelLarge", transform: "uppercase", children: title }),
                                ],
                            }),
                            indicator && (0, jsx_runtime.jsx)("div", { className: "indicator" }),
                        ],
                    });
                },
                TabButtonRoot = styled_components_browser_esm.ZP.button(
                    _templateObject(),
                    (param) => {
                        let { theme } = param;
                        return theme.color.yellow300;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.yellow300;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.white;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.white;
                    }
                );
        },
        91098: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                Q1: function () {
                    return hrefFor;
                },
                ch: function () {
                    return hrefTitleFor;
                },
                kR: function () {
                    return displayNameFor;
                },
            });
            var types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(94311);
            function hrefFor(marketplace, collection, nft) {
                let hrefParts = {
                        [types__WEBPACK_IMPORTED_MODULE_0__.xq.BLUR]: { base: "", nftPath: "", collectionPath: "" },
                        [types__WEBPACK_IMPORTED_MODULE_0__.xq.X2Y2]: { base: "https://x2y2.io", nftPath: "/eth/:collectionAddress/:nftId", collectionPath: "/collection/:collectionSlug" },
                        [types__WEBPACK_IMPORTED_MODULE_0__.xq.OPENSEA]: { base: "https://opensea.io", nftPath: "/assets/ethereum/:collectionAddress/:nftId", collectionPath: "/collection/:collectionSlug" },
                        [types__WEBPACK_IMPORTED_MODULE_0__.d3.ETHERSCAN]: { base: "https://etherscan.io", nftPath: "/nft/:collectionAddress/:nftId", collectionPath: "/address/:collectionAddress" },
                        [types__WEBPACK_IMPORTED_MODULE_0__.xq.LOOKSRARE]: { base: "https://looksrare.org", nftPath: "/collections/:collectionAddress/:nftId", collectionPath: "/collections/:collectionAddress" },
                        [types__WEBPACK_IMPORTED_MODULE_0__.tY.SUDOSWAP]: { base: "https://sudoswap.xyz", nftPath: "/#/item/:collectionAddress/:nftId", collectionPath: "/#/browse/buy/:collectionAddress" },
                    },
                    urlBase = hrefParts[marketplace].base,
                    urlPath = hrefParts[marketplace][nft ? "nftPath" : "collectionPath"];
                return ""
                    .concat(urlBase)
                    .concat(urlPath)
                    .replace(":collectionAddress", collection.contractAddress)
                    .replace(":collectionSlug", collection.slug || "")
                    .replace(":nftId", (null == nft ? void 0 : nft.id) || "");
            }
            function displayNameFor(marketplace) {
                let formattedMarketplaceNames = {
                    [types__WEBPACK_IMPORTED_MODULE_0__.xq.BLUR]: "Blur",
                    [types__WEBPACK_IMPORTED_MODULE_0__.xq.X2Y2]: "x2y2",
                    [types__WEBPACK_IMPORTED_MODULE_0__.xq.OPENSEA]: "OpenSea",
                    [types__WEBPACK_IMPORTED_MODULE_0__.d3.ETHERSCAN]: "Etherscan",
                    [types__WEBPACK_IMPORTED_MODULE_0__.xq.LOOKSRARE]: "LooksRare",
                    [types__WEBPACK_IMPORTED_MODULE_0__.tY.SUDOSWAP]: "Sudoswap",
                };
                return formattedMarketplaceNames[marketplace];
            }
            function hrefTitleFor(marketplace, collection, nft) {
                return nft ? "View ".concat(nft.name || "#".concat(nft.id), " on ").concat(displayNameFor(marketplace)) : "View ".concat(collection.name, " on ").concat(displayNameFor(marketplace));
            }
        },
        97741: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                _: function () {
                    return Context;
                },
                z: function () {
                    return Provider;
                },
            });
            var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(85893),
                react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);
            let Context = react__WEBPACK_IMPORTED_MODULE_1__.createContext({ ethUsd: null }),
                Provider = (props) => {
                    let [ethUsd, setEthUsd] = react__WEBPACK_IMPORTED_MODULE_1__.useState(null);
                    return (
                        react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {
                            let fetchEthUsd = async () => {
                                try {
                                    let response = await fetch("https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd"),
                                        responseJson = await response.json();
                                    setEthUsd(responseJson.ethereum.usd);
                                } catch (e) {}
                            };
                            fetchEthUsd();
                            let intervalRef = setInterval(fetchEthUsd, 15e3);
                            return () => {
                                clearInterval(intervalRef);
                            };
                        }, []),
                        (0, react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Context.Provider, { value: { ethUsd }, children: props.children })
                    );
                };
        },
        94135: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                M: function () {
                    return SuspiciousBadge;
                },
            });
            var _tagged_template_literal = __webpack_require__(7297),
                jsx_runtime = __webpack_require__(85893),
                react = __webpack_require__(67294),
                theme_0 = __webpack_require__(87074),
                styled_components_browser_esm = __webpack_require__(87379),
                components = __webpack_require__(69976);
            function _templateObject() {
                let data = (0, _tagged_template_literal.Z)(["\n  width: 8px;\n  height: 8px;\n\n  svg {\n    display: none;\n  }\n"]);
                return (
                    (_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            function _templateObject1() {
                let data = (0, _tagged_template_literal.Z)([
                    "\n  width: 18px;\n  height: 18px;\n  border: 1.5px solid ",
                    ";\n\n  svg {\n    width: 9px;\n    height: 9px;\n  }\n\n  @media (-webkit-min-device-pixel-ratio: 2) {\n    width: 16px;\n    height: 16px;\n    border: 1px solid ",
                    ";\n  }\n",
                ]);
                return (
                    (_templateObject1 = function () {
                        return data;
                    }),
                    data
                );
            }
            function _templateObject2() {
                let data = (0, _tagged_template_literal.Z)([
                    "\n  width: 22px;\n  height: 22px;\n  border: 2px solid ",
                    ";\n\n  svg {\n    width: 9px;\n    height: 9px;\n  }\n\n  @media (-webkit-min-device-pixel-ratio: 2) {\n    width: 18px;\n    height: 18px;\n    border: 1.5px solid ",
                    ";\n  }\n",
                ]);
                return (
                    (_templateObject2 = function () {
                        return data;
                    }),
                    data
                );
            }
            function _templateObject3() {
                let data = (0, _tagged_template_literal.Z)(["\n  background: ", ";\n  box-sizing: content-box;\n  border-radius: 50%;\n\n  ", "\n"]);
                return (
                    (_templateObject3 = function () {
                        return data;
                    }),
                    data
                );
            }
            let SuspiciousBadge = (param) => {
                    let { size, ...props } = param,
                        theme = (0, theme_0.Fg)(),
                        tooltipAnchorRef = react.useRef(null);
                    return (0, jsx_runtime.jsxs)(react.Fragment, {
                        children: [
                            (0, jsx_runtime.jsx)(StyledIcon, { ...props, ref: tooltipAnchorRef, name: "flag", color: "light" === theme.name ? "black" : "white", badgeSize: size }),
                            (0, jsx_runtime.jsx)(components.rD, { anchorEl: tooltipAnchorRef, children: (0, jsx_runtime.jsx)(components.xv, { variant: "body", children: "Marked suspicious on OpenSea" }) }),
                        ],
                    });
                },
                smallSizeStyles = (0, styled_components_browser_esm.iv)(_templateObject()),
                regularSizeStyles = (0, styled_components_browser_esm.iv)(
                    _templateObject1(),
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey300;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey300;
                    }
                ),
                largeSizeStyles = (0, styled_components_browser_esm.iv)(
                    _templateObject2(),
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey300;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey300;
                    }
                ),
                StyledIcon = (0, styled_components_browser_esm.ZP)(components.JO)(
                    _templateObject3(),
                    (param) => {
                        let { theme } = param;
                        return theme.color.orange400;
                    },
                    (param) => {
                        let { badgeSize } = param;
                        return "small" === badgeSize ? smallSizeStyles : "regular" === badgeSize ? regularSizeStyles : largeSizeStyles;
                    }
                );
        },
        70959: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                _: function () {
                    return Context;
                },
                z: function () {
                    return Provider;
                },
            });
            var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(85893),
                notifications__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(10108),
                react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(67294),
                api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(26313),
                hooks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(94208),
                webthree__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(58870);
            let Context = react__WEBPACK_IMPORTED_MODULE_2__.createContext({ canUse: () => !1, rewards: null, favoriteCollections: {}, setFavoriteCollection() {} }),
                Provider = (props) => {
                    let { address, loggedIn } = react__WEBPACK_IMPORTED_MODULE_2__.useContext(webthree__WEBPACK_IMPORTED_MODULE_5__._y),
                        { dispatchNotifications } = react__WEBPACK_IMPORTED_MODULE_2__.useContext(notifications__WEBPACK_IMPORTED_MODULE_1__._y),
                        rewardsScoreLocalStorage = (0, hooks__WEBPACK_IMPORTED_MODULE_4__._)("blur.user.rewards.score"),
                        favouriteCollectionsLocalStorage = (0, hooks__WEBPACK_IMPORTED_MODULE_4__._)("blur.user.favoriteCollections"),
                        cachedAirdrop2Introduced = (0, hooks__WEBPACK_IMPORTED_MODULE_4__._)("blur.user.rewards.airdrop2.introduced"),
                        cachedAirdrop2TweetForBox = (0, hooks__WEBPACK_IMPORTED_MODULE_4__._)("blur.user.rewards.airdrop2.tweetForBox"),
                        [airdrop2Introduced, setAirdrop2Introduced] = react__WEBPACK_IMPORTED_MODULE_2__.useState(cachedAirdrop2Introduced.get() || {}),
                        [airdrop2TweetForBox, setAirdrop2TweetForBox] = react__WEBPACK_IMPORTED_MODULE_2__.useState(cachedAirdrop2TweetForBox.get() || {});
                    cachedAirdrop2Introduced.set(airdrop2Introduced), cachedAirdrop2TweetForBox.set(airdrop2TweetForBox);
                    let [rewards, setRewards] = react__WEBPACK_IMPORTED_MODULE_2__.useState(null),
                        [allowedFeatures, setAllowedFeatures] = react__WEBPACK_IMPORTED_MODULE_2__.useState([]),
                        [favoriteCollections, setFavoriteCollections] = react__WEBPACK_IMPORTED_MODULE_2__.useState(favouriteCollectionsLocalStorage.get() || {});
                    favouriteCollectionsLocalStorage.set(favoriteCollections),
                        react__WEBPACK_IMPORTED_MODULE_2__.useEffect(() => {
                            rewards && address && rewards.score > 0.01 && rewardsScoreLocalStorage.set({ ...(rewardsScoreLocalStorage.get() || {}), [null == address ? void 0 : address.toLowerCase()]: rewards.score });
                        }, [rewards]),
                        react__WEBPACK_IMPORTED_MODULE_2__.useEffect(() => {
                            let fetchRewards = async () => {
                                    let rewards = await api__WEBPACK_IMPORTED_MODULE_3__.hi.v1.user.rewards.wallet.get();
                                    if (null !== rewards) {
                                        var ref;
                                        setRewards({
                                            ...rewards,
                                            airdrop1: {
                                                ...rewards.airdrop1,
                                                claimedBoxes: null === (ref = rewards.airdrop1) || void 0 === ref ? void 0 : ref.claimedBoxes.sort((a, b) => (a.createdAt < b.createdAt ? -1 : a.createdAt > b.createdAt ? 1 : 0)),
                                            },
                                        });
                                    }
                                },
                                fetchAllowedFeatures = async () => {
                                    setAllowedFeatures(await api__WEBPACK_IMPORTED_MODULE_3__.hi.v1.user.featureFlags.get());
                                },
                                fetchFavoriteCollections = async () => {
                                    setFavoriteCollections(await api__WEBPACK_IMPORTED_MODULE_3__.hi.v1.user.collections.favorites.addresses.get());
                                };
                            loggedIn && (fetchRewards(), fetchAllowedFeatures(), fetchFavoriteCollections());
                        }, [address, loggedIn]);
                    let canUse = (feature) => allowedFeatures.includes(feature),
                        claimReward = async function () {
                            let count = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1;
                            if (!rewards) throw Error();
                            let response = await api__WEBPACK_IMPORTED_MODULE_3__.hi.v1.user.rewards.claim.post(count),
                                applyResponse = () => {
                                    setRewards({
                                        ...rewards,
                                        airdrop2: {
                                            ...rewards.airdrop2,
                                            claimedBoxes: [...rewards.airdrop2.claimedBoxes, ...response].sort((a, b) => (a.createdAt < b.createdAt ? -1 : a.createdAt > b.createdAt ? 1 : 0)),
                                            unclaimedBoxes: rewards.airdrop2.unclaimedBoxes - response.length,
                                        },
                                    });
                                };
                            return [response[0], applyResponse];
                        },
                        claimAllRewards = async () => {
                            if (!rewards) throw Error();
                            let [, applyResponse] = await claimReward(rewards.airdrop2.unclaimedBoxes);
                            return applyResponse(), !0;
                        },
                        setFavoriteCollection = (contractAddress, value) => {
                            setFavoriteCollections({ ...favoriteCollections, [contractAddress]: value });
                        },
                        setAirdrop2CanReveal = async () => {
                            if (!address || !rewards || rewards.airdrop2.canReveal || !(rewards.airdrop2.unclaimedBoxes > 0)) return !1;
                            {
                                let response = await api__WEBPACK_IMPORTED_MODULE_3__.hi.v1.user.rewards.bid.post();
                                return (
                                    response &&
                                        setTimeout(() => {
                                            setRewards({ ...rewards, airdrop2: { ...rewards.airdrop2, canReveal: !0 } }),
                                                dispatchNotifications({
                                                    type: notifications__WEBPACK_IMPORTED_MODULE_1__.Us.ADD_ONE,
                                                    payload: { title: "Care Packages secured!", linkHref: "/airdrop", subtitle: "Reveal your $$Care Packages$$.", linkType: "template" },
                                                });
                                        }, 450),
                                    response
                                );
                            }
                        };
                    return (0, react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Context.Provider, {
                        value: {
                            canUse,
                            rewards: (() => {
                                var _lowercaseAddress;
                                let lowercaseAddress = null == address ? void 0 : address.toLowerCase();
                                if (!rewards || !lowercaseAddress) return null;
                                let storedScore = null !== (_lowercaseAddress = (rewardsScoreLocalStorage.get() || {})[lowercaseAddress]) && void 0 !== _lowercaseAddress ? _lowercaseAddress : 0,
                                    enrichedScore = rewards.score;
                                return (
                                    0 === rewards.listings.total && (enrichedScore = Math.max(storedScore, enrichedScore)),
                                    {
                                        ...rewards,
                                        score: enrichedScore,
                                        airdrop2: {
                                            ...rewards.airdrop2,
                                            claimOne: claimReward,
                                            claimAll: claimAllRewards,
                                            introduced: Boolean(airdrop2Introduced[lowercaseAddress]),
                                            tweetForBox: Boolean(airdrop2TweetForBox[lowercaseAddress]),
                                            setCanReveal: setAirdrop2CanReveal,
                                            setIntroduced(value) {
                                                setAirdrop2Introduced({ ...airdrop2Introduced, [lowercaseAddress]: value });
                                            },
                                            setTweetForBox(value) {
                                                let payload = { ...airdrop2TweetForBox, [lowercaseAddress]: value };
                                                value ? setAirdrop2TweetForBox(payload) : cachedAirdrop2TweetForBox.set(payload);
                                            },
                                        },
                                    }
                                );
                            })(),
                            favoriteCollections,
                            setFavoriteCollection,
                        },
                        children: props.children,
                    });
                };
        },
        30401: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                _: function () {
                    return _context__WEBPACK_IMPORTED_MODULE_0__._;
                },
                z: function () {
                    return _context__WEBPACK_IMPORTED_MODULE_0__.z;
                },
            });
            var _context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(70959);
        },
        85093: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                $M: function () {
                    return ConfirmInWallet;
                },
                II: function () {
                    return Input;
                },
                Mm: function () {
                    return SubmitButton;
                },
                Mn: function () {
                    return WalletIntroRoot;
                },
                NE: function () {
                    return WalletBalance;
                },
                TI: function () {
                    return WalletButton;
                },
                mF: function () {
                    return WIDTH;
                },
                qX: function () {
                    return Notice;
                },
            });
            var _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7297),
                react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(85893),
                react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(67294),
                styled_components__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(87379),
                structs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(71247),
                theme__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(87074),
                features_DataTable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(30170),
                components__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(69976);
            function _templateObject() {
                let data = (0, _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__.Z)([
                    "\n  border: 1px solid ",
                    ";\n  display: flex;\n  padding: 0px 8px;\n  align-items: center;\n  border-radius: 4px;\n\n  & > *:nth-child(2) {\n    display: flex;\n    align-items: center;\n    margin-left: 8px;\n    padding-top: 8px;\n    border-left: 1px solid ",
                    ";\n    padding-left: 8px;\n    padding-right: 4px;\n    padding-bottom: 8px;\n  }\n\n  &:hover {\n    border: 1px solid ",
                    ";\n    * {\n      fill: ",
                    " !important;\n      color: ",
                    " !important;\n      border-color: ",
                    ";\n    }\n  }\n\n  &.active {\n    border: 1px solid ",
                    ";\n    * {\n      fill: ",
                    " !important;\n      color: ",
                    " !important;\n      border-color: ",
                    ";\n    }\n  }\n",
                ]);
                return (
                    (_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            function _templateObject1() {
                let data = (0, _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__.Z)([
                    "\n  flex: 1;\n  height: 72px;\n  display: flex;\n  background: ",
                    ";\n  border-left: 4px solid ",
                    ";\n  padding-left: 16px;\n  flex-direction: column;\n  justify-content: center;\n\n  &.active {\n    border-color: ",
                    ";\n  }\n",
                ]);
                return (
                    (_templateObject1 = function () {
                        return data;
                    }),
                    data
                );
            }
            function _templateObject2() {
                let data = (0, _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__.Z)([
                    "\n  width: 100%;\n  display: flex;\n  padding-top: 24px;\n  align-items: center;\n  padding-bottom: 24px;\n  justify-content: center;\n\n  svg {\n    width: 24px;\n    height: 40px;\n  }\n",
                ]);
                return (
                    (_templateObject2 = function () {
                        return data;
                    }),
                    data
                );
            }
            function _templateObject3() {
                let data = (0, _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__.Z)([
                    "\n  color: ",
                    ';\n  border: none;\n  font-size: 64px;\n  background: none;\n  max-width: 90%;\n  font-family: "Proto Mono";\n\n  &::placeholder {\n    color: ',
                    ";\n  }\n",
                ]);
                return (
                    (_templateObject3 = function () {
                        return data;
                    }),
                    data
                );
            }
            function _templateObject4() {
                let data = (0, _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__.Z)([
                    "\n  width: max-content;\n  margin: 0 auto;\n  display: flex;\n  min-width: 200px;\n  align-items: center;\n  justify-content: space-between;\n\n  & > * + * {\n    margin-left: 16px;\n  }\n  &:disabled {\n    opacity: 0.5;\n  }\n\n  .price-cell {\n    display: flex;\n    opacity: 0.5;\n    align-items: center;\n    pointer-events: none;\n  \n    * {\n      font-weight: 700;\n    }\n  \n    path {\n      fill: ",
                    " !important;\n    }\n  }\n",
                ]);
                return (
                    (_templateObject4 = function () {
                        return data;
                    }),
                    data
                );
            }
            function _templateObject5() {
                let data = (0, _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__.Z)([
                    "\n  width: ",
                    "px;\n  margin: 12px;\n  overflow: hidden;\n  position: relative;\n  background: ",
                    ";\n  border-radius: 4px;\n  padding-bottom: 24px;\n\n  .icon {\n    width: 32px;\n    height: 32px;\n\n    svg {\n      width: 100%;\n      height: 100%;\n    }\n  }\n\n  .carousel {\n    width: max-content;\n    overflow-x: auto;\n    transition: transform 250ms ease-in-out;\n  }\n  .carousel-item {\n    width: ",
                    "px;\n    height: max-content;\n    padding: 24px;\n    padding-bottom: 0px;\n  }\n  .text-content {\n    width: 100%;\n    line-height: 150%;\n  }\n",
                ]);
                return (
                    (_templateObject5 = function () {
                        return data;
                    }),
                    data
                );
            }
            let WIDTH = 656,
                Notice = (props) => {
                    let theme = (0, theme__WEBPACK_IMPORTED_MODULE_3__.Fg)();
                    return (0, react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(components__WEBPACK_IMPORTED_MODULE_5__.Kq, {
                        pt: "24px",
                        pb: "24px",
                        pl: "24px",
                        pr: "24px",
                        mb: "24px",
                        style: { background: theme.color.grey700 },
                        spacing: "16px",
                        direction: "column",
                        children: (0, react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(components__WEBPACK_IMPORTED_MODULE_5__.xv, {
                            style: { flex: 1, display: "flex", alignItems: "center" },
                            variant: "body",
                            children: [
                                (0, react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(components__WEBPACK_IMPORTED_MODULE_5__.kC, {
                                    mr: "8px",
                                    width: "32px",
                                    style: { border: "1px solid ".concat(theme.color.purple300), borderRadius: "50%" },
                                    height: "32px",
                                    align: "center",
                                    justify: "center",
                                    children: (0, react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(components__WEBPACK_IMPORTED_MODULE_5__.JO, { name: "ethereum", color: "purple300" }),
                                }),
                                (0, react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("span", { style: { flex: 1 }, children: props.children }),
                            ],
                        }),
                    });
                },
                WalletButton = react__WEBPACK_IMPORTED_MODULE_2__.forwardRef((props, forwardedRef) =>
                    (0, react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(WalletButtonRoot, {
                        ref: forwardedRef,
                        className: props.active ? "active" : "",
                        children: [
                            (0, react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(components__WEBPACK_IMPORTED_MODULE_5__.JO, { name: "wallet", color: "grey300" }),
                            (0, react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(components__WEBPACK_IMPORTED_MODULE_5__.xv, { color: "grey300", variant: "body", children: props.value }),
                            (0, react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(components__WEBPACK_IMPORTED_MODULE_5__.JO, { name: "ethereum", color: "grey300" }),
                        ],
                    })
                ),
                WalletButtonRoot = styled_components__WEBPACK_IMPORTED_MODULE_6__.ZP.button(
                    _templateObject(),
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey600;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey600;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.white;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.white;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.white;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.white;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.yellow300;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.yellow300;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.yellow300;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.yellow300;
                    }
                ),
                WalletBalance = (props) =>
                    (0, react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(WalletBalanceRoot, {
                        className: props.active ? "active" : "",
                        children: [
                            (0, react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(components__WEBPACK_IMPORTED_MODULE_5__.kC, {
                                mb: "4px",
                                align: "center",
                                children: (0, react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(features_DataTable__WEBPACK_IMPORTED_MODULE_4__.Ic, {
                                    cell: { value: new structs__WEBPACK_IMPORTED_MODULE_7__.t(props.value, "ETH") },
                                    textProps: { variant: "labelLarge" },
                                }),
                            }),
                            (0, react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(components__WEBPACK_IMPORTED_MODULE_5__.xv, { color: "grey300", variant: "body", transform: "uppercase", children: props.label }),
                        ],
                    }),
                WalletBalanceRoot = styled_components__WEBPACK_IMPORTED_MODULE_6__.ZP.div(
                    _templateObject1(),
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey700;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey300;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.yellow300;
                    }
                ),
                Input = (props) =>
                    (0, react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(HugeInputRoot, {
                        children: [
                            (0, react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(HugeInput, { ...props, size: Math.max(1, String(props.value).length), placeholder: "0" }),
                            (0, react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(components__WEBPACK_IMPORTED_MODULE_5__.JO, {
                                name: "ethereum",
                                color: "grey500",
                                style: { width: "48px", height: "48px", transform: "translateX(-16px)" },
                            }),
                        ],
                    }),
                HugeInputRoot = styled_components__WEBPACK_IMPORTED_MODULE_6__.ZP.div(_templateObject2()),
                HugeInput = styled_components__WEBPACK_IMPORTED_MODULE_6__.ZP.input(
                    _templateObject3(),
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey100;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey500;
                    }
                ),
                SubmitButton = (0, styled_components__WEBPACK_IMPORTED_MODULE_6__.ZP)(components__WEBPACK_IMPORTED_MODULE_5__.zx)(_templateObject4(), (param) => {
                    let { theme } = param;
                    return theme.color.black;
                }),
                WalletIntroRoot = styled_components__WEBPACK_IMPORTED_MODULE_6__.ZP.div(
                    _templateObject5(),
                    WIDTH - 8 - 8,
                    (param) => {
                        let { theme } = param;
                        return theme.color.grey700;
                    },
                    WIDTH - 8 - 8
                ),
                ConfirmInWallet = (props) => {
                    let theme = (0, theme__WEBPACK_IMPORTED_MODULE_3__.Fg)();
                    return (0, react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(components__WEBPACK_IMPORTED_MODULE_5__.Kq, {
                        pl: "8px",
                        pr: "8px",
                        style: { cursor: "progress", margin: "0 auto", border: "1px solid ".concat(theme.color.grey600), minWidth: "200px", borderRadius: "4px" },
                        width: "max-content",
                        align: "center",
                        height: "36px",
                        spacing: "32px",
                        direction: "row",
                        children: [
                            (0, react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(components__WEBPACK_IMPORTED_MODULE_5__.xv, { weight: 700, variant: "body", transform: "uppercase", children: props.children }),
                            (0, react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(components__WEBPACK_IMPORTED_MODULE_5__.aN, {}),
                        ],
                    });
                };
        },
        74766: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                _y: function () {
                    return Context;
                },
                zt: function () {
                    return Provider;
                },
                w5: function () {
                    return Wallet;
                },
            });
            var Step,
                TabId,
                Step1,
                TabId1,
                jsx_runtime = __webpack_require__(85893),
                notifications = __webpack_require__(10108),
                react = __webpack_require__(67294),
                price = __webpack_require__(71247),
                utils = __webpack_require__(48048),
                lib_esm = __webpack_require__(16441),
                bignumber = __webpack_require__(2593),
                properties_lib_esm = __webpack_require__(6881),
                logger_lib_esm = __webpack_require__(1581);
            let version = "abi/5.6.0",
                logger = new logger_lib_esm.Yd(version);
            class Coder {
                constructor(name, type, localName, dynamic) {
                    (this.name = name), (this.type = type), (this.localName = localName), (this.dynamic = dynamic);
                }
                _throwError(message, value) {
                    logger.throwArgumentError(message, this.localName, value);
                }
            }
            class Writer {
                constructor(wordSize) {
                    (0, properties_lib_esm.zG)(this, "wordSize", wordSize || 32), (this._data = []), (this._dataLength = 0), (this._padding = new Uint8Array(wordSize));
                }
                get data() {
                    return (0, lib_esm.xs)(this._data);
                }
                get length() {
                    return this._dataLength;
                }
                _writeData(data) {
                    return this._data.push(data), (this._dataLength += data.length), data.length;
                }
                appendWriter(writer) {
                    return this._writeData((0, lib_esm.zo)(writer._data));
                }
                writeBytes(value) {
                    let bytes = (0, lib_esm.lE)(value),
                        paddingOffset = bytes.length % this.wordSize;
                    return paddingOffset && (bytes = (0, lib_esm.zo)([bytes, this._padding.slice(paddingOffset)])), this._writeData(bytes);
                }
                _getValue(value) {
                    let bytes = (0, lib_esm.lE)(bignumber.O$.from(value));
                    return (
                        bytes.length > this.wordSize && logger.throwError("value out-of-bounds", logger_lib_esm.Yd.errors.BUFFER_OVERRUN, { length: this.wordSize, offset: bytes.length }),
                        bytes.length % this.wordSize && (bytes = (0, lib_esm.zo)([this._padding.slice(bytes.length % this.wordSize), bytes])),
                        bytes
                    );
                }
                writeValue(value) {
                    return this._writeData(this._getValue(value));
                }
                writeUpdatableValue() {
                    let offset = this._data.length;
                    return (
                        this._data.push(this._padding),
                        (this._dataLength += this.wordSize),
                        (value) => {
                            this._data[offset] = this._getValue(value);
                        }
                    );
                }
            }
            class Reader {
                constructor(data, wordSize, coerceFunc, allowLoose) {
                    (0, properties_lib_esm.zG)(this, "_data", (0, lib_esm.lE)(data)),
                        (0, properties_lib_esm.zG)(this, "wordSize", wordSize || 32),
                        (0, properties_lib_esm.zG)(this, "_coerceFunc", coerceFunc),
                        (0, properties_lib_esm.zG)(this, "allowLoose", allowLoose),
                        (this._offset = 0);
                }
                get data() {
                    return (0, lib_esm.Dv)(this._data);
                }
                get consumed() {
                    return this._offset;
                }
                static coerce(name, value) {
                    let match = name.match("^u?int([0-9]+)$");
                    return match && 48 >= parseInt(match[1]) && (value = value.toNumber()), value;
                }
                coerce(name, value) {
                    return this._coerceFunc ? this._coerceFunc(name, value) : Reader.coerce(name, value);
                }
                _peekBytes(offset, length, loose) {
                    let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;
                    return (
                        this._offset + alignedLength > this._data.length &&
                            (this.allowLoose && loose && this._offset + length <= this._data.length
                                ? (alignedLength = length)
                                : logger.throwError("data out-of-bounds", logger_lib_esm.Yd.errors.BUFFER_OVERRUN, { length: this._data.length, offset: this._offset + alignedLength })),
                        this._data.slice(this._offset, this._offset + alignedLength)
                    );
                }
                subReader(offset) {
                    return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);
                }
                readBytes(length, loose) {
                    let bytes = this._peekBytes(0, length, !!loose);
                    return (this._offset += bytes.length), bytes.slice(0, length);
                }
                readValue() {
                    return bignumber.O$.from(this.readBytes(this.wordSize));
                }
            }
            var address_lib_esm = __webpack_require__(19485),
                id = __webpack_require__(32046),
                keccak256_lib_esm = __webpack_require__(38197);
            class AddressCoder extends Coder {
                constructor(localName) {
                    super("address", "address", localName, !1);
                }
                defaultValue() {
                    return "0x0000000000000000000000000000000000000000";
                }
                encode(writer, value) {
                    try {
                        value = (0, address_lib_esm.Kn)(value);
                    } catch (error) {
                        this._throwError(error.message, value);
                    }
                    return writer.writeValue(value);
                }
                decode(reader) {
                    return (0, address_lib_esm.Kn)((0, lib_esm.$m)(reader.readValue().toHexString(), 20));
                }
            }
            class AnonymousCoder extends Coder {
                constructor(coder) {
                    super(coder.name, coder.type, void 0, coder.dynamic), (this.coder = coder);
                }
                defaultValue() {
                    return this.coder.defaultValue();
                }
                encode(writer, value) {
                    return this.coder.encode(writer, value);
                }
                decode(reader) {
                    return this.coder.decode(reader);
                }
            }
            let array_logger = new logger_lib_esm.Yd(version);
            function pack(writer, coders, values) {
                let arrayValues = null;
                if (Array.isArray(values)) arrayValues = values;
                else if (values && "object" == typeof values) {
                    let unique = {};
                    arrayValues = coders.map((coder) => {
                        let name = coder.localName;
                        return (
                            name || array_logger.throwError("cannot encode object for signature with missing names", logger_lib_esm.Yd.errors.INVALID_ARGUMENT, { argument: "values", coder: coder, value: values }),
                            unique[name] && array_logger.throwError("cannot encode object for signature with duplicate names", logger_lib_esm.Yd.errors.INVALID_ARGUMENT, { argument: "values", coder: coder, value: values }),
                            (unique[name] = !0),
                            values[name]
                        );
                    });
                } else array_logger.throwArgumentError("invalid tuple value", "tuple", values);
                coders.length !== arrayValues.length && array_logger.throwArgumentError("types/value length mismatch", "tuple", values);
                let staticWriter = new Writer(writer.wordSize),
                    dynamicWriter = new Writer(writer.wordSize),
                    updateFuncs = [];
                return (
                    coders.forEach((coder, index) => {
                        let value = arrayValues[index];
                        if (coder.dynamic) {
                            let dynamicOffset = dynamicWriter.length;
                            coder.encode(dynamicWriter, value);
                            let updateFunc = staticWriter.writeUpdatableValue();
                            updateFuncs.push((baseOffset) => {
                                updateFunc(baseOffset + dynamicOffset);
                            });
                        } else coder.encode(staticWriter, value);
                    }),
                    updateFuncs.forEach((func) => {
                        func(staticWriter.length);
                    }),
                    writer.appendWriter(staticWriter) + writer.appendWriter(dynamicWriter)
                );
            }
            function unpack(reader, coders) {
                let values = [],
                    baseReader = reader.subReader(0);
                coders.forEach((coder) => {
                    let value = null;
                    if (coder.dynamic) {
                        let offset = reader.readValue(),
                            offsetReader = baseReader.subReader(offset.toNumber());
                        try {
                            value = coder.decode(offsetReader);
                        } catch (error) {
                            if (error.code === logger_lib_esm.Yd.errors.BUFFER_OVERRUN) throw error;
                            ((value = error).baseType = coder.name), (value.name = coder.localName), (value.type = coder.type);
                        }
                    } else
                        try {
                            value = coder.decode(reader);
                        } catch (error1) {
                            if (error1.code === logger_lib_esm.Yd.errors.BUFFER_OVERRUN) throw error1;
                            ((value = error1).baseType = coder.name), (value.name = coder.localName), (value.type = coder.type);
                        }
                    void 0 != value && values.push(value);
                });
                let uniqueNames = coders.reduce((accum, coder) => {
                    let name = coder.localName;
                    return name && (accum[name] || (accum[name] = 0), accum[name]++), accum;
                }, {});
                coders.forEach((coder, index) => {
                    let name = coder.localName;
                    if (!name || 1 !== uniqueNames[name] || ("length" === name && (name = "_length"), null != values[name])) return;
                    let value = values[index];
                    value instanceof Error
                        ? Object.defineProperty(values, name, {
                              enumerable: !0,
                              get() {
                                  throw value;
                              },
                          })
                        : (values[name] = value);
                });
                for (let i = 0; i < values.length; i++) {
                    let value = values[i];
                    value instanceof Error &&
                        Object.defineProperty(values, i, {
                            enumerable: !0,
                            get() {
                                throw value;
                            },
                        });
                }
                return Object.freeze(values);
            }
            class ArrayCoder extends Coder {
                constructor(coder, length, localName) {
                    let type = coder.type + "[" + (length >= 0 ? length : "") + "]",
                        dynamic = -1 === length || coder.dynamic;
                    super("array", type, localName, dynamic), (this.coder = coder), (this.length = length);
                }
                defaultValue() {
                    let defaultChild = this.coder.defaultValue(),
                        result = [];
                    for (let i = 0; i < this.length; i++) result.push(defaultChild);
                    return result;
                }
                encode(writer, value) {
                    Array.isArray(value) || this._throwError("expected array value", value);
                    let count = this.length;
                    -1 === count && ((count = value.length), writer.writeValue(value.length)), array_logger.checkArgumentCount(value.length, count, "coder array" + (this.localName ? " " + this.localName : ""));
                    let coders = [];
                    for (let i = 0; i < value.length; i++) coders.push(this.coder);
                    return pack(writer, coders, value);
                }
                decode(reader) {
                    let count = this.length;
                    -1 === count &&
                        32 * (count = reader.readValue().toNumber()) > reader._data.length &&
                        array_logger.throwError("insufficient data length", logger_lib_esm.Yd.errors.BUFFER_OVERRUN, { length: reader._data.length, count: count });
                    let coders = [];
                    for (let i = 0; i < count; i++) coders.push(new AnonymousCoder(this.coder));
                    return reader.coerce(this.name, unpack(reader, coders));
                }
            }
            class BooleanCoder extends Coder {
                constructor(localName) {
                    super("bool", "bool", localName, !1);
                }
                defaultValue() {
                    return !1;
                }
                encode(writer, value) {
                    return writer.writeValue(value ? 1 : 0);
                }
                decode(reader) {
                    return reader.coerce(this.type, !reader.readValue().isZero());
                }
            }
            class DynamicBytesCoder extends Coder {
                constructor(type, localName) {
                    super(type, type, localName, !0);
                }
                defaultValue() {
                    return "0x";
                }
                encode(writer, value) {
                    return (value = (0, lib_esm.lE)(value)), writer.writeValue(value.length) + writer.writeBytes(value);
                }
                decode(reader) {
                    return reader.readBytes(reader.readValue().toNumber(), !0);
                }
            }
            class BytesCoder extends DynamicBytesCoder {
                constructor(localName) {
                    super("bytes", localName);
                }
                decode(reader) {
                    return reader.coerce(this.name, (0, lib_esm.Dv)(super.decode(reader)));
                }
            }
            class FixedBytesCoder extends Coder {
                constructor(size, localName) {
                    let name = "bytes" + String(size);
                    super(name, name, localName, !1), (this.size = size);
                }
                defaultValue() {
                    return "0x0000000000000000000000000000000000000000000000000000000000000000".substring(0, 2 + 2 * this.size);
                }
                encode(writer, value) {
                    let data = (0, lib_esm.lE)(value);
                    return data.length !== this.size && this._throwError("incorrect data length", value), writer.writeBytes(data);
                }
                decode(reader) {
                    return reader.coerce(this.name, (0, lib_esm.Dv)(reader.readBytes(this.size)));
                }
            }
            class NullCoder extends Coder {
                constructor(localName) {
                    super("null", "", localName, !1);
                }
                defaultValue() {
                    return null;
                }
                encode(writer, value) {
                    return null != value && this._throwError("not null", value), writer.writeBytes([]);
                }
                decode(reader) {
                    return reader.readBytes(0), reader.coerce(this.name, null);
                }
            }
            var bignumbers = __webpack_require__(21046);
            class NumberCoder extends Coder {
                constructor(size, signed, localName) {
                    let name = (signed ? "int" : "uint") + 8 * size;
                    super(name, name, localName, !1), (this.size = size), (this.signed = signed);
                }
                defaultValue() {
                    return 0;
                }
                encode(writer, value) {
                    let v = bignumber.O$.from(value),
                        maxUintValue = bignumbers.Bz.mask(8 * writer.wordSize);
                    if (this.signed) {
                        let bounds = maxUintValue.mask(8 * this.size - 1);
                        (v.gt(bounds) || v.lt(bounds.add(bignumbers.fh).mul(bignumbers.tL))) && this._throwError("value out-of-bounds", value);
                    } else (v.lt(bignumbers._Y) || v.gt(maxUintValue.mask(8 * this.size))) && this._throwError("value out-of-bounds", value);
                    return (v = v.toTwos(8 * this.size).mask(8 * this.size)), this.signed && (v = v.fromTwos(8 * this.size).toTwos(8 * writer.wordSize)), writer.writeValue(v);
                }
                decode(reader) {
                    let value = reader.readValue().mask(8 * this.size);
                    return this.signed && (value = value.fromTwos(8 * this.size)), reader.coerce(this.name, value);
                }
            }
            var utf8 = __webpack_require__(29251);
            class StringCoder extends DynamicBytesCoder {
                constructor(localName) {
                    super("string", localName);
                }
                defaultValue() {
                    return "";
                }
                encode(writer, value) {
                    return super.encode(writer, (0, utf8.Y0)(value));
                }
                decode(reader) {
                    return (0, utf8.ZN)(super.decode(reader));
                }
            }
            class TupleCoder extends Coder {
                constructor(coders, localName) {
                    let dynamic = !1,
                        types = [];
                    coders.forEach((coder) => {
                        coder.dynamic && (dynamic = !0), types.push(coder.type);
                    });
                    let type = "tuple(" + types.join(",") + ")";
                    super("tuple", type, localName, dynamic), (this.coders = coders);
                }
                defaultValue() {
                    let values = [];
                    this.coders.forEach((coder) => {
                        values.push(coder.defaultValue());
                    });
                    let uniqueNames = this.coders.reduce((accum, coder) => {
                        let name = coder.localName;
                        return name && (accum[name] || (accum[name] = 0), accum[name]++), accum;
                    }, {});
                    return (
                        this.coders.forEach((coder, index) => {
                            let name = coder.localName;
                            name && 1 === uniqueNames[name] && ("length" === name && (name = "_length"), null == values[name] && (values[name] = values[index]));
                        }),
                        Object.freeze(values)
                    );
                }
                encode(writer, value) {
                    return pack(writer, this.coders, value);
                }
                decode(reader) {
                    return reader.coerce(this.name, unpack(reader, this.coders));
                }
            }
            let fragments_logger = new logger_lib_esm.Yd(version),
                _constructorGuard = {},
                ModifiersBytes = { calldata: !0, memory: !0, storage: !0 },
                ModifiersNest = { calldata: !0, memory: !0 };
            function checkModifier(type, name) {
                if ("bytes" === type || "string" === type) {
                    if (ModifiersBytes[name]) return !0;
                } else if ("address" === type) {
                    if ("payable" === name) return !0;
                } else if ((type.indexOf("[") >= 0 || "tuple" === type) && ModifiersNest[name]) return !0;
                return (ModifiersBytes[name] || "payable" === name) && fragments_logger.throwArgumentError("invalid modifier", "name", name), !1;
            }
            function populate(object, params) {
                for (let key in params) (0, properties_lib_esm.zG)(object, key, params[key]);
            }
            let FormatTypes = Object.freeze({ sighash: "sighash", minimal: "minimal", full: "full", json: "json" }),
                paramTypeArray = RegExp(/^(.*)\[([0-9]*)\]$/);
            class ParamType {
                constructor(constructorGuard, params) {
                    constructorGuard !== _constructorGuard && fragments_logger.throwError("use fromString", logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation: "new ParamType()" }), populate(this, params);
                    let match = this.type.match(paramTypeArray);
                    match
                        ? populate(this, { arrayLength: parseInt(match[2] || "-1"), arrayChildren: ParamType.fromObject({ type: match[1], components: this.components }), baseType: "array" })
                        : populate(this, { arrayLength: null, arrayChildren: null, baseType: null != this.components ? "tuple" : this.type }),
                        (this._isParamType = !0),
                        Object.freeze(this);
                }
                format(format) {
                    if ((format || (format = FormatTypes.sighash), FormatTypes[format] || fragments_logger.throwArgumentError("invalid format type", "format", format), format === FormatTypes.json)) {
                        let result = { type: "tuple" === this.baseType ? "tuple" : this.type, name: this.name || void 0 };
                        return "boolean" == typeof this.indexed && (result.indexed = this.indexed), this.components && (result.components = this.components.map((comp) => JSON.parse(comp.format(format)))), JSON.stringify(result);
                    }
                    let result1 = "";
                    return (
                        "array" === this.baseType
                            ? (result1 = this.arrayChildren.format(format) + "[" + (this.arrayLength < 0 ? "" : String(this.arrayLength)) + "]")
                            : "tuple" === this.baseType
                            ? (format !== FormatTypes.sighash && (result1 += this.type), (result1 += "(" + this.components.map((comp) => comp.format(format)).join(format === FormatTypes.full ? ", " : ",") + ")"))
                            : (result1 += this.type),
                        format !== FormatTypes.sighash && (!0 === this.indexed && (result1 += " indexed"), format === FormatTypes.full && this.name && (result1 += " " + this.name)),
                        result1
                    );
                }
                static from(value, allowIndexed) {
                    return "string" == typeof value ? ParamType.fromString(value, allowIndexed) : ParamType.fromObject(value);
                }
                static fromObject(value) {
                    return ParamType.isParamType(value)
                        ? value
                        : new ParamType(_constructorGuard, {
                              name: value.name || null,
                              type: verifyType(value.type),
                              indexed: null == value.indexed ? null : !!value.indexed,
                              components: value.components ? value.components.map(ParamType.fromObject) : null,
                          });
                }
                static fromString(value, allowIndexed) {
                    var node;
                    return (
                        (node = (function (param, allowIndexed) {
                            let originalParam = param;
                            function throwError(i) {
                                fragments_logger.throwArgumentError(`unexpected character at position ${i}`, "param", param);
                            }
                            function newNode(parent) {
                                let node = { type: "", name: "", parent: parent, state: { allowType: !0 } };
                                return allowIndexed && (node.indexed = !1), node;
                            }
                            param = param.replace(/\s/g, " ");
                            let parent = { type: "", name: "", state: { allowType: !0 } },
                                node = parent;
                            for (let i = 0; i < param.length; i++) {
                                let c = param[i];
                                switch (c) {
                                    case "(":
                                        node.state.allowType && "" === node.type ? (node.type = "tuple") : node.state.allowParams || throwError(i),
                                            (node.state.allowType = !1),
                                            (node.type = verifyType(node.type)),
                                            (node.components = [newNode(node)]),
                                            (node = node.components[0]);
                                        break;
                                    case ")":
                                        delete node.state,
                                            "indexed" === node.name && (allowIndexed || throwError(i), (node.indexed = !0), (node.name = "")),
                                            checkModifier(node.type, node.name) && (node.name = ""),
                                            (node.type = verifyType(node.type));
                                        let child = node;
                                        (node = node.parent) || throwError(i), delete child.parent, (node.state.allowParams = !1), (node.state.allowName = !0), (node.state.allowArray = !0);
                                        break;
                                    case ",":
                                        delete node.state,
                                            "indexed" === node.name && (allowIndexed || throwError(i), (node.indexed = !0), (node.name = "")),
                                            checkModifier(node.type, node.name) && (node.name = ""),
                                            (node.type = verifyType(node.type));
                                        let sibling = newNode(node.parent);
                                        node.parent.components.push(sibling), delete node.parent, (node = sibling);
                                        break;
                                    case " ":
                                        node.state.allowType && "" !== node.type && ((node.type = verifyType(node.type)), delete node.state.allowType, (node.state.allowName = !0), (node.state.allowParams = !0)),
                                            node.state.allowName &&
                                                "" !== node.name &&
                                                ("indexed" === node.name
                                                    ? (allowIndexed || throwError(i), node.indexed && throwError(i), (node.indexed = !0), (node.name = ""))
                                                    : checkModifier(node.type, node.name)
                                                    ? (node.name = "")
                                                    : (node.state.allowName = !1));
                                        break;
                                    case "[":
                                        node.state.allowArray || throwError(i), (node.type += c), (node.state.allowArray = !1), (node.state.allowName = !1), (node.state.readArray = !0);
                                        break;
                                    case "]":
                                        node.state.readArray || throwError(i), (node.type += c), (node.state.readArray = !1), (node.state.allowArray = !0), (node.state.allowName = !0);
                                        break;
                                    default:
                                        node.state.allowType
                                            ? ((node.type += c), (node.state.allowParams = !0), (node.state.allowArray = !0))
                                            : node.state.allowName
                                            ? ((node.name += c), delete node.state.allowArray)
                                            : node.state.readArray
                                            ? (node.type += c)
                                            : throwError(i);
                                }
                            }
                            return (
                                node.parent && fragments_logger.throwArgumentError("unexpected eof", "param", param),
                                delete parent.state,
                                "indexed" === node.name
                                    ? (allowIndexed || throwError(originalParam.length - 7), node.indexed && throwError(originalParam.length - 7), (node.indexed = !0), (node.name = ""))
                                    : checkModifier(node.type, node.name) && (node.name = ""),
                                (parent.type = verifyType(parent.type)),
                                parent
                            );
                        })(value, !!allowIndexed)),
                        ParamType.fromObject({ name: node.name, type: node.type, indexed: node.indexed, components: node.components })
                    );
                }
                static isParamType(value) {
                    return !!(null != value && value._isParamType);
                }
            }
            function parseParams(value, allowIndex) {
                return (function (value) {
                    value = value.trim();
                    let result = [],
                        accum = "",
                        depth = 0;
                    for (let offset = 0; offset < value.length; offset++) {
                        let c = value[offset];
                        "," === c && 0 === depth ? (result.push(accum), (accum = "")) : ((accum += c), "(" === c ? depth++ : ")" === c && -1 == --depth && fragments_logger.throwArgumentError("unbalanced parenthesis", "value", value));
                    }
                    return accum && result.push(accum), result;
                })(value).map((param) => ParamType.fromString(param, allowIndex));
            }
            class Fragment {
                constructor(constructorGuard, params) {
                    constructorGuard !== _constructorGuard && fragments_logger.throwError("use a static from method", logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation: "new Fragment()" }),
                        populate(this, params),
                        (this._isFragment = !0),
                        Object.freeze(this);
                }
                static from(value) {
                    return Fragment.isFragment(value) ? value : "string" == typeof value ? Fragment.fromString(value) : Fragment.fromObject(value);
                }
                static fromObject(value) {
                    if (Fragment.isFragment(value)) return value;
                    switch (value.type) {
                        case "function":
                            return FunctionFragment.fromObject(value);
                        case "event":
                            return EventFragment.fromObject(value);
                        case "constructor":
                            return ConstructorFragment.fromObject(value);
                        case "error":
                            return ErrorFragment.fromObject(value);
                        case "fallback":
                        case "receive":
                            return null;
                    }
                    return fragments_logger.throwArgumentError("invalid fragment object", "value", value);
                }
                static fromString(value) {
                    return "event" === (value = (value = (value = value.replace(/\s/g, " ")).replace(/\(/g, " (").replace(/\)/g, ") ").replace(/\s+/g, " ")).trim()).split(" ")[0]
                        ? EventFragment.fromString(value.substring(5).trim())
                        : "function" === value.split(" ")[0]
                        ? FunctionFragment.fromString(value.substring(8).trim())
                        : "constructor" === value.split("(")[0].trim()
                        ? ConstructorFragment.fromString(value.trim())
                        : "error" === value.split(" ")[0]
                        ? ErrorFragment.fromString(value.substring(5).trim())
                        : fragments_logger.throwArgumentError("unsupported fragment", "value", value);
                }
                static isFragment(value) {
                    return !!(value && value._isFragment);
                }
            }
            class EventFragment extends Fragment {
                format(format) {
                    if ((format || (format = FormatTypes.sighash), FormatTypes[format] || fragments_logger.throwArgumentError("invalid format type", "format", format), format === FormatTypes.json))
                        return JSON.stringify({ type: "event", anonymous: this.anonymous, name: this.name, inputs: this.inputs.map((input) => JSON.parse(input.format(format))) });
                    let result = "";
                    return (
                        format !== FormatTypes.sighash && (result += "event "),
                        (result += this.name + "(" + this.inputs.map((input) => input.format(format)).join(format === FormatTypes.full ? ", " : ",") + ") "),
                        format !== FormatTypes.sighash && this.anonymous && (result += "anonymous "),
                        result.trim()
                    );
                }
                static from(value) {
                    return "string" == typeof value ? EventFragment.fromString(value) : EventFragment.fromObject(value);
                }
                static fromObject(value) {
                    if (EventFragment.isEventFragment(value)) return value;
                    "event" !== value.type && fragments_logger.throwArgumentError("invalid event object", "value", value);
                    let params = { name: verifyIdentifier(value.name), anonymous: value.anonymous, inputs: value.inputs ? value.inputs.map(ParamType.fromObject) : [], type: "event" };
                    return new EventFragment(_constructorGuard, params);
                }
                static fromString(value) {
                    let match = value.match(regexParen);
                    match || fragments_logger.throwArgumentError("invalid event string", "value", value);
                    let anonymous = !1;
                    return (
                        match[3].split(" ").forEach((modifier) => {
                            switch (modifier.trim()) {
                                case "anonymous":
                                    anonymous = !0;
                                    break;
                                case "":
                                    break;
                                default:
                                    fragments_logger.warn("unknown modifier: " + modifier);
                            }
                        }),
                        EventFragment.fromObject({ name: match[1].trim(), anonymous: anonymous, inputs: parseParams(match[2], !0), type: "event" })
                    );
                }
                static isEventFragment(value) {
                    return value && value._isFragment && "event" === value.type;
                }
            }
            function parseGas(value, params) {
                params.gas = null;
                let comps = value.split("@");
                return 1 !== comps.length
                    ? (comps.length > 2 && fragments_logger.throwArgumentError("invalid human-readable ABI signature", "value", value),
                      comps[1].match(/^[0-9]+$/) || fragments_logger.throwArgumentError("invalid human-readable ABI signature gas", "value", value),
                      (params.gas = bignumber.O$.from(comps[1])),
                      comps[0])
                    : value;
            }
            function parseModifiers(value, params) {
                (params.constant = !1),
                    (params.payable = !1),
                    (params.stateMutability = "nonpayable"),
                    value.split(" ").forEach((modifier) => {
                        switch (modifier.trim()) {
                            case "constant":
                                params.constant = !0;
                                break;
                            case "payable":
                                (params.payable = !0), (params.stateMutability = "payable");
                                break;
                            case "nonpayable":
                                (params.payable = !1), (params.stateMutability = "nonpayable");
                                break;
                            case "pure":
                                (params.constant = !0), (params.stateMutability = "pure");
                                break;
                            case "view":
                                (params.constant = !0), (params.stateMutability = "view");
                                break;
                            case "external":
                            case "public":
                            case "":
                                break;
                            default:
                                console.log("unknown modifier: " + modifier);
                        }
                    });
            }
            function verifyState(value) {
                let result = { constant: !1, payable: !0, stateMutability: "payable" };
                return (
                    null != value.stateMutability
                        ? ((result.stateMutability = value.stateMutability),
                          (result.constant = "view" === result.stateMutability || "pure" === result.stateMutability),
                          null != value.constant && !!value.constant !== result.constant && fragments_logger.throwArgumentError("cannot have constant function with mutability " + result.stateMutability, "value", value),
                          (result.payable = "payable" === result.stateMutability),
                          null != value.payable && !!value.payable !== result.payable && fragments_logger.throwArgumentError("cannot have payable function with mutability " + result.stateMutability, "value", value))
                        : null != value.payable
                        ? ((result.payable = !!value.payable),
                          null != value.constant || result.payable || "constructor" === value.type || fragments_logger.throwArgumentError("unable to determine stateMutability", "value", value),
                          (result.constant = !!value.constant),
                          result.constant ? (result.stateMutability = "view") : (result.stateMutability = result.payable ? "payable" : "nonpayable"),
                          result.payable && result.constant && fragments_logger.throwArgumentError("cannot have constant payable function", "value", value))
                        : null != value.constant
                        ? ((result.constant = !!value.constant), (result.payable = !result.constant), (result.stateMutability = result.constant ? "view" : "payable"))
                        : "constructor" !== value.type && fragments_logger.throwArgumentError("unable to determine stateMutability", "value", value),
                    result
                );
            }
            class ConstructorFragment extends Fragment {
                format(format) {
                    if ((format || (format = FormatTypes.sighash), FormatTypes[format] || fragments_logger.throwArgumentError("invalid format type", "format", format), format === FormatTypes.json))
                        return JSON.stringify({
                            type: "constructor",
                            stateMutability: "nonpayable" !== this.stateMutability ? this.stateMutability : void 0,
                            payable: this.payable,
                            gas: this.gas ? this.gas.toNumber() : void 0,
                            inputs: this.inputs.map((input) => JSON.parse(input.format(format))),
                        });
                    format === FormatTypes.sighash && fragments_logger.throwError("cannot format a constructor for sighash", logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation: "format(sighash)" });
                    let result = "constructor(" + this.inputs.map((input) => input.format(format)).join(format === FormatTypes.full ? ", " : ",") + ") ";
                    return this.stateMutability && "nonpayable" !== this.stateMutability && (result += this.stateMutability + " "), result.trim();
                }
                static from(value) {
                    return "string" == typeof value ? ConstructorFragment.fromString(value) : ConstructorFragment.fromObject(value);
                }
                static fromObject(value) {
                    if (ConstructorFragment.isConstructorFragment(value)) return value;
                    "constructor" !== value.type && fragments_logger.throwArgumentError("invalid constructor object", "value", value);
                    let state = verifyState(value);
                    state.constant && fragments_logger.throwArgumentError("constructor cannot be constant", "value", value);
                    let params = {
                        name: null,
                        type: value.type,
                        inputs: value.inputs ? value.inputs.map(ParamType.fromObject) : [],
                        payable: state.payable,
                        stateMutability: state.stateMutability,
                        gas: value.gas ? bignumber.O$.from(value.gas) : null,
                    };
                    return new ConstructorFragment(_constructorGuard, params);
                }
                static fromString(value) {
                    let params = { type: "constructor" },
                        parens = (value = parseGas(value, params)).match(regexParen);
                    return (
                        (parens && "constructor" === parens[1].trim()) || fragments_logger.throwArgumentError("invalid constructor string", "value", value),
                        (params.inputs = parseParams(parens[2].trim(), !1)),
                        parseModifiers(parens[3].trim(), params),
                        ConstructorFragment.fromObject(params)
                    );
                }
                static isConstructorFragment(value) {
                    return value && value._isFragment && "constructor" === value.type;
                }
            }
            class FunctionFragment extends ConstructorFragment {
                format(format) {
                    if ((format || (format = FormatTypes.sighash), FormatTypes[format] || fragments_logger.throwArgumentError("invalid format type", "format", format), format === FormatTypes.json))
                        return JSON.stringify({
                            type: "function",
                            name: this.name,
                            constant: this.constant,
                            stateMutability: "nonpayable" !== this.stateMutability ? this.stateMutability : void 0,
                            payable: this.payable,
                            gas: this.gas ? this.gas.toNumber() : void 0,
                            inputs: this.inputs.map((input) => JSON.parse(input.format(format))),
                            outputs: this.outputs.map((output) => JSON.parse(output.format(format))),
                        });
                    let result = "";
                    return (
                        format !== FormatTypes.sighash && (result += "function "),
                        (result += this.name + "(" + this.inputs.map((input) => input.format(format)).join(format === FormatTypes.full ? ", " : ",") + ") "),
                        format !== FormatTypes.sighash &&
                            (this.stateMutability ? "nonpayable" !== this.stateMutability && (result += this.stateMutability + " ") : this.constant && (result += "view "),
                            this.outputs && this.outputs.length && (result += "returns (" + this.outputs.map((output) => output.format(format)).join(", ") + ") "),
                            null != this.gas && (result += "@" + this.gas.toString() + " ")),
                        result.trim()
                    );
                }
                static from(value) {
                    return "string" == typeof value ? FunctionFragment.fromString(value) : FunctionFragment.fromObject(value);
                }
                static fromObject(value) {
                    if (FunctionFragment.isFunctionFragment(value)) return value;
                    "function" !== value.type && fragments_logger.throwArgumentError("invalid function object", "value", value);
                    let state = verifyState(value),
                        params = {
                            type: value.type,
                            name: verifyIdentifier(value.name),
                            constant: state.constant,
                            inputs: value.inputs ? value.inputs.map(ParamType.fromObject) : [],
                            outputs: value.outputs ? value.outputs.map(ParamType.fromObject) : [],
                            payable: state.payable,
                            stateMutability: state.stateMutability,
                            gas: value.gas ? bignumber.O$.from(value.gas) : null,
                        };
                    return new FunctionFragment(_constructorGuard, params);
                }
                static fromString(value) {
                    let params = { type: "function" },
                        comps = (value = parseGas(value, params)).split(" returns ");
                    comps.length > 2 && fragments_logger.throwArgumentError("invalid function string", "value", value);
                    let parens = comps[0].match(regexParen);
                    if (
                        (parens || fragments_logger.throwArgumentError("invalid function signature", "value", value),
                        (params.name = parens[1].trim()),
                        params.name && verifyIdentifier(params.name),
                        (params.inputs = parseParams(parens[2], !1)),
                        parseModifiers(parens[3].trim(), params),
                        comps.length > 1)
                    ) {
                        let returns = comps[1].match(regexParen);
                        ("" != returns[1].trim() || "" != returns[3].trim()) && fragments_logger.throwArgumentError("unexpected tokens", "value", value), (params.outputs = parseParams(returns[2], !1));
                    } else params.outputs = [];
                    return FunctionFragment.fromObject(params);
                }
                static isFunctionFragment(value) {
                    return value && value._isFragment && "function" === value.type;
                }
            }
            function checkForbidden(fragment) {
                let sig = fragment.format();
                return ("Error(string)" === sig || "Panic(uint256)" === sig) && fragments_logger.throwArgumentError(`cannot specify user defined ${sig} error`, "fragment", fragment), fragment;
            }
            class ErrorFragment extends Fragment {
                format(format) {
                    if ((format || (format = FormatTypes.sighash), FormatTypes[format] || fragments_logger.throwArgumentError("invalid format type", "format", format), format === FormatTypes.json))
                        return JSON.stringify({ type: "error", name: this.name, inputs: this.inputs.map((input) => JSON.parse(input.format(format))) });
                    let result = "";
                    return format !== FormatTypes.sighash && (result += "error "), (result += this.name + "(" + this.inputs.map((input) => input.format(format)).join(format === FormatTypes.full ? ", " : ",") + ") ").trim();
                }
                static from(value) {
                    return "string" == typeof value ? ErrorFragment.fromString(value) : ErrorFragment.fromObject(value);
                }
                static fromObject(value) {
                    if (ErrorFragment.isErrorFragment(value)) return value;
                    "error" !== value.type && fragments_logger.throwArgumentError("invalid error object", "value", value);
                    let params = { type: value.type, name: verifyIdentifier(value.name), inputs: value.inputs ? value.inputs.map(ParamType.fromObject) : [] };
                    return checkForbidden(new ErrorFragment(_constructorGuard, params));
                }
                static fromString(value) {
                    let params = { type: "error" },
                        parens = value.match(regexParen);
                    return (
                        parens || fragments_logger.throwArgumentError("invalid error signature", "value", value),
                        (params.name = parens[1].trim()),
                        params.name && verifyIdentifier(params.name),
                        (params.inputs = parseParams(parens[2], !1)),
                        checkForbidden(ErrorFragment.fromObject(params))
                    );
                }
                static isErrorFragment(value) {
                    return value && value._isFragment && "error" === value.type;
                }
            }
            function verifyType(type) {
                return type.match(/^uint($|[^1-9])/) ? (type = "uint256" + type.substring(4)) : type.match(/^int($|[^1-9])/) && (type = "int256" + type.substring(3)), type;
            }
            let regexIdentifier = RegExp("^[a-zA-Z$_][a-zA-Z0-9$_]*$");
            function verifyIdentifier(value) {
                return (value && value.match(regexIdentifier)) || fragments_logger.throwArgumentError(`invalid identifier "${value}"`, "value", value), value;
            }
            let regexParen = RegExp("^([^)(]*)\\((.*)\\)([^)(]*)$"),
                abi_coder_logger = new logger_lib_esm.Yd(version),
                paramTypeBytes = RegExp(/^bytes([0-9]*)$/),
                paramTypeNumber = RegExp(/^(u?int)([0-9]*)$/);
            class AbiCoder {
                constructor(coerceFunc) {
                    abi_coder_logger.checkNew(new.target, AbiCoder), (0, properties_lib_esm.zG)(this, "coerceFunc", coerceFunc || null);
                }
                _getCoder(param) {
                    switch (param.baseType) {
                        case "address":
                            return new AddressCoder(param.name);
                        case "bool":
                            return new BooleanCoder(param.name);
                        case "string":
                            return new StringCoder(param.name);
                        case "bytes":
                            return new BytesCoder(param.name);
                        case "array":
                            return new ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);
                        case "tuple":
                            return new TupleCoder(
                                (param.components || []).map((component) => this._getCoder(component)),
                                param.name
                            );
                        case "":
                            return new NullCoder(param.name);
                    }
                    let match = param.type.match(paramTypeNumber);
                    if (match) {
                        let size = parseInt(match[2] || "256");
                        return (0 === size || size > 256 || size % 8 != 0) && abi_coder_logger.throwArgumentError("invalid " + match[1] + " bit length", "param", param), new NumberCoder(size / 8, "int" === match[1], param.name);
                    }
                    if ((match = param.type.match(paramTypeBytes))) {
                        let size1 = parseInt(match[1]);
                        return (0 === size1 || size1 > 32) && abi_coder_logger.throwArgumentError("invalid bytes length", "param", param), new FixedBytesCoder(size1, param.name);
                    }
                    return abi_coder_logger.throwArgumentError("invalid type", "type", param.type);
                }
                _getWordSize() {
                    return 32;
                }
                _getReader(data, allowLoose) {
                    return new Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);
                }
                _getWriter() {
                    return new Writer(this._getWordSize());
                }
                getDefaultValue(types) {
                    let coders = types.map((type) => this._getCoder(ParamType.from(type))),
                        coder = new TupleCoder(coders, "_");
                    return coder.defaultValue();
                }
                encode(types, values) {
                    types.length !== values.length &&
                        abi_coder_logger.throwError("types/values length mismatch", logger_lib_esm.Yd.errors.INVALID_ARGUMENT, { count: { types: types.length, values: values.length }, value: { types: types, values: values } });
                    let coders = types.map((type) => this._getCoder(ParamType.from(type))),
                        coder = new TupleCoder(coders, "_"),
                        writer = this._getWriter();
                    return coder.encode(writer, values), writer.data;
                }
                decode(types, data, loose) {
                    let coders = types.map((type) => this._getCoder(ParamType.from(type))),
                        coder = new TupleCoder(coders, "_");
                    return coder.decode(this._getReader((0, lib_esm.lE)(data), loose));
                }
            }
            let defaultAbiCoder = new AbiCoder(),
                interface_logger = new logger_lib_esm.Yd(version);
            class LogDescription extends properties_lib_esm.dk {}
            class TransactionDescription extends properties_lib_esm.dk {}
            class ErrorDescription extends properties_lib_esm.dk {}
            class Indexed extends properties_lib_esm.dk {
                static isIndexed(value) {
                    return !!(value && value._isIndexed);
                }
            }
            let BuiltinErrors = { "0x08c379a0": { signature: "Error(string)", name: "Error", inputs: ["string"], reason: !0 }, "0x4e487b71": { signature: "Panic(uint256)", name: "Panic", inputs: ["uint256"] } };
            function wrapAccessError(property, error) {
                let wrap = Error(`deferred error during ABI decoding triggered accessing ${property}`);
                return (wrap.error = error), wrap;
            }
            class Interface {
                constructor(fragments) {
                    interface_logger.checkNew(new.target, Interface);
                    let abi = [];
                    (abi = "string" == typeof fragments ? JSON.parse(fragments) : fragments),
                        (0, properties_lib_esm.zG)(
                            this,
                            "fragments",
                            abi.map((fragment) => Fragment.from(fragment)).filter((fragment) => null != fragment)
                        ),
                        (0, properties_lib_esm.zG)(this, "_abiCoder", (0, properties_lib_esm.tu)(new.target, "getAbiCoder")()),
                        (0, properties_lib_esm.zG)(this, "functions", {}),
                        (0, properties_lib_esm.zG)(this, "errors", {}),
                        (0, properties_lib_esm.zG)(this, "events", {}),
                        (0, properties_lib_esm.zG)(this, "structs", {}),
                        this.fragments.forEach((fragment) => {
                            let bucket = null;
                            switch (fragment.type) {
                                case "constructor":
                                    if (this.deploy) {
                                        interface_logger.warn("duplicate definition - constructor");
                                        return;
                                    }
                                    (0, properties_lib_esm.zG)(this, "deploy", fragment);
                                    return;
                                case "function":
                                    bucket = this.functions;
                                    break;
                                case "event":
                                    bucket = this.events;
                                    break;
                                case "error":
                                    bucket = this.errors;
                                    break;
                                default:
                                    return;
                            }
                            let signature = fragment.format();
                            if (bucket[signature]) {
                                interface_logger.warn("duplicate definition - " + signature);
                                return;
                            }
                            bucket[signature] = fragment;
                        }),
                        this.deploy || (0, properties_lib_esm.zG)(this, "deploy", ConstructorFragment.from({ payable: !1, type: "constructor" })),
                        (0, properties_lib_esm.zG)(this, "_isInterface", !0);
                }
                format(format) {
                    format || (format = FormatTypes.full), format === FormatTypes.sighash && interface_logger.throwArgumentError("interface does not support formatting sighash", "format", format);
                    let abi = this.fragments.map((fragment) => fragment.format(format));
                    return format === FormatTypes.json ? JSON.stringify(abi.map((j) => JSON.parse(j))) : abi;
                }
                static getAbiCoder() {
                    return defaultAbiCoder;
                }
                static getAddress(address) {
                    return (0, address_lib_esm.Kn)(address);
                }
                static getSighash(fragment) {
                    return (0, lib_esm.p3)((0, id.id)(fragment.format()), 0, 4);
                }
                static getEventTopic(eventFragment) {
                    return (0, id.id)(eventFragment.format());
                }
                getFunction(nameOrSignatureOrSighash) {
                    if ((0, lib_esm.A7)(nameOrSignatureOrSighash)) {
                        for (let name in this.functions) if (nameOrSignatureOrSighash === this.getSighash(name)) return this.functions[name];
                        interface_logger.throwArgumentError("no matching function", "sighash", nameOrSignatureOrSighash);
                    }
                    if (-1 === nameOrSignatureOrSighash.indexOf("(")) {
                        let name1 = nameOrSignatureOrSighash.trim(),
                            matching = Object.keys(this.functions).filter((f) => f.split("(")[0] === name1);
                        return (
                            0 === matching.length ? interface_logger.throwArgumentError("no matching function", "name", name1) : matching.length > 1 && interface_logger.throwArgumentError("multiple matching functions", "name", name1),
                            this.functions[matching[0]]
                        );
                    }
                    let result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];
                    return result || interface_logger.throwArgumentError("no matching function", "signature", nameOrSignatureOrSighash), result;
                }
                getEvent(nameOrSignatureOrTopic) {
                    if ((0, lib_esm.A7)(nameOrSignatureOrTopic)) {
                        let topichash = nameOrSignatureOrTopic.toLowerCase();
                        for (let name in this.events) if (topichash === this.getEventTopic(name)) return this.events[name];
                        interface_logger.throwArgumentError("no matching event", "topichash", topichash);
                    }
                    if (-1 === nameOrSignatureOrTopic.indexOf("(")) {
                        let name1 = nameOrSignatureOrTopic.trim(),
                            matching = Object.keys(this.events).filter((f) => f.split("(")[0] === name1);
                        return (
                            0 === matching.length ? interface_logger.throwArgumentError("no matching event", "name", name1) : matching.length > 1 && interface_logger.throwArgumentError("multiple matching events", "name", name1),
                            this.events[matching[0]]
                        );
                    }
                    let result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];
                    return result || interface_logger.throwArgumentError("no matching event", "signature", nameOrSignatureOrTopic), result;
                }
                getError(nameOrSignatureOrSighash) {
                    if ((0, lib_esm.A7)(nameOrSignatureOrSighash)) {
                        let getSighash = (0, properties_lib_esm.tu)(this.constructor, "getSighash");
                        for (let name in this.errors) {
                            let error = this.errors[name];
                            if (nameOrSignatureOrSighash === getSighash(error)) return this.errors[name];
                        }
                        interface_logger.throwArgumentError("no matching error", "sighash", nameOrSignatureOrSighash);
                    }
                    if (-1 === nameOrSignatureOrSighash.indexOf("(")) {
                        let name1 = nameOrSignatureOrSighash.trim(),
                            matching = Object.keys(this.errors).filter((f) => f.split("(")[0] === name1);
                        return (
                            0 === matching.length ? interface_logger.throwArgumentError("no matching error", "name", name1) : matching.length > 1 && interface_logger.throwArgumentError("multiple matching errors", "name", name1),
                            this.errors[matching[0]]
                        );
                    }
                    let result = this.errors[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];
                    return result || interface_logger.throwArgumentError("no matching error", "signature", nameOrSignatureOrSighash), result;
                }
                getSighash(fragment) {
                    if ("string" == typeof fragment)
                        try {
                            fragment = this.getFunction(fragment);
                        } catch (error) {
                            try {
                                fragment = this.getError(fragment);
                            } catch (_) {
                                throw error;
                            }
                        }
                    return (0, properties_lib_esm.tu)(this.constructor, "getSighash")(fragment);
                }
                getEventTopic(eventFragment) {
                    return "string" == typeof eventFragment && (eventFragment = this.getEvent(eventFragment)), (0, properties_lib_esm.tu)(this.constructor, "getEventTopic")(eventFragment);
                }
                _decodeParams(params, data) {
                    return this._abiCoder.decode(params, data);
                }
                _encodeParams(params, values) {
                    return this._abiCoder.encode(params, values);
                }
                encodeDeploy(values) {
                    return this._encodeParams(this.deploy.inputs, values || []);
                }
                decodeErrorResult(fragment, data) {
                    "string" == typeof fragment && (fragment = this.getError(fragment));
                    let bytes = (0, lib_esm.lE)(data);
                    return (
                        (0, lib_esm.Dv)(bytes.slice(0, 4)) !== this.getSighash(fragment) && interface_logger.throwArgumentError(`data signature does not match error ${fragment.name}.`, "data", (0, lib_esm.Dv)(bytes)),
                        this._decodeParams(fragment.inputs, bytes.slice(4))
                    );
                }
                encodeErrorResult(fragment, values) {
                    return "string" == typeof fragment && (fragment = this.getError(fragment)), (0, lib_esm.Dv)((0, lib_esm.zo)([this.getSighash(fragment), this._encodeParams(fragment.inputs, values || [])]));
                }
                decodeFunctionData(functionFragment, data) {
                    "string" == typeof functionFragment && (functionFragment = this.getFunction(functionFragment));
                    let bytes = (0, lib_esm.lE)(data);
                    return (
                        (0, lib_esm.Dv)(bytes.slice(0, 4)) !== this.getSighash(functionFragment) && interface_logger.throwArgumentError(`data signature does not match function ${functionFragment.name}.`, "data", (0, lib_esm.Dv)(bytes)),
                        this._decodeParams(functionFragment.inputs, bytes.slice(4))
                    );
                }
                encodeFunctionData(functionFragment, values) {
                    return (
                        "string" == typeof functionFragment && (functionFragment = this.getFunction(functionFragment)),
                        (0, lib_esm.Dv)((0, lib_esm.zo)([this.getSighash(functionFragment), this._encodeParams(functionFragment.inputs, values || [])]))
                    );
                }
                decodeFunctionResult(functionFragment, data) {
                    "string" == typeof functionFragment && (functionFragment = this.getFunction(functionFragment));
                    let bytes = (0, lib_esm.lE)(data),
                        reason = null,
                        errorArgs = null,
                        errorName = null,
                        errorSignature = null;
                    switch (bytes.length % this._abiCoder._getWordSize()) {
                        case 0:
                            try {
                                return this._abiCoder.decode(functionFragment.outputs, bytes);
                            } catch (error) {}
                            break;
                        case 4: {
                            let selector = (0, lib_esm.Dv)(bytes.slice(0, 4)),
                                builtin = BuiltinErrors[selector];
                            if (builtin) (errorArgs = this._abiCoder.decode(builtin.inputs, bytes.slice(4))), (errorName = builtin.name), (errorSignature = builtin.signature), builtin.reason && (reason = errorArgs[0]);
                            else
                                try {
                                    let error1 = this.getError(selector);
                                    (errorArgs = this._abiCoder.decode(error1.inputs, bytes.slice(4))), (errorName = error1.name), (errorSignature = error1.format());
                                } catch (error2) {}
                        }
                    }
                    return interface_logger.throwError("call revert exception", logger_lib_esm.Yd.errors.CALL_EXCEPTION, { method: functionFragment.format(), errorArgs, errorName, errorSignature, reason });
                }
                encodeFunctionResult(functionFragment, values) {
                    return "string" == typeof functionFragment && (functionFragment = this.getFunction(functionFragment)), (0, lib_esm.Dv)(this._abiCoder.encode(functionFragment.outputs, values || []));
                }
                encodeFilterTopics(eventFragment, values) {
                    "string" == typeof eventFragment && (eventFragment = this.getEvent(eventFragment)),
                        values.length > eventFragment.inputs.length && interface_logger.throwError("too many arguments for " + eventFragment.format(), logger_lib_esm.Yd.errors.UNEXPECTED_ARGUMENT, { argument: "values", value: values });
                    let topics = [];
                    eventFragment.anonymous || topics.push(this.getEventTopic(eventFragment));
                    let encodeTopic = (param, value) =>
                        "string" === param.type
                            ? (0, id.id)(value)
                            : "bytes" === param.type
                            ? (0, keccak256_lib_esm.w)((0, lib_esm.Dv)(value))
                            : ("address" === param.type && this._abiCoder.encode(["address"], [value]), (0, lib_esm.$m)((0, lib_esm.Dv)(value), 32));
                    for (
                        values.forEach((value, index) => {
                            let param = eventFragment.inputs[index];
                            if (!param.indexed) {
                                null != value && interface_logger.throwArgumentError("cannot filter non-indexed parameters; must be null", "contract." + param.name, value);
                                return;
                            }
                            null == value
                                ? topics.push(null)
                                : "array" === param.baseType || "tuple" === param.baseType
                                ? interface_logger.throwArgumentError("filtering with tuples or arrays not supported", "contract." + param.name, value)
                                : Array.isArray(value)
                                ? topics.push(value.map((value) => encodeTopic(param, value)))
                                : topics.push(encodeTopic(param, value));
                        });
                        topics.length && null === topics[topics.length - 1];

                    )
                        topics.pop();
                    return topics;
                }
                encodeEventLog(eventFragment, values) {
                    "string" == typeof eventFragment && (eventFragment = this.getEvent(eventFragment));
                    let topics = [],
                        dataTypes = [],
                        dataValues = [];
                    return (
                        eventFragment.anonymous || topics.push(this.getEventTopic(eventFragment)),
                        values.length !== eventFragment.inputs.length && interface_logger.throwArgumentError("event arguments/values mismatch", "values", values),
                        eventFragment.inputs.forEach((param, index) => {
                            let value = values[index];
                            if (param.indexed) {
                                if ("string" === param.type) topics.push((0, id.id)(value));
                                else if ("bytes" === param.type) topics.push((0, keccak256_lib_esm.w)(value));
                                else if ("tuple" === param.baseType || "array" === param.baseType) throw Error("not implemented");
                                else topics.push(this._abiCoder.encode([param.type], [value]));
                            } else dataTypes.push(param), dataValues.push(value);
                        }),
                        { data: this._abiCoder.encode(dataTypes, dataValues), topics: topics }
                    );
                }
                decodeEventLog(eventFragment, data, topics) {
                    if (("string" == typeof eventFragment && (eventFragment = this.getEvent(eventFragment)), null != topics && !eventFragment.anonymous)) {
                        let topicHash = this.getEventTopic(eventFragment);
                        ((0, lib_esm.A7)(topics[0], 32) && topics[0].toLowerCase() === topicHash) ||
                            interface_logger.throwError("fragment/topic mismatch", logger_lib_esm.Yd.errors.INVALID_ARGUMENT, { argument: "topics[0]", expected: topicHash, value: topics[0] }),
                            (topics = topics.slice(1));
                    }
                    let indexed = [],
                        nonIndexed = [],
                        dynamic = [];
                    eventFragment.inputs.forEach((param, index) => {
                        param.indexed
                            ? "string" === param.type || "bytes" === param.type || "tuple" === param.baseType || "array" === param.baseType
                                ? (indexed.push(ParamType.fromObject({ type: "bytes32", name: param.name })), dynamic.push(!0))
                                : (indexed.push(param), dynamic.push(!1))
                            : (nonIndexed.push(param), dynamic.push(!1));
                    });
                    let resultIndexed = null != topics ? this._abiCoder.decode(indexed, (0, lib_esm.zo)(topics)) : null,
                        resultNonIndexed = this._abiCoder.decode(nonIndexed, data, !0),
                        result = [],
                        nonIndexedIndex = 0,
                        indexedIndex = 0;
                    eventFragment.inputs.forEach((param, index) => {
                        if (param.indexed) {
                            if (null == resultIndexed) result[index] = new Indexed({ _isIndexed: !0, hash: null });
                            else if (dynamic[index]) result[index] = new Indexed({ _isIndexed: !0, hash: resultIndexed[indexedIndex++] });
                            else
                                try {
                                    result[index] = resultIndexed[indexedIndex++];
                                } catch (error) {
                                    result[index] = error;
                                }
                        } else
                            try {
                                result[index] = resultNonIndexed[nonIndexedIndex++];
                            } catch (error1) {
                                result[index] = error1;
                            }
                        if (param.name && null == result[param.name]) {
                            let value = result[index];
                            value instanceof Error
                                ? Object.defineProperty(result, param.name, {
                                      enumerable: !0,
                                      get() {
                                          throw wrapAccessError(`property ${JSON.stringify(param.name)}`, value);
                                      },
                                  })
                                : (result[param.name] = value);
                        }
                    });
                    for (let i = 0; i < result.length; i++) {
                        let value = result[i];
                        value instanceof Error &&
                            Object.defineProperty(result, i, {
                                enumerable: !0,
                                get() {
                                    throw wrapAccessError(`index ${i}`, value);
                                },
                            });
                    }
                    return Object.freeze(result);
                }
                parseTransaction(tx) {
                    let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase());
                    return fragment
                        ? new TransactionDescription({
                              args: this._abiCoder.decode(fragment.inputs, "0x" + tx.data.substring(10)),
                              functionFragment: fragment,
                              name: fragment.name,
                              signature: fragment.format(),
                              sighash: this.getSighash(fragment),
                              value: bignumber.O$.from(tx.value || "0"),
                          })
                        : null;
                }
                parseLog(log) {
                    let fragment = this.getEvent(log.topics[0]);
                    return !fragment || fragment.anonymous
                        ? null
                        : new LogDescription({ eventFragment: fragment, name: fragment.name, signature: fragment.format(), topic: this.getEventTopic(fragment), args: this.decodeEventLog(fragment, log.data, log.topics) });
                }
                parseError(data) {
                    let hexData = (0, lib_esm.Dv)(data),
                        fragment = this.getError(hexData.substring(0, 10).toLowerCase());
                    return fragment
                        ? new ErrorDescription({ args: this._abiCoder.decode(fragment.inputs, "0x" + hexData.substring(10)), errorFragment: fragment, name: fragment.name, signature: fragment.format(), sighash: this.getSighash(fragment) })
                        : null;
                }
                static isInterface(value) {
                    return !!(value && value._isInterface);
                }
            }
            var abstract_provider_lib_esm = __webpack_require__(81556),
                abstract_signer_lib_esm = __webpack_require__(48088),
                transactions_lib_esm = __webpack_require__(639),
                __awaiter = function (thisArg, _arguments, P, generator) {
                    return new (P || (P = Promise))(function (resolve, reject) {
                        function fulfilled(value) {
                            try {
                                step(generator.next(value));
                            } catch (e) {
                                reject(e);
                            }
                        }
                        function rejected(value) {
                            try {
                                step(generator.throw(value));
                            } catch (e) {
                                reject(e);
                            }
                        }
                        function step(result) {
                            var value;
                            result.done
                                ? resolve(result.value)
                                : ((value = result.value) instanceof P
                                      ? value
                                      : new P(function (resolve) {
                                            resolve(value);
                                        })
                                  ).then(fulfilled, rejected);
                        }
                        step((generator = generator.apply(thisArg, _arguments || [])).next());
                    });
                };
            let lib_esm_logger = new logger_lib_esm.Yd("contracts/5.6.0");
            function resolveName(resolver, nameOrPromise) {
                return __awaiter(this, void 0, void 0, function* () {
                    let name = yield nameOrPromise;
                    "string" != typeof name && lib_esm_logger.throwArgumentError("invalid address or ENS name", "name", name);
                    try {
                        return (0, address_lib_esm.Kn)(name);
                    } catch (error) {}
                    resolver || lib_esm_logger.throwError("a provider or signer is needed to resolve ENS names", logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation: "resolveName" });
                    let address = yield resolver.resolveName(name);
                    return null == address && lib_esm_logger.throwArgumentError("resolver or addr is not configured for ENS name", "name", name), address;
                });
            }
            function populateTransaction(contract, fragment, args) {
                return __awaiter(this, void 0, void 0, function* () {
                    let overrides = {};
                    args.length === fragment.inputs.length + 1 && "object" == typeof args[args.length - 1] && (overrides = (0, properties_lib_esm.DC)(args.pop())),
                        lib_esm_logger.checkArgumentCount(args.length, fragment.inputs.length, "passed to contract"),
                        contract.signer
                            ? overrides.from
                                ? (overrides.from = (0, properties_lib_esm.mE)({ override: resolveName(contract.signer, overrides.from), signer: contract.signer.getAddress() }).then((check) =>
                                      __awaiter(this, void 0, void 0, function* () {
                                          return (
                                              (0, address_lib_esm.Kn)(check.signer) !== check.override &&
                                                  lib_esm_logger.throwError("Contract with a Signer cannot override from", logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation: "overrides.from" }),
                                              check.override
                                          );
                                      })
                                  ))
                                : (overrides.from = contract.signer.getAddress())
                            : overrides.from && (overrides.from = resolveName(contract.provider, overrides.from));
                    let resolved = yield (0, properties_lib_esm.mE)({
                            args: (function resolveAddresses(resolver, value, paramType) {
                                return __awaiter(this, void 0, void 0, function* () {
                                    return Array.isArray(paramType)
                                        ? yield Promise.all(paramType.map((paramType, index) => resolveAddresses(resolver, Array.isArray(value) ? value[index] : value[paramType.name], paramType)))
                                        : "address" === paramType.type
                                        ? yield resolveName(resolver, value)
                                        : "tuple" === paramType.type
                                        ? yield resolveAddresses(resolver, value, paramType.components)
                                        : "array" === paramType.baseType
                                        ? Array.isArray(value)
                                            ? yield Promise.all(value.map((v) => resolveAddresses(resolver, v, paramType.arrayChildren)))
                                            : Promise.reject(lib_esm_logger.makeError("invalid value for array", logger_lib_esm.Yd.errors.INVALID_ARGUMENT, { argument: "value", value }))
                                        : value;
                                });
                            })(contract.signer || contract.provider, args, fragment.inputs),
                            address: contract.resolvedAddress,
                            overrides: (0, properties_lib_esm.mE)(overrides) || {},
                        }),
                        data = contract.interface.encodeFunctionData(fragment, resolved.args),
                        tx = { data: data, to: resolved.address },
                        ro = resolved.overrides;
                    if (
                        (null != ro.nonce && (tx.nonce = bignumber.O$.from(ro.nonce).toNumber()),
                        null != ro.gasLimit && (tx.gasLimit = bignumber.O$.from(ro.gasLimit)),
                        null != ro.gasPrice && (tx.gasPrice = bignumber.O$.from(ro.gasPrice)),
                        null != ro.maxFeePerGas && (tx.maxFeePerGas = bignumber.O$.from(ro.maxFeePerGas)),
                        null != ro.maxPriorityFeePerGas && (tx.maxPriorityFeePerGas = bignumber.O$.from(ro.maxPriorityFeePerGas)),
                        null != ro.from && (tx.from = ro.from),
                        null != ro.type && (tx.type = ro.type),
                        null != ro.accessList && (tx.accessList = (0, transactions_lib_esm.z7)(ro.accessList)),
                        null == tx.gasLimit && null != fragment.gas)
                    ) {
                        let intrinsic = 21e3,
                            bytes = (0, lib_esm.lE)(data);
                        for (let i = 0; i < bytes.length; i++) (intrinsic += 4), bytes[i] && (intrinsic += 64);
                        tx.gasLimit = bignumber.O$.from(fragment.gas).add(intrinsic);
                    }
                    if (ro.value) {
                        let roValue = bignumber.O$.from(ro.value);
                        roValue.isZero() || fragment.payable || lib_esm_logger.throwError("non-payable method cannot override value", logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation: "overrides.value", value: overrides.value }),
                            (tx.value = roValue);
                    }
                    ro.customData && (tx.customData = (0, properties_lib_esm.DC)(ro.customData)),
                        ro.ccipReadEnabled && (tx.ccipReadEnabled = !!ro.ccipReadEnabled),
                        delete overrides.nonce,
                        delete overrides.gasLimit,
                        delete overrides.gasPrice,
                        delete overrides.from,
                        delete overrides.value,
                        delete overrides.type,
                        delete overrides.accessList,
                        delete overrides.maxFeePerGas,
                        delete overrides.maxPriorityFeePerGas,
                        delete overrides.customData,
                        delete overrides.ccipReadEnabled;
                    let leftovers = Object.keys(overrides).filter((key) => null != overrides[key]);
                    return (
                        leftovers.length && lib_esm_logger.throwError(`cannot override ${leftovers.map((l) => JSON.stringify(l)).join(",")}`, logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation: "overrides", overrides: leftovers }),
                        tx
                    );
                });
            }
            function buildCall(contract, fragment, collapseSimple) {
                let signerOrProvider = contract.signer || contract.provider;
                return function (...args) {
                    return __awaiter(this, void 0, void 0, function* () {
                        let blockTag;
                        if (args.length === fragment.inputs.length + 1 && "object" == typeof args[args.length - 1]) {
                            let overrides = (0, properties_lib_esm.DC)(args.pop());
                            null != overrides.blockTag && (blockTag = yield overrides.blockTag), delete overrides.blockTag, args.push(overrides);
                        }
                        null != contract.deployTransaction && (yield contract._deployed(blockTag));
                        let tx = yield populateTransaction(contract, fragment, args),
                            result = yield signerOrProvider.call(tx, blockTag);
                        try {
                            let value = contract.interface.decodeFunctionResult(fragment, result);
                            return collapseSimple && 1 === fragment.outputs.length && (value = value[0]), value;
                        } catch (error) {
                            throw (error.code === logger_lib_esm.Yd.errors.CALL_EXCEPTION && ((error.address = contract.address), (error.args = args), (error.transaction = tx)), error);
                        }
                    });
                };
            }
            function buildDefault(contract, fragment, collapseSimple) {
                return fragment.constant
                    ? buildCall(contract, fragment, collapseSimple)
                    : function (...args) {
                          return __awaiter(this, void 0, void 0, function* () {
                              contract.signer || lib_esm_logger.throwError("sending a transaction requires a signer", logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation: "sendTransaction" }),
                                  null != contract.deployTransaction && (yield contract._deployed());
                              let txRequest = yield populateTransaction(contract, fragment, args),
                                  tx = yield contract.signer.sendTransaction(txRequest);
                              return (
                                  (function (contract, tx) {
                                      let wait = tx.wait.bind(tx);
                                      tx.wait = (confirmations) =>
                                          wait(confirmations).then(
                                              (receipt) => (
                                                  (receipt.events = receipt.logs.map((log) => {
                                                      let event = (0, properties_lib_esm.p$)(log),
                                                          parsed = null;
                                                      try {
                                                          parsed = contract.interface.parseLog(log);
                                                      } catch (e) {}
                                                      return (
                                                          parsed &&
                                                              ((event.args = parsed.args),
                                                              (event.decode = (data, topics) => contract.interface.decodeEventLog(parsed.eventFragment, data, topics)),
                                                              (event.event = parsed.name),
                                                              (event.eventSignature = parsed.signature)),
                                                          (event.removeListener = () => contract.provider),
                                                          (event.getBlock = () => contract.provider.getBlock(receipt.blockHash)),
                                                          (event.getTransaction = () => contract.provider.getTransaction(receipt.transactionHash)),
                                                          (event.getTransactionReceipt = () => Promise.resolve(receipt)),
                                                          event
                                                      );
                                                  })),
                                                  receipt
                                              )
                                          );
                                  })(contract, tx),
                                  tx
                              );
                          });
                      };
            }
            function getEventTag(filter) {
                return filter.address && (null == filter.topics || 0 === filter.topics.length)
                    ? "*"
                    : (filter.address || "*") + "@" + (filter.topics ? filter.topics.map((topic) => (Array.isArray(topic) ? topic.join("|") : topic)).join(":") : "");
            }
            class RunningEvent {
                constructor(tag, filter) {
                    (0, properties_lib_esm.zG)(this, "tag", tag), (0, properties_lib_esm.zG)(this, "filter", filter), (this._listeners = []);
                }
                addListener(listener, once) {
                    this._listeners.push({ listener: listener, once: once });
                }
                removeListener(listener) {
                    let done = !1;
                    this._listeners = this._listeners.filter((item) => !!done || item.listener !== listener || ((done = !0), !1));
                }
                removeAllListeners() {
                    this._listeners = [];
                }
                listeners() {
                    return this._listeners.map((i) => i.listener);
                }
                listenerCount() {
                    return this._listeners.length;
                }
                run(args) {
                    let listenerCount = this.listenerCount();
                    return (
                        (this._listeners = this._listeners.filter((item) => {
                            let argsCopy = args.slice();
                            return (
                                setTimeout(() => {
                                    item.listener.apply(this, argsCopy);
                                }, 0),
                                !item.once
                            );
                        })),
                        listenerCount
                    );
                }
                prepareEvent(event) {}
                getEmit(event) {
                    return [event];
                }
            }
            class ErrorRunningEvent extends RunningEvent {
                constructor() {
                    super("error", null);
                }
            }
            class FragmentRunningEvent extends RunningEvent {
                constructor(address, contractInterface, fragment, topics) {
                    let filter = { address: address },
                        topic = contractInterface.getEventTopic(fragment);
                    topics ? (topic !== topics[0] && lib_esm_logger.throwArgumentError("topic mismatch", "topics", topics), (filter.topics = topics.slice())) : (filter.topics = [topic]),
                        super(getEventTag(filter), filter),
                        (0, properties_lib_esm.zG)(this, "address", address),
                        (0, properties_lib_esm.zG)(this, "interface", contractInterface),
                        (0, properties_lib_esm.zG)(this, "fragment", fragment);
                }
                prepareEvent(event) {
                    super.prepareEvent(event), (event.event = this.fragment.name), (event.eventSignature = this.fragment.format()), (event.decode = (data, topics) => this.interface.decodeEventLog(this.fragment, data, topics));
                    try {
                        event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);
                    } catch (error) {
                        (event.args = null), (event.decodeError = error);
                    }
                }
                getEmit(event) {
                    let errors = (function (result) {
                        let errors = [],
                            checkErrors = function (path, object) {
                                if (Array.isArray(object))
                                    for (let key in object) {
                                        let childPath = path.slice();
                                        childPath.push(key);
                                        try {
                                            checkErrors(childPath, object[key]);
                                        } catch (error) {
                                            errors.push({ path: childPath, error: error });
                                        }
                                    }
                            };
                        return checkErrors([], result), errors;
                    })(event.args);
                    if (errors.length) throw errors[0].error;
                    let args = (event.args || []).slice();
                    return args.push(event), args;
                }
            }
            class WildcardRunningEvent extends RunningEvent {
                constructor(address, contractInterface) {
                    super("*", { address: address }), (0, properties_lib_esm.zG)(this, "address", address), (0, properties_lib_esm.zG)(this, "interface", contractInterface);
                }
                prepareEvent(event) {
                    super.prepareEvent(event);
                    try {
                        let parsed = this.interface.parseLog(event);
                        (event.event = parsed.name), (event.eventSignature = parsed.signature), (event.decode = (data, topics) => this.interface.decodeEventLog(parsed.eventFragment, data, topics)), (event.args = parsed.args);
                    } catch (error) {}
                }
            }
            class BaseContract {
                constructor(addressOrName, contractInterface, signerOrProvider) {
                    lib_esm_logger.checkNew(new.target, Contract),
                        (0, properties_lib_esm.zG)(this, "interface", (0, properties_lib_esm.tu)(new.target, "getInterface")(contractInterface)),
                        null == signerOrProvider
                            ? ((0, properties_lib_esm.zG)(this, "provider", null), (0, properties_lib_esm.zG)(this, "signer", null))
                            : abstract_signer_lib_esm.E.isSigner(signerOrProvider)
                            ? ((0, properties_lib_esm.zG)(this, "provider", signerOrProvider.provider || null), (0, properties_lib_esm.zG)(this, "signer", signerOrProvider))
                            : abstract_provider_lib_esm.zt.isProvider(signerOrProvider)
                            ? ((0, properties_lib_esm.zG)(this, "provider", signerOrProvider), (0, properties_lib_esm.zG)(this, "signer", null))
                            : lib_esm_logger.throwArgumentError("invalid signer or provider", "signerOrProvider", signerOrProvider),
                        (0, properties_lib_esm.zG)(this, "callStatic", {}),
                        (0, properties_lib_esm.zG)(this, "estimateGas", {}),
                        (0, properties_lib_esm.zG)(this, "functions", {}),
                        (0, properties_lib_esm.zG)(this, "populateTransaction", {}),
                        (0, properties_lib_esm.zG)(this, "filters", {});
                    {
                        let uniqueFilters = {};
                        Object.keys(this.interface.events).forEach((eventSignature) => {
                            let event = this.interface.events[eventSignature];
                            (0, properties_lib_esm.zG)(this.filters, eventSignature, (...args) => ({ address: this.address, topics: this.interface.encodeFilterTopics(event, args) })),
                                uniqueFilters[event.name] || (uniqueFilters[event.name] = []),
                                uniqueFilters[event.name].push(eventSignature);
                        }),
                            Object.keys(uniqueFilters).forEach((name) => {
                                let filters = uniqueFilters[name];
                                1 === filters.length ? (0, properties_lib_esm.zG)(this.filters, name, this.filters[filters[0]]) : lib_esm_logger.warn(`Duplicate definition of ${name} (${filters.join(", ")})`);
                            });
                    }
                    if (
                        ((0, properties_lib_esm.zG)(this, "_runningEvents", {}),
                        (0, properties_lib_esm.zG)(this, "_wrappedEmits", {}),
                        null == addressOrName && lib_esm_logger.throwArgumentError("invalid contract address or ENS name", "addressOrName", addressOrName),
                        (0, properties_lib_esm.zG)(this, "address", addressOrName),
                        this.provider)
                    )
                        (0, properties_lib_esm.zG)(this, "resolvedAddress", resolveName(this.provider, addressOrName));
                    else
                        try {
                            (0, properties_lib_esm.zG)(this, "resolvedAddress", Promise.resolve((0, address_lib_esm.Kn)(addressOrName)));
                        } catch (error) {
                            lib_esm_logger.throwError("provider is required to use ENS name as contract address", logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation: "new Contract" });
                        }
                    this.resolvedAddress.catch((e) => {});
                    let uniqueNames = {},
                        uniqueSignatures = {};
                    Object.keys(this.interface.functions).forEach((signature) => {
                        let fragment = this.interface.functions[signature];
                        if (uniqueSignatures[signature]) {
                            lib_esm_logger.warn(`Duplicate ABI entry for ${JSON.stringify(signature)}`);
                            return;
                        }
                        uniqueSignatures[signature] = !0;
                        {
                            let name = fragment.name;
                            uniqueNames[`%${name}`] || (uniqueNames[`%${name}`] = []), uniqueNames[`%${name}`].push(signature);
                        }
                        if (
                            (null == this[signature] && (0, properties_lib_esm.zG)(this, signature, buildDefault(this, fragment, !0)),
                            null == this.functions[signature] && (0, properties_lib_esm.zG)(this.functions, signature, buildDefault(this, fragment, !1)),
                            null == this.callStatic[signature] && (0, properties_lib_esm.zG)(this.callStatic, signature, buildCall(this, fragment, !0)),
                            null == this.populateTransaction[signature])
                        ) {
                            var contract;
                            (0, properties_lib_esm.zG)(
                                this.populateTransaction,
                                signature,
                                ((contract = this),
                                function (...args) {
                                    return populateTransaction(contract, fragment, args);
                                })
                            );
                        }
                        null == this.estimateGas[signature] &&
                            (0, properties_lib_esm.zG)(
                                this.estimateGas,
                                signature,
                                (function (contract, fragment) {
                                    let signerOrProvider = contract.signer || contract.provider;
                                    return function (...args) {
                                        return __awaiter(this, void 0, void 0, function* () {
                                            signerOrProvider || lib_esm_logger.throwError("estimate require a provider or signer", logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation: "estimateGas" });
                                            let tx = yield populateTransaction(contract, fragment, args);
                                            return yield signerOrProvider.estimateGas(tx);
                                        });
                                    };
                                })(this, fragment)
                            );
                    }),
                        Object.keys(uniqueNames).forEach((name) => {
                            let signatures = uniqueNames[name];
                            if (signatures.length > 1) return;
                            name = name.substring(1);
                            let signature = signatures[0];
                            try {
                                null == this[name] && (0, properties_lib_esm.zG)(this, name, this[signature]);
                            } catch (e) {}
                            null == this.functions[name] && (0, properties_lib_esm.zG)(this.functions, name, this.functions[signature]),
                                null == this.callStatic[name] && (0, properties_lib_esm.zG)(this.callStatic, name, this.callStatic[signature]),
                                null == this.populateTransaction[name] && (0, properties_lib_esm.zG)(this.populateTransaction, name, this.populateTransaction[signature]),
                                null == this.estimateGas[name] && (0, properties_lib_esm.zG)(this.estimateGas, name, this.estimateGas[signature]);
                        });
                }
                static getContractAddress(transaction) {
                    return (0, address_lib_esm.CR)(transaction);
                }
                static getInterface(contractInterface) {
                    return Interface.isInterface(contractInterface) ? contractInterface : new Interface(contractInterface);
                }
                deployed() {
                    return this._deployed();
                }
                _deployed(blockTag) {
                    return (
                        this._deployedPromise ||
                            (this.deployTransaction
                                ? (this._deployedPromise = this.deployTransaction.wait().then(() => this))
                                : (this._deployedPromise = this.provider
                                      .getCode(this.address, blockTag)
                                      .then(
                                          (code) => ("0x" === code && lib_esm_logger.throwError("contract not deployed", logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { contractAddress: this.address, operation: "getDeployed" }), this)
                                      ))),
                        this._deployedPromise
                    );
                }
                fallback(overrides) {
                    this.signer || lib_esm_logger.throwError("sending a transactions require a signer", logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation: "sendTransaction(fallback)" });
                    let tx = (0, properties_lib_esm.DC)(overrides || {});
                    return (
                        ["from", "to"].forEach(function (key) {
                            null != tx[key] && lib_esm_logger.throwError("cannot override " + key, logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation: key });
                        }),
                        (tx.to = this.resolvedAddress),
                        this.deployed().then(() => this.signer.sendTransaction(tx))
                    );
                }
                connect(signerOrProvider) {
                    "string" == typeof signerOrProvider && (signerOrProvider = new abstract_signer_lib_esm.b(signerOrProvider, this.provider));
                    let contract = new this.constructor(this.address, this.interface, signerOrProvider);
                    return this.deployTransaction && (0, properties_lib_esm.zG)(contract, "deployTransaction", this.deployTransaction), contract;
                }
                attach(addressOrName) {
                    return new this.constructor(addressOrName, this.interface, this.signer || this.provider);
                }
                static isIndexed(value) {
                    return Indexed.isIndexed(value);
                }
                _normalizeRunningEvent(runningEvent) {
                    return this._runningEvents[runningEvent.tag] ? this._runningEvents[runningEvent.tag] : runningEvent;
                }
                _getRunningEvent(eventName) {
                    if ("string" == typeof eventName) {
                        if ("error" === eventName) return this._normalizeRunningEvent(new ErrorRunningEvent());
                        if ("event" === eventName) return this._normalizeRunningEvent(new RunningEvent("event", null));
                        if ("*" === eventName) return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));
                        let fragment = this.interface.getEvent(eventName);
                        return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));
                    }
                    if (eventName.topics && eventName.topics.length > 0) {
                        try {
                            let topic = eventName.topics[0];
                            if ("string" != typeof topic) throw Error("invalid topic");
                            let fragment1 = this.interface.getEvent(topic);
                            return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment1, eventName.topics));
                        } catch (error) {}
                        let filter = { address: this.address, topics: eventName.topics };
                        return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));
                    }
                    return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));
                }
                _checkRunningEvents(runningEvent) {
                    if (0 === runningEvent.listenerCount()) {
                        delete this._runningEvents[runningEvent.tag];
                        let emit = this._wrappedEmits[runningEvent.tag];
                        emit && runningEvent.filter && (this.provider.off(runningEvent.filter, emit), delete this._wrappedEmits[runningEvent.tag]);
                    }
                }
                _wrapEvent(runningEvent, log, listener) {
                    let event = (0, properties_lib_esm.p$)(log);
                    return (
                        (event.removeListener = () => {
                            listener && (runningEvent.removeListener(listener), this._checkRunningEvents(runningEvent));
                        }),
                        (event.getBlock = () => this.provider.getBlock(log.blockHash)),
                        (event.getTransaction = () => this.provider.getTransaction(log.transactionHash)),
                        (event.getTransactionReceipt = () => this.provider.getTransactionReceipt(log.transactionHash)),
                        runningEvent.prepareEvent(event),
                        event
                    );
                }
                _addEventListener(runningEvent, listener, once) {
                    if (
                        (this.provider || lib_esm_logger.throwError("events require a provider or a signer with a provider", logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation: "once" }),
                        runningEvent.addListener(listener, once),
                        (this._runningEvents[runningEvent.tag] = runningEvent),
                        !this._wrappedEmits[runningEvent.tag])
                    ) {
                        let wrappedEmit = (log) => {
                            let event = this._wrapEvent(runningEvent, log, listener);
                            if (null == event.decodeError)
                                try {
                                    let args = runningEvent.getEmit(event);
                                    this.emit(runningEvent.filter, ...args);
                                } catch (error) {
                                    event.decodeError = error.error;
                                }
                            null != runningEvent.filter && this.emit("event", event), null != event.decodeError && this.emit("error", event.decodeError, event);
                        };
                        (this._wrappedEmits[runningEvent.tag] = wrappedEmit), null != runningEvent.filter && this.provider.on(runningEvent.filter, wrappedEmit);
                    }
                }
                queryFilter(event, fromBlockOrBlockhash, toBlock) {
                    let runningEvent = this._getRunningEvent(event),
                        filter = (0, properties_lib_esm.DC)(runningEvent.filter);
                    return (
                        "string" == typeof fromBlockOrBlockhash && (0, lib_esm.A7)(fromBlockOrBlockhash, 32)
                            ? (null != toBlock && lib_esm_logger.throwArgumentError("cannot specify toBlock with blockhash", "toBlock", toBlock), (filter.blockHash = fromBlockOrBlockhash))
                            : ((filter.fromBlock = null != fromBlockOrBlockhash ? fromBlockOrBlockhash : 0), (filter.toBlock = null != toBlock ? toBlock : "latest")),
                        this.provider.getLogs(filter).then((logs) => logs.map((log) => this._wrapEvent(runningEvent, log, null)))
                    );
                }
                on(event, listener) {
                    return this._addEventListener(this._getRunningEvent(event), listener, !1), this;
                }
                once(event, listener) {
                    return this._addEventListener(this._getRunningEvent(event), listener, !0), this;
                }
                emit(eventName, ...args) {
                    if (!this.provider) return !1;
                    let runningEvent = this._getRunningEvent(eventName),
                        result = runningEvent.run(args) > 0;
                    return this._checkRunningEvents(runningEvent), result;
                }
                listenerCount(eventName) {
                    return this.provider ? (null == eventName ? Object.keys(this._runningEvents).reduce((accum, key) => accum + this._runningEvents[key].listenerCount(), 0) : this._getRunningEvent(eventName).listenerCount()) : 0;
                }
                listeners(eventName) {
                    if (!this.provider) return [];
                    if (null == eventName) {
                        let result = [];
                        for (let tag in this._runningEvents)
                            this._runningEvents[tag].listeners().forEach((listener) => {
                                result.push(listener);
                            });
                        return result;
                    }
                    return this._getRunningEvent(eventName).listeners();
                }
                removeAllListeners(eventName) {
                    if (!this.provider) return this;
                    if (null == eventName) {
                        for (let tag in this._runningEvents) {
                            let runningEvent = this._runningEvents[tag];
                            runningEvent.removeAllListeners(), this._checkRunningEvents(runningEvent);
                        }
                        return this;
                    }
                    let runningEvent1 = this._getRunningEvent(eventName);
                    return runningEvent1.removeAllListeners(), this._checkRunningEvents(runningEvent1), this;
                }
                off(eventName, listener) {
                    if (!this.provider) return this;
                    let runningEvent = this._getRunningEvent(eventName);
                    return runningEvent.removeListener(listener), this._checkRunningEvents(runningEvent), this;
                }
                removeListener(eventName, listener) {
                    return this.off(eventName, listener);
                }
            }
            class Contract extends BaseContract {}
            var units_lib_esm = __webpack_require__(35553),
                DataTable = __webpack_require__(30170),
                hooks = __webpack_require__(94208),
                webthree = __webpack_require__(58870),
                PageSection = __webpack_require__(88615),
                components = __webpack_require__(69976);
            let abi = {
                WETH_ABI: ["function balanceOf(address owner) view returns (uint balance)"],
                POOL_ABI: ["function deposit() external payable", "function withdraw(uint256) external", "function balanceOf(address owner) view returns (uint balance)"],
                WETH_ADDRESS: "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",
                POOL_ADDRESS: "0x0000000000a39bb272e79075ade125fd351887ac",
            };
            var Wallet_StyledComponents = __webpack_require__(85093);
            let Context = react.createContext({ isOpen: !1, setIsOpen() {}, wethBalance: null, poolBalance: null, walletBalance: null, hasPoolBalanceFor: () => !1 }),
                Provider = (props) => {
                    let [isOpen, setIsOpen] = react.useReducer((_, nextState) => nextState, !1),
                        { address, provider } = react.useContext(webthree._y),
                        walletBalance = (function (address, provider) {
                            let [balance, setBalance] = react.useState(null);
                            return (
                                react.useEffect(() => {
                                    if (null === address || null === provider) return;
                                    let updateBalance = async () => {
                                        try {
                                            let currentBalance = await provider.getBalance(address);
                                            setBalance(currentBalance);
                                        } catch (e) {}
                                    };
                                    return (
                                        provider.on("block", updateBalance),
                                        updateBalance(),
                                        () => {
                                            provider.off("block", updateBalance);
                                        }
                                    );
                                }, [address, provider]),
                                balance
                            );
                        })(address, provider),
                        wethBalance = useErc20Balance(abi.WETH_ADDRESS, abi.WETH_ABI, wethAdditionalTopics, address, provider),
                        poolBalance = useErc20Balance(abi.POOL_ADDRESS, abi.POOL_ABI, poolAdditionalTopics, address, provider),
                        hasPoolBalanceFor = react.useCallback(
                            (value) => {
                                let poolBalancePrice = new price.t(units_lib_esm.dF(poolBalance || 0), "ETH");
                                return poolBalancePrice.gte(value);
                            },
                            [poolBalance]
                        );
                    return (0, jsx_runtime.jsx)(Context.Provider, { value: { wethBalance, poolBalance, walletBalance, isOpen, setIsOpen, hasPoolBalanceFor }, children: props.children });
                },
                wethDepositId = id.id("Deposit(address,uint256)"),
                wethWithdrawalId = id.id("Withdrawal(address,uint256)"),
                wethAdditionalTopics = [wethDepositId, wethWithdrawalId],
                poolAdditionalTopics = [];
            function useErc20Balance(erc20ContractAddress, erc20Abi, extraFirstPositionTopics, address, provider) {
                let [balance, setBalance] = react.useState(null);
                return (
                    react.useEffect(() => {
                        if (null === address || null === provider) return;
                        let erc20TransferId = id.id("Transfer(address,address,uint256)"),
                            paddedAddress = lib_esm.$m(address, 32),
                            erc20Contract = new Contract(erc20ContractAddress, erc20Abi, provider),
                            updateBalance = async function () {
                                for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                                try {
                                    let currentBalance = await erc20Contract.balanceOf(address);
                                    setBalance(currentBalance);
                                } catch (e) {}
                            },
                            firstPositionFilter = { address: erc20ContractAddress, topics: [[erc20TransferId, ...extraFirstPositionTopics], paddedAddress] },
                            secondPositionFilter = { address: erc20ContractAddress, topics: [erc20TransferId, null, paddedAddress] };
                        return (
                            provider.on(firstPositionFilter, updateBalance),
                            provider.on(secondPositionFilter, updateBalance),
                            updateBalance(),
                            () => {
                                provider.off(firstPositionFilter, updateBalance), provider.off(secondPositionFilter, updateBalance);
                            }
                        );
                    }, [erc20ContractAddress, erc20Abi, extraFirstPositionTopics, address, provider]),
                    balance
                );
            }
            var features_user = __webpack_require__(30401),
                util = __webpack_require__(66271);
            ((Step = Step1 || (Step1 = {}))[(Step.ZERO = 0)] = "ZERO"), (Step[(Step.ONE = 1)] = "ONE"), (Step[(Step.TWO = 2)] = "TWO"), (Step[(Step.THREE = 3)] = "THREE"), (Step[(Step.FOUR = 4)] = "FOUR"), (Step[(Step.FIVE = 5)] = "FIVE");
            let CONTENT = {
                    [Step1.ZERO]: {
                        icon: "blur-coin",
                        title: "Deposit to bid and claim airdrop 2",
                        content: "Place your first bid to claim Airdrop 2. Blur Bids work by depositing ETH into your own Bidding Pool. You can cancel bids and withdraw your ETH anytime.",
                    },
                    [Step1.ONE]: {
                        icon: "blur-coin",
                        title: "The more you bid the more you earn",
                        content: "Blur Bids work by depositing ETH into your own bidding pool. Place bids to earn Care Packages for Airdrop 3, our biggest and final airdrop. Learn more",
                    },
                    [Step1.TWO]: {
                        icon: "gavel",
                        title: "Blur lets you bid with ETH",
                        content: "Say goodbye to WETH bids! Blur lets you bid with ETH, cancel bids without gas, and stay safe from stolen NFTs. Just deposit ETH into your Bidding Pool to get started.",
                    },
                    [Step1.THREE]: {
                        icon: "shine",
                        title: "Free bids and cancellations",
                        content:
                            "Once you deposit ETH into your Bidding Pool you can place unlimited bids for free. Your balance can be used to bid on multiple collections at once. Cancel your bids or withdraw anytime. All with no fees and no gas required.",
                    },
                    [Step1.FOUR]: {
                        icon: "shield",
                        title: "Safe and Secure",
                        content:
                            "Bids come with Stolen NFT protection so flagged NFTs on OpenSea and recently transferred NFTs can’t sell into your bid. The smart contracts for Blur Bidding Pools have been successfully audited by Code4rena. All code is verified on Etherscan.",
                    },
                    [Step1.FIVE]: {
                        icon: "shopping-cart",
                        title: "Buy using your pool balance",
                        content: "You can use your Bidding Pool to buy NFTs too. When you don’t have enough ETH in your wallet, Blur uses your Pool balance to complete purchases so you don’t need to withdraw.",
                    },
                },
                WalletIntro = (props) => {
                    let user = react.useContext(features_user._),
                        steps = (function (userRewards) {
                            let airdrop2UnclaimedBoxesCount = (0, util.Lt)(userRewards, { concealOne: !1 });
                            return airdrop2UnclaimedBoxesCount > 0 ? [Step1.ZERO, Step1.TWO, Step1.THREE, Step1.FOUR, Step1.FIVE] : [Step1.ONE, Step1.TWO, Step1.THREE, Step1.FOUR, Step1.FIVE];
                        })(user.rewards);
                    return (0, jsx_runtime.jsx)(components.vF, {
                        steps: steps,
                        children(param) {
                            let { nextStep, goToStep, currentStep } = param,
                                currentStepIndex = steps.indexOf(currentStep);
                            return (0, jsx_runtime.jsxs)(Wallet_StyledComponents.Mn, {
                                children: [
                                    (0, jsx_runtime.jsx)(components.Kq, {
                                        style: { transform: "translateX(-".concat(currentStepIndex * Wallet_StyledComponents.mF + 8 * currentStepIndex, "px)") },
                                        spacing: "24px",
                                        direction: "row",
                                        className: "carousel",
                                        children: steps.map((step) =>
                                            (0, jsx_runtime.jsxs)(components.Kq, {
                                                align: "center",
                                                direction: "column",
                                                className: "carousel-item",
                                                children: [
                                                    (0, jsx_runtime.jsx)(components.JO, { name: CONTENT[step].icon, color: "grey300", className: "icon" }),
                                                    (0, jsx_runtime.jsx)(components.xv, { mt: "24px", color: "grey300", variant: "body", transform: "uppercase", children: CONTENT[step].title }),
                                                    (0, jsx_runtime.jsx)(components.xv, { mt: "8px", color: "grey100", align: "center", variant: "body", className: "text-content", children: CONTENT[step].content }),
                                                ],
                                            })
                                        ),
                                    }),
                                    (0, jsx_runtime.jsxs)(components.Kq, {
                                        align: "center",
                                        spacing: "16px",
                                        direction: "column",
                                        children: [
                                            (0, jsx_runtime.jsx)(components.Oo, {
                                                count: steps.length,
                                                onClick(index) {
                                                    goToStep(steps[index]);
                                                },
                                                activeIndex: currentStepIndex,
                                            }),
                                            (0, jsx_runtime.jsx)(components.zx, {
                                                style: { width: "240px" },
                                                variant: "primary",
                                                onClick() {
                                                    currentStep !== steps[steps.length - 1] ? nextStep() : props.finish();
                                                },
                                                children: (0, jsx_runtime.jsx)(components.xv, { variant: "body", transform: "uppercase", children: currentStep !== steps[steps.length - 1] ? "next" : "add eth to start bidding" }),
                                            }),
                                        ],
                                    }),
                                ],
                            });
                        },
                    });
                };
            ((TabId = TabId1 || (TabId1 = {}))[(TabId.SELF = 1)] = "SELF"), (TabId[(TabId.POOL = 2)] = "POOL");
            let TABS = [
                    { id: TabId1.SELF, icon: "plus-square", title: "add funds to pool" },
                    { id: TabId1.POOL, icon: "minus-square", title: "withdraw from pool" },
                ],
                Wallet = () => {
                    var ref;
                    let { isOpen, setIsOpen, wethBalance, poolBalance, walletBalance } = react.useContext(Context),
                        { address, chainId, provider, switchToMainnet } = react.useContext(webthree._y),
                        { dispatchNotifications } = react.useContext(notifications._y),
                        popperRef = react.useRef(null),
                        cachedHasViewedIntro = (0, hooks._)("blur.wallet.intro"),
                        [activeTab, setActiveTab] = react.useState(TabId1.SELF),
                        [inputValue, setInputValue] = react.useState(""),
                        [hasViewedIntro, setHasViewedIntro] = react.useState(null !== (ref = cachedHasViewedIntro.get()) && void 0 !== ref && ref),
                        [confirmInWallet, setConfirmInWallet] = react.useState(!1);
                    react.useEffect(() => {
                        isOpen || (setActiveTab(TabId1.SELF), setInputValue(""));
                    }, [isOpen]),
                        react.useEffect(() => {
                            null === poolBalance || poolBalance.isZero() || hasViewedIntro || setHasViewedIntro(!0);
                        }, [poolBalance, hasViewedIntro]),
                        react.useEffect(() => {
                            if (!address || !provider || !inputValue || !confirmInWallet) return;
                            let execute = async () => {
                                let transactionResponse;
                                let signer = provider.getSigner(),
                                    blurPoolContract = new Contract(abi.POOL_ADDRESS, abi.POOL_ABI, signer),
                                    depositAmount = units_lib_esm.fi(inputValue),
                                    withdrawAmount = units_lib_esm.fi(inputValue);
                                try {
                                    if (activeTab === TabId1.SELF) {
                                        if (walletBalance && depositAmount.gt(walletBalance)) throw (await (0, utils._v)(1e3), Error("insufficient funds"));
                                        transactionResponse = await blurPoolContract.deposit({ value: depositAmount });
                                    } else {
                                        if (poolBalance && withdrawAmount.gt(poolBalance)) throw (await (0, utils._v)(1e3), Error("insufficient funds"));
                                        transactionResponse = await blurPoolContract.withdraw(withdrawAmount);
                                    }
                                } catch (e) {
                                    let errorMessage = null == e ? void 0 : e.message;
                                    "string" == typeof errorMessage && e.message.includes("insufficient funds")
                                        ? dispatchNotifications({ type: notifications.Us.ADD_ONE, payload: { title: "insufficient funds", subtitle: activeTab === TabId1.SELF ? "Deposit to Blur Pool" : "Withdraw from Blur Pool" } })
                                        : "string" == typeof errorMessage &&
                                          (errorMessage.toLowerCase().includes("user denied") || errorMessage.toLowerCase().includes("user rejected")) &&
                                          dispatchNotifications({ type: notifications.Us.ADD_ONE, payload: { title: "user rejected", subtitle: activeTab === TabId1.SELF ? "Deposit to Blur Pool" : "Withdraw from Blur Pool" } });
                                }
                                setInputValue(""),
                                    setConfirmInWallet(!1),
                                    transactionResponse &&
                                        (dispatchNotifications({
                                            type: notifications.Us.ADD_ONE,
                                            payload: {
                                                title: "transaction pending",
                                                subtitle: activeTab === TabId1.SELF ? "Deposit to Blur Pool" : "Withdraw from Blur Pool",
                                                linkHref: "https://etherscan.io/tx/".concat(transactionResponse.hash),
                                                linkType: "icon",
                                            },
                                        }),
                                        provider.once(transactionResponse.hash, async (transactionReceipt) => {
                                            dispatchNotifications({
                                                type: notifications.Us.ADD_ONE,
                                                payload: {
                                                    title: transactionReceipt.status ? "transaction confirmed" : "transaction failed",
                                                    subtitle: activeTab === TabId1.SELF ? "Deposit to Blur Pool" : "Withdraw from Blur Pool",
                                                    linkHref: "https://etherscan.io/tx/".concat(transactionResponse.hash),
                                                    linkType: "icon",
                                                },
                                            });
                                        }));
                            };
                            1 === chainId ? execute() : (setConfirmInWallet(!1), switchToMainnet());
                        }, [address, chainId, activeTab, provider, inputValue, null == poolBalance ? void 0 : poolBalance.toHexString(), null == walletBalance ? void 0 : walletBalance.toHexString(), confirmInWallet]);
                    let onInputChange = (e) => {
                            let value = e.target.value,
                                isValueNaN = isNaN(Number(value)),
                                isValueNegative = -1 === Math.sign(Number(value));
                            isValueNaN || isValueNegative || setInputValue(value);
                        },
                        buttonWidth = popperRef.current ? popperRef.current.getBoundingClientRect().width : 0,
                        formattedWethBalance = formatBalance(wethBalance),
                        formattedPoolBalance = formatBalance(poolBalance),
                        formattedWalletBalance = formatBalance(walletBalance),
                        formattedTotalBalance = formatBalance(null !== poolBalance && null !== walletBalance ? poolBalance.add(walletBalance) : bignumber.O$.from(0));
                    return (0, jsx_runtime.jsxs)(react.Fragment, {
                        children: [
                            (0, jsx_runtime.jsx)(Wallet_StyledComponents.TI, { ref: popperRef, value: formattedTotalBalance, active: isOpen }),
                            (0, jsx_runtime.jsx)(components.rD, {
                                open: isOpen,
                                options: { yOffset: 4, xOffset: -(Wallet_StyledComponents.mF / 2) + buttonWidth / 2 - 8, position: "down", mechanism: "click" },
                                anchorEl: popperRef,
                                onVisibleChange: setIsOpen,
                                children: () =>
                                    hasViewedIntro
                                        ? (0, jsx_runtime.jsxs)(PageSection.NP, {
                                              icon: "wallet",
                                              title: "available funds",
                                              style: { width: "".concat(Wallet_StyledComponents.mF, "px") },
                                              options: { rootPadding: "16px 16px 16px 16px" },
                                              children: [
                                                  (0, jsx_runtime.jsx)(components.iz, {}),
                                                  (0, jsx_runtime.jsxs)(components.Kq, {
                                                      pt: "24px",
                                                      pb: "24px",
                                                      spacing: "24px",
                                                      direction: "row",
                                                      children: [
                                                          (0, jsx_runtime.jsx)(Wallet_StyledComponents.NE, { value: formattedWalletBalance, label: "wallet balance", active: activeTab === TabId1.SELF }),
                                                          (0, jsx_runtime.jsx)(Wallet_StyledComponents.NE, { value: formattedPoolBalance, label: "pool balance", active: activeTab === TabId1.POOL }),
                                                      ],
                                                  }),
                                                  (null == poolBalance ? void 0 : poolBalance.isZero()) &&
                                                      (0, jsx_runtime.jsx)(Wallet_StyledComponents.qX, { children: "Your Pool Balance is empty. Add funds to bid. You can withdraw anytime. No minimum required." }),
                                                  !(null == poolBalance ? void 0 : poolBalance.isZero()) &&
                                                      !(null == wethBalance ? void 0 : wethBalance.isZero()) &&
                                                      (0, jsx_runtime.jsx)(Wallet_StyledComponents.qX, { children: "You have ".concat(formattedWethBalance, " WETH in your wallet. Unwrap your WETH to make the funds available to Blur.") }),
                                                  (0, jsx_runtime.jsx)(components.Kq, {
                                                      pb: "16px",
                                                      role: "tablist",
                                                      spacing: "24px",
                                                      direction: "row",
                                                      children: TABS.map((param) => {
                                                          let { id, icon, title } = param;
                                                          return (0, jsx_runtime.jsx)(
                                                              PageSection.Y6,
                                                              { title: title, style: { width: "50%" }, active: activeTab === id, onClick: () => setActiveTab(id), iconProps: { name: icon, nonRetinaScaleFactor: 1.2 } },
                                                              id
                                                          );
                                                      }),
                                                  }),
                                                  (0, jsx_runtime.jsx)(components.iz, {}),
                                                  (0, jsx_runtime.jsx)(Wallet_StyledComponents.II, { value: inputValue, onChange: onInputChange }),
                                                  (0, jsx_runtime.jsx)(components.iz, { style: { marginBottom: "24px" } }),
                                                  confirmInWallet
                                                      ? (0, jsx_runtime.jsx)(Wallet_StyledComponents.$M, { children: "Confirm in wallet..." })
                                                      : (0, jsx_runtime.jsxs)(Wallet_StyledComponents.Mm, {
                                                            variant: "primary",
                                                            disabled: !inputValue,
                                                            onClick: () => setConfirmInWallet(!0),
                                                            children: [
                                                                (0, jsx_runtime.jsx)(components.xv, { color: "black", weight: 700, variant: "body", transform: "uppercase", children: 1 === activeTab ? "add to pool" : "withdraw from pool" }),
                                                                (0, jsx_runtime.jsx)("div", { className: "price-cell", children: (0, jsx_runtime.jsx)(DataTable.Ic, { cell: { value: new price.t(inputValue, "ETH") } }) }),
                                                            ],
                                                        }),
                                                  (0, jsx_runtime.jsx)(components.iz, { style: { marginTop: "24px" } }),
                                                  (0, jsx_runtime.jsx)(components.xv, {
                                                      mt: "24px",
                                                      color: "grey300",
                                                      style: { lineHeight: "150%" },
                                                      variant: "body",
                                                      children: "Use your pool balance to bid on collections. All bids come with stolen NFT protection.",
                                                  }),
                                              ],
                                          })
                                        : (0, jsx_runtime.jsx)(WalletIntro, {
                                              finish() {
                                                  setHasViewedIntro(!0), cachedHasViewedIntro.set(!0);
                                              },
                                          }),
                            }),
                        ],
                    });
                };
            function formatBalance(value) {
                let etherString = units_lib_esm.dF(value || 0),
                    etherTruncated = parseFloat(etherString).toFixed(4);
                return etherTruncated;
            }
        },
        2335: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                Kt: function () {
                    return ALL_COLLECTIONS_THROTTLE_TIME;
                },
                u5: function () {
                    return FeedType1;
                },
                $1: function () {
                    return MISSING_NFTS_THROTTLE_TIME;
                },
                ZP: function () {
                    return context;
                },
                aX: function () {
                    return getContractAddressTopicName;
                },
                oX: function () {
                    return throttler;
                },
                zu: function () {
                    return useFeeds;
                },
            });
            var PacketType,
                FeedType,
                PacketType1,
                FeedType1,
                socket_io_parser_build_esm_namespaceObject = {};
            __webpack_require__.r(socket_io_parser_build_esm_namespaceObject),
                __webpack_require__.d(socket_io_parser_build_esm_namespaceObject, {
                    Decoder: function () {
                        return Decoder;
                    },
                    Encoder: function () {
                        return Encoder;
                    },
                    PacketType: function () {
                        return PacketType1;
                    },
                    protocol: function () {
                        return build_esm_protocol;
                    },
                });
            var jsx_runtime = __webpack_require__(85893),
                react = __webpack_require__(67294),
                parseuri = __webpack_require__(64187),
                has_cors = __webpack_require__(38058),
                globalThis_browser = "undefined" != typeof self ? self : "undefined" != typeof window ? window : Function("return this")();
            function xmlhttprequest_browser(opts) {
                let xdomain = opts.xdomain;
                try {
                    if ("undefined" != typeof XMLHttpRequest && (!xdomain || has_cors)) return new XMLHttpRequest();
                } catch (e) {}
                if (!xdomain)
                    try {
                        return new globalThis_browser[["Active"].concat("Object").join("X")]("Microsoft.XMLHTTP");
                    } catch (e1) {}
            }
            function pick(obj, ...attr) {
                return attr.reduce((acc, k) => (obj.hasOwnProperty(k) && (acc[k] = obj[k]), acc), {});
            }
            let NATIVE_SET_TIMEOUT = setTimeout,
                NATIVE_CLEAR_TIMEOUT = clearTimeout;
            function installTimerFunctions(obj, opts) {
                opts.useNativeTimers
                    ? ((obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis_browser)), (obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis_browser)))
                    : ((obj.setTimeoutFn = setTimeout.bind(globalThis_browser)), (obj.clearTimeoutFn = clearTimeout.bind(globalThis_browser)));
            }
            var component_emitter = __webpack_require__(43063);
            let PACKET_TYPES = Object.create(null);
            (PACKET_TYPES.open = "0"), (PACKET_TYPES.close = "1"), (PACKET_TYPES.ping = "2"), (PACKET_TYPES.pong = "3"), (PACKET_TYPES.message = "4"), (PACKET_TYPES.upgrade = "5"), (PACKET_TYPES.noop = "6");
            let PACKET_TYPES_REVERSE = Object.create(null);
            Object.keys(PACKET_TYPES).forEach((key) => {
                PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;
            });
            let ERROR_PACKET = { type: "error", data: "parser error" },
                withNativeBlob = "function" == typeof Blob || ("undefined" != typeof Blob && "[object BlobConstructor]" === Object.prototype.toString.call(Blob)),
                withNativeArrayBuffer = "function" == typeof ArrayBuffer,
                isView = (obj) => ("function" == typeof ArrayBuffer.isView ? ArrayBuffer.isView(obj) : obj && obj.buffer instanceof ArrayBuffer),
                encodePacket = ({ type, data }, supportsBinary, callback) =>
                    withNativeBlob && data instanceof Blob
                        ? supportsBinary
                            ? callback(data)
                            : encodeBlobAsBase64(data, callback)
                        : withNativeArrayBuffer && (data instanceof ArrayBuffer || isView(data))
                        ? supportsBinary
                            ? callback(data)
                            : encodeBlobAsBase64(new Blob([data]), callback)
                        : callback(PACKET_TYPES[type] + (data || "")),
                encodeBlobAsBase64 = (data, callback) => {
                    let fileReader = new FileReader();
                    return (
                        (fileReader.onload = function () {
                            let content = fileReader.result.split(",")[1];
                            callback("b" + content);
                        }),
                        fileReader.readAsDataURL(data)
                    );
                };
            for (var chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", lookup = "undefined" == typeof Uint8Array ? [] : new Uint8Array(256), i = 0; i < chars.length; i++) lookup[chars.charCodeAt(i)] = i;
            var decode = function (base64) {
                var i,
                    encoded1,
                    encoded2,
                    encoded3,
                    encoded4,
                    bufferLength = 0.75 * base64.length,
                    len = base64.length,
                    p = 0;
                "=" === base64[base64.length - 1] && (bufferLength--, "=" === base64[base64.length - 2] && bufferLength--);
                var arraybuffer = new ArrayBuffer(bufferLength),
                    bytes = new Uint8Array(arraybuffer);
                for (i = 0; i < len; i += 4)
                    (encoded1 = lookup[base64.charCodeAt(i)]),
                        (encoded2 = lookup[base64.charCodeAt(i + 1)]),
                        (encoded3 = lookup[base64.charCodeAt(i + 2)]),
                        (encoded4 = lookup[base64.charCodeAt(i + 3)]),
                        (bytes[p++] = (encoded1 << 2) | (encoded2 >> 4)),
                        (bytes[p++] = ((15 & encoded2) << 4) | (encoded3 >> 2)),
                        (bytes[p++] = ((3 & encoded3) << 6) | (63 & encoded4));
                return arraybuffer;
            };
            let decodePacket_browser_withNativeArrayBuffer = "function" == typeof ArrayBuffer,
                decodePacket = (encodedPacket, binaryType) => {
                    if ("string" != typeof encodedPacket) return { type: "message", data: mapBinary(encodedPacket, binaryType) };
                    let type = encodedPacket.charAt(0);
                    if ("b" === type) return { type: "message", data: decodeBase64Packet(encodedPacket.substring(1), binaryType) };
                    let packetType = PACKET_TYPES_REVERSE[type];
                    return packetType ? (encodedPacket.length > 1 ? { type: PACKET_TYPES_REVERSE[type], data: encodedPacket.substring(1) } : { type: PACKET_TYPES_REVERSE[type] }) : ERROR_PACKET;
                },
                decodeBase64Packet = (data, binaryType) => {
                    if (!decodePacket_browser_withNativeArrayBuffer) return { base64: !0, data };
                    {
                        let decoded = decode(data);
                        return mapBinary(decoded, binaryType);
                    }
                },
                mapBinary = (data, binaryType) => ("blob" === binaryType && data instanceof ArrayBuffer ? new Blob([data]) : data),
                encodePayload = (packets, callback) => {
                    let length = packets.length,
                        encodedPackets = Array(length),
                        count = 0;
                    packets.forEach((packet, i) => {
                        encodePacket(packet, !1, (encodedPacket) => {
                            (encodedPackets[i] = encodedPacket), ++count === length && callback(encodedPackets.join("\x1e"));
                        });
                    });
                },
                decodePayload = (encodedPayload, binaryType) => {
                    let encodedPackets = encodedPayload.split("\x1e"),
                        packets = [];
                    for (let i = 0; i < encodedPackets.length; i++) {
                        let decodedPacket = decodePacket(encodedPackets[i], binaryType);
                        if ((packets.push(decodedPacket), "error" === decodedPacket.type)) break;
                    }
                    return packets;
                };
            class Transport extends component_emitter.Q {
                constructor(opts) {
                    super(), (this.writable = !1), installTimerFunctions(this, opts), (this.opts = opts), (this.query = opts.query), (this.readyState = ""), (this.socket = opts.socket);
                }
                onError(msg, desc) {
                    let err = Error(msg);
                    return (err.type = "TransportError"), (err.description = desc), super.emit("error", err), this;
                }
                open() {
                    return ("closed" === this.readyState || "" === this.readyState) && ((this.readyState = "opening"), this.doOpen()), this;
                }
                close() {
                    return ("opening" === this.readyState || "open" === this.readyState) && (this.doClose(), this.onClose()), this;
                }
                send(packets) {
                    "open" === this.readyState && this.write(packets);
                }
                onOpen() {
                    (this.readyState = "open"), (this.writable = !0), super.emit("open");
                }
                onData(data) {
                    let packet = decodePacket(data, this.socket.binaryType);
                    this.onPacket(packet);
                }
                onPacket(packet) {
                    super.emit("packet", packet);
                }
                onClose() {
                    (this.readyState = "closed"), super.emit("close");
                }
            }
            var yeast = __webpack_require__(82281),
                parseqs = __webpack_require__(81830);
            class Polling extends Transport {
                constructor() {
                    super(...arguments), (this.polling = !1);
                }
                get name() {
                    return "polling";
                }
                doOpen() {
                    this.poll();
                }
                pause(onPause) {
                    this.readyState = "pausing";
                    let pause = () => {
                        (this.readyState = "paused"), onPause();
                    };
                    if (this.polling || !this.writable) {
                        let total = 0;
                        this.polling &&
                            (total++,
                            this.once("pollComplete", function () {
                                --total || pause();
                            })),
                            this.writable ||
                                (total++,
                                this.once("drain", function () {
                                    --total || pause();
                                }));
                    } else pause();
                }
                poll() {
                    (this.polling = !0), this.doPoll(), this.emit("poll");
                }
                onData(data) {
                    let callback = (packet) => {
                        if (("opening" === this.readyState && "open" === packet.type && this.onOpen(), "close" === packet.type)) return this.onClose(), !1;
                        this.onPacket(packet);
                    };
                    decodePayload(data, this.socket.binaryType).forEach(callback), "closed" !== this.readyState && ((this.polling = !1), this.emit("pollComplete"), "open" === this.readyState && this.poll());
                }
                doClose() {
                    let close = () => {
                        this.write([{ type: "close" }]);
                    };
                    "open" === this.readyState ? close() : this.once("open", close);
                }
                write(packets) {
                    (this.writable = !1),
                        encodePayload(packets, (data) => {
                            this.doWrite(data, () => {
                                (this.writable = !0), this.emit("drain");
                            });
                        });
                }
                uri() {
                    let query = this.query || {},
                        schema = this.opts.secure ? "https" : "http",
                        port = "";
                    !1 !== this.opts.timestampRequests && (query[this.opts.timestampParam] = yeast()),
                        this.supportsBinary || query.sid || (query.b64 = 1),
                        this.opts.port && (("https" === schema && 443 !== Number(this.opts.port)) || ("http" === schema && 80 !== Number(this.opts.port))) && (port = ":" + this.opts.port);
                    let encodedQuery = parseqs.encode(query),
                        ipv6 = -1 !== this.opts.hostname.indexOf(":");
                    return schema + "://" + (ipv6 ? "[" + this.opts.hostname + "]" : this.opts.hostname) + port + this.opts.path + (encodedQuery.length ? "?" + encodedQuery : "");
                }
            }
            function empty() {}
            let hasXHR2 = (function () {
                let xhr = new xmlhttprequest_browser({ xdomain: !1 });
                return null != xhr.responseType;
            })();
            class Request extends component_emitter.Q {
                constructor(uri, opts) {
                    super(),
                        installTimerFunctions(this, opts),
                        (this.opts = opts),
                        (this.method = opts.method || "GET"),
                        (this.uri = uri),
                        (this.async = !1 !== opts.async),
                        (this.data = void 0 !== opts.data ? opts.data : null),
                        this.create();
                }
                create() {
                    let opts = pick(this.opts, "agent", "pfx", "key", "passphrase", "cert", "ca", "ciphers", "rejectUnauthorized", "autoUnref");
                    (opts.xdomain = !!this.opts.xd), (opts.xscheme = !!this.opts.xs);
                    let xhr = (this.xhr = new xmlhttprequest_browser(opts));
                    try {
                        xhr.open(this.method, this.uri, this.async);
                        try {
                            if (this.opts.extraHeaders)
                                for (let i in (xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(!0), this.opts.extraHeaders)) this.opts.extraHeaders.hasOwnProperty(i) && xhr.setRequestHeader(i, this.opts.extraHeaders[i]);
                        } catch (e) {}
                        if ("POST" === this.method)
                            try {
                                xhr.setRequestHeader("Content-type", "text/plain;charset=UTF-8");
                            } catch (e1) {}
                        try {
                            xhr.setRequestHeader("Accept", "*/*");
                        } catch (e2) {}
                        "withCredentials" in xhr && (xhr.withCredentials = this.opts.withCredentials),
                            this.opts.requestTimeout && (xhr.timeout = this.opts.requestTimeout),
                            (xhr.onreadystatechange = () => {
                                4 === xhr.readyState &&
                                    (200 === xhr.status || 1223 === xhr.status
                                        ? this.onLoad()
                                        : this.setTimeoutFn(() => {
                                              this.onError("number" == typeof xhr.status ? xhr.status : 0);
                                          }, 0));
                            }),
                            xhr.send(this.data);
                    } catch (e3) {
                        this.setTimeoutFn(() => {
                            this.onError(e3);
                        }, 0);
                        return;
                    }
                    "undefined" != typeof document && ((this.index = Request.requestsCount++), (Request.requests[this.index] = this));
                }
                onSuccess() {
                    this.emit("success"), this.cleanup();
                }
                onData(data) {
                    this.emit("data", data), this.onSuccess();
                }
                onError(err) {
                    this.emit("error", err), this.cleanup(!0);
                }
                cleanup(fromError) {
                    if (void 0 !== this.xhr && null !== this.xhr) {
                        if (((this.xhr.onreadystatechange = empty), fromError))
                            try {
                                this.xhr.abort();
                            } catch (e) {}
                        "undefined" != typeof document && delete Request.requests[this.index], (this.xhr = null);
                    }
                }
                onLoad() {
                    let data = this.xhr.responseText;
                    null !== data && this.onData(data);
                }
                abort() {
                    this.cleanup();
                }
            }
            function unloadHandler() {
                for (let i in Request.requests) Request.requests.hasOwnProperty(i) && Request.requests[i].abort();
            }
            (Request.requestsCount = 0),
                (Request.requests = {}),
                "undefined" != typeof document &&
                    ("function" == typeof attachEvent ? attachEvent("onunload", unloadHandler) : "function" == typeof addEventListener && addEventListener("onpagehide" in globalThis_browser ? "pagehide" : "unload", unloadHandler, !1));
            let nextTick = (() => {
                    let isPromiseAvailable = "function" == typeof Promise && "function" == typeof Promise.resolve;
                    return isPromiseAvailable ? (cb) => Promise.resolve().then(cb) : (cb, setTimeoutFn) => setTimeoutFn(cb, 0);
                })(),
                WebSocket = globalThis_browser.WebSocket || globalThis_browser.MozWebSocket;
            __webpack_require__(48764).Buffer;
            let isReactNative = "undefined" != typeof navigator && "string" == typeof navigator.product && "reactnative" === navigator.product.toLowerCase();
            class WS extends Transport {
                constructor(opts) {
                    super(opts), (this.supportsBinary = !opts.forceBase64);
                }
                get name() {
                    return "websocket";
                }
                doOpen() {
                    if (!this.check()) return;
                    let uri = this.uri(),
                        protocols = this.opts.protocols,
                        opts = isReactNative
                            ? {}
                            : pick(
                                  this.opts,
                                  "agent",
                                  "perMessageDeflate",
                                  "pfx",
                                  "key",
                                  "passphrase",
                                  "cert",
                                  "ca",
                                  "ciphers",
                                  "rejectUnauthorized",
                                  "localAddress",
                                  "protocolVersion",
                                  "origin",
                                  "maxPayload",
                                  "family",
                                  "checkServerIdentity"
                              );
                    this.opts.extraHeaders && (opts.headers = this.opts.extraHeaders);
                    try {
                        this.ws = isReactNative ? new WebSocket(uri, protocols, opts) : protocols ? new WebSocket(uri, protocols) : new WebSocket(uri);
                    } catch (err) {
                        return this.emit("error", err);
                    }
                    (this.ws.binaryType = this.socket.binaryType || "arraybuffer"), this.addEventListeners();
                }
                addEventListeners() {
                    (this.ws.onopen = () => {
                        this.opts.autoUnref && this.ws._socket.unref(), this.onOpen();
                    }),
                        (this.ws.onclose = this.onClose.bind(this)),
                        (this.ws.onmessage = (ev) => this.onData(ev.data)),
                        (this.ws.onerror = (e) => this.onError("websocket error", e));
                }
                write(packets) {
                    this.writable = !1;
                    for (let i = 0; i < packets.length; i++) {
                        let packet = packets[i],
                            lastPacket = i === packets.length - 1;
                        encodePacket(packet, this.supportsBinary, (data) => {
                            try {
                                this.ws.send(data);
                            } catch (e) {}
                            lastPacket &&
                                nextTick(() => {
                                    (this.writable = !0), this.emit("drain");
                                }, this.setTimeoutFn);
                        });
                    }
                }
                doClose() {
                    void 0 !== this.ws && (this.ws.close(), (this.ws = null));
                }
                uri() {
                    let query = this.query || {},
                        schema = this.opts.secure ? "wss" : "ws",
                        port = "";
                    this.opts.port && (("wss" === schema && 443 !== Number(this.opts.port)) || ("ws" === schema && 80 !== Number(this.opts.port))) && (port = ":" + this.opts.port),
                        this.opts.timestampRequests && (query[this.opts.timestampParam] = yeast()),
                        this.supportsBinary || (query.b64 = 1);
                    let encodedQuery = parseqs.encode(query),
                        ipv6 = -1 !== this.opts.hostname.indexOf(":");
                    return schema + "://" + (ipv6 ? "[" + this.opts.hostname + "]" : this.opts.hostname) + port + this.opts.path + (encodedQuery.length ? "?" + encodedQuery : "");
                }
                check() {
                    return !!WebSocket && !("__initialize" in WebSocket && this.name === WS.prototype.name);
                }
            }
            let transports = {
                websocket: WS,
                polling: class extends Polling {
                    constructor(opts) {
                        if ((super(opts), "undefined" != typeof location)) {
                            let isSSL = "https:" === location.protocol,
                                port = location.port;
                            port || (port = isSSL ? "443" : "80"), (this.xd = ("undefined" != typeof location && opts.hostname !== location.hostname) || port !== opts.port), (this.xs = opts.secure !== isSSL);
                        }
                        let forceBase64 = opts && opts.forceBase64;
                        this.supportsBinary = hasXHR2 && !forceBase64;
                    }
                    request(opts = {}) {
                        return Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts), new Request(this.uri(), opts);
                    }
                    doWrite(data, fn) {
                        let req = this.request({ method: "POST", data: data });
                        req.on("success", fn),
                            req.on("error", (err) => {
                                this.onError("xhr post error", err);
                            });
                    }
                    doPoll() {
                        let req = this.request();
                        req.on("data", this.onData.bind(this)),
                            req.on("error", (err) => {
                                this.onError("xhr poll error", err);
                            }),
                            (this.pollXhr = req);
                    }
                },
            };
            class Socket extends component_emitter.Q {
                constructor(uri, opts = {}) {
                    super(),
                        uri && "object" == typeof uri && ((opts = uri), (uri = null)),
                        uri
                            ? ((uri = parseuri(uri)), (opts.hostname = uri.host), (opts.secure = "https" === uri.protocol || "wss" === uri.protocol), (opts.port = uri.port), uri.query && (opts.query = uri.query))
                            : opts.host && (opts.hostname = parseuri(opts.host).host),
                        installTimerFunctions(this, opts),
                        (this.secure = null != opts.secure ? opts.secure : "undefined" != typeof location && "https:" === location.protocol),
                        opts.hostname && !opts.port && (opts.port = this.secure ? "443" : "80"),
                        (this.hostname = opts.hostname || ("undefined" != typeof location ? location.hostname : "localhost")),
                        (this.port = opts.port || ("undefined" != typeof location && location.port ? location.port : this.secure ? "443" : "80")),
                        (this.transports = opts.transports || ["polling", "websocket"]),
                        (this.readyState = ""),
                        (this.writeBuffer = []),
                        (this.prevBufferLen = 0),
                        (this.opts = Object.assign(
                            {
                                path: "/engine.io",
                                agent: !1,
                                withCredentials: !1,
                                upgrade: !0,
                                timestampParam: "t",
                                rememberUpgrade: !1,
                                rejectUnauthorized: !0,
                                perMessageDeflate: { threshold: 1024 },
                                transportOptions: {},
                                closeOnBeforeunload: !0,
                            },
                            opts
                        )),
                        (this.opts.path = this.opts.path.replace(/\/$/, "") + "/"),
                        "string" == typeof this.opts.query && (this.opts.query = parseqs.decode(this.opts.query)),
                        (this.id = null),
                        (this.upgrades = null),
                        (this.pingInterval = null),
                        (this.pingTimeout = null),
                        (this.pingTimeoutTimer = null),
                        "function" == typeof addEventListener &&
                            (this.opts.closeOnBeforeunload &&
                                addEventListener(
                                    "beforeunload",
                                    () => {
                                        this.transport && (this.transport.removeAllListeners(), this.transport.close());
                                    },
                                    !1
                                ),
                            "localhost" !== this.hostname &&
                                ((this.offlineEventListener = () => {
                                    this.onClose("transport close");
                                }),
                                addEventListener("offline", this.offlineEventListener, !1))),
                        this.open();
                }
                createTransport(name) {
                    let query = (function (obj) {
                        let o = {};
                        for (let i in obj) obj.hasOwnProperty(i) && (o[i] = obj[i]);
                        return o;
                    })(this.opts.query);
                    (query.EIO = 4), (query.transport = name), this.id && (query.sid = this.id);
                    let opts = Object.assign({}, this.opts.transportOptions[name], this.opts, { query, socket: this, hostname: this.hostname, secure: this.secure, port: this.port });
                    return new transports[name](opts);
                }
                open() {
                    let transport;
                    if (this.opts.rememberUpgrade && Socket.priorWebsocketSuccess && -1 !== this.transports.indexOf("websocket")) transport = "websocket";
                    else if (0 === this.transports.length) {
                        this.setTimeoutFn(() => {
                            this.emitReserved("error", "No transports available");
                        }, 0);
                        return;
                    } else transport = this.transports[0];
                    this.readyState = "opening";
                    try {
                        transport = this.createTransport(transport);
                    } catch (e) {
                        this.transports.shift(), this.open();
                        return;
                    }
                    transport.open(), this.setTransport(transport);
                }
                setTransport(transport) {
                    this.transport && this.transport.removeAllListeners(),
                        (this.transport = transport),
                        transport
                            .on("drain", this.onDrain.bind(this))
                            .on("packet", this.onPacket.bind(this))
                            .on("error", this.onError.bind(this))
                            .on("close", () => {
                                this.onClose("transport close");
                            });
                }
                probe(name) {
                    let transport = this.createTransport(name),
                        failed = !1;
                    Socket.priorWebsocketSuccess = !1;
                    let onTransportOpen = () => {
                        failed ||
                            (transport.send([{ type: "ping", data: "probe" }]),
                            transport.once("packet", (msg) => {
                                if (!failed) {
                                    if ("pong" === msg.type && "probe" === msg.data)
                                        (this.upgrading = !0),
                                            this.emitReserved("upgrading", transport),
                                            transport &&
                                                ((Socket.priorWebsocketSuccess = "websocket" === transport.name),
                                                this.transport.pause(() => {
                                                    failed ||
                                                        "closed" === this.readyState ||
                                                        (cleanup(), this.setTransport(transport), transport.send([{ type: "upgrade" }]), this.emitReserved("upgrade", transport), (transport = null), (this.upgrading = !1), this.flush());
                                                }));
                                    else {
                                        let err = Error("probe error");
                                        (err.transport = transport.name), this.emitReserved("upgradeError", err);
                                    }
                                }
                            }));
                    };
                    function freezeTransport() {
                        failed || ((failed = !0), cleanup(), transport.close(), (transport = null));
                    }
                    let onerror = (err) => {
                        let error = Error("probe error: " + err);
                        (error.transport = transport.name), freezeTransport(), this.emitReserved("upgradeError", error);
                    };
                    function onTransportClose() {
                        onerror("transport closed");
                    }
                    function onclose() {
                        onerror("socket closed");
                    }
                    function onupgrade(to) {
                        transport && to.name !== transport.name && freezeTransport();
                    }
                    let cleanup = () => {
                        transport.removeListener("open", onTransportOpen), transport.removeListener("error", onerror), transport.removeListener("close", onTransportClose), this.off("close", onclose), this.off("upgrading", onupgrade);
                    };
                    transport.once("open", onTransportOpen), transport.once("error", onerror), transport.once("close", onTransportClose), this.once("close", onclose), this.once("upgrading", onupgrade), transport.open();
                }
                onOpen() {
                    if (((this.readyState = "open"), (Socket.priorWebsocketSuccess = "websocket" === this.transport.name), this.emitReserved("open"), this.flush(), "open" === this.readyState && this.opts.upgrade && this.transport.pause)) {
                        let i = 0,
                            l = this.upgrades.length;
                        for (; i < l; i++) this.probe(this.upgrades[i]);
                    }
                }
                onPacket(packet) {
                    if ("opening" === this.readyState || "open" === this.readyState || "closing" === this.readyState)
                        switch ((this.emitReserved("packet", packet), this.emitReserved("heartbeat"), packet.type)) {
                            case "open":
                                this.onHandshake(JSON.parse(packet.data));
                                break;
                            case "ping":
                                this.resetPingTimeout(), this.sendPacket("pong"), this.emitReserved("ping"), this.emitReserved("pong");
                                break;
                            case "error":
                                let err = Error("server error");
                                (err.code = packet.data), this.onError(err);
                                break;
                            case "message":
                                this.emitReserved("data", packet.data), this.emitReserved("message", packet.data);
                        }
                }
                onHandshake(data) {
                    this.emitReserved("handshake", data),
                        (this.id = data.sid),
                        (this.transport.query.sid = data.sid),
                        (this.upgrades = this.filterUpgrades(data.upgrades)),
                        (this.pingInterval = data.pingInterval),
                        (this.pingTimeout = data.pingTimeout),
                        this.onOpen(),
                        "closed" !== this.readyState && this.resetPingTimeout();
                }
                resetPingTimeout() {
                    this.clearTimeoutFn(this.pingTimeoutTimer),
                        (this.pingTimeoutTimer = this.setTimeoutFn(() => {
                            this.onClose("ping timeout");
                        }, this.pingInterval + this.pingTimeout)),
                        this.opts.autoUnref && this.pingTimeoutTimer.unref();
                }
                onDrain() {
                    this.writeBuffer.splice(0, this.prevBufferLen), (this.prevBufferLen = 0), 0 === this.writeBuffer.length ? this.emitReserved("drain") : this.flush();
                }
                flush() {
                    "closed" !== this.readyState &&
                        this.transport.writable &&
                        !this.upgrading &&
                        this.writeBuffer.length &&
                        (this.transport.send(this.writeBuffer), (this.prevBufferLen = this.writeBuffer.length), this.emitReserved("flush"));
                }
                write(msg, options, fn) {
                    return this.sendPacket("message", msg, options, fn), this;
                }
                send(msg, options, fn) {
                    return this.sendPacket("message", msg, options, fn), this;
                }
                sendPacket(type, data, options, fn) {
                    if (("function" == typeof data && ((fn = data), (data = void 0)), "function" == typeof options && ((fn = options), (options = null)), "closing" === this.readyState || "closed" === this.readyState)) return;
                    (options = options || {}).compress = !1 !== options.compress;
                    let packet = { type: type, data: data, options: options };
                    this.emitReserved("packetCreate", packet), this.writeBuffer.push(packet), fn && this.once("flush", fn), this.flush();
                }
                close() {
                    let close = () => {
                            this.onClose("forced close"), this.transport.close();
                        },
                        cleanupAndClose = () => {
                            this.off("upgrade", cleanupAndClose), this.off("upgradeError", cleanupAndClose), close();
                        },
                        waitForUpgrade = () => {
                            this.once("upgrade", cleanupAndClose), this.once("upgradeError", cleanupAndClose);
                        };
                    return (
                        ("opening" === this.readyState || "open" === this.readyState) &&
                            ((this.readyState = "closing"),
                            this.writeBuffer.length
                                ? this.once("drain", () => {
                                      this.upgrading ? waitForUpgrade() : close();
                                  })
                                : this.upgrading
                                ? waitForUpgrade()
                                : close()),
                        this
                    );
                }
                onError(err) {
                    (Socket.priorWebsocketSuccess = !1), this.emitReserved("error", err), this.onClose("transport error", err);
                }
                onClose(reason, desc) {
                    ("opening" === this.readyState || "open" === this.readyState || "closing" === this.readyState) &&
                        (this.clearTimeoutFn(this.pingTimeoutTimer),
                        this.transport.removeAllListeners("close"),
                        this.transport.close(),
                        this.transport.removeAllListeners(),
                        "function" == typeof removeEventListener && removeEventListener("offline", this.offlineEventListener, !1),
                        (this.readyState = "closed"),
                        (this.id = null),
                        this.emitReserved("close", reason, desc),
                        (this.writeBuffer = []),
                        (this.prevBufferLen = 0));
                }
                filterUpgrades(upgrades) {
                    let filteredUpgrades = [],
                        i = 0,
                        j = upgrades.length;
                    for (; i < j; i++) ~this.transports.indexOf(upgrades[i]) && filteredUpgrades.push(upgrades[i]);
                    return filteredUpgrades;
                }
            }
            (Socket.protocol = 4), Socket.protocol;
            let is_binary_withNativeArrayBuffer = "function" == typeof ArrayBuffer,
                is_binary_isView = (obj) => ("function" == typeof ArrayBuffer.isView ? ArrayBuffer.isView(obj) : obj.buffer instanceof ArrayBuffer),
                is_binary_toString = Object.prototype.toString,
                is_binary_withNativeBlob = "function" == typeof Blob || ("undefined" != typeof Blob && "[object BlobConstructor]" === is_binary_toString.call(Blob)),
                withNativeFile = "function" == typeof File || ("undefined" != typeof File && "[object FileConstructor]" === is_binary_toString.call(File));
            function isBinary(obj) {
                return (is_binary_withNativeArrayBuffer && (obj instanceof ArrayBuffer || is_binary_isView(obj))) || (is_binary_withNativeBlob && obj instanceof Blob) || (withNativeFile && obj instanceof File);
            }
            let build_esm_protocol = 5;
            ((PacketType = PacketType1 || (PacketType1 = {}))[(PacketType.CONNECT = 0)] = "CONNECT"),
                (PacketType[(PacketType.DISCONNECT = 1)] = "DISCONNECT"),
                (PacketType[(PacketType.EVENT = 2)] = "EVENT"),
                (PacketType[(PacketType.ACK = 3)] = "ACK"),
                (PacketType[(PacketType.CONNECT_ERROR = 4)] = "CONNECT_ERROR"),
                (PacketType[(PacketType.BINARY_EVENT = 5)] = "BINARY_EVENT"),
                (PacketType[(PacketType.BINARY_ACK = 6)] = "BINARY_ACK");
            class Encoder {
                encode(obj) {
                    return (obj.type === PacketType1.EVENT || obj.type === PacketType1.ACK) &&
                        (function hasBinary(obj, toJSON) {
                            if (!obj || "object" != typeof obj) return !1;
                            if (Array.isArray(obj)) {
                                for (let i = 0, l = obj.length; i < l; i++) if (hasBinary(obj[i])) return !0;
                                return !1;
                            }
                            if (isBinary(obj)) return !0;
                            if (obj.toJSON && "function" == typeof obj.toJSON && 1 == arguments.length) return hasBinary(obj.toJSON(), !0);
                            for (let key in obj) if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) return !0;
                            return !1;
                        })(obj)
                        ? ((obj.type = obj.type === PacketType1.EVENT ? PacketType1.BINARY_EVENT : PacketType1.BINARY_ACK), this.encodeAsBinary(obj))
                        : [this.encodeAsString(obj)];
                }
                encodeAsString(obj) {
                    let str = "" + obj.type;
                    return (
                        (obj.type === PacketType1.BINARY_EVENT || obj.type === PacketType1.BINARY_ACK) && (str += obj.attachments + "-"),
                        obj.nsp && "/" !== obj.nsp && (str += obj.nsp + ","),
                        null != obj.id && (str += obj.id),
                        null != obj.data && (str += JSON.stringify(obj.data)),
                        str
                    );
                }
                encodeAsBinary(obj) {
                    let deconstruction = (function (packet) {
                            let buffers = [],
                                packetData = packet.data,
                                pack = packet;
                            return (
                                (pack.data = (function _deconstructPacket(data, buffers) {
                                    if (!data) return data;
                                    if (isBinary(data)) {
                                        let placeholder = { _placeholder: !0, num: buffers.length };
                                        return buffers.push(data), placeholder;
                                    }
                                    if (Array.isArray(data)) {
                                        let newData = Array(data.length);
                                        for (let i = 0; i < data.length; i++) newData[i] = _deconstructPacket(data[i], buffers);
                                        return newData;
                                    }
                                    if ("object" == typeof data && !(data instanceof Date)) {
                                        let newData1 = {};
                                        for (let key in data) Object.prototype.hasOwnProperty.call(data, key) && (newData1[key] = _deconstructPacket(data[key], buffers));
                                        return newData1;
                                    }
                                    return data;
                                })(packetData, buffers)),
                                (pack.attachments = buffers.length),
                                { packet: pack, buffers: buffers }
                            );
                        })(obj),
                        pack = this.encodeAsString(deconstruction.packet),
                        buffers = deconstruction.buffers;
                    return buffers.unshift(pack), buffers;
                }
            }
            class Decoder extends component_emitter.Q {
                constructor() {
                    super();
                }
                add(obj) {
                    let packet;
                    if ("string" == typeof obj)
                        (packet = this.decodeString(obj)).type === PacketType1.BINARY_EVENT || packet.type === PacketType1.BINARY_ACK
                            ? ((this.reconstructor = new BinaryReconstructor(packet)), 0 === packet.attachments && super.emitReserved("decoded", packet))
                            : super.emitReserved("decoded", packet);
                    else if (isBinary(obj) || obj.base64) {
                        if (this.reconstructor) (packet = this.reconstructor.takeBinaryData(obj)) && ((this.reconstructor = null), super.emitReserved("decoded", packet));
                        else throw Error("got binary data when not reconstructing a packet");
                    } else throw Error("Unknown type: " + obj);
                }
                decodeString(str) {
                    let i = 0,
                        p = { type: Number(str.charAt(0)) };
                    if (void 0 === PacketType1[p.type]) throw Error("unknown packet type " + p.type);
                    if (p.type === PacketType1.BINARY_EVENT || p.type === PacketType1.BINARY_ACK) {
                        let start = i + 1;
                        for (; "-" !== str.charAt(++i) && i != str.length; );
                        let buf = str.substring(start, i);
                        if (buf != Number(buf) || "-" !== str.charAt(i)) throw Error("Illegal attachments");
                        p.attachments = Number(buf);
                    }
                    if ("/" === str.charAt(i + 1)) {
                        let start1 = i + 1;
                        for (; ++i; ) {
                            let c = str.charAt(i);
                            if ("," === c || i === str.length) break;
                        }
                        p.nsp = str.substring(start1, i);
                    } else p.nsp = "/";
                    let next = str.charAt(i + 1);
                    if ("" !== next && Number(next) == next) {
                        let start2 = i + 1;
                        for (; ++i; ) {
                            let c1 = str.charAt(i);
                            if (null == c1 || Number(c1) != c1) {
                                --i;
                                break;
                            }
                            if (i === str.length) break;
                        }
                        p.id = Number(str.substring(start2, i + 1));
                    }
                    if (str.charAt(++i)) {
                        let payload = (function (str) {
                            try {
                                return JSON.parse(str);
                            } catch (e) {
                                return !1;
                            }
                        })(str.substr(i));
                        if (Decoder.isPayloadValid(p.type, payload)) p.data = payload;
                        else throw Error("invalid payload");
                    }
                    return p;
                }
                static isPayloadValid(type, payload) {
                    switch (type) {
                        case PacketType1.CONNECT:
                            return "object" == typeof payload;
                        case PacketType1.DISCONNECT:
                            return void 0 === payload;
                        case PacketType1.CONNECT_ERROR:
                            return "string" == typeof payload || "object" == typeof payload;
                        case PacketType1.EVENT:
                        case PacketType1.BINARY_EVENT:
                            return Array.isArray(payload) && payload.length > 0;
                        case PacketType1.ACK:
                        case PacketType1.BINARY_ACK:
                            return Array.isArray(payload);
                    }
                }
                destroy() {
                    this.reconstructor && this.reconstructor.finishedReconstruction();
                }
            }
            class BinaryReconstructor {
                constructor(packet) {
                    (this.packet = packet), (this.buffers = []), (this.reconPack = packet);
                }
                takeBinaryData(binData) {
                    if ((this.buffers.push(binData), this.buffers.length === this.reconPack.attachments)) {
                        var packet, buffers;
                        let packet1 =
                            ((packet = this.reconPack),
                            (buffers = this.buffers),
                            (packet.data = (function _reconstructPacket(data, buffers) {
                                if (!data) return data;
                                if (data && data._placeholder) return buffers[data.num];
                                if (Array.isArray(data)) for (let i = 0; i < data.length; i++) data[i] = _reconstructPacket(data[i], buffers);
                                else if ("object" == typeof data) for (let key in data) Object.prototype.hasOwnProperty.call(data, key) && (data[key] = _reconstructPacket(data[key], buffers));
                                return data;
                            })(packet.data, buffers)),
                            (packet.attachments = void 0),
                            packet);
                        return this.finishedReconstruction(), packet1;
                    }
                    return null;
                }
                finishedReconstruction() {
                    (this.reconPack = null), (this.buffers = []);
                }
            }
            function on(obj, ev, fn) {
                return (
                    obj.on(ev, fn),
                    function () {
                        obj.off(ev, fn);
                    }
                );
            }
            let RESERVED_EVENTS = Object.freeze({ connect: 1, connect_error: 1, disconnect: 1, disconnecting: 1, newListener: 1, removeListener: 1 });
            class socket_Socket extends component_emitter.Q {
                constructor(io, nsp, opts) {
                    super(),
                        (this.connected = !1),
                        (this.disconnected = !0),
                        (this.receiveBuffer = []),
                        (this.sendBuffer = []),
                        (this.ids = 0),
                        (this.acks = {}),
                        (this.flags = {}),
                        (this.io = io),
                        (this.nsp = nsp),
                        opts && opts.auth && (this.auth = opts.auth),
                        this.io._autoConnect && this.open();
                }
                subEvents() {
                    if (this.subs) return;
                    let io = this.io;
                    this.subs = [on(io, "open", this.onopen.bind(this)), on(io, "packet", this.onpacket.bind(this)), on(io, "error", this.onerror.bind(this)), on(io, "close", this.onclose.bind(this))];
                }
                get active() {
                    return !!this.subs;
                }
                connect() {
                    return this.connected || (this.subEvents(), this.io._reconnecting || this.io.open(), "open" === this.io._readyState && this.onopen()), this;
                }
                open() {
                    return this.connect();
                }
                send(...args) {
                    return args.unshift("message"), this.emit.apply(this, args), this;
                }
                emit(ev, ...args) {
                    if (RESERVED_EVENTS.hasOwnProperty(ev)) throw Error('"' + ev + '" is a reserved event name');
                    args.unshift(ev);
                    let packet = { type: PacketType1.EVENT, data: args };
                    if (((packet.options = {}), (packet.options.compress = !1 !== this.flags.compress), "function" == typeof args[args.length - 1])) {
                        let id = this.ids++,
                            ack = args.pop();
                        this._registerAckCallback(id, ack), (packet.id = id);
                    }
                    let isTransportWritable = this.io.engine && this.io.engine.transport && this.io.engine.transport.writable,
                        discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);
                    return discardPacket || (this.connected ? this.packet(packet) : this.sendBuffer.push(packet)), (this.flags = {}), this;
                }
                _registerAckCallback(id, ack) {
                    let timeout = this.flags.timeout;
                    if (void 0 === timeout) {
                        this.acks[id] = ack;
                        return;
                    }
                    let timer = this.io.setTimeoutFn(() => {
                        delete this.acks[id];
                        for (let i = 0; i < this.sendBuffer.length; i++) this.sendBuffer[i].id === id && this.sendBuffer.splice(i, 1);
                        ack.call(this, Error("operation has timed out"));
                    }, timeout);
                    this.acks[id] = (...args) => {
                        this.io.clearTimeoutFn(timer), ack.apply(this, [null, ...args]);
                    };
                }
                packet(packet) {
                    (packet.nsp = this.nsp), this.io._packet(packet);
                }
                onopen() {
                    "function" == typeof this.auth
                        ? this.auth((data) => {
                              this.packet({ type: PacketType1.CONNECT, data });
                          })
                        : this.packet({ type: PacketType1.CONNECT, data: this.auth });
                }
                onerror(err) {
                    this.connected || this.emitReserved("connect_error", err);
                }
                onclose(reason) {
                    (this.connected = !1), (this.disconnected = !0), delete this.id, this.emitReserved("disconnect", reason);
                }
                onpacket(packet) {
                    let sameNamespace = packet.nsp === this.nsp;
                    if (sameNamespace)
                        switch (packet.type) {
                            case PacketType1.CONNECT:
                                if (packet.data && packet.data.sid) {
                                    let id = packet.data.sid;
                                    this.onconnect(id);
                                } else
                                    this.emitReserved(
                                        "connect_error",
                                        Error("It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)")
                                    );
                                break;
                            case PacketType1.EVENT:
                            case PacketType1.BINARY_EVENT:
                                this.onevent(packet);
                                break;
                            case PacketType1.ACK:
                            case PacketType1.BINARY_ACK:
                                this.onack(packet);
                                break;
                            case PacketType1.DISCONNECT:
                                this.ondisconnect();
                                break;
                            case PacketType1.CONNECT_ERROR:
                                this.destroy();
                                let err = Error(packet.data.message);
                                (err.data = packet.data.data), this.emitReserved("connect_error", err);
                        }
                }
                onevent(packet) {
                    let args = packet.data || [];
                    null != packet.id && args.push(this.ack(packet.id)), this.connected ? this.emitEvent(args) : this.receiveBuffer.push(Object.freeze(args));
                }
                emitEvent(args) {
                    if (this._anyListeners && this._anyListeners.length) {
                        let listeners = this._anyListeners.slice();
                        for (let listener of listeners) listener.apply(this, args);
                    }
                    super.emit.apply(this, args);
                }
                ack(id) {
                    let self1 = this,
                        sent = !1;
                    return function (...args) {
                        sent || ((sent = !0), self1.packet({ type: PacketType1.ACK, id: id, data: args }));
                    };
                }
                onack(packet) {
                    let ack = this.acks[packet.id];
                    "function" == typeof ack && (ack.apply(this, packet.data), delete this.acks[packet.id]);
                }
                onconnect(id) {
                    (this.id = id), (this.connected = !0), (this.disconnected = !1), this.emitBuffered(), this.emitReserved("connect");
                }
                emitBuffered() {
                    this.receiveBuffer.forEach((args) => this.emitEvent(args)), (this.receiveBuffer = []), this.sendBuffer.forEach((packet) => this.packet(packet)), (this.sendBuffer = []);
                }
                ondisconnect() {
                    this.destroy(), this.onclose("io server disconnect");
                }
                destroy() {
                    this.subs && (this.subs.forEach((subDestroy) => subDestroy()), (this.subs = void 0)), this.io._destroy(this);
                }
                disconnect() {
                    return this.connected && this.packet({ type: PacketType1.DISCONNECT }), this.destroy(), this.connected && this.onclose("io client disconnect"), this;
                }
                close() {
                    return this.disconnect();
                }
                compress(compress) {
                    return (this.flags.compress = compress), this;
                }
                get volatile() {
                    return (this.flags.volatile = !0), this;
                }
                timeout(timeout) {
                    return (this.flags.timeout = timeout), this;
                }
                onAny(listener) {
                    return (this._anyListeners = this._anyListeners || []), this._anyListeners.push(listener), this;
                }
                prependAny(listener) {
                    return (this._anyListeners = this._anyListeners || []), this._anyListeners.unshift(listener), this;
                }
                offAny(listener) {
                    if (!this._anyListeners) return this;
                    if (listener) {
                        let listeners = this._anyListeners;
                        for (let i = 0; i < listeners.length; i++)
                            if (listener === listeners[i]) {
                                listeners.splice(i, 1);
                                break;
                            }
                    } else this._anyListeners = [];
                    return this;
                }
                listenersAny() {
                    return this._anyListeners || [];
                }
            }
            var backo2 = __webpack_require__(43010);
            class Manager extends component_emitter.Q {
                constructor(uri, opts) {
                    var _a;
                    super(),
                        (this.nsps = {}),
                        (this.subs = []),
                        uri && "object" == typeof uri && ((opts = uri), (uri = void 0)),
                        ((opts = opts || {}).path = opts.path || "/socket.io"),
                        (this.opts = opts),
                        installTimerFunctions(this, opts),
                        this.reconnection(!1 !== opts.reconnection),
                        this.reconnectionAttempts(opts.reconnectionAttempts || 1 / 0),
                        this.reconnectionDelay(opts.reconnectionDelay || 1e3),
                        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5e3),
                        this.randomizationFactor(null !== (_a = opts.randomizationFactor) && void 0 !== _a ? _a : 0.5),
                        (this.backoff = new backo2({ min: this.reconnectionDelay(), max: this.reconnectionDelayMax(), jitter: this.randomizationFactor() })),
                        this.timeout(null == opts.timeout ? 2e4 : opts.timeout),
                        (this._readyState = "closed"),
                        (this.uri = uri);
                    let _parser = opts.parser || socket_io_parser_build_esm_namespaceObject;
                    (this.encoder = new _parser.Encoder()), (this.decoder = new _parser.Decoder()), (this._autoConnect = !1 !== opts.autoConnect), this._autoConnect && this.open();
                }
                reconnection(v) {
                    return arguments.length ? ((this._reconnection = !!v), this) : this._reconnection;
                }
                reconnectionAttempts(v) {
                    return void 0 === v ? this._reconnectionAttempts : ((this._reconnectionAttempts = v), this);
                }
                reconnectionDelay(v) {
                    var _a;
                    return void 0 === v ? this._reconnectionDelay : ((this._reconnectionDelay = v), null === (_a = this.backoff) || void 0 === _a || _a.setMin(v), this);
                }
                randomizationFactor(v) {
                    var _a;
                    return void 0 === v ? this._randomizationFactor : ((this._randomizationFactor = v), null === (_a = this.backoff) || void 0 === _a || _a.setJitter(v), this);
                }
                reconnectionDelayMax(v) {
                    var _a;
                    return void 0 === v ? this._reconnectionDelayMax : ((this._reconnectionDelayMax = v), null === (_a = this.backoff) || void 0 === _a || _a.setMax(v), this);
                }
                timeout(v) {
                    return arguments.length ? ((this._timeout = v), this) : this._timeout;
                }
                maybeReconnectOnOpen() {
                    !this._reconnecting && this._reconnection && 0 === this.backoff.attempts && this.reconnect();
                }
                open(fn) {
                    if (~this._readyState.indexOf("open")) return this;
                    this.engine = new Socket(this.uri, this.opts);
                    let socket = this.engine,
                        self1 = this;
                    (this._readyState = "opening"), (this.skipReconnect = !1);
                    let openSubDestroy = on(socket, "open", function () {
                            self1.onopen(), fn && fn();
                        }),
                        errorSub = on(socket, "error", (err) => {
                            self1.cleanup(), (self1._readyState = "closed"), this.emitReserved("error", err), fn ? fn(err) : self1.maybeReconnectOnOpen();
                        });
                    if (!1 !== this._timeout) {
                        let timeout = this._timeout;
                        0 === timeout && openSubDestroy();
                        let timer = this.setTimeoutFn(() => {
                            openSubDestroy(), socket.close(), socket.emit("error", Error("timeout"));
                        }, timeout);
                        this.opts.autoUnref && timer.unref(),
                            this.subs.push(function () {
                                clearTimeout(timer);
                            });
                    }
                    return this.subs.push(openSubDestroy), this.subs.push(errorSub), this;
                }
                connect(fn) {
                    return this.open(fn);
                }
                onopen() {
                    this.cleanup(), (this._readyState = "open"), this.emitReserved("open");
                    let socket = this.engine;
                    this.subs.push(
                        on(socket, "ping", this.onping.bind(this)),
                        on(socket, "data", this.ondata.bind(this)),
                        on(socket, "error", this.onerror.bind(this)),
                        on(socket, "close", this.onclose.bind(this)),
                        on(this.decoder, "decoded", this.ondecoded.bind(this))
                    );
                }
                onping() {
                    this.emitReserved("ping");
                }
                ondata(data) {
                    this.decoder.add(data);
                }
                ondecoded(packet) {
                    this.emitReserved("packet", packet);
                }
                onerror(err) {
                    this.emitReserved("error", err);
                }
                socket(nsp, opts) {
                    let socket = this.nsps[nsp];
                    return socket || ((socket = new socket_Socket(this, nsp, opts)), (this.nsps[nsp] = socket)), socket;
                }
                _destroy(socket) {
                    let nsps = Object.keys(this.nsps);
                    for (let nsp of nsps) {
                        let socket1 = this.nsps[nsp];
                        if (socket1.active) return;
                    }
                    this._close();
                }
                _packet(packet) {
                    let encodedPackets = this.encoder.encode(packet);
                    for (let i = 0; i < encodedPackets.length; i++) this.engine.write(encodedPackets[i], packet.options);
                }
                cleanup() {
                    this.subs.forEach((subDestroy) => subDestroy()), (this.subs.length = 0), this.decoder.destroy();
                }
                _close() {
                    (this.skipReconnect = !0), (this._reconnecting = !1), this.onclose("forced close"), this.engine && this.engine.close();
                }
                disconnect() {
                    return this._close();
                }
                onclose(reason) {
                    this.cleanup(), this.backoff.reset(), (this._readyState = "closed"), this.emitReserved("close", reason), this._reconnection && !this.skipReconnect && this.reconnect();
                }
                reconnect() {
                    if (this._reconnecting || this.skipReconnect) return this;
                    let self1 = this;
                    if (this.backoff.attempts >= this._reconnectionAttempts) this.backoff.reset(), this.emitReserved("reconnect_failed"), (this._reconnecting = !1);
                    else {
                        let delay = this.backoff.duration();
                        this._reconnecting = !0;
                        let timer = this.setTimeoutFn(() => {
                            !self1.skipReconnect &&
                                (this.emitReserved("reconnect_attempt", self1.backoff.attempts),
                                self1.skipReconnect ||
                                    self1.open((err) => {
                                        err ? ((self1._reconnecting = !1), self1.reconnect(), this.emitReserved("reconnect_error", err)) : self1.onreconnect();
                                    }));
                        }, delay);
                        this.opts.autoUnref && timer.unref(),
                            this.subs.push(function () {
                                clearTimeout(timer);
                            });
                    }
                }
                onreconnect() {
                    let attempt = this.backoff.attempts;
                    (this._reconnecting = !1), this.backoff.reset(), this.emitReserved("reconnect", attempt);
                }
            }
            let cache = {};
            function esm_lookup(uri, opts) {
                let io;
                "object" == typeof uri && ((opts = uri), (uri = void 0)), (opts = opts || {});
                let parsed = (function (uri, path = "", loc) {
                        let obj = uri;
                        (loc = loc || ("undefined" != typeof location && location)),
                            null == uri && (uri = loc.protocol + "//" + loc.host),
                            "string" == typeof uri &&
                                ("/" === uri.charAt(0) && (uri = "/" === uri.charAt(1) ? loc.protocol + uri : loc.host + uri),
                                /^(https?|wss?):\/\//.test(uri) || (uri = void 0 !== loc ? loc.protocol + "//" + uri : "https://" + uri),
                                (obj = parseuri(uri))),
                            !obj.port && (/^(http|ws)$/.test(obj.protocol) ? (obj.port = "80") : /^(http|ws)s$/.test(obj.protocol) && (obj.port = "443")),
                            (obj.path = obj.path || "/");
                        let ipv6 = -1 !== obj.host.indexOf(":"),
                            host = ipv6 ? "[" + obj.host + "]" : obj.host;
                        return (obj.id = obj.protocol + "://" + host + ":" + obj.port + path), (obj.href = obj.protocol + "://" + host + (loc && loc.port === obj.port ? "" : ":" + obj.port)), obj;
                    })(uri, opts.path || "/socket.io"),
                    source = parsed.source,
                    id = parsed.id,
                    path = parsed.path,
                    sameNamespace = cache[id] && path in cache[id].nsps,
                    newConnection = opts.forceNew || opts["force new connection"] || !1 === opts.multiplex || sameNamespace;
                return newConnection ? (io = new Manager(source, opts)) : (cache[id] || (cache[id] = new Manager(source, opts)), (io = cache[id])), parsed.query && !opts.query && (opts.query = parsed.queryKey), io.socket(parsed.path, opts);
            }
            Object.assign(esm_lookup, { Manager: Manager, Socket: socket_Socket, io: esm_lookup, connect: esm_lookup });
            var analytics = __webpack_require__(6066),
                endpoint = __webpack_require__(24197),
                hooks = __webpack_require__(94208);
            class RoomStore {
                add(room, callback) {
                    this.roomsToDelete.hasOwnProperty(room) ? (clearTimeout(this.roomsToDelete[room]), delete this.roomsToDelete[room]) : callback(), (this.rooms[room] = !0);
                }
                scheduleRoomRemoval(room, callback) {
                    this.roomsToDelete.hasOwnProperty(room) && clearTimeout(this.roomsToDelete[room]),
                        (this.roomsToDelete[room] = setTimeout(() => {
                            this.removeRoom(room), callback();
                        }, 1e3));
                }
                removeRoom(room) {
                    delete this.rooms[room], delete this.roomsToDelete[room];
                }
                shouldRemove(room) {
                    return this.rooms.hasOwnProperty(room);
                }
                shouldAdd(room) {
                    return !this.rooms.hasOwnProperty(room) || this.roomsToDelete.hasOwnProperty(room);
                }
                getRooms() {
                    return Object.keys(this.rooms);
                }
                constructor() {
                    (this.rooms = {}), (this.roomsToDelete = {});
                }
            }
            let generateRandomId = () => {
                    let randomCharset = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
                    return Array.from({ length: 12 }, () => {
                        let index = Math.floor(Math.random() * randomCharset.length);
                        return randomCharset[index];
                    }).join("");
                },
                createSocket = (storageId) => {
                    {
                        let url = new URL("".concat(endpoint.Om, "/"));
                        return esm_lookup(url.href, { query: { tabId, ...(storageId ? { storageId } : {}) }, transports: ["websocket"], autoConnect: !1, withCredentials: !0, reconnectionDelay: 5e3, reconnectionDelayMax: 1e4 });
                    }
                },
                tabId = generateRandomId(),
                Context = react.createContext({ joinRoom() {}, leaveRoom() {} }),
                Provider = (param) => {
                    let { children } = param,
                        storageIdRef = (0, hooks._)("blur.feeds.storageId");
                    window.localStorage && !storageIdRef.get() && storageIdRef.set(generateRandomId());
                    let storageId = storageIdRef.get(),
                        socketRef = react.useRef(createSocket(null != storageId ? storageId : "")),
                        rooms = react.useRef(new RoomStore()),
                        joinRoom = (room, eventHandler) => {
                            let { current: socket } = socketRef;
                            if (null !== socket && (socket.on(room, eventHandler), rooms.current.shouldAdd(room))) {
                                let subscribe = () => {
                                    let emit = (interval) => {
                                        socket.emit("subscribe", [room], (_, response) => {
                                            clearInterval(interval);
                                        });
                                    };
                                    var roomSubscribeTimeInterval = setInterval(emit, 1e4);
                                    emit(roomSubscribeTimeInterval);
                                };
                                rooms.current.add(room, subscribe);
                            }
                        },
                        leaveRoom = (room, eventHandler) => {
                            let { current: socket } = socketRef;
                            if (null !== socket && (socket.off(room, eventHandler), rooms.current.shouldRemove(room))) {
                                let unsubscribe = () => {
                                    let emit = (interval) => {
                                        socket.emit("unsubscribe", [room], (_, response) => {
                                            clearInterval(interval);
                                        });
                                    };
                                    var roomSubscribeTimeInterval = setInterval(emit, 1e4);
                                    emit(roomSubscribeTimeInterval);
                                };
                                rooms.current.scheduleRoomRemoval(room, unsubscribe);
                            }
                        };
                    return (
                        react.useEffect(() => {
                            let { current: socket } = socketRef,
                                rejoinRooms = (rooms) => {
                                    let emit = (interval) => {
                                            null !== socket &&
                                                (analytics.IH.rejoinTry(rooms),
                                                socket.emit("subscribe", rooms, (_, response) => {
                                                    analytics.IH.rejoinSucceeded(rooms), clearInterval(interval);
                                                }));
                                        },
                                        roomSubscribeTimeInterval = setInterval(emit, 1e4);
                                    emit(roomSubscribeTimeInterval);
                                };
                            if (null !== socket)
                                return (
                                    socket.connected || socket.connect(),
                                    socket.on("connect", () => {
                                        analytics.IH.connectionSucceded();
                                    }),
                                    socket.on("error", (msg) => {
                                        analytics.IH.connectionError(msg), console.error("SocketIO: Error", msg);
                                        var socketConnectTimeInterval = setInterval(function () {
                                            socket.connect(), socket.connected && (clearInterval(socketConnectTimeInterval), rejoinRooms(rooms.current.getRooms()), console.log("reconnected"));
                                        }, 5e3);
                                    }),
                                    socket.io.on("reconnect_error", (error) => {
                                        analytics.IH.rejoinError(error);
                                    }),
                                    socket.io.on("reconnect_failed", () => {
                                        analytics.IH.rejoinFailed();
                                        var socketConnectTimeInterval = setInterval(function () {
                                            socket.connect(), socket.connected && (clearInterval(socketConnectTimeInterval), rejoinRooms(rooms.current.getRooms()), console.log("reconnected"));
                                        }, 5e3);
                                    }),
                                    socket.io.on("reconnect", () => {
                                        rejoinRooms(rooms.current.getRooms());
                                    }),
                                    socket.on("disconnect", () => {
                                        analytics.IH.disconnected();
                                    }),
                                    () => {
                                        socket.removeAllListeners();
                                    }
                                );
                        }, []),
                        (0, jsx_runtime.jsx)(Context.Provider, { value: { joinRoom, leaveRoom }, children: children })
                    );
                };
            var context = Provider;
            let useFeeds = (eventName, eventHandler) => {
                let { joinRoom, leaveRoom } = react.useContext(Context);
                react.useEffect(
                    () => (
                        joinRoom(eventName, eventHandler),
                        () => {
                            leaveRoom(eventName, eventHandler);
                        }
                    ),
                    [eventName, eventHandler, joinRoom, leaveRoom]
                );
            };
            ((FeedType = FeedType1 || (FeedType1 = {})).StatsFloorUpdate = "stats.floorUpdate"),
                (FeedType.StatsVolumeUpdate = "stats.volumeUpdate"),
                (FeedType.ActivityNewItems = "feeds.activity.eventsCreated"),
                (FeedType.MetadataReceived = "metadata.received"),
                (FeedType.CollectionMetadata = "metadata.computedTraitFrequencies"),
                (FeedType.OrderbookNewTopsOfBooks = "orderbook.newTopsOfBooks"),
                (FeedType.OrderbookOwnersBagsUpdates = "orderbook.ownersBagsUpdates"),
                (FeedType.StatsCollectionSupplyUpdate = "stats.collectionSupplyUpdate"),
                (FeedType.PendingTransactions = "pendingTransactions"),
                (FeedType.UpdatedNumberListings = "feeds.collections.updatedNumberListings"),
                (FeedType.GasFeeEstimateUpdate = "feeds.gasFeeEstimateUpdate"),
                (FeedType.CollectionBidPriceUpdates = "denormalizer.collectionBidPriceUpdates"),
                (FeedType.CollectionBidStats = "denormalizer.collectionBidStats");
            let getContractAddressTopicName = (contractAddress, topicName) => (contractAddress ? "".concat(contractAddress, ".").concat(topicName) : topicName),
                throttle = () => {
                    let lastFunc, lastRan;
                    return function (func, limit) {
                        lastRan
                            ? (clearTimeout(lastFunc),
                              (lastFunc = setTimeout(function () {
                                  Date.now() - lastRan >= limit && (func(), (lastRan = Date.now()));
                              }, limit - (Date.now() - lastRan))))
                            : (func(), (lastRan = Date.now()));
                    };
                },
                throttler = () => {
                    let throttlers = {};
                    return function () {
                        let id = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "default",
                            func = arguments.length > 1 ? arguments[1] : void 0,
                            limit = arguments.length > 2 ? arguments[2] : void 0;
                        void 0 === throttlers[id] && (throttlers[id] = throttle()), throttlers[id](func, limit);
                    };
                },
                ALL_COLLECTIONS_THROTTLE_TIME = 500,
                MISSING_NFTS_THROTTLE_TIME = 1e3;
        },
        94208: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                x7: function () {
                    return useAutosizer;
                },
                VP: function () {
                    return useClipboard;
                },
                Nr: function () {
                    return useDebounce;
                },
                Yz: function () {
                    return useInterval;
                },
                Kr: function () {
                    return useKeyPress;
                },
                _: function () {
                    return useLocalStorage;
                },
                KJ: function () {
                    return useLocationState;
                },
                xE: function () {
                    return useMeasure;
                },
                ac: function () {
                    return useMediaQuery;
                },
                Ek: function () {
                    return useMemoizeObject;
                },
                Xs: function () {
                    return useSessionStorage;
                },
                hF: function () {
                    return useStrictEffect;
                },
            });
            var jsx_runtime = __webpack_require__(85893),
                react = __webpack_require__(67294),
                index_esm = __webpack_require__(11728);
            function useAutosizer() {
                let [measure, setMeasure] = react.useState(null),
                    autosizer = react.useMemo(() => (0, jsx_runtime.jsx)(index_esm.Z, { onResize: (measure) => setMeasure(measure), children: () => null }), []);
                return [measure, autosizer];
            }
            let DEFAULT_OPTIONS = { debounceMillis: 1500 };
            function useClipboard() {
                let options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : DEFAULT_OPTIONS,
                    [copied, setCopied] = react.useState(!1),
                    copy = (text, callbackAfterDebounce) => {
                        navigator.clipboard &&
                            navigator.clipboard.writeText(text).then(
                                () => {
                                    setCopied(!0),
                                        setTimeout(() => {
                                            setCopied(!1), "function" == typeof callbackAfterDebounce && callbackAfterDebounce();
                                        }, options.debounceMillis);
                                },
                                () => {
                                    setCopied(!1);
                                }
                            );
                    };
                return { copy, copied };
            }
            function useDebounce(value, delayMs) {
                let [debouncedValue, setDebouncedValue] = react.useState(value);
                return (
                    react.useEffect(() => {
                        let handler = setTimeout(() => {
                            setDebouncedValue(value);
                        }, delayMs);
                        return () => {
                            clearTimeout(handler);
                        };
                    }, [value, delayMs]),
                    debouncedValue
                );
            }
            function useInterval(callback, delay) {
                let savedCallback = react.useRef(callback);
                react.useEffect(() => {
                    savedCallback.current = callback;
                }, [callback]),
                    react.useEffect(() => {
                        if (!delay && 0 !== delay) return;
                        let id = setInterval(() => savedCallback.current(), delay);
                        return () => clearInterval(id);
                    }, [delay]);
            }
            function useKeyPress(targetKey, onMatch) {
                let [keyPressed, setKeyPressed] = react.useState(!1);
                return (
                    react.useEffect(() => {
                        function downHandler(e) {
                            e.key === targetKey && (onMatch && onMatch(e), setKeyPressed(e));
                        }
                        let upHandler = (param) => {
                            let { key } = param;
                            key === targetKey && setKeyPressed(!1);
                        };
                        return (
                            window.addEventListener("keydown", downHandler),
                            window.addEventListener("keyup", upHandler),
                            () => {
                                window.removeEventListener("keydown", downHandler), window.removeEventListener("keyup", upHandler);
                            }
                        );
                    }, [targetKey, onMatch]),
                    keyPressed
                );
            }
            function useLocalStorage(key) {
                let valueRef = react.useRef(
                    (function (key) {
                        {
                            let stored = window.localStorage.getItem(key);
                            return stored ? JSON.parse(stored) : null;
                        }
                    })(key)
                );
                return {
                    get: () => valueRef.current,
                    set(newValue) {
                        (valueRef.current = newValue), window.localStorage.setItem(key, JSON.stringify(newValue));
                    },
                };
            }
            var react_router = __webpack_require__(96974);
            function useLocationState() {
                let location1 = (0, react_router.TH)();
                return location1.state;
            }
            function useMeasure() {
                let [measure, setMeasure] = react.useState(null),
                    measureRef = react.useCallback((node) => {
                        null !== node && setMeasure(node.getBoundingClientRect());
                    }, []);
                return [measure, measureRef];
            }
            function useMediaQuery(query) {
                let getMatches = (query) => window.matchMedia(query).matches,
                    [matches, setMatches] = react.useState(getMatches(query));
                function handleChange() {
                    setMatches(getMatches(query));
                }
                return (
                    react.useEffect(() => {
                        let matchMedia = window.matchMedia(query);
                        return (
                            handleChange(),
                            matchMedia.addListener ? matchMedia.addListener(handleChange) : matchMedia.addEventListener("change", handleChange),
                            () => {
                                matchMedia.removeListener ? matchMedia.removeListener(handleChange) : matchMedia.removeEventListener("change", handleChange);
                            }
                        );
                    }, [query]),
                    matches
                );
            }
            var fast_equals = __webpack_require__(58367);
            function useMemoizeObject(value) {
                let ref = react.useRef(value);
                return (0, fast_equals.deepEqual)(value, ref.current) || (ref.current = value), ref.current;
            }
            function useSessionStorage(key) {
                let valueRef = react.useRef(
                    (function (key) {
                        {
                            let stored = window.sessionStorage.getItem(key);
                            return stored ? JSON.parse(stored) : null;
                        }
                    })(key)
                );
                return {
                    get: () => valueRef.current,
                    set(newValue) {
                        (valueRef.current = newValue), window.sessionStorage.setItem(key, JSON.stringify(newValue));
                    },
                    clear() {
                        window.sessionStorage.removeItem(key);
                    },
                };
            }
            function useStrictEffect(effect) {
                let destroyFunc = react.useRef(),
                    effectCalled = react.useRef(!1),
                    renderAfterCalled = react.useRef(!1),
                    [val, setVal] = react.useState(0);
                effectCalled.current && (renderAfterCalled.current = !0),
                    react.useEffect(
                        () => (
                            effectCalled.current || ((destroyFunc.current = effect()), (effectCalled.current = !0)),
                            setVal((val) => val + 1),
                            () => {
                                renderAfterCalled.current && destroyFunc.current && destroyFunc.current();
                            }
                        ),
                        []
                    );
            }
        },
        19749: function (module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.default = function (_param) {
                    let blurWidth, blurHeight;
                    var src,
                        {
                            src: src1,
                            sizes,
                            unoptimized = !1,
                            priority = !1,
                            loading,
                            className,
                            quality,
                            width,
                            height,
                            fill,
                            style,
                            onLoad,
                            onLoadingComplete,
                            placeholder = "empty",
                            blurDataURL,
                            layout,
                            objectFit,
                            objectPosition,
                            lazyBoundary,
                            lazyRoot,
                        } = _param,
                        all = _object_without_properties_loose(_param, [
                            "src",
                            "sizes",
                            "unoptimized",
                            "priority",
                            "loading",
                            "className",
                            "quality",
                            "width",
                            "height",
                            "fill",
                            "style",
                            "onLoad",
                            "onLoadingComplete",
                            "placeholder",
                            "blurDataURL",
                            "layout",
                            "objectFit",
                            "objectPosition",
                            "lazyBoundary",
                            "lazyRoot",
                        ]);
                    let configContext = _react.useContext(_imageConfigContext.ImageConfigContext),
                        config = _react.useMemo(() => {
                            let c = configEnv || configContext || _imageConfig.imageConfigDefault,
                                allSizes = [...c.deviceSizes, ...c.imageSizes].sort((a, b) => a - b),
                                deviceSizes = c.deviceSizes.sort((a, b) => a - b);
                            return _extends({}, c, { allSizes, deviceSizes });
                        }, [configContext]),
                        rest = all,
                        loader = rest.loader || _imageLoader.default;
                    if ((delete rest.loader, "__next_img_default" in loader)) {
                        if ("custom" === config.loader) throw Error('Image with src "'.concat(src1, '" is missing "loader" prop.') + "\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader");
                    } else {
                        let customImageLoader = loader;
                        loader = (obj) => {
                            let { config: _ } = obj,
                                opts = _object_without_properties_loose(obj, ["config"]);
                            return customImageLoader(opts);
                        };
                    }
                    if (layout) {
                        "fill" === layout && (fill = !0);
                        let layoutStyle = { intrinsic: { maxWidth: "100%", height: "auto" }, responsive: { width: "100%", height: "auto" } }[layout];
                        layoutStyle && (style = _extends({}, style, layoutStyle));
                        let layoutSizes = { responsive: "100vw", fill: "100vw" }[layout];
                        layoutSizes && !sizes && (sizes = layoutSizes);
                    }
                    let staticSrc = "",
                        widthInt = getInt(width),
                        heightInt = getInt(height);
                    if ("object" == typeof (src = src1) && (isStaticRequire(src) || void 0 !== src.src)) {
                        let staticImageData = isStaticRequire(src1) ? src1.default : src1;
                        if (!staticImageData.src)
                            throw Error("An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received ".concat(JSON.stringify(staticImageData)));
                        if (!staticImageData.height || !staticImageData.width)
                            throw Error("An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received ".concat(JSON.stringify(staticImageData)));
                        if (((blurWidth = staticImageData.blurWidth), (blurHeight = staticImageData.blurHeight), (blurDataURL = blurDataURL || staticImageData.blurDataURL), (staticSrc = staticImageData.src), !fill)) {
                            if (widthInt || heightInt) {
                                if (widthInt && !heightInt) {
                                    let ratio = widthInt / staticImageData.width;
                                    heightInt = Math.round(staticImageData.height * ratio);
                                } else if (!widthInt && heightInt) {
                                    let ratio1 = heightInt / staticImageData.height;
                                    widthInt = Math.round(staticImageData.width * ratio1);
                                }
                            } else (widthInt = staticImageData.width), (heightInt = staticImageData.height);
                        }
                    }
                    let isLazy = !priority && ("lazy" === loading || void 0 === loading);
                    ((src1 = "string" == typeof src1 ? src1 : staticSrc).startsWith("data:") || src1.startsWith("blob:")) && ((unoptimized = !0), (isLazy = !1)), config.unoptimized && (unoptimized = !0);
                    let [blurComplete, setBlurComplete] = _react.useState(!1),
                        [showAltText, setShowAltText] = _react.useState(!1),
                        qualityInt = getInt(quality),
                        imgStyle = Object.assign(fill ? { position: "absolute", height: "100%", width: "100%", left: 0, top: 0, right: 0, bottom: 0, objectFit, objectPosition } : {}, showAltText ? {} : { color: "transparent" }, style),
                        blurStyle =
                            "blur" === placeholder && blurDataURL && !blurComplete
                                ? {
                                      backgroundSize: imgStyle.objectFit || "cover",
                                      backgroundPosition: imgStyle.objectPosition || "50% 50%",
                                      backgroundRepeat: "no-repeat",
                                      backgroundImage: 'url("data:image/svg+xml;charset=utf-8,'.concat(_imageBlurSvg.getImageBlurSvg({ widthInt, heightInt, blurWidth, blurHeight, blurDataURL }), '")'),
                                  }
                                : {},
                        imgAttributes = (function (param) {
                            let { config, src, unoptimized, width, quality, sizes, loader } = param;
                            if (unoptimized) return { src, srcSet: void 0, sizes: void 0 };
                            let { widths, kind } = (function (param, width, sizes) {
                                    let { deviceSizes, allSizes } = param;
                                    if (sizes) {
                                        let viewportWidthRe = /(^|\s)(1?\d?\d)vw/g,
                                            percentSizes = [];
                                        for (let match; (match = viewportWidthRe.exec(sizes)); match) percentSizes.push(parseInt(match[2]));
                                        if (percentSizes.length) {
                                            let smallestRatio = 0.01 * Math.min(...percentSizes);
                                            return { widths: allSizes.filter((s) => s >= deviceSizes[0] * smallestRatio), kind: "w" };
                                        }
                                        return { widths: allSizes, kind: "w" };
                                    }
                                    if ("number" != typeof width) return { widths: deviceSizes, kind: "w" };
                                    let widths = [...new Set([width, 2 * width].map((w) => allSizes.find((p) => p >= w) || allSizes[allSizes.length - 1]))];
                                    return { widths, kind: "x" };
                                })(config, width, sizes),
                                last = widths.length - 1;
                            return {
                                sizes: sizes || "w" !== kind ? sizes : "100vw",
                                srcSet: widths
                                    .map((w, i) =>
                                        ""
                                            .concat(loader({ config, src, quality, width: w }), " ")
                                            .concat("w" === kind ? w : i + 1)
                                            .concat(kind)
                                    )
                                    .join(", "),
                                src: loader({ config, src, quality, width: widths[last] }),
                            };
                        })({ config, src: src1, unoptimized, width: widthInt, quality: qualityInt, sizes, loader }),
                        srcString = src1,
                        linkProps = { imageSrcSet: imgAttributes.srcSet, imageSizes: imgAttributes.sizes, crossOrigin: rest.crossOrigin },
                        onLoadRef = _react.useRef(onLoad);
                    _react.useEffect(() => {
                        onLoadRef.current = onLoad;
                    }, [onLoad]);
                    let onLoadingCompleteRef = _react.useRef(onLoadingComplete);
                    _react.useEffect(() => {
                        onLoadingCompleteRef.current = onLoadingComplete;
                    }, [onLoadingComplete]);
                    let imgElementArgs = _extends(
                        {
                            isLazy,
                            imgAttributes,
                            heightInt,
                            widthInt,
                            qualityInt,
                            className,
                            imgStyle,
                            blurStyle,
                            loading,
                            config,
                            fill,
                            unoptimized,
                            placeholder,
                            loader,
                            srcString,
                            onLoadRef,
                            onLoadingCompleteRef,
                            setBlurComplete,
                            setShowAltText,
                        },
                        rest
                    );
                    return _react.default.createElement(
                        _react.default.Fragment,
                        null,
                        _react.default.createElement(ImageElement, Object.assign({}, imgElementArgs)),
                        priority
                            ? _react.default.createElement(
                                  _head.default,
                                  null,
                                  _react.default.createElement(
                                      "link",
                                      Object.assign({ key: "__nimg-" + imgAttributes.src + imgAttributes.srcSet + imgAttributes.sizes, rel: "preload", as: "image", href: imgAttributes.srcSet ? void 0 : imgAttributes.src }, linkProps)
                                  )
                              )
                            : null
                    );
                });
            var _extends = __webpack_require__(6495).Z,
                _interop_require_default = __webpack_require__(92648).Z,
                _interop_require_wildcard = __webpack_require__(91598).Z,
                _object_without_properties_loose = __webpack_require__(17273).Z,
                _react = _interop_require_wildcard(__webpack_require__(67294)),
                _head = _interop_require_default(__webpack_require__(83121)),
                _imageBlurSvg = __webpack_require__(2675),
                _imageConfig = __webpack_require__(10139),
                _imageConfigContext = __webpack_require__(28730);
            __webpack_require__(57238);
            var _imageLoader = _interop_require_default(__webpack_require__(89824));
            let configEnv = { deviceSizes: [640, 750, 828, 1080, 1200, 1920, 2048, 3840], imageSizes: [16, 32, 48, 64, 96, 128, 256, 384], path: "/_next/image", loader: "default", dangerouslyAllowSVG: !1, unoptimized: !1 };
            function isStaticRequire(src) {
                return void 0 !== src.default;
            }
            function getInt(x) {
                return "number" == typeof x || void 0 === x ? x : "string" == typeof x && /^[0-9]+$/.test(x) ? parseInt(x, 10) : NaN;
            }
            function handleLoading(img, src, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized) {
                if (!img || img["data-loaded-src"] === src) return;
                img["data-loaded-src"] = src;
                let p = "decode" in img ? img.decode() : Promise.resolve();
                p.catch(() => {}).then(() => {
                    if (img.parentNode) {
                        if (("blur" === placeholder && setBlurComplete(!0), null == onLoadRef ? void 0 : onLoadRef.current)) {
                            let event = new Event("load");
                            Object.defineProperty(event, "target", { writable: !1, value: img });
                            let prevented = !1,
                                stopped = !1;
                            onLoadRef.current(
                                _extends({}, event, {
                                    nativeEvent: event,
                                    currentTarget: img,
                                    target: img,
                                    isDefaultPrevented: () => prevented,
                                    isPropagationStopped: () => stopped,
                                    persist() {},
                                    preventDefault() {
                                        (prevented = !0), event.preventDefault();
                                    },
                                    stopPropagation() {
                                        (stopped = !0), event.stopPropagation();
                                    },
                                })
                            );
                        }
                        (null == onLoadingCompleteRef ? void 0 : onLoadingCompleteRef.current) && onLoadingCompleteRef.current(img);
                    }
                });
            }
            let ImageElement = (_param) => {
                var {
                        imgAttributes,
                        heightInt,
                        widthInt,
                        qualityInt,
                        className,
                        imgStyle,
                        blurStyle,
                        isLazy,
                        fill,
                        placeholder,
                        loading,
                        srcString,
                        config,
                        unoptimized,
                        loader,
                        onLoadRef,
                        onLoadingCompleteRef,
                        setBlurComplete,
                        setShowAltText,
                        onLoad,
                        onError,
                    } = _param,
                    rest = _object_without_properties_loose(_param, [
                        "imgAttributes",
                        "heightInt",
                        "widthInt",
                        "qualityInt",
                        "className",
                        "imgStyle",
                        "blurStyle",
                        "isLazy",
                        "fill",
                        "placeholder",
                        "loading",
                        "srcString",
                        "config",
                        "unoptimized",
                        "loader",
                        "onLoadRef",
                        "onLoadingCompleteRef",
                        "setBlurComplete",
                        "setShowAltText",
                        "onLoad",
                        "onError",
                    ]);
                return (
                    (loading = isLazy ? "lazy" : loading),
                    _react.default.createElement(
                        _react.default.Fragment,
                        null,
                        _react.default.createElement(
                            "img",
                            Object.assign({}, rest, imgAttributes, {
                                width: widthInt,
                                height: heightInt,
                                decoding: "async",
                                "data-nimg": fill ? "fill" : "1",
                                className: className,
                                loading: loading,
                                style: _extends({}, imgStyle, blurStyle),
                                ref: _react.useCallback(
                                    (img) => {
                                        img && (onError && (img.src = img.src), img.complete && handleLoading(img, srcString, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized));
                                    },
                                    [srcString, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, onError, unoptimized]
                                ),
                                onLoad(event) {
                                    let img = event.currentTarget;
                                    handleLoading(img, srcString, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized);
                                },
                                onError(event) {
                                    setShowAltText(!0), "blur" === placeholder && setBlurComplete(!0), onError && onError(event);
                                },
                            })
                        )
                    )
                );
            };
            ("function" == typeof exports.default || ("object" == typeof exports.default && null !== exports.default)) &&
                void 0 === exports.default.__esModule &&
                (Object.defineProperty(exports.default, "__esModule", { value: !0 }), Object.assign(exports.default, exports), (module.exports = exports.default));
        },
        2675: function (__unused_webpack_module, exports) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.getImageBlurSvg = function (param) {
                    let { widthInt, heightInt, blurWidth, blurHeight, blurDataURL } = param,
                        svgWidth = blurWidth || widthInt,
                        svgHeight = blurHeight || heightInt,
                        feComponentTransfer = blurDataURL.startsWith("data:image/jpeg") ? "%3CfeComponentTransfer%3E%3CfeFuncA type='discrete' tableValues='1 1'/%3E%3C/feComponentTransfer%3E%" : "";
                    return svgWidth && svgHeight
                        ? "%3Csvg xmlns='http%3A//www.w3.org/2000/svg' viewBox='0 0 "
                              .concat(svgWidth, " ")
                              .concat(svgHeight, "'%3E%3Cfilter id='b' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='")
                              .concat(blurWidth && blurHeight ? "1" : "20", "'/%3E")
                              .concat(feComponentTransfer, "%3C/filter%3E%3Cimage preserveAspectRatio='none' filter='url(%23b)' x='0' y='0' height='100%25' width='100%25' href='")
                              .concat(blurDataURL, "'/%3E%3C/svg%3E")
                        : "%3Csvg xmlns='http%3A//www.w3.org/2000/svg'%3E%3Cimage style='filter:blur(20px)' x='0' y='0' height='100%25' width='100%25' href='".concat(blurDataURL, "'/%3E%3C/svg%3E");
                });
        },
        89824: function (__unused_webpack_module, exports) {
            "use strict";
            function defaultLoader(param) {
                let { config, src, width, quality } = param;
                return src.endsWith(".svg") && !config.dangerouslyAllowSVG
                    ? src
                    : ""
                          .concat(config.path, "?url=")
                          .concat(encodeURIComponent(src), "&w=")
                          .concat(width, "&q=")
                          .concat(quality || 75);
            }
            Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.default = void 0), (defaultLoader.__next_img_default = !0), (exports.default = defaultLoader);
        },
        10108: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                Us: function () {
                    return ActionType1;
                },
                _y: function () {
                    return Context;
                },
                x7: function () {
                    return Toaster;
                },
                ZP: function () {
                    return context;
                },
            });
            var ActionType,
                ActionType1,
                jsx_runtime = __webpack_require__(85893),
                react = __webpack_require__(67294),
                index_browser = __webpack_require__(53416);
            ((ActionType = ActionType1 || (ActionType1 = {})).ADD_ONE = "ADD_ONE"), (ActionType.DISMISS_ONE = "DISMISS_ONE"), (ActionType.DISMISS_ALL = "DISMISS_ALL");
            let Context = react.createContext({ notifications: [], dispatchNotifications() {} }),
                Provider = (props) => {
                    let [notifications, dispatchNotifications] = react.useReducer(notificationsReducer, []);
                    return (0, jsx_runtime.jsx)(Context.Provider, { value: { notifications, dispatchNotifications }, children: props.children });
                },
                notificationsReducer = (filters, action) => {
                    let nextAction = reducerAction.get(action.type);
                    return nextAction ? nextAction(filters, action.payload) : filters;
                },
                reducerAction = new Map([
                    [
                        ActionType1.ADD_ONE,
                        (notifications, payload) => {
                            if (null === payload || !("title" in payload)) return notifications;
                            let payloadWithId = { ...payload, id: (0, index_browser.x0)() };
                            return [payloadWithId, ...notifications];
                        },
                    ],
                    [ActionType1.DISMISS_ONE, (notifications, payload) => (null !== payload && "id" in payload ? notifications.filter((notification) => notification.id !== payload.id) : notifications)],
                    [ActionType1.DISMISS_ALL, (_, __) => []],
                ]);
            var context = Provider,
                _tagged_template_literal = __webpack_require__(7297),
                styled_components_browser_esm = __webpack_require__(87379),
                theme_0 = __webpack_require__(87074),
                components = __webpack_require__(69976);
            function _templateObject() {
                let data = (0, _tagged_template_literal.Z)([
                    "\n  width: 100%;\n  display: flex;\n  position: absolute;\n  box-shadow: ",
                    ";\n  background: ",
                    ";\n  transition: top 125ms ease-in-out;\n  align-items: center;\n  padding-left: 12px;\n  padding-right: 12px;\n  border-radius: 4px;\n  justify-content: space-between;\n\n  .template-link {\n    color: ",
                    ";\n  }\n  .template-link:hover {\n    color: ",
                    ";\n  }\n  .toast-dismiss {\n    opacity: ",
                    ";\n    transition: opacity 150ms ease-in-out;\n    pointer-events: none;\n  }\n  &:hover .toast-dismiss {\n    opacity: 1;\n    pointer-events: all;\n  }\n",
                ]);
                return (
                    (_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            function _templateObject1() {
                let data = (0, _tagged_template_literal.Z)([
                    "\n  top: -4px;\n  right: -8px;\n  z-index: 1;\n  display: flex;\n  position: absolute;\n  background: ",
                    ";\n  box-shadow: ",
                    ";\n  align-items: center;\n  border-radius: 10px;\n  justify-content: center;\n",
                ]);
                return (
                    (_templateObject1 = function () {
                        return data;
                    }),
                    data
                );
            }
            let Toast = (param) => {
                    let { title, subtitle, linkHref, children, linkType = "icon", ...moreProps } = param;
                    return (0, jsx_runtime.jsxs)(ToastRoot, {
                        ...moreProps,
                        children: [
                            children,
                            (0, jsx_runtime.jsxs)("div", {
                                style: { width: "85%" },
                                children: [
                                    (0, jsx_runtime.jsx)(components.xv, { color: "grey100", variant: "body", transform: "uppercase", className: "text-truncate", children: title }),
                                    (0, jsx_runtime.jsx)(components.xv, {
                                        color: "grey300",
                                        variant: "subtext",
                                        className: "text-truncate",
                                        children: (() => {
                                            if (!linkHref || "template" !== linkType) return subtitle;
                                            {
                                                let split = subtitle.split("$$"),
                                                    prefix = split[0],
                                                    suffix = split[2],
                                                    content = split[1];
                                                return (0, jsx_runtime.jsxs)(react.Fragment, {
                                                    children: [
                                                        prefix,
                                                        (0, jsx_runtime.jsx)(components.rU, {
                                                            to: linkHref,
                                                            target: linkHref.startsWith("/") ? void 0 : "_blank",
                                                            Component: linkHref.startsWith("/") ? void 0 : "a",
                                                            className: "template-link",
                                                            children: content,
                                                        }),
                                                        suffix,
                                                    ],
                                                });
                                            }
                                        })(),
                                    }),
                                ],
                            }),
                            linkHref && "icon" === linkType ? (0, jsx_runtime.jsx)("a", { href: linkHref, target: "_blank", children: (0, jsx_runtime.jsx)(components.JO, { name: "link", color: "grey300", hoverColor: "white" }) }) : null,
                        ],
                    });
                },
                ToastRoot = styled_components_browser_esm.ZP.div(
                    _templateObject(),
                    (param) => {
                        let { theme, shadow } = param;
                        return shadow ? "0px 0px 0px 2px ".concat("light" === theme.name ? (0, theme_0.a7)(theme.color.grey500, 0.4) : theme.color.grey900) : null;
                    },
                    (param) => {
                        let { theme } = param;
                        return "light" === theme.name ? theme.color.grey800 : theme.color.grey600;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.orange200;
                    },
                    (param) => {
                        let { theme } = param;
                        return theme.color.white;
                    },
                    (param) => {
                        let { isExpanded } = param;
                        return isExpanded ? 1 : 0;
                    }
                ),
                DismissButton = styled_components_browser_esm.ZP.button.attrs((_) => ({ children: (0, jsx_runtime.jsx)(components.JO, { name: "close", color: "orange200", hoverColor: "white" }), className: "toast-dismiss" }))(
                    _templateObject1(),
                    (param) => {
                        let { theme } = param;
                        return "light" === theme.name ? theme.color.grey800 : theme.color.grey600;
                    },
                    (param) => {
                        let { theme } = param;
                        return "0px 0px 4px 2px ".concat("light" === theme.name ? (0, theme_0.a7)(theme.color.grey500, 0.4) : theme.color.grey900);
                    }
                );
            function _objectWithoutPropertiesLoose(source, excluded) {
                if (null == source) return {};
                var key,
                    i,
                    target = {},
                    sourceKeys = Object.keys(source);
                for (i = 0; i < sourceKeys.length; i++) (key = sourceKeys[i]), excluded.indexOf(key) >= 0 || (target[key] = source[key]);
                return target;
            }
            function _extends() {
                return (_extends =
                    Object.assign ||
                    function (target) {
                        for (var i = 1; i < arguments.length; i++) {
                            var source = arguments[i];
                            for (var key in source) Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
                        }
                        return target;
                    }).apply(this, arguments);
            }
            function _setPrototypeOf(o, p) {
                return (_setPrototypeOf =
                    Object.setPrototypeOf ||
                    function (o, p) {
                        return (o.__proto__ = p), o;
                    })(o, p);
            }
            function _inheritsLoose(subClass, superClass) {
                (subClass.prototype = Object.create(superClass.prototype)), (subClass.prototype.constructor = subClass), _setPrototypeOf(subClass, superClass);
            }
            var TransitionGroupContext = react.createContext(null);
            function getChildMapping(children, mapFn) {
                var result = Object.create(null);
                return (
                    children &&
                        react.Children.map(children, function (c) {
                            return c;
                        }).forEach(function (child) {
                            result[child.key] = mapFn && (0, react.isValidElement)(child) ? mapFn(child) : child;
                        }),
                    result
                );
            }
            function getProp(child, prop, props) {
                return null != props[prop] ? props[prop] : child.props[prop];
            }
            var values =
                    Object.values ||
                    function (obj) {
                        return Object.keys(obj).map(function (k) {
                            return obj[k];
                        });
                    },
                TransitionGroup = (function (_React$Component) {
                    function TransitionGroup(props, context) {
                        var _this,
                            handleExited = (_this = _React$Component.call(this, props, context) || this).handleExited.bind(
                                (function (self1) {
                                    if (void 0 === self1) throw ReferenceError("this hasn't been initialised - super() hasn't been called");
                                    return self1;
                                })(_this)
                            );
                        return (_this.state = { contextValue: { isMounting: !0 }, handleExited: handleExited, firstRender: !0 }), _this;
                    }
                    _inheritsLoose(TransitionGroup, _React$Component);
                    var _proto = TransitionGroup.prototype;
                    return (
                        (_proto.componentDidMount = function () {
                            (this.mounted = !0), this.setState({ contextValue: { isMounting: !1 } });
                        }),
                        (_proto.componentWillUnmount = function () {
                            this.mounted = !1;
                        }),
                        (TransitionGroup.getDerivedStateFromProps = function (nextProps, _ref) {
                            var nextChildMapping,
                                children,
                                prevChildMapping = _ref.children,
                                handleExited = _ref.handleExited;
                            return {
                                children: _ref.firstRender
                                    ? getChildMapping(nextProps.children, function (child) {
                                          return (0,
                                          react.cloneElement)(child, { onExited: handleExited.bind(null, child), in: !0, appear: getProp(child, "appear", nextProps), enter: getProp(child, "enter", nextProps), exit: getProp(child, "exit", nextProps) });
                                      })
                                    : (Object.keys(
                                          (children = (function (prev, next) {
                                              function getValueForKey(key) {
                                                  return key in next ? next[key] : prev[key];
                                              }
                                              (prev = prev || {}), (next = next || {});
                                              var i,
                                                  nextKeysPending = Object.create(null),
                                                  pendingKeys = [];
                                              for (var prevKey in prev) prevKey in next ? pendingKeys.length && ((nextKeysPending[prevKey] = pendingKeys), (pendingKeys = [])) : pendingKeys.push(prevKey);
                                              var childMapping = {};
                                              for (var nextKey in next) {
                                                  if (nextKeysPending[nextKey])
                                                      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
                                                          var pendingNextKey = nextKeysPending[nextKey][i];
                                                          childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
                                                      }
                                                  childMapping[nextKey] = getValueForKey(nextKey);
                                              }
                                              for (i = 0; i < pendingKeys.length; i++) childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
                                              return childMapping;
                                          })(prevChildMapping, (nextChildMapping = getChildMapping(nextProps.children))))
                                      ).forEach(function (key) {
                                          var child = children[key];
                                          if ((0, react.isValidElement)(child)) {
                                              var hasPrev = key in prevChildMapping,
                                                  hasNext = key in nextChildMapping,
                                                  prevChild = prevChildMapping[key],
                                                  isLeaving = (0, react.isValidElement)(prevChild) && !prevChild.props.in;
                                              hasNext && (!hasPrev || isLeaving)
                                                  ? (children[key] = (0, react.cloneElement)(child, { onExited: handleExited.bind(null, child), in: !0, exit: getProp(child, "exit", nextProps), enter: getProp(child, "enter", nextProps) }))
                                                  : hasNext || !hasPrev || isLeaving
                                                  ? hasNext &&
                                                    hasPrev &&
                                                    (0, react.isValidElement)(prevChild) &&
                                                    (children[key] = (0, react.cloneElement)(child, {
                                                        onExited: handleExited.bind(null, child),
                                                        in: prevChild.props.in,
                                                        exit: getProp(child, "exit", nextProps),
                                                        enter: getProp(child, "enter", nextProps),
                                                    }))
                                                  : (children[key] = (0, react.cloneElement)(child, { in: !1 }));
                                          }
                                      }),
                                      children),
                                firstRender: !1,
                            };
                        }),
                        (_proto.handleExited = function (child, node) {
                            var currentChildMapping = getChildMapping(this.props.children);
                            child.key in currentChildMapping ||
                                (child.props.onExited && child.props.onExited(node),
                                this.mounted &&
                                    this.setState(function (state) {
                                        var children = _extends({}, state.children);
                                        return delete children[child.key], { children: children };
                                    }));
                        }),
                        (_proto.render = function () {
                            var _this$props = this.props,
                                Component = _this$props.component,
                                childFactory = _this$props.childFactory,
                                props = _objectWithoutPropertiesLoose(_this$props, ["component", "childFactory"]),
                                contextValue = this.state.contextValue,
                                children = values(this.state.children).map(childFactory);
                            return (delete props.appear, delete props.enter, delete props.exit, null === Component)
                                ? react.createElement(TransitionGroupContext.Provider, { value: contextValue }, children)
                                : react.createElement(TransitionGroupContext.Provider, { value: contextValue }, react.createElement(Component, props, children));
                        }),
                        TransitionGroup
                    );
                })(react.Component);
            function replaceClassName(origClass, classToRemove) {
                return origClass
                    .replace(RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", "g"), "$1")
                    .replace(/\s+/g, " ")
                    .replace(/^\s*|\s*$/g, "");
            }
            (TransitionGroup.propTypes = {}),
                (TransitionGroup.defaultProps = {
                    component: "div",
                    childFactory: function (child) {
                        return child;
                    },
                });
            var react_dom = __webpack_require__(73935),
                config = { disabled: !1 },
                UNMOUNTED = "unmounted",
                EXITED = "exited",
                ENTERING = "entering",
                ENTERED = "entered",
                EXITING = "exiting",
                Transition = (function (_React$Component) {
                    function Transition(props, context) {
                        _this = _React$Component.call(this, props, context) || this;
                        var _this,
                            initialStatus,
                            appear = context && !context.isMounting ? props.enter : props.appear;
                        return (
                            (_this.appearStatus = null),
                            props.in ? (appear ? ((initialStatus = EXITED), (_this.appearStatus = ENTERING)) : (initialStatus = ENTERED)) : (initialStatus = props.unmountOnExit || props.mountOnEnter ? UNMOUNTED : EXITED),
                            (_this.state = { status: initialStatus }),
                            (_this.nextCallback = null),
                            _this
                        );
                    }
                    _inheritsLoose(Transition, _React$Component),
                        (Transition.getDerivedStateFromProps = function (_ref, prevState) {
                            return _ref.in && prevState.status === UNMOUNTED ? { status: EXITED } : null;
                        });
                    var _proto = Transition.prototype;
                    return (
                        (_proto.componentDidMount = function () {
                            this.updateStatus(!0, this.appearStatus);
                        }),
                        (_proto.componentDidUpdate = function (prevProps) {
                            var nextStatus = null;
                            if (prevProps !== this.props) {
                                var status = this.state.status;
                                this.props.in ? status !== ENTERING && status !== ENTERED && (nextStatus = ENTERING) : (status === ENTERING || status === ENTERED) && (nextStatus = EXITING);
                            }
                            this.updateStatus(!1, nextStatus);
                        }),
                        (_proto.componentWillUnmount = function () {
                            this.cancelNextCallback();
                        }),
                        (_proto.getTimeouts = function () {
                            var exit,
                                enter,
                                appear,
                                timeout = this.props.timeout;
                            return (
                                (exit = enter = appear = timeout),
                                null != timeout && "number" != typeof timeout && ((exit = timeout.exit), (enter = timeout.enter), (appear = void 0 !== timeout.appear ? timeout.appear : enter)),
                                { exit: exit, enter: enter, appear: appear }
                            );
                        }),
                        (_proto.updateStatus = function (mounting, nextStatus) {
                            void 0 === mounting && (mounting = !1),
                                null !== nextStatus
                                    ? (this.cancelNextCallback(), nextStatus === ENTERING ? this.performEnter(mounting) : this.performExit())
                                    : this.props.unmountOnExit && this.state.status === EXITED && this.setState({ status: UNMOUNTED });
                        }),
                        (_proto.performEnter = function (mounting) {
                            var _this2 = this,
                                enter = this.props.enter,
                                appearing = this.context ? this.context.isMounting : mounting,
                                _ref2 = this.props.nodeRef ? [appearing] : [react_dom.findDOMNode(this), appearing],
                                maybeNode = _ref2[0],
                                maybeAppearing = _ref2[1],
                                timeouts = this.getTimeouts(),
                                enterTimeout = appearing ? timeouts.appear : timeouts.enter;
                            if ((!mounting && !enter) || config.disabled) {
                                this.safeSetState({ status: ENTERED }, function () {
                                    _this2.props.onEntered(maybeNode);
                                });
                                return;
                            }
                            this.props.onEnter(maybeNode, maybeAppearing),
                                this.safeSetState({ status: ENTERING }, function () {
                                    _this2.props.onEntering(maybeNode, maybeAppearing),
                                        _this2.onTransitionEnd(enterTimeout, function () {
                                            _this2.safeSetState({ status: ENTERED }, function () {
                                                _this2.props.onEntered(maybeNode, maybeAppearing);
                                            });
                                        });
                                });
                        }),
                        (_proto.performExit = function () {
                            var _this3 = this,
                                exit = this.props.exit,
                                timeouts = this.getTimeouts(),
                                maybeNode = this.props.nodeRef ? void 0 : react_dom.findDOMNode(this);
                            if (!exit || config.disabled) {
                                this.safeSetState({ status: EXITED }, function () {
                                    _this3.props.onExited(maybeNode);
                                });
                                return;
                            }
                            this.props.onExit(maybeNode),
                                this.safeSetState({ status: EXITING }, function () {
                                    _this3.props.onExiting(maybeNode),
                                        _this3.onTransitionEnd(timeouts.exit, function () {
                                            _this3.safeSetState({ status: EXITED }, function () {
                                                _this3.props.onExited(maybeNode);
                                            });
                                        });
                                });
                        }),
                        (_proto.cancelNextCallback = function () {
                            null !== this.nextCallback && (this.nextCallback.cancel(), (this.nextCallback = null));
                        }),
                        (_proto.safeSetState = function (nextState, callback) {
                            (callback = this.setNextCallback(callback)), this.setState(nextState, callback);
                        }),
                        (_proto.setNextCallback = function (callback) {
                            var _this4 = this,
                                active = !0;
                            return (
                                (this.nextCallback = function (event) {
                                    active && ((active = !1), (_this4.nextCallback = null), callback(event));
                                }),
                                (this.nextCallback.cancel = function () {
                                    active = !1;
                                }),
                                this.nextCallback
                            );
                        }),
                        (_proto.onTransitionEnd = function (timeout, handler) {
                            this.setNextCallback(handler);
                            var node = this.props.nodeRef ? this.props.nodeRef.current : react_dom.findDOMNode(this),
                                doesNotHaveTimeoutOrListener = null == timeout && !this.props.addEndListener;
                            if (!node || doesNotHaveTimeoutOrListener) {
                                setTimeout(this.nextCallback, 0);
                                return;
                            }
                            if (this.props.addEndListener) {
                                var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],
                                    maybeNode = _ref3[0],
                                    maybeNextCallback = _ref3[1];
                                this.props.addEndListener(maybeNode, maybeNextCallback);
                            }
                            null != timeout && setTimeout(this.nextCallback, timeout);
                        }),
                        (_proto.render = function () {
                            var status = this.state.status;
                            if (status === UNMOUNTED) return null;
                            var _this$props = this.props,
                                children = _this$props.children,
                                childProps =
                                    (_this$props.in,
                                    _this$props.mountOnEnter,
                                    _this$props.unmountOnExit,
                                    _this$props.appear,
                                    _this$props.enter,
                                    _this$props.exit,
                                    _this$props.timeout,
                                    _this$props.addEndListener,
                                    _this$props.onEnter,
                                    _this$props.onEntering,
                                    _this$props.onEntered,
                                    _this$props.onExit,
                                    _this$props.onExiting,
                                    _this$props.onExited,
                                    _this$props.nodeRef,
                                    _objectWithoutPropertiesLoose(_this$props, [
                                        "children",
                                        "in",
                                        "mountOnEnter",
                                        "unmountOnExit",
                                        "appear",
                                        "enter",
                                        "exit",
                                        "timeout",
                                        "addEndListener",
                                        "onEnter",
                                        "onEntering",
                                        "onEntered",
                                        "onExit",
                                        "onExiting",
                                        "onExited",
                                        "nodeRef",
                                    ]));
                            return react.createElement(TransitionGroupContext.Provider, { value: null }, "function" == typeof children ? children(status, childProps) : react.cloneElement(react.Children.only(children), childProps));
                        }),
                        Transition
                    );
                })(react.Component);
            function noop() {}
            (Transition.contextType = TransitionGroupContext),
                (Transition.propTypes = {}),
                (Transition.defaultProps = { in: !1, mountOnEnter: !1, unmountOnExit: !1, appear: !1, enter: !0, exit: !0, onEnter: noop, onEntering: noop, onEntered: noop, onExit: noop, onExiting: noop, onExited: noop }),
                (Transition.UNMOUNTED = UNMOUNTED),
                (Transition.EXITED = EXITED),
                (Transition.ENTERING = ENTERING),
                (Transition.ENTERED = ENTERED),
                (Transition.EXITING = EXITING);
            var removeClass = function (node, classes) {
                    return (
                        node &&
                        classes &&
                        classes.split(" ").forEach(function (c) {
                            var element;
                            (element = node).classList
                                ? element.classList.remove(c)
                                : "string" == typeof element.className
                                ? (element.className = replaceClassName(element.className, c))
                                : element.setAttribute("class", replaceClassName((element.className && element.className.baseVal) || "", c));
                        })
                    );
                },
                CSSTransition = (function (_React$Component) {
                    function CSSTransition() {
                        for (var _this, _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                        return (
                            ((_this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this).appliedClasses = { appear: {}, enter: {}, exit: {} }),
                            (_this.onEnter = function (maybeNode, maybeAppearing) {
                                var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),
                                    node = _this$resolveArgument[0],
                                    appearing = _this$resolveArgument[1];
                                _this.removeClasses(node, "exit"), _this.addClass(node, appearing ? "appear" : "enter", "base"), _this.props.onEnter && _this.props.onEnter(maybeNode, maybeAppearing);
                            }),
                            (_this.onEntering = function (maybeNode, maybeAppearing) {
                                var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),
                                    node = _this$resolveArgument2[0],
                                    appearing = _this$resolveArgument2[1];
                                _this.addClass(node, appearing ? "appear" : "enter", "active"), _this.props.onEntering && _this.props.onEntering(maybeNode, maybeAppearing);
                            }),
                            (_this.onEntered = function (maybeNode, maybeAppearing) {
                                var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),
                                    node = _this$resolveArgument3[0],
                                    type = _this$resolveArgument3[1] ? "appear" : "enter";
                                _this.removeClasses(node, type), _this.addClass(node, type, "done"), _this.props.onEntered && _this.props.onEntered(maybeNode, maybeAppearing);
                            }),
                            (_this.onExit = function (maybeNode) {
                                var node = _this.resolveArguments(maybeNode)[0];
                                _this.removeClasses(node, "appear"), _this.removeClasses(node, "enter"), _this.addClass(node, "exit", "base"), _this.props.onExit && _this.props.onExit(maybeNode);
                            }),
                            (_this.onExiting = function (maybeNode) {
                                var node = _this.resolveArguments(maybeNode)[0];
                                _this.addClass(node, "exit", "active"), _this.props.onExiting && _this.props.onExiting(maybeNode);
                            }),
                            (_this.onExited = function (maybeNode) {
                                var node = _this.resolveArguments(maybeNode)[0];
                                _this.removeClasses(node, "exit"), _this.addClass(node, "exit", "done"), _this.props.onExited && _this.props.onExited(maybeNode);
                            }),
                            (_this.resolveArguments = function (maybeNode, maybeAppearing) {
                                return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] : [maybeNode, maybeAppearing];
                            }),
                            (_this.getClassNames = function (type) {
                                var classNames = _this.props.classNames,
                                    isStringClassNames = "string" == typeof classNames,
                                    baseClassName = isStringClassNames ? (isStringClassNames && classNames ? classNames + "-" : "") + type : classNames[type],
                                    activeClassName = isStringClassNames ? baseClassName + "-active" : classNames[type + "Active"],
                                    doneClassName = isStringClassNames ? baseClassName + "-done" : classNames[type + "Done"];
                                return { baseClassName: baseClassName, activeClassName: activeClassName, doneClassName: doneClassName };
                            }),
                            _this
                        );
                    }
                    _inheritsLoose(CSSTransition, _React$Component);
                    var _proto = CSSTransition.prototype;
                    return (
                        (_proto.addClass = function (node, type, phase) {
                            var classes,
                                className = this.getClassNames(type)[phase + "ClassName"],
                                doneClassName = this.getClassNames("enter").doneClassName;
                            "appear" === type && "done" === phase && doneClassName && (className += " " + doneClassName),
                                "active" === phase && node && node.scrollTop,
                                className &&
                                    ((this.appliedClasses[type][phase] = className),
                                    (classes = className),
                                    node &&
                                        classes &&
                                        classes.split(" ").forEach(function (c) {
                                            var element, className;
                                            return (
                                                (element = node),
                                                (className = c),
                                                void (element.classList
                                                    ? element.classList.add(className)
                                                    : (element.classList ? className && element.classList.contains(className) : -1 !== (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ")) ||
                                                      ("string" == typeof element.className
                                                          ? (element.className = element.className + " " + className)
                                                          : element.setAttribute("class", ((element.className && element.className.baseVal) || "") + " " + className)))
                                            );
                                        }));
                        }),
                        (_proto.removeClasses = function (node, type) {
                            var _this$appliedClasses$ = this.appliedClasses[type],
                                baseClassName = _this$appliedClasses$.base,
                                activeClassName = _this$appliedClasses$.active,
                                doneClassName = _this$appliedClasses$.done;
                            (this.appliedClasses[type] = {}), baseClassName && removeClass(node, baseClassName), activeClassName && removeClass(node, activeClassName), doneClassName && removeClass(node, doneClassName);
                        }),
                        (_proto.render = function () {
                            var _this$props = this.props,
                                props = (_this$props.classNames, _objectWithoutPropertiesLoose(_this$props, ["classNames"]));
                            return react.createElement(
                                Transition,
                                _extends({}, props, { onEnter: this.onEnter, onEntered: this.onEntered, onEntering: this.onEntering, onExit: this.onExit, onExiting: this.onExiting, onExited: this.onExited })
                            );
                        }),
                        CSSTransition
                    );
                })(react.Component);
            function Toaster_templateObject() {
                let data = (0, _tagged_template_literal.Z)(["\n  width: 100%;\n  height: ", "px;\n  z-index: -2;\n  position: absolute;\n"]);
                return (
                    (Toaster_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            function Toaster_templateObject1() {
                let data = (0, _tagged_template_literal.Z)([
                    "\n  width: 304px;\n  z-index: 1;\n\n  .loaf {\n    position: relative;\n  }\n  .slice-enter {\n    transform: translateY(-100px);\n  }\n  .slice-enter-active {\n    transform: translateY(0px);\n    transition: transform 350ms ease-in-out;\n  }\n",
                ]);
                return (
                    (Toaster_templateObject1 = function () {
                        return data;
                    }),
                    data
                );
            }
            (CSSTransition.defaultProps = { classNames: "" }), (CSSTransition.propTypes = {});
            let Toaster = (props) => {
                    let context = react.useContext(Context),
                        [isExpanded, setIsExpanded] = react.useState(!1);
                    return (0, jsx_runtime.jsx)(ToasterRoot, {
                        style: { ...props.style, pointerEvents: 0 === context.notifications.length ? "none" : "all" },
                        onClick: () => setIsExpanded(!0),
                        onMouseLeave: () => setIsExpanded(!1),
                        children: (0, jsx_runtime.jsx)(TransitionGroup, {
                            className: "loaf",
                            children: context.notifications.map((notification, i) => {
                                let top = 0;
                                i < 3 && (top = 4 * i), isExpanded && (top = 54 * i);
                                let style = {
                                        top: top - 2 * Math.min(context.notifications.length, 3),
                                        height: "".concat(44, "px"),
                                        zIndex: -i,
                                        opacity: !isExpanded && i >= 3 ? 0 : 1,
                                        transitionDelay: isExpanded ? "".concat(15 * i, "ms") : "0ms",
                                    },
                                    onClose = (e) => {
                                        e.stopPropagation(),
                                            isExpanded
                                                ? (context.dispatchNotifications({ type: ActionType1.DISMISS_ONE, payload: { id: notification.id } }),
                                                  i === context.notifications.length - 1 &&
                                                      setTimeout(() => {
                                                          setIsExpanded(!1);
                                                      }, 150))
                                                : context.dispatchNotifications({ type: ActionType1.DISMISS_ALL, payload: null });
                                    };
                                return (0, jsx_runtime.jsx)(
                                    CSSTransition,
                                    {
                                        exit: !1,
                                        timeout: 350,
                                        classNames: "slice",
                                        children: (0, jsx_runtime.jsxs)(react.Fragment, {
                                            children: [
                                                (0, jsx_runtime.jsx)(Toast, {
                                                    ...notification,
                                                    style: style,
                                                    shadow: !isExpanded && i < 3,
                                                    isExpanded: isExpanded,
                                                    children: isExpanded || 0 === i ? (0, jsx_runtime.jsx)(DismissButton, { onClick: onClose }) : null,
                                                }),
                                                (0, jsx_runtime.jsx)(Spacer, { style: { top: "".concat(top + 44 - 4, "px") } }),
                                            ],
                                        }),
                                    },
                                    notification.id
                                );
                            }),
                        }),
                    });
                },
                Spacer = styled_components_browser_esm.ZP.div(Toaster_templateObject(), 10),
                ToasterRoot = styled_components_browser_esm.ZP.div(Toaster_templateObject1());
        },
        66271: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                I7: function () {
                    return getLeaderboardBoostColor;
                },
                Lt: function () {
                    return getAirdrop2UnclaimedBoxesCount;
                },
                T7: function () {
                    return getLeaderboardBoostValue;
                },
                aI: function () {
                    return getBoxCountBy;
                },
                dq: function () {
                    return getRewardsScoreColor;
                },
                js: function () {
                    return getAirdrop2Deadline;
                },
                sS: function () {
                    return getAssetSrc;
                },
            });
            var dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(27484),
                dayjs__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_0__);
            function getAssetSrc(path, name, ext) {
                return "https://imgs.blur.io/_assets/airdrop/{{FOLDER}}/{{NAME}}.{{EXT}}".replace("{{FOLDER}}", path).replace("{{NAME}}", name).replace("{{EXT}}", ext);
            }
            function getRewardsScoreColor(userRewards) {
                var ref;
                let userPoints = (null !== (ref = null == userRewards ? void 0 : userRewards.score) && void 0 !== ref ? ref : 0) * 100;
                return userPoints < 50 ? "grey300" : userPoints < 90 ? "yellow300" : userPoints < 97 ? "orange400" : "purple300";
            }
            function getBoxCountBy(rarity, claimedBoxes, unclaimedBoxes) {
                let options = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : { ifZero: "?" },
                    actualCount = null == claimedBoxes ? void 0 : claimedBoxes.filter((box) => box.rarity === rarity).length;
                return 0 === actualCount && Number(unclaimedBoxes) > 0 ? options.ifZero : "".concat(actualCount);
            }
            function getLeaderboardBoostValue(rank) {
                return null === rank ? "-" : rank <= 10 ? "2.5x" : rank <= 25 ? "2x" : rank <= 50 ? "1.5x" : rank <= 100 ? "1.2x" : "1x";
            }
            function getLeaderboardBoostColor(rank) {
                return null === rank ? "grey100" : rank <= 10 ? "teal400" : rank <= 25 ? "purple300" : rank <= 50 ? "orange400" : rank <= 100 ? "yellow300" : "grey100";
            }
            function getAirdrop2Deadline() {
                let endMillis = new Date("2022-12-20T23:00:00.000Z").getTime(),
                    currentMillis = Date.now(),
                    duration = Math.round(
                        dayjs__WEBPACK_IMPORTED_MODULE_0___default()
                            .duration(endMillis - currentMillis)
                            .asHours()
                    ),
                    daysToEnd = Math.round(duration / 24),
                    remainingHours = Math.round(duration % 24);
                return 0 === remainingHours ? "".concat(daysToEnd, " days") : "".concat(daysToEnd, " days, ").concat(remainingHours, " hours");
            }
            function getAirdrop2UnclaimedBoxesCount(userRewards, options) {
                let baseCount = Number(null == userRewards ? void 0 : userRewards.airdrop2.unclaimedBoxes);
                return baseCount > 1 && options.concealOne ? baseCount - 1 : baseCount;
            }
        },
        23961: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.r(__webpack_exports__),
                __webpack_require__.d(__webpack_exports__, {
                    default: function () {
                        return _app_page;
                    },
                });
            var jsx_runtime = __webpack_require__(85893);
            __webpack_require__(87475);
            var react = __webpack_require__(67294),
                script = __webpack_require__(4298),
                script_default = __webpack_require__.n(script),
                api = __webpack_require__(26313),
                utils = __webpack_require__(48048),
                dayjs_min = __webpack_require__(27484),
                dayjs_min_default = __webpack_require__.n(dayjs_min),
                duration = __webpack_require__(1646),
                duration_default = __webpack_require__.n(duration),
                relativeTime = __webpack_require__(84110),
                relativeTime_default = __webpack_require__.n(relativeTime),
                updateLocale = __webpack_require__(70660),
                updateLocale_default = __webpack_require__.n(updateLocale);
            dayjs_min_default().extend(duration_default()),
                dayjs_min_default().extend(updateLocale_default()),
                dayjs_min_default().extend(relativeTime_default(), {
                    thresholds: [
                        { l: "s", r: 59, d: "second" },
                        { l: "m", r: 1 },
                        { l: "mm", r: 59, d: "minute" },
                        { l: "h", r: 1 },
                        { l: "hh", r: 23, d: "hour" },
                        { l: "d", r: 1 },
                        { l: "dd", r: 29, d: "day" },
                        { l: "M", r: 1 },
                        { l: "MM", r: 11, d: "month" },
                        { l: "y" },
                        { l: "yy", d: "year" },
                    ],
                }),
                dayjs_min_default().updateLocale("en", { relativeTime: { s: "%ds", m: "1m", mm: "%dm", h: "1h", hh: "%dh", d: "1d", dd: "%dd", M: "1mo", MM: "%dmo", y: "1y", yy: "%dy", past: "%s", future: "%s" } });
            let Context = react.createContext({}),
                Provider = (props) => (0, jsx_runtime.jsx)(Context.Provider, { value: {}, children: props.children });
            var webthree = __webpack_require__(58870),
                feeds = __webpack_require__(2335),
                user = __webpack_require__(30401),
                notifications = __webpack_require__(10108),
                theme = __webpack_require__(87074),
                wallet = __webpack_require__(74766),
                coingecko_context = __webpack_require__(97741);
            function RudderScript() {
                let dataPlaneUrl = "https://rdr.blurio.workers.dev",
                    writeKey = "27LwyF7UIkiQQdAbUR43TAUjZhg";
                return dataPlaneUrl && writeKey
                    ? (0, jsx_runtime.jsx)(script_default(), {
                          id: "rudderstack-init",
                          strategy: "afterInteractive",
                          dangerouslySetInnerHTML: {
                              __html: '\n          !function(){var e=window.rudderanalytics=window.rudderanalytics||[];e.methods=["load","page","track","identify","alias","group","ready","reset","getAnonymousId","setAnonymousId"],e.factory=function(t){return function(){var r=Array.prototype.slice.call(arguments);return r.unshift(t),e.push(r),e}};for(var t=0;t<e.methods.length;t++){var r=e.methods[t];e[r]=e.factory(r)}e.loadJS=function(e,t){var r=document.createElement("script");r.type="text/javascript",r.async=!0,r.src="'
                                  .concat(dataPlaneUrl, '/dataPlane";var a=document.getElementsByTagName("script")[0];a.parentNode.insertBefore(r,a)},e.loadJS(),\n          e.load("')
                                  .concat(writeKey, '","')
                                  .concat(dataPlaneUrl, '",{configUrl:"')
                                  .concat(dataPlaneUrl, '"})\n          }();\n        '),
                          },
                      })
                    : null;
            }
            var _app_page = function (param) {
                let { Component, pageProps } = param;
                return (
                    react.useEffect(() => {
                        let interval = setInterval(async () => {
                            try {
                                let localMajorVersion = (0, utils.XQ)(),
                                    { success, majorVersion } = await api.hi.version();
                                if (!0 !== success || "number" != typeof majorVersion) throw Error("Bad version received from API.");
                                localMajorVersion !== majorVersion &&
                                    setTimeout(() => {
                                        window.location.reload(!0);
                                    }, Math.floor(0.75 * Math.random() * 9e4));
                            } catch (err) {}
                        }, 9e4);
                        return () => {
                            clearInterval(interval);
                        };
                    }, []),
                    (0, jsx_runtime.jsx)(theme.zt, {
                        children: (0, jsx_runtime.jsx)(Provider, {
                            children: (0, jsx_runtime.jsx)(notifications.ZP, {
                                children: (0, jsx_runtime.jsx)(webthree.ZP, {
                                    children: (0, jsx_runtime.jsx)(feeds.ZP, {
                                        children: (0, jsx_runtime.jsx)(user.z, {
                                            children: (0, jsx_runtime.jsx)(coingecko_context.z, {
                                                children: (0, jsx_runtime.jsxs)(wallet.zt, { children: [(0, jsx_runtime.jsx)(RudderScript, {}), (0, jsx_runtime.jsx)(Component, { ...pageProps })] }),
                                            }),
                                        }),
                                    }),
                                }),
                            }),
                        }),
                    })
                );
            };
        },
        76784: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                F: function () {
                    return Cloneable;
                },
                i: function () {
                    return Serializable;
                },
            });
            class Serializable {
                toJSON() {
                    throw TypeError("Cannot call abstract Serializable.toJSON");
                }
                instanceFromJSON(_) {
                    throw TypeError("Cannot call abstract Serializable.instanceFromJSON");
                }
                static safeToJSON(serializable) {
                    return null === serializable ? null : serializable.toJSON();
                }
                constructor() {
                    if (new.target === Serializable) throw TypeError("Cannot instantiate abstract Serializable");
                }
            }
            class Cloneable extends Serializable {
                clone() {
                    return this.instanceFromJSON(this.toJSON());
                }
                constructor() {
                    if ((super(), new.target === Cloneable)) throw TypeError("Cannot instantiate abstract Cloneable");
                }
            }
        },
        57085: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                l: function () {
                    return Asks;
                },
            });
            var _abstract__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76784),
                ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(71247);
            class Asks extends _abstract__WEBPACK_IMPORTED_MODULE_0__.i {
                toJSON() {
                    return Object.keys(this.asks).reduce((acc, curr) => {
                        let timedPrice = this.asks[curr];
                        return timedPrice && (acc[curr] = timedPrice.toJSON()), acc;
                    }, {});
                }
                setTimedPrice(setter, rawTimedPrice) {
                    rawTimedPrice ? rawTimedPrice && setter(this, new ___WEBPACK_IMPORTED_MODULE_1__.U(rawTimedPrice.amount, rawTimedPrice.unit, rawTimedPrice.listedAt || rawTimedPrice.createdAt || rawTimedPrice.time)) : setter(this, null);
                }
                static fromJSON(asks) {
                    if (null === asks) return null;
                    let newAsks = new Asks();
                    return (
                        Object.keys(asks).forEach((marketplace) => {
                            let serializedTimedPrice = asks[marketplace];
                            newAsks.setTimedPrice((self1, timedPrice) => (self1.asks[marketplace] = timedPrice), serializedTimedPrice);
                        }),
                        newAsks
                    );
                }
                for(marketplace) {
                    var _marketplace;
                    return null !== (_marketplace = this.asks[marketplace]) && void 0 !== _marketplace ? _marketplace : null;
                }
                constructor() {
                    super(), (this.asks = {});
                }
            }
        },
        7261: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                Q: function () {
                    return Bid;
                },
            });
            var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(71247),
                _abstract__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76784);
            class Bid extends _abstract__WEBPACK_IMPORTED_MODULE_0__.F {
                get id() {
                    return "".concat(this.price.amount, "-").concat(this.collectionId);
                }
                get total() {
                    return null === this.executableSize ? this.price : new ___WEBPACK_IMPORTED_MODULE_1__.t("".concat(Number(this.price.amount) * this.executableSize), "ETH");
                }
                equals(other) {
                    return null !== other && Bid._equals(this, other);
                }
                static _equals(a, b) {
                    return (
                        a.collectionId === b.collectionId &&
                        ___WEBPACK_IMPORTED_MODULE_1__.t.equals(a.price, b.price) &&
                        a.executableSize === b.executableSize &&
                        a.openSize === b.openSize &&
                        a.bidderCount === b.bidderCount &&
                        a.bidderAddress === b.bidderAddress
                    );
                }
                toJSON() {
                    return {
                        collectionId: this.collectionId,
                        price: _abstract__WEBPACK_IMPORTED_MODULE_0__.i.safeToJSON(this.price),
                        executableSize: this.executableSize,
                        openSize: this.openSize,
                        bidderCount: this.bidderCount,
                        bidderAddress: this.bidderAddress,
                    };
                }
                instanceFromJSON(serializedBid) {
                    return Bid.fromJSON(serializedBid);
                }
                static fromJSON(serializedBid) {
                    return new Bid(serializedBid.collectionId, ___WEBPACK_IMPORTED_MODULE_1__.t.fromJSON(serializedBid.price), serializedBid.executableSize, serializedBid.openSize, serializedBid.bidderCount, serializedBid.bidderAddress);
                }
                constructor(collectionId, price, executableSize, openSize = null, bidderCount = null, bidderAddress = null) {
                    super(), (this.collectionId = collectionId), (this.price = price), (this.executableSize = executableSize), (this.openSize = openSize), (this.bidderCount = bidderCount), (this.bidderAddress = bidderAddress);
                }
            }
        },
        64677: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                F: function () {
                    return Collection;
                },
            });
            var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(71247),
                ___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62282),
                _abstract__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76784);
            class Collection extends _abstract__WEBPACK_IMPORTED_MODULE_0__.F {
                get floorPriceChangeOneDay() {
                    return ___WEBPACK_IMPORTED_MODULE_1__.t.percentageChange(this.floorPrice, this.floorPriceOneDay);
                }
                get floorPriceChangeOneWeek() {
                    return ___WEBPACK_IMPORTED_MODULE_1__.t.percentageChange(this.floorPrice, this.floorPriceOneWeek);
                }
                setPrice(setter, rawPrice) {
                    null === rawPrice ? setter(this, null) : rawPrice && setter(this, new ___WEBPACK_IMPORTED_MODULE_1__.t(rawPrice.amount, rawPrice.unit));
                }
                setTraits(traits) {
                    this.traits = traits;
                }
                equals(other) {
                    return (
                        null !== other &&
                        this.contractAddress === other.contractAddress &&
                        this.name === other.name &&
                        this.slug === other.slug &&
                        this.imageUrl === other.imageUrl &&
                        this.totalSupply === other.totalSupply &&
                        this.numberOwners === other.numberOwners &&
                        ___WEBPACK_IMPORTED_MODULE_1__.t.equals(this.floorGap, other.floorGap) &&
                        ___WEBPACK_IMPORTED_MODULE_1__.t.equals(this.floorPrice, other.floorPrice) &&
                        ___WEBPACK_IMPORTED_MODULE_1__.t.equals(this.volumeFifteenMinutes, other.volumeFifteenMinutes) &&
                        ___WEBPACK_IMPORTED_MODULE_1__.t.equals(this.volumeOneDay, other.volumeOneDay) &&
                        ___WEBPACK_IMPORTED_MODULE_1__.t.equals(this.volumeOneWeek, other.volumeOneWeek) &&
                        ___WEBPACK_IMPORTED_MODULE_1__.t.equals(this.floorPriceOneDay, other.floorPriceOneDay) &&
                        ___WEBPACK_IMPORTED_MODULE_1__.t.equals(this.floorPriceOneWeek, other.floorPriceOneWeek) &&
                        ___WEBPACK_IMPORTED_MODULE_2__.S.equal(this.traits, other.traits)
                    );
                }
                toJSON() {
                    return {
                        contractAddress: this.contractAddress,
                        name: this.name,
                        slug: this.slug,
                        imageUrl: this.imageUrl,
                        totalSupply: this.totalSupply,
                        numberOwners: this.numberOwners,
                        floorGap: _abstract__WEBPACK_IMPORTED_MODULE_0__.i.safeToJSON(this.floorGap),
                        floorPrice: _abstract__WEBPACK_IMPORTED_MODULE_0__.i.safeToJSON(this.floorPrice),
                        volumeFifteenMinutes: _abstract__WEBPACK_IMPORTED_MODULE_0__.i.safeToJSON(this.volumeFifteenMinutes),
                        volumeOneDay: _abstract__WEBPACK_IMPORTED_MODULE_0__.i.safeToJSON(this.volumeOneDay),
                        volumeOneWeek: _abstract__WEBPACK_IMPORTED_MODULE_0__.i.safeToJSON(this.volumeOneWeek),
                        floorPriceOneDay: _abstract__WEBPACK_IMPORTED_MODULE_0__.i.safeToJSON(this.floorPriceOneDay),
                        floorPriceOneWeek: _abstract__WEBPACK_IMPORTED_MODULE_0__.i.safeToJSON(this.floorPriceOneWeek),
                        traits: _abstract__WEBPACK_IMPORTED_MODULE_0__.i.safeToJSON(this.traits),
                        bidValue: _abstract__WEBPACK_IMPORTED_MODULE_0__.i.safeToJSON(this.bidValue),
                        topBid: _abstract__WEBPACK_IMPORTED_MODULE_0__.i.safeToJSON(this.topBid),
                    };
                }
                instanceFromJSON(rawCollection) {
                    return Collection.fromJSON(rawCollection);
                }
                static fromJSON(serializedCollection) {
                    return new Collection(
                        serializedCollection.contractAddress,
                        serializedCollection.name,
                        serializedCollection.slug,
                        serializedCollection.imageUrl,
                        serializedCollection.totalSupply,
                        serializedCollection.numberOwners,
                        ___WEBPACK_IMPORTED_MODULE_1__.t.fromJSON(serializedCollection.floorGap),
                        ___WEBPACK_IMPORTED_MODULE_1__.t.fromJSON(serializedCollection.floorPrice),
                        ___WEBPACK_IMPORTED_MODULE_1__.t.fromJSON(serializedCollection.volumeFifteenMinutes),
                        ___WEBPACK_IMPORTED_MODULE_1__.t.fromJSON(serializedCollection.volumeOneDay),
                        ___WEBPACK_IMPORTED_MODULE_1__.t.fromJSON(serializedCollection.volumeOneWeek),
                        ___WEBPACK_IMPORTED_MODULE_1__.t.fromJSON(serializedCollection.floorPriceOneDay),
                        ___WEBPACK_IMPORTED_MODULE_1__.t.fromJSON(serializedCollection.floorPriceOneWeek),
                        ___WEBPACK_IMPORTED_MODULE_2__.S.fromJSON(serializedCollection.traits),
                        ___WEBPACK_IMPORTED_MODULE_1__.t.fromJSON(serializedCollection.bidValue),
                        ___WEBPACK_IMPORTED_MODULE_1__.t.fromJSON(serializedCollection.topBid)
                    );
                }
                constructor(
                    contractAddress,
                    name,
                    slug,
                    imageUrl,
                    totalSupply,
                    numberOwners,
                    floorGap = null,
                    floorPrice = null,
                    volumeFifteenMinutes = null,
                    volumeOneDay = null,
                    volumeOneWeek = null,
                    floorPriceOneDay = null,
                    floorPriceOneWeek = null,
                    traits = null,
                    bidValue = null,
                    topBid = null
                ) {
                    super(),
                        (this.contractAddress = contractAddress),
                        (this.name = name),
                        (this.slug = slug),
                        (this.imageUrl = imageUrl),
                        (this.totalSupply = totalSupply),
                        (this.numberOwners = numberOwners),
                        (this.floorGap = floorGap),
                        (this.floorPrice = floorPrice),
                        (this.volumeFifteenMinutes = volumeFifteenMinutes),
                        (this.volumeOneDay = volumeOneDay),
                        (this.volumeOneWeek = volumeOneWeek),
                        (this.floorPriceOneDay = floorPriceOneDay),
                        (this.floorPriceOneWeek = floorPriceOneWeek),
                        (this.traits = traits),
                        (this.bidValue = bidValue),
                        (this.topBid = topBid),
                        (this.id = contractAddress);
                }
            }
        },
        10734: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                S: function () {
                    return Nft;
                },
            });
            var _abstract__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76784),
                ___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(57085),
                ___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62282),
                ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(71247);
            class Nft extends _abstract__WEBPACK_IMPORTED_MODULE_0__.F {
                get timeListed() {
                    return this.price ? this.price.time : null;
                }
                setTimedPrice(setter, rawTimedPrice) {
                    null === rawTimedPrice ? setter(this, null) : rawTimedPrice && setter(this, new ___WEBPACK_IMPORTED_MODULE_1__.U(rawTimedPrice.amount, rawTimedPrice.unit, rawTimedPrice.listedAt || rawTimedPrice.createdAt));
                }
                toJSON() {
                    return {
                        contractAddress: this.contractAddress,
                        id: this.id,
                        imageUrl: this.imageUrl,
                        owner: this.owner,
                        traits: _abstract__WEBPACK_IMPORTED_MODULE_0__.i.safeToJSON(this.traits),
                        ownerAddress: this.ownerAddress,
                        numberOwnedByOwner: this.numberOwnedByOwner,
                        rarityRank: this.rarityRank,
                        rarityScore: this.rarityScore,
                        isSuspicious: this.isSuspicious,
                        price: _abstract__WEBPACK_IMPORTED_MODULE_0__.i.safeToJSON(this.price),
                        lastSale: _abstract__WEBPACK_IMPORTED_MODULE_0__.i.safeToJSON(this.lastSale),
                        highestBid: _abstract__WEBPACK_IMPORTED_MODULE_0__.i.safeToJSON(this.highestBid),
                        marketplace: this.marketplace,
                        name: this.name,
                        asks: _abstract__WEBPACK_IMPORTED_MODULE_0__.i.safeToJSON(this.asks),
                        lastCostBasis: this.lastCostBasis,
                    };
                }
                equals(other) {
                    return (
                        null !== other &&
                        this.contractAddress === other.contractAddress &&
                        this.id === other.id &&
                        this.imageUrl === other.imageUrl &&
                        this.ownerAddress === other.ownerAddress &&
                        this.numberOwnedByOwner === other.numberOwnedByOwner &&
                        this.isSuspicious === other.isSuspicious &&
                        ___WEBPACK_IMPORTED_MODULE_1__.U.equals(this.price, other.price) &&
                        ___WEBPACK_IMPORTED_MODULE_1__.U.equals(this.lastSale, other.lastSale) &&
                        ___WEBPACK_IMPORTED_MODULE_1__.U.equals(this.highestBid, other.highestBid) &&
                        ___WEBPACK_IMPORTED_MODULE_1__.U.equals(this.lastCostBasis, other.lastCostBasis)
                    );
                }
                instanceFromJSON(rawNft) {
                    return Nft.fromJSON(rawNft);
                }
                static fromJSON(rawNft) {
                    return new Nft(
                        rawNft.contractAddress,
                        rawNft.id,
                        ___WEBPACK_IMPORTED_MODULE_2__.S.fromJSON(rawNft.traits),
                        rawNft.imageUrl,
                        rawNft.owner,
                        rawNft.ownerAddress,
                        rawNft.numberOwnedByOwner,
                        rawNft.marketplace,
                        rawNft.rarityRank,
                        rawNft.rarityScore,
                        rawNft.isSuspicious,
                        rawNft.name,
                        ___WEBPACK_IMPORTED_MODULE_3__.l.fromJSON(rawNft.asks),
                        ___WEBPACK_IMPORTED_MODULE_1__.U.fromJSON(rawNft.price),
                        ___WEBPACK_IMPORTED_MODULE_1__.U.fromJSON(rawNft.lastSale),
                        ___WEBPACK_IMPORTED_MODULE_1__.U.fromJSON(rawNft.highestBid),
                        ___WEBPACK_IMPORTED_MODULE_1__.U.fromJSON(rawNft.lastCostBasis)
                    );
                }
                hasAnyTrait(traitCategory, traitNames) {
                    return !!this.traits && this.traits.hasAnyOf(traitCategory, traitNames);
                }
                constructor(
                    contractAddress,
                    id,
                    traits = null,
                    imageUrl = null,
                    owner = null,
                    ownerAddress = null,
                    numberOwnedByOwner = null,
                    marketplace = null,
                    rarityRank = null,
                    rarityScore = null,
                    isSuspicious = !1,
                    name = null,
                    asks = null,
                    price = null,
                    lastSale = null,
                    highestBid = null,
                    lastCostBasis = null
                ) {
                    super(),
                        (this.contractAddress = contractAddress),
                        (this.id = id),
                        (this.traits = traits),
                        (this.imageUrl = imageUrl),
                        (this.owner = owner),
                        (this.ownerAddress = ownerAddress),
                        (this.numberOwnedByOwner = numberOwnedByOwner),
                        (this.marketplace = marketplace),
                        (this.rarityRank = rarityRank),
                        (this.rarityScore = rarityScore),
                        (this.isSuspicious = isSuspicious),
                        (this.name = name),
                        (this.asks = asks),
                        (this.price = price),
                        (this.lastSale = lastSale),
                        (this.highestBid = highestBid),
                        (this.lastCostBasis = lastCostBasis);
                }
            }
        },
        71247: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                U: function () {
                    return TimedPrice;
                },
                t: function () {
                    return Price;
                },
            });
            var _abstract__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76784);
            class Price extends _abstract__WEBPACK_IMPORTED_MODULE_0__.i {
                get isZero() {
                    let asNumber = Number(this.amount);
                    return 0 === asNumber || Object.is(asNumber, -0);
                }
                get floatAmount() {
                    return parseFloat(this.amount);
                }
                toJSON() {
                    return { amount: this.amount, unit: this.unit };
                }
                gt(other) {
                    return null === other || Number(this.amount) > Number(other.amount);
                }
                gte(other) {
                    return null === other || Number(this.amount) >= Number(other.amount);
                }
                lt(other) {
                    return null === other || Number(this.amount) < Number(other.amount);
                }
                static add(a, b) {
                    return null === a && null === b ? null : null === a ? b : null === b ? a : new Price("".concat(Number(a.amount) + Number(b.amount)), "ETH");
                }
                static subtract(a, b) {
                    return null === a && null === b ? null : null === a ? b : null === b ? a : new Price("".concat(Number(a.amount) - Number(b.amount)), "ETH");
                }
                static fromJSON(rawPrice) {
                    return null === rawPrice ? null : new Price(rawPrice.amount, rawPrice.unit);
                }
                static equals(a, b) {
                    return (null === a && null === b) || (null !== a && null !== b && a.amount === b.amount && a.unit === b.unit);
                }
                static percentageChange(a, b) {
                    if (null === a || null === b) return null;
                    let numberA = Number(a.amount),
                        numberB = Number(b.amount);
                    return (100 * (numberA - numberB)) / numberB;
                }
                static amountComparator(a, b) {
                    return null === a && null === b ? 0 : null === a ? 1 : null === b ? -1 : a.floatAmount - b.floatAmount;
                }
                constructor(amount, unit) {
                    super(), (this.amount = amount), (this.unit = unit);
                }
            }
            class TimedPrice extends Price {
                toJSON() {
                    return { unit: this.unit, time: this.time, amount: this.amount };
                }
                static timeComparator(a, b) {
                    return null === a && null === b ? 0 : null === a && null !== b ? 1 : null !== a && null === b ? -1 : a.time === b.time ? 0 : a.time < b.time ? 1 : -1;
                }
                static fromJSON(rawPrice) {
                    return null === rawPrice ? null : new TimedPrice(rawPrice.amount, rawPrice.unit, rawPrice.time);
                }
                static equals(a, b) {
                    return (null === a && null === b) || (null !== a && null !== b && a.amount === b.amount && a.unit === b.unit && a.time === b.time);
                }
                constructor(amount, unit, time) {
                    super(amount, unit), (this.amount = amount), (this.unit = unit), (this.time = time);
                }
            }
        },
        62282: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                S: function () {
                    return Traits;
                },
            });
            var _abstract__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76784);
            class Traits extends _abstract__WEBPACK_IMPORTED_MODULE_0__.i {
                get names() {
                    return this._traitNamesMap;
                }
                get stats() {
                    return this._traitStatsMap;
                }
                get frequencies() {
                    return this._traitFrequenciesMap;
                }
                get isMissingNames() {
                    return 0 === Object.keys(this._traitNamesMap).length;
                }
                get isMissingStats() {
                    return null === this._traitStatsMap;
                }
                get isMissingFrequencies() {
                    return null === this._traitFrequenciesMap;
                }
                get isEmpty() {
                    return this.isMissingNames && this.isMissingStats && this.isMissingFrequencies;
                }
                toJSON() {
                    return { names: this._traitNamesMap, stats: this._traitStatsMap, frequencies: this._traitFrequenciesMap };
                }
                static fromJSON(serializedTraits) {
                    if (null === serializedTraits) return null;
                    let { names, stats, frequencies } = serializedTraits;
                    return new Traits(names, stats, frequencies);
                }
                getLastSale(data) {
                    if (null === this._traitStatsMap) return null;
                    let stats = this._traitStatsMap[Traits.mapKeyFor(data)];
                    return stats ? stats.lastSale : null;
                }
                getFloorPrice(data) {
                    if (null === this._traitStatsMap) return null;
                    let stats = this._traitStatsMap[Traits.mapKeyFor(data)];
                    return stats ? stats.floorPrice : null;
                }
                getFrequency(data) {
                    return null === this._traitFrequenciesMap ? null : this._traitFrequenciesMap[Traits.mapKeyFor(data)];
                }
                hasAnyOf(traitCategory, traitNames) {
                    return this.hasCategory(traitCategory) && this._traitNamesMap[traitCategory].filter((traitName) => traitNames.includes(traitName)).length > 0;
                }
                hasCategory(traitCategory) {
                    return Boolean(this._traitNamesMap[traitCategory]);
                }
                toQueryString() {
                    return this.isMissingNames ? "" : "?traits=".concat(JSON.stringify(this._traitNamesMap));
                }
                toApiFilterObject() {
                    return Object.keys(this._traitNamesMap).map((traitCategory) => ({ type: traitCategory, values: this._traitNamesMap[traitCategory] }));
                }
                add(data) {
                    if (this._traitNamesMap[data.traitCategory]) {
                        let newTraitNamesMap = { ...this._traitNamesMap, [data.traitCategory]: [...this._traitNamesMap[data.traitCategory], data.traitName] };
                        return new Traits(newTraitNamesMap);
                    }
                    {
                        let newTraitNamesMap1 = { ...this._traitNamesMap, [data.traitCategory]: [data.traitName] };
                        return new Traits(newTraitNamesMap1);
                    }
                }
                remove(data) {
                    let newTraitNamesMap = { ...this._traitNamesMap, [data.traitCategory]: this._traitNamesMap[data.traitCategory].filter((traitName) => traitName !== data.traitName) };
                    return 0 === newTraitNamesMap[data.traitCategory].length && delete newTraitNamesMap[data.traitCategory], new Traits(newTraitNamesMap);
                }
                static fromSearchParams(searchParams) {
                    let urlTraitsString = searchParams.get("traits");
                    return new Traits(urlTraitsString ? JSON.parse(urlTraitsString) : {});
                }
                static mapKeyFor(data) {
                    return "".concat(data.traitCategory).concat(data.traitName).toLowerCase().replace(" ", "");
                }
                static merge(a, b) {
                    if (null === a && null === b) return null;
                    if (null === a && null !== b) return b;
                    if (null !== a && null === b) return a;
                    {
                        let useNames = 0 === Object.keys(a.names).length ? b.names : a.names,
                            useStats = null === a.stats ? b.stats : a.stats,
                            useFrequencies = null === a.frequencies ? b.frequencies : a.frequencies;
                        return new Traits(useNames, useStats, useFrequencies);
                    }
                }
                static equal(a, b) {
                    return (
                        (null === a && null === b) ||
                        (null !== a &&
                            null !== b &&
                            (!a.isMissingStats || !!b.isMissingStats) &&
                            (!!a.isMissingStats || !b.isMissingStats) &&
                            (!a.isMissingFrequencies || !!b.isMissingFrequencies) &&
                            (!!a.isMissingFrequencies || !b.isMissingFrequencies))
                    );
                }
                constructor(names, stats = null, frequencies = null) {
                    super(), (this._traitNamesMap = names), (this._traitStatsMap = stats), (this._traitFrequenciesMap = frequencies);
                }
            }
        },
        87074: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                _y: function () {
                    return Context;
                },
                zt: function () {
                    return Provider;
                },
                a7: function () {
                    return hexToRgba;
                },
                Fg: function () {
                    return styled_components_browser_esm.Fg;
                },
            });
            var styled_components_browser_esm = __webpack_require__(87379);
            let darkTheme = {
                    name: "dark",
                    text: {
                        subtext: { lg: { fontSize: "12px", lineHeight: "14px" }, md: { fontSize: "12px", lineHeight: "14px" }, sm: { fontSize: "12px", lineHeight: "14px" }, xs: { fontSize: "12px", lineHeight: "14px" } },
                        body: { lg: { fontSize: "14px", lineHeight: "16px" }, md: { fontSize: "12px", lineHeight: "14px" }, sm: { fontSize: "12px", lineHeight: "14px" }, xs: { fontSize: "12px", lineHeight: "14px" } },
                        labelLarge: { lg: { fontSize: "16px", lineHeight: "18px" }, md: { fontSize: "14px", lineHeight: "16px" }, sm: { fontSize: "14px", lineHeight: "16px" }, xs: { fontSize: "14px", lineHeight: "16px" } },
                        headlineSmall: { lg: { fontSize: "20px", lineHeight: "24px" }, md: { fontSize: "20px", lineHeight: "24px" }, sm: { fontSize: "20px", lineHeight: "24px" }, xs: { fontSize: "20px", lineHeight: "24px" } },
                        subheadline: { lg: { fontSize: "32px", lineHeight: "48px" }, md: { fontSize: "32px", lineHeight: "48px" }, sm: { fontSize: "32px", lineHeight: "48px" }, xs: { fontSize: "32px", lineHeight: "48px" } },
                    },
                    color: {
                        white: "#FFFFFF",
                        black: "#000000",
                        grey100: "#D9D9D9",
                        grey200: "#C1C1C1",
                        grey300: "#929292",
                        grey400: "#696969",
                        grey500: "#505050",
                        grey600: "#303030",
                        grey700: "#1E1E1E",
                        grey800: "#171717",
                        grey900: "#080404",
                        teal400: "#26BF74",
                        green300: "#ADE25D",
                        orange200: "#FF8700",
                        orange300: "#FF6E26",
                        orange400: "#F95200",
                        yellow200: "#FDC054",
                        yellow300: "#F6AE2D",
                        purple300: "#9E00FF",
                        purple500: "#A2006C",
                        transparent: "transparent",
                        twitterBlue: "#1DA1F2",
                        discordPurple: "#7289DA",
                    },
                    button: {
                        primary: { color: "black", background: "orange200", borderColor: "orange200" },
                        secondary: { color: "orange200", background: "transparent", borderColor: "orange200" },
                        tertiary: { color: "grey100", background: "transparent", borderColor: "grey600" },
                    },
                    buttonHover: {
                        primary: { color: "black", background: "white", borderColor: "white" },
                        secondary: { color: "white", background: "transparent", borderColor: "white" },
                        tertiary: { color: "white", background: "transparent", borderColor: "white" },
                    },
                    breakpoint: { lg: "(min-width: calc(1950px))", md: "(max-width: calc(1950px - 1px))", sm: "(max-width: calc(768px - 1px))", xs: "(max-width: calc(568px - 1px))" },
                },
                lightTheme = {
                    ...darkTheme,
                    name: "light",
                    color: {
                        white: "#000000",
                        black: "#FFFFFF",
                        grey100: "#3B3B3B",
                        grey200: "#5A5A5A",
                        grey300: "#6D6D6D",
                        grey400: "#969696",
                        grey500: "#CFCFCF",
                        grey600: "#E7E7E7",
                        grey700: "#E1E1E1",
                        grey800: "#F1F1F1",
                        grey900: "#FBF7F7",
                        teal400: "#26BF74",
                        green300: "#6DA21D",
                        orange200: "#FF9F32",
                        orange300: "#FF6E26",
                        orange400: "#F95200",
                        yellow200: "#FDC054",
                        yellow300: "#ED9B0A",
                        purple300: "#9E00FF",
                        purple500: "#A2006C",
                        transparent: "transparent",
                        twitterBlue: "#1DA1F2",
                        discordPurple: "#7289DA",
                    },
                },
                hexToRgba = function (hex) {
                    let alpha = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                        [r, g, b] = hex.match(/\w\w/g).map((x) => parseInt(x, 16));
                    return "rgba(".concat(r, ",").concat(g, ",").concat(b, ",").concat(alpha, ")");
                };
            var jsx_runtime = __webpack_require__(85893),
                react = __webpack_require__(67294),
                hooks = __webpack_require__(94208);
            let themes = { dark: darkTheme, light: lightTheme },
                Context = react.createContext(() => {}),
                Provider = (props) => {
                    let themeLocalStorage = (0, hooks._)("blur.theme.name"),
                        [theme, setTheme] = react.useState(themes[themeLocalStorage.get() || "dark"]);
                    themeLocalStorage.set(theme.name);
                    let toggleTheme = () => {
                        "dark" === theme.name ? setTheme(lightTheme) : setTheme(darkTheme);
                    };
                    return (
                        react.useEffect(() => {
                            document.body.style.background = theme.color.grey900;
                        }, [theme]),
                        (0, jsx_runtime.jsx)(Context.Provider, { value: toggleTheme, children: (0, jsx_runtime.jsx)(styled_components_browser_esm.f6, { theme: theme, children: props.children }) })
                    );
                };
        },
        94311: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            var BlurFeature, ThirdParty, Marketplace, OtherMarketplace, RewardRarity, ActivityType, EventFilterType, Marketplace1, RewardRarity1, ActivityType1, EventFilterType1;
            __webpack_require__.d(__webpack_exports__, {
                He: function () {
                    return BlurFeature;
                },
                KU: function () {
                    return EventFilterType;
                },
                T8: function () {
                    return ActivityType;
                },
                d3: function () {
                    return ThirdParty;
                },
                sJ: function () {
                    return RewardRarity;
                },
                tY: function () {
                    return OtherMarketplace;
                },
                xq: function () {
                    return Marketplace;
                },
            }),
                ((BlurFeature || (BlurFeature = {})).ADD_COLLECTION = "add-collection"),
                ((ThirdParty || (ThirdParty = {})).ETHERSCAN = "ETHERSCAN"),
                ((Marketplace1 = Marketplace || (Marketplace = {})).BLUR = "BLUR"),
                (Marketplace1.X2Y2 = "X2Y2"),
                (Marketplace1.OPENSEA = "OPENSEA"),
                (Marketplace1.LOOKSRARE = "LOOKSRARE"),
                ((OtherMarketplace || (OtherMarketplace = {})).SUDOSWAP = "SUDOSWAP"),
                ((RewardRarity1 = RewardRarity || (RewardRarity = {})).UNCOMMON = "UNCOMMON"),
                (RewardRarity1.RARE = "RARE"),
                (RewardRarity1.LEGENDARY = "LEGENDARY"),
                (RewardRarity1.MYTHICAL = "MYTHICAL"),
                ((ActivityType1 = ActivityType || (ActivityType = {})).SALE = "SALE"),
                (ActivityType1.MINT = "MINT"),
                (ActivityType1.TRANSFER = "TRANSFER"),
                (ActivityType1.ORDER_CREATED = "ORDER_CREATED"),
                ((EventFilterType1 = EventFilterType || (EventFilterType = {})).SALE = "sale"),
                (EventFilterType1.MINT = "mint"),
                (EventFilterType1.TRANSFER = "transfer"),
                (EventFilterType1.ORDER_CREATED = "orderCreated");
        },
        48048: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            function getMajorVersion() {
                return 5;
            }
            function capitalize(string) {
                let lowercase = string.toLocaleLowerCase();
                return lowercase.charAt(0).toUpperCase() + lowercase.slice(1);
            }
            function preloadImage(url, onLoad) {
                let image = new Image();
                (image.src = url), onLoad && (image.onload = onLoad);
            }
            function resolveImageFromLoadEvent(event) {
                let image = null;
                return "path" in event ? (image = event.path[0]) : "target" in event && (image = event.target), image;
            }
            function linspace(it, n) {
                let elements = [it[0]],
                    totalItems = it.length - 2,
                    sampleInterval = Math.floor(totalItems / (n - 2));
                for (var i = 1; i < n - 1; i++) elements.push(it[i * sampleInterval]);
                return elements.push(it[it.length - 1]), elements;
            }
            function dedupeBy(items, key) {
                let replace = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                    map = new Map();
                return (
                    items.forEach((item) => {
                        replace ? map.set(item[key], item) : map.has(item[key]) || map.set(item[key], item);
                    }),
                    Array.from(map.values())
                );
            }
            function imageUrlToTiny(imageUrl) {
                return imageUrlWithWidth(imageUrl, 64, 64);
            }
            function imageUrlToThumbnail(imageUrl) {
                return imageUrlWithWidth(imageUrl, 64, 64);
            }
            function imageUrlToMidsize(imageUrl) {
                return imageUrlWithWidth(imageUrl, 256);
            }
            function imageUrlWithWidth(imageUrl, width, height) {
                return imageUrl ? (height ? "".concat(imageUrl, "?w=").concat(width, "&h=").concat(height) : "".concat(imageUrl, "?w=").concat(width)) : "";
            }
            function retry(fn) {
                let execute = async () => {
                    try {
                        return await fn();
                    } catch (e) {
                        var fn1;
                        return (fn1 = () => execute()), new Promise((resolve) => setTimeout(() => resolve(fn1()), 1e3));
                    }
                };
                return execute();
            }
            async function waitFor(condition) {
                for (;;) {
                    if (condition()) return;
                    await new Promise(setImmediate);
                }
            }
            function sleep(ms) {
                return new Promise((resolve) => setTimeout(resolve, ms));
            }
            __webpack_require__.d(__webpack_exports__, {
                Aq: function () {
                    return imageUrlWithWidth;
                },
                Ke: function () {
                    return imageUrlToMidsize;
                },
                MH: function () {
                    return dedupeBy;
                },
                RR: function () {
                    return imageUrlToThumbnail;
                },
                SX: function () {
                    return linspace;
                },
                XD: function () {
                    return retry;
                },
                XQ: function () {
                    return getMajorVersion;
                },
                X_: function () {
                    return waitFor;
                },
                _v: function () {
                    return sleep;
                },
                fF: function () {
                    return imageUrlToTiny;
                },
                kC: function () {
                    return capitalize;
                },
                nX: function () {
                    return resolveImageFromLoadEvent;
                },
                pt: function () {
                    return preloadImage;
                },
            }),
                __webpack_require__(99647);
        },
        58870: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                nV: function () {
                    return ApproveCollectionProgress1;
                },
                wm: function () {
                    return CancelOrderProgress1;
                },
                _y: function () {
                    return Context;
                },
                QU: function () {
                    return FulfillOrderProgress1;
                },
                nU: function () {
                    return SubmitOrderProgress1;
                },
                ZP: function () {
                    return context;
                },
                DT: function () {
                    return derivebaseGas;
                },
                RB: function () {
                    return gweiToWei;
                },
                $G: function () {
                    return toGweiString;
                },
                FP: function () {
                    return truncateAddress;
                },
            });
            var TransactionType,
                FulfillOrderProgress,
                SubmitOrderProgress,
                CancelOrderProgress,
                ApproveCollectionProgress,
                ConnectorName,
                StateActionType,
                TransactionType1,
                FulfillOrderProgress1,
                SubmitOrderProgress1,
                CancelOrderProgress1,
                ApproveCollectionProgress1,
                ConnectorName1,
                StateActionType1,
                iso_crypto_dist_esm_namespaceObject = {};
            __webpack_require__.r(iso_crypto_dist_esm_namespaceObject),
                __webpack_require__.d(iso_crypto_dist_esm_namespaceObject, {
                    decrypt: function () {
                        return decrypt;
                    },
                    encrypt: function () {
                        return encrypt;
                    },
                    generateKey: function () {
                        return generateKey;
                    },
                    verifyHmac: function () {
                        return verifyHmac;
                    },
                });
            var lib_esm = __webpack_require__(35553);
            function truncateAddress(address) {
                let width = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 5;
                return "".concat(address.slice(0, width), "...").concat(address.slice(-width));
            }
            function toGweiString(value) {
                let precision = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                return Number(lib_esm.bM(value, "gwei")).toFixed(precision);
            }
            function derivebaseGas(maxFeePerGas, maxPriorityFeePerGas) {
                return maxFeePerGas.sub(maxPriorityFeePerGas).div(2).add(maxPriorityFeePerGas);
            }
            function gweiToWei(gwei) {
                return lib_esm.vz(gwei, "gwei").toString();
            }
            ((TransactionType = TransactionType1 || (TransactionType1 = {})).BUY = "BUY"),
                (TransactionType.LIST = "LIST"),
                (TransactionType.CANCEL = "CANCEL"),
                (TransactionType.APPROVE_COLLECTION = "APPROVE_COLLECTION"),
                ((FulfillOrderProgress = FulfillOrderProgress1 || (FulfillOrderProgress1 = {})).TOKEN_POSTED = "TOKEN_POSTED"),
                (FulfillOrderProgress.TOKEN_PENDING = "TOKEN_PENDING"),
                (FulfillOrderProgress.TOKEN_EXCLUDED = "TOKEN_EXCLUDED"),
                ((SubmitOrderProgress = SubmitOrderProgress1 || (SubmitOrderProgress1 = {})).TOKEN_POSTED = "TOKEN_POSTED"),
                (SubmitOrderProgress.TOKEN_FAILED = "TOKEN_FAILED"),
                (SubmitOrderProgress.TOKEN_PENDING = "TOKEN_PENDING"),
                (SubmitOrderProgress.TOKEN_REJECTED = "TOKEN_REJECTED"),
                ((CancelOrderProgress = CancelOrderProgress1 || (CancelOrderProgress1 = {})).TXN_FAILED = "TXN_FAILED"),
                (CancelOrderProgress.TXN_PENDING = "TXN_PENDING"),
                (CancelOrderProgress.TXN_REJECTED = "TXN_REJECTED"),
                (CancelOrderProgress.TXN_CONFIRMED = "TXN_CONFIRMED"),
                ((ApproveCollectionProgress = ApproveCollectionProgress1 || (ApproveCollectionProgress1 = {})).FAILED = "FAILED"),
                (ApproveCollectionProgress.PENDING = "PENDING"),
                (ApproveCollectionProgress.SUCCEEDED = "SUCCEEDED"),
                (ApproveCollectionProgress.SIGNATURE = "SIGNATURE");
            var jsx_runtime = __webpack_require__(85893),
                notifications = __webpack_require__(10108),
                react = __webpack_require__(67294),
                nft = __webpack_require__(10734),
                api = __webpack_require__(26313),
                utf8 = __webpack_require__(29251),
                analytics = __webpack_require__(6066),
                types = __webpack_require__(94311),
                utils = __webpack_require__(91098),
                utils_0 = __webpack_require__(48048),
                properties_lib_esm = __webpack_require__(6881),
                logger_lib_esm = __webpack_require__(1581);
            let version = "providers/5.6.2";
            var abstract_signer_lib_esm = __webpack_require__(48088),
                bignumber = __webpack_require__(2593),
                bytes_lib_esm = __webpack_require__(16441),
                address_lib_esm = __webpack_require__(19485),
                keccak256_lib_esm = __webpack_require__(38197);
            let _version_version = "hash/5.6.0";
            var id = __webpack_require__(32046);
            let logger = new logger_lib_esm.Yd(_version_version),
                padding = new Uint8Array(32);
            padding.fill(0);
            let NegativeOne = bignumber.O$.from(-1),
                Zero = bignumber.O$.from(0),
                One = bignumber.O$.from(1),
                MaxUint256 = bignumber.O$.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),
                hexTrue = (0, bytes_lib_esm.$m)(One.toHexString(), 32),
                hexFalse = (0, bytes_lib_esm.$m)(Zero.toHexString(), 32),
                domainFieldTypes = { name: "string", version: "string", chainId: "uint256", verifyingContract: "address", salt: "bytes32" },
                domainFieldNames = ["name", "version", "chainId", "verifyingContract", "salt"];
            function checkString(key) {
                return function (value) {
                    return "string" != typeof value && logger.throwArgumentError(`invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value), value;
                };
            }
            let domainChecks = {
                name: checkString("name"),
                version: checkString("version"),
                chainId: function (value) {
                    try {
                        return bignumber.O$.from(value).toString();
                    } catch (error) {}
                    return logger.throwArgumentError('invalid domain value for "chainId"', "domain.chainId", value);
                },
                verifyingContract: function (value) {
                    try {
                        return (0, address_lib_esm.Kn)(value).toLowerCase();
                    } catch (error) {}
                    return logger.throwArgumentError('invalid domain value "verifyingContract"', "domain.verifyingContract", value);
                },
                salt: function (value) {
                    try {
                        let bytes = (0, bytes_lib_esm.lE)(value);
                        if (32 !== bytes.length) throw Error("bad length");
                        return (0, bytes_lib_esm.Dv)(bytes);
                    } catch (error) {}
                    return logger.throwArgumentError('invalid domain value "salt"', "domain.salt", value);
                },
            };
            function getBaseEncoder(type) {
                {
                    let match = type.match(/^(u?)int(\d*)$/);
                    if (match) {
                        let signed = "" === match[1],
                            width = parseInt(match[2] || "256");
                        (width % 8 != 0 || width > 256 || (match[2] && match[2] !== String(width))) && logger.throwArgumentError("invalid numeric width", "type", type);
                        let boundsUpper = MaxUint256.mask(signed ? width - 1 : width),
                            boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne) : Zero;
                        return function (value) {
                            let v = bignumber.O$.from(value);
                            return (v.lt(boundsLower) || v.gt(boundsUpper)) && logger.throwArgumentError(`value out-of-bounds for ${type}`, "value", value), (0, bytes_lib_esm.$m)(v.toTwos(256).toHexString(), 32);
                        };
                    }
                }
                {
                    let match1 = type.match(/^bytes(\d+)$/);
                    if (match1) {
                        let width1 = parseInt(match1[1]);
                        return (
                            (0 === width1 || width1 > 32 || match1[1] !== String(width1)) && logger.throwArgumentError("invalid bytes width", "type", type),
                            function (value) {
                                let bytes = (0, bytes_lib_esm.lE)(value);
                                return (
                                    bytes.length !== width1 && logger.throwArgumentError(`invalid length for ${type}`, "value", value),
                                    (function (value) {
                                        let bytes = (0, bytes_lib_esm.lE)(value),
                                            padOffset = bytes.length % 32;
                                        return padOffset ? (0, bytes_lib_esm.xs)([bytes, padding.slice(padOffset)]) : (0, bytes_lib_esm.Dv)(bytes);
                                    })(value)
                                );
                            }
                        );
                    }
                }
                switch (type) {
                    case "address":
                        return function (value) {
                            return (0, bytes_lib_esm.$m)((0, address_lib_esm.Kn)(value), 32);
                        };
                    case "bool":
                        return function (value) {
                            return value ? hexTrue : hexFalse;
                        };
                    case "bytes":
                        return function (value) {
                            return (0, keccak256_lib_esm.w)(value);
                        };
                    case "string":
                        return function (value) {
                            return (0, id.id)(value);
                        };
                }
                return null;
            }
            function encodeType(name, fields) {
                return `${name}(${fields.map(({ name, type }) => type + " " + name).join(",")})`;
            }
            class TypedDataEncoder {
                constructor(types) {
                    (0, properties_lib_esm.zG)(this, "types", Object.freeze((0, properties_lib_esm.p$)(types))), (0, properties_lib_esm.zG)(this, "_encoderCache", {}), (0, properties_lib_esm.zG)(this, "_types", {});
                    let links = {},
                        parents = {},
                        subtypes = {};
                    for (let name in (Object.keys(types).forEach((type) => {
                        (links[type] = {}), (parents[type] = []), (subtypes[type] = {});
                    }),
                    types)) {
                        let uniqueNames = {};
                        types[name].forEach((field) => {
                            uniqueNames[field.name] && logger.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, "types", types), (uniqueNames[field.name] = !0);
                            let baseType = field.type.match(/^([^\x5b]*)(\x5b|$)/)[1];
                            baseType === name && logger.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`, "types", types);
                            let encoder = getBaseEncoder(baseType);
                            encoder || (parents[baseType] || logger.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`, "types", types), parents[baseType].push(name), (links[name][baseType] = !0));
                        });
                    }
                    let primaryTypes = Object.keys(parents).filter((n) => 0 === parents[n].length);
                    for (let name1 in (0 === primaryTypes.length
                        ? logger.throwArgumentError("missing primary type", "types", types)
                        : primaryTypes.length > 1 && logger.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map((t) => JSON.stringify(t)).join(", ")}`, "types", types),
                    (0, properties_lib_esm.zG)(this, "primaryType", primaryTypes[0]),
                    !(function checkCircular(type, found) {
                        found[type] && logger.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`, "types", types),
                            (found[type] = !0),
                            Object.keys(links[type]).forEach((child) => {
                                parents[child] &&
                                    (checkCircular(child, found),
                                    Object.keys(found).forEach((subtype) => {
                                        subtypes[subtype][child] = !0;
                                    }));
                            }),
                            delete found[type];
                    })(this.primaryType, {}),
                    subtypes)) {
                        let st = Object.keys(subtypes[name1]);
                        st.sort(), (this._types[name1] = encodeType(name1, types[name1]) + st.map((t) => encodeType(t, types[t])).join(""));
                    }
                }
                getEncoder(type) {
                    let encoder = this._encoderCache[type];
                    return encoder || (encoder = this._encoderCache[type] = this._getEncoder(type)), encoder;
                }
                _getEncoder(type) {
                    {
                        let encoder = getBaseEncoder(type);
                        if (encoder) return encoder;
                    }
                    let match = type.match(/^(.*)(\x5b(\d*)\x5d)$/);
                    if (match) {
                        let subtype = match[1],
                            subEncoder = this.getEncoder(subtype),
                            length = parseInt(match[3]);
                        return (value) => {
                            length >= 0 && value.length !== length && logger.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", value);
                            let result = value.map(subEncoder);
                            return this._types[subtype] && (result = result.map(keccak256_lib_esm.w)), (0, keccak256_lib_esm.w)((0, bytes_lib_esm.xs)(result));
                        };
                    }
                    let fields = this.types[type];
                    if (fields) {
                        let encodedType = (0, id.id)(this._types[type]);
                        return (value) => {
                            let values = fields.map(({ name, type }) => {
                                let result = this.getEncoder(type)(value[name]);
                                return this._types[type] ? (0, keccak256_lib_esm.w)(result) : result;
                            });
                            return values.unshift(encodedType), (0, bytes_lib_esm.xs)(values);
                        };
                    }
                    return logger.throwArgumentError(`unknown type: ${type}`, "type", type);
                }
                encodeType(name) {
                    let result = this._types[name];
                    return result || logger.throwArgumentError(`unknown type: ${JSON.stringify(name)}`, "name", name), result;
                }
                encodeData(type, value) {
                    return this.getEncoder(type)(value);
                }
                hashStruct(name, value) {
                    return (0, keccak256_lib_esm.w)(this.encodeData(name, value));
                }
                encode(value) {
                    return this.encodeData(this.primaryType, value);
                }
                hash(value) {
                    return this.hashStruct(this.primaryType, value);
                }
                _visit(type, value, callback) {
                    {
                        let encoder = getBaseEncoder(type);
                        if (encoder) return callback(type, value);
                    }
                    let match = type.match(/^(.*)(\x5b(\d*)\x5d)$/);
                    if (match) {
                        let subtype = match[1],
                            length = parseInt(match[3]);
                        return length >= 0 && value.length !== length && logger.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", value), value.map((v) => this._visit(subtype, v, callback));
                    }
                    let fields = this.types[type];
                    return fields ? fields.reduce((accum, { name, type }) => ((accum[name] = this._visit(type, value[name], callback)), accum), {}) : logger.throwArgumentError(`unknown type: ${type}`, "type", type);
                }
                visit(value, callback) {
                    return this._visit(this.primaryType, value, callback);
                }
                static from(types) {
                    return new TypedDataEncoder(types);
                }
                static getPrimaryType(types) {
                    return TypedDataEncoder.from(types).primaryType;
                }
                static hashStruct(name, types, value) {
                    return TypedDataEncoder.from(types).hashStruct(name, value);
                }
                static hashDomain(domain) {
                    let domainFields = [];
                    for (let name in domain) {
                        let type = domainFieldTypes[name];
                        type || logger.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`, "domain", domain), domainFields.push({ name, type });
                    }
                    return domainFields.sort((a, b) => domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name)), TypedDataEncoder.hashStruct("EIP712Domain", { EIP712Domain: domainFields }, domain);
                }
                static encode(domain, types, value) {
                    return (0, bytes_lib_esm.xs)(["0x1901", TypedDataEncoder.hashDomain(domain), TypedDataEncoder.from(types).hash(value)]);
                }
                static hash(domain, types, value) {
                    return (0, keccak256_lib_esm.w)(TypedDataEncoder.encode(domain, types, value));
                }
                static resolveNames(domain, types, value, resolveName) {
                    var thisArg, _arguments, P, generator;
                    return (
                        (thisArg = this),
                        (_arguments = void 0),
                        (P = void 0),
                        (generator = function* () {
                            domain = (0, properties_lib_esm.DC)(domain);
                            let ensCache = {};
                            domain.verifyingContract && !(0, bytes_lib_esm.A7)(domain.verifyingContract, 20) && (ensCache[domain.verifyingContract] = "0x");
                            let encoder = TypedDataEncoder.from(types);
                            for (let name in (encoder.visit(value, (type, value) => ("address" !== type || (0, bytes_lib_esm.A7)(value, 20) || (ensCache[value] = "0x"), value)), ensCache)) ensCache[name] = yield resolveName(name);
                            return (
                                domain.verifyingContract && ensCache[domain.verifyingContract] && (domain.verifyingContract = ensCache[domain.verifyingContract]),
                                (value = encoder.visit(value, (type, value) => ("address" === type && ensCache[value] ? ensCache[value] : value))),
                                { domain, value }
                            );
                        }),
                        new (P || (P = Promise))(function (resolve, reject) {
                            function fulfilled(value) {
                                try {
                                    step(generator.next(value));
                                } catch (e) {
                                    reject(e);
                                }
                            }
                            function rejected(value) {
                                try {
                                    step(generator.throw(value));
                                } catch (e) {
                                    reject(e);
                                }
                            }
                            function step(result) {
                                var value;
                                result.done
                                    ? resolve(result.value)
                                    : ((value = result.value) instanceof P
                                          ? value
                                          : new P(function (resolve) {
                                                resolve(value);
                                            })
                                      ).then(fulfilled, rejected);
                            }
                            step((generator = generator.apply(thisArg, _arguments || [])).next());
                        })
                    );
                }
                static getPayload(domain, types, value) {
                    TypedDataEncoder.hashDomain(domain);
                    let domainValues = {},
                        domainTypes = [];
                    domainFieldNames.forEach((name) => {
                        let value = domain[name];
                        null != value && ((domainValues[name] = domainChecks[name](value)), domainTypes.push({ name, type: domainFieldTypes[name] }));
                    });
                    let encoder = TypedDataEncoder.from(types),
                        typesWithDomain = (0, properties_lib_esm.DC)(types);
                    return (
                        typesWithDomain.EIP712Domain ? logger.throwArgumentError("types must not contain EIP712Domain type", "types.EIP712Domain", types) : (typesWithDomain.EIP712Domain = domainTypes),
                        encoder.encode(value),
                        {
                            types: typesWithDomain,
                            domain: domainValues,
                            primaryType: encoder.primaryType,
                            message: encoder.visit(value, (type, value) => {
                                if (type.match(/^bytes(\d*)/)) return (0, bytes_lib_esm.Dv)((0, bytes_lib_esm.lE)(value));
                                if (type.match(/^u?int/)) return bignumber.O$.from(value).toString();
                                switch (type) {
                                    case "address":
                                        return value.toLowerCase();
                                    case "bool":
                                        return !!value;
                                    case "string":
                                        return "string" != typeof value && logger.throwArgumentError("invalid string", "value", value), value;
                                }
                                return logger.throwArgumentError("unsupported type", "type", type);
                            }),
                        }
                    );
                }
            }
            var transactions_lib_esm = __webpack_require__(639);
            let lib_esm_logger = new logger_lib_esm.Yd("web/5.6.0");
            function staller(duration) {
                return new Promise((resolve) => {
                    setTimeout(resolve, duration);
                });
            }
            function bodyify(value, type) {
                if (null == value) return null;
                if ("string" == typeof value) return value;
                if ((0, bytes_lib_esm.Zq)(value)) {
                    if (type && ("text" === type.split("/")[0] || "application/json" === type.split(";")[0].trim()))
                        try {
                            return (0, utf8.ZN)(value);
                        } catch (error) {}
                    return (0, bytes_lib_esm.Dv)(value);
                }
                return value;
            }
            function fetchJson(connection, json, processFunc) {
                let processJsonFunc = (value, response) => {
                        let result = null;
                        if (null != value)
                            try {
                                result = JSON.parse((0, utf8.ZN)(value));
                            } catch (error) {
                                lib_esm_logger.throwError("invalid JSON", logger_lib_esm.Yd.errors.SERVER_ERROR, { body: value, error: error });
                            }
                        return processFunc && (result = processFunc(result, response)), result;
                    },
                    body = null;
                if (null != json) {
                    body = (0, utf8.Y0)(json);
                    let updated = "string" == typeof connection ? { url: connection } : (0, properties_lib_esm.DC)(connection);
                    if (updated.headers) {
                        let hasContentType = 0 !== Object.keys(updated.headers).filter((k) => "content-type" === k.toLowerCase()).length;
                        hasContentType || ((updated.headers = (0, properties_lib_esm.DC)(updated.headers)), (updated.headers["content-type"] = "application/json"));
                    } else updated.headers = { "content-type": "application/json" };
                    connection = updated;
                }
                return (function (connection, body, processFunc) {
                    let attemptLimit = "object" == typeof connection && null != connection.throttleLimit ? connection.throttleLimit : 12;
                    lib_esm_logger.assertArgument(attemptLimit > 0 && attemptLimit % 1 == 0, "invalid connection throttle limit", "connection.throttleLimit", attemptLimit);
                    let throttleCallback = "object" == typeof connection ? connection.throttleCallback : null,
                        throttleSlotInterval = "object" == typeof connection && "number" == typeof connection.throttleSlotInterval ? connection.throttleSlotInterval : 100;
                    lib_esm_logger.assertArgument(throttleSlotInterval > 0 && throttleSlotInterval % 1 == 0, "invalid connection throttle slot interval", "connection.throttleSlotInterval", throttleSlotInterval);
                    let errorPassThrough = "object" == typeof connection && !!connection.errorPassThrough,
                        headers = {},
                        url = null,
                        options = { method: "GET" },
                        allow304 = !1,
                        timeout = 12e4;
                    if ("string" == typeof connection) url = connection;
                    else if ("object" == typeof connection) {
                        if (
                            ((null == connection || null == connection.url) && lib_esm_logger.throwArgumentError("missing URL", "connection.url", connection),
                            (url = connection.url),
                            "number" == typeof connection.timeout && connection.timeout > 0 && (timeout = connection.timeout),
                            connection.headers)
                        )
                            for (let key in connection.headers) (headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) }), ["if-none-match", "if-modified-since"].indexOf(key.toLowerCase()) >= 0 && (allow304 = !0);
                        if (((options.allowGzip = !!connection.allowGzip), null != connection.user && null != connection.password)) {
                            "https:" !== url.substring(0, 6) &&
                                !0 !== connection.allowInsecureAuthentication &&
                                lib_esm_logger.throwError("basic authentication requires a secure https url", logger_lib_esm.Yd.errors.INVALID_ARGUMENT, { argument: "url", url: url, user: connection.user, password: "[REDACTED]" });
                            let authorization = connection.user + ":" + connection.password;
                            headers.authorization = {
                                key: "Authorization",
                                value:
                                    "Basic " +
                                    (function (data) {
                                        data = (0, bytes_lib_esm.lE)(data);
                                        let textData = "";
                                        for (let i = 0; i < data.length; i++) textData += String.fromCharCode(data[i]);
                                        return btoa(textData);
                                    })((0, utf8.Y0)(authorization)),
                            };
                        }
                        null != connection.skipFetchSetup && (options.skipFetchSetup = !!connection.skipFetchSetup);
                    }
                    let reData = RegExp("^data:([a-z0-9-]+/[a-z0-9-]+);base64,(.*)$", "i"),
                        dataMatch = url ? url.match(reData) : null;
                    if (dataMatch)
                        try {
                            let response = {
                                    statusCode: 200,
                                    statusMessage: "OK",
                                    headers: { "content-type": dataMatch[1] },
                                    body: (function (textData) {
                                        textData = atob(textData);
                                        let data = [];
                                        for (let i = 0; i < textData.length; i++) data.push(textData.charCodeAt(i));
                                        return (0, bytes_lib_esm.lE)(data);
                                    })(dataMatch[2]),
                                },
                                result = response.body;
                            return processFunc && (result = processFunc(response.body, response)), Promise.resolve(result);
                        } catch (error) {
                            lib_esm_logger.throwError("processing response error", logger_lib_esm.Yd.errors.SERVER_ERROR, { body: bodyify(dataMatch[1], dataMatch[2]), error: error, requestBody: null, requestMethod: "GET", url: url });
                        }
                    body &&
                        ((options.method = "POST"),
                        (options.body = body),
                        null == headers["content-type"] && (headers["content-type"] = { key: "Content-Type", value: "application/octet-stream" }),
                        null == headers["content-length"] && (headers["content-length"] = { key: "Content-Length", value: String(body.length) }));
                    let flatHeaders = {};
                    Object.keys(headers).forEach((key) => {
                        let header = headers[key];
                        flatHeaders[header.key] = header.value;
                    }),
                        (options.headers = flatHeaders);
                    let runningTimeout = (function () {
                            let timer = null,
                                promise = new Promise(function (resolve, reject) {
                                    timeout &&
                                        (timer = setTimeout(() => {
                                            null != timer &&
                                                ((timer = null),
                                                reject(
                                                    lib_esm_logger.makeError("timeout", logger_lib_esm.Yd.errors.TIMEOUT, {
                                                        requestBody: bodyify(options.body, flatHeaders["content-type"]),
                                                        requestMethod: options.method,
                                                        timeout: timeout,
                                                        url: url,
                                                    })
                                                ));
                                        }, timeout));
                                });
                            return {
                                promise,
                                cancel: function () {
                                    null != timer && (clearTimeout(timer), (timer = null));
                                },
                            };
                        })(),
                        runningFetch = (function () {
                            var thisArg, _arguments, P, generator;
                            return (
                                (thisArg = this),
                                (_arguments = void 0),
                                (P = void 0),
                                (generator = function* () {
                                    for (let attempt = 0; attempt < attemptLimit; attempt++) {
                                        let response = null;
                                        try {
                                            if (
                                                ((response = yield (function (href, options) {
                                                    var thisArg, _arguments, P, generator;
                                                    return (
                                                        (thisArg = this),
                                                        (_arguments = void 0),
                                                        (P = void 0),
                                                        (generator = function* () {
                                                            null == options && (options = {});
                                                            let request = { method: options.method || "GET", headers: options.headers || {}, body: options.body || void 0 };
                                                            !0 !== options.skipFetchSetup &&
                                                                ((request.mode = "cors"), (request.cache = "no-cache"), (request.credentials = "same-origin"), (request.redirect = "follow"), (request.referrer = "client"));
                                                            let response = yield fetch(href, request),
                                                                body = yield response.arrayBuffer(),
                                                                headers = {};
                                                            return (
                                                                response.headers.forEach
                                                                    ? response.headers.forEach((value, key) => {
                                                                          headers[key.toLowerCase()] = value;
                                                                      })
                                                                    : response.headers.keys().forEach((key) => {
                                                                          headers[key.toLowerCase()] = response.headers.get(key);
                                                                      }),
                                                                { headers: headers, statusCode: response.status, statusMessage: response.statusText, body: (0, bytes_lib_esm.lE)(new Uint8Array(body)) }
                                                            );
                                                        }),
                                                        new (P || (P = Promise))(function (resolve, reject) {
                                                            function fulfilled(value) {
                                                                try {
                                                                    step(generator.next(value));
                                                                } catch (e) {
                                                                    reject(e);
                                                                }
                                                            }
                                                            function rejected(value) {
                                                                try {
                                                                    step(generator.throw(value));
                                                                } catch (e) {
                                                                    reject(e);
                                                                }
                                                            }
                                                            function step(result) {
                                                                var value;
                                                                result.done
                                                                    ? resolve(result.value)
                                                                    : ((value = result.value) instanceof P
                                                                          ? value
                                                                          : new P(function (resolve) {
                                                                                resolve(value);
                                                                            })
                                                                      ).then(fulfilled, rejected);
                                                            }
                                                            step((generator = generator.apply(thisArg, _arguments || [])).next());
                                                        })
                                                    );
                                                })(url, options)),
                                                attempt < attemptLimit)
                                            ) {
                                                if (301 === response.statusCode || 302 === response.statusCode) {
                                                    let location1 = response.headers.location || "";
                                                    if ("GET" === options.method && location1.match(/^https:/)) {
                                                        url = response.headers.location;
                                                        continue;
                                                    }
                                                } else if (429 === response.statusCode) {
                                                    let tryAgain = !0;
                                                    if ((throttleCallback && (tryAgain = yield throttleCallback(attempt, url)), tryAgain)) {
                                                        let retryAfter = response.headers["retry-after"];
                                                        yield staller(
                                                            "string" == typeof retryAfter && retryAfter.match(/^[1-9][0-9]*$/) ? 1e3 * parseInt(retryAfter) : throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)))
                                                        );
                                                        continue;
                                                    }
                                                }
                                            }
                                        } catch (error) {
                                            null == (response = error.response) &&
                                                (runningTimeout.cancel(),
                                                lib_esm_logger.throwError("missing response", logger_lib_esm.Yd.errors.SERVER_ERROR, {
                                                    requestBody: bodyify(options.body, flatHeaders["content-type"]),
                                                    requestMethod: options.method,
                                                    serverError: error,
                                                    url: url,
                                                }));
                                        }
                                        let body = response.body;
                                        if (
                                            (allow304 && 304 === response.statusCode
                                                ? (body = null)
                                                : !errorPassThrough &&
                                                  (response.statusCode < 200 || response.statusCode >= 300) &&
                                                  (runningTimeout.cancel(),
                                                  lib_esm_logger.throwError("bad response", logger_lib_esm.Yd.errors.SERVER_ERROR, {
                                                      status: response.statusCode,
                                                      headers: response.headers,
                                                      body: bodyify(body, response.headers ? response.headers["content-type"] : null),
                                                      requestBody: bodyify(options.body, flatHeaders["content-type"]),
                                                      requestMethod: options.method,
                                                      url: url,
                                                  })),
                                            processFunc)
                                        )
                                            try {
                                                let result = yield processFunc(body, response);
                                                return runningTimeout.cancel(), result;
                                            } catch (error1) {
                                                if (error1.throttleRetry && attempt < attemptLimit) {
                                                    let tryAgain1 = !0;
                                                    if ((throttleCallback && (tryAgain1 = yield throttleCallback(attempt, url)), tryAgain1)) {
                                                        let timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));
                                                        yield staller(timeout);
                                                        continue;
                                                    }
                                                }
                                                runningTimeout.cancel(),
                                                    lib_esm_logger.throwError("processing response error", logger_lib_esm.Yd.errors.SERVER_ERROR, {
                                                        body: bodyify(body, response.headers ? response.headers["content-type"] : null),
                                                        error: error1,
                                                        requestBody: bodyify(options.body, flatHeaders["content-type"]),
                                                        requestMethod: options.method,
                                                        url: url,
                                                    });
                                            }
                                        return runningTimeout.cancel(), body;
                                    }
                                    return lib_esm_logger.throwError("failed response", logger_lib_esm.Yd.errors.SERVER_ERROR, { requestBody: bodyify(options.body, flatHeaders["content-type"]), requestMethod: options.method, url: url });
                                }),
                                new (P || (P = Promise))(function (resolve, reject) {
                                    function fulfilled(value) {
                                        try {
                                            step(generator.next(value));
                                        } catch (e) {
                                            reject(e);
                                        }
                                    }
                                    function rejected(value) {
                                        try {
                                            step(generator.throw(value));
                                        } catch (e) {
                                            reject(e);
                                        }
                                    }
                                    function step(result) {
                                        var value;
                                        result.done
                                            ? resolve(result.value)
                                            : ((value = result.value) instanceof P
                                                  ? value
                                                  : new P(function (resolve) {
                                                        resolve(value);
                                                    })
                                              ).then(fulfilled, rejected);
                                    }
                                    step((generator = generator.apply(thisArg, _arguments || [])).next());
                                })
                            );
                        })();
                    return Promise.race([runningTimeout.promise, runningFetch]);
                })(connection, body, processJsonFunc);
            }
            function poll(func, options) {
                return (
                    options || (options = {}),
                    null == (options = (0, properties_lib_esm.DC)(options)).floor && (options.floor = 0),
                    null == options.ceiling && (options.ceiling = 1e4),
                    null == options.interval && (options.interval = 250),
                    new Promise(function (resolve, reject) {
                        let timer = null,
                            done = !1,
                            cancel = () => !done && ((done = !0), timer && clearTimeout(timer), !0);
                        options.timeout &&
                            (timer = setTimeout(() => {
                                cancel() && reject(Error("timeout"));
                            }, options.timeout));
                        let retryLimit = options.retryLimit,
                            attempt = 0;
                        !(function check() {
                            return func().then(
                                function (result) {
                                    if (void 0 !== result) cancel() && resolve(result);
                                    else if (options.oncePoll) options.oncePoll.once("poll", check);
                                    else if (options.onceBlock) options.onceBlock.once("block", check);
                                    else if (!done) {
                                        if (++attempt > retryLimit) {
                                            cancel() && reject(Error("retry limit reached"));
                                            return;
                                        }
                                        let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));
                                        timeout < options.floor && (timeout = options.floor), timeout > options.ceiling && (timeout = options.ceiling), setTimeout(check, timeout);
                                    }
                                    return null;
                                },
                                function (error) {
                                    cancel() && reject(error);
                                }
                            );
                        })();
                    })
                );
            }
            var abstract_provider_lib_esm = __webpack_require__(81556);
            class BaseX {
                constructor(alphabet) {
                    (0, properties_lib_esm.zG)(this, "alphabet", alphabet),
                        (0, properties_lib_esm.zG)(this, "base", alphabet.length),
                        (0, properties_lib_esm.zG)(this, "_alphabetMap", {}),
                        (0, properties_lib_esm.zG)(this, "_leader", alphabet.charAt(0));
                    for (let i = 0; i < alphabet.length; i++) this._alphabetMap[alphabet.charAt(i)] = i;
                }
                encode(value) {
                    let source = (0, bytes_lib_esm.lE)(value);
                    if (0 === source.length) return "";
                    let digits = [0];
                    for (let i = 0; i < source.length; ++i) {
                        let carry = source[i];
                        for (let j = 0; j < digits.length; ++j) (carry += digits[j] << 8), (digits[j] = carry % this.base), (carry = (carry / this.base) | 0);
                        for (; carry > 0; ) digits.push(carry % this.base), (carry = (carry / this.base) | 0);
                    }
                    let string = "";
                    for (let k = 0; 0 === source[k] && k < source.length - 1; ++k) string += this._leader;
                    for (let q = digits.length - 1; q >= 0; --q) string += this.alphabet[digits[q]];
                    return string;
                }
                decode(value) {
                    if ("string" != typeof value) throw TypeError("Expected String");
                    let bytes = [];
                    if (0 === value.length) return new Uint8Array(bytes);
                    bytes.push(0);
                    for (let i = 0; i < value.length; i++) {
                        let byte = this._alphabetMap[value[i]];
                        if (void 0 === byte) throw Error("Non-base" + this.base + " character");
                        let carry = byte;
                        for (let j = 0; j < bytes.length; ++j) (carry += bytes[j] * this.base), (bytes[j] = 255 & carry), (carry >>= 8);
                        for (; carry > 0; ) bytes.push(255 & carry), (carry >>= 8);
                    }
                    for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) bytes.push(0);
                    return (0, bytes_lib_esm.lE)(new Uint8Array(bytes.reverse()));
                }
            }
            new BaseX("abcdefghijklmnopqrstuvwxyz234567");
            let Base58 = new BaseX("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");
            function createTable(data, func) {
                func ||
                    (func = function (value) {
                        return [parseInt(value, 16)];
                    });
                let lo = 0,
                    result = {};
                return (
                    data.split(",").forEach((pair) => {
                        let comps = pair.split(":");
                        result[(lo += parseInt(comps[0], 16))] = func(comps[1]);
                    }),
                    result
                );
            }
            function createRangeTable(data) {
                let hi = 0;
                return data.split(",").map((v) => {
                    let comps = v.split("-");
                    return 1 === comps.length ? (comps[1] = "0") : "" === comps[1] && (comps[1] = "1"), { l: hi + parseInt(comps[0], 16), h: (hi = parseInt(comps[1], 16)) };
                });
            }
            function matchMap(value, ranges) {
                let lo = 0;
                for (let i = 0; i < ranges.length; i++) {
                    let range = ranges[i];
                    if (value >= (lo += range.l) && value <= lo + range.h && (value - lo) % (range.d || 1) == 0) {
                        if (range.e && -1 !== range.e.indexOf(value - lo)) continue;
                        return range;
                    }
                }
                return null;
            }
            let Table_A_1_ranges = createRangeTable(
                    "221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d"
                ),
                Table_B_1_flags = "ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map((v) => parseInt(v, 16)),
                Table_B_2_ranges = [
                    { h: 25, s: 32, l: 65 },
                    { h: 30, s: 32, e: [23], l: 127 },
                    { h: 54, s: 1, e: [48], l: 64, d: 2 },
                    { h: 14, s: 1, l: 57, d: 2 },
                    { h: 44, s: 1, l: 17, d: 2 },
                    { h: 10, s: 1, e: [2, 6, 8], l: 61, d: 2 },
                    { h: 16, s: 1, l: 68, d: 2 },
                    { h: 84, s: 1, e: [18, 24, 66], l: 19, d: 2 },
                    { h: 26, s: 32, e: [17], l: 435 },
                    { h: 22, s: 1, l: 71, d: 2 },
                    { h: 15, s: 80, l: 40 },
                    { h: 31, s: 32, l: 16 },
                    { h: 32, s: 1, l: 80, d: 2 },
                    { h: 52, s: 1, l: 42, d: 2 },
                    { h: 12, s: 1, l: 55, d: 2 },
                    { h: 40, s: 1, e: [38], l: 15, d: 2 },
                    { h: 14, s: 1, l: 48, d: 2 },
                    { h: 37, s: 48, l: 49 },
                    { h: 148, s: 1, l: 6351, d: 2 },
                    { h: 88, s: 1, l: 160, d: 2 },
                    { h: 15, s: 16, l: 704 },
                    { h: 25, s: 26, l: 854 },
                    { h: 25, s: 32, l: 55915 },
                    { h: 37, s: 40, l: 1247 },
                    { h: 25, s: -119711, l: 53248 },
                    { h: 25, s: -119763, l: 52 },
                    { h: 25, s: -119815, l: 52 },
                    { h: 25, s: -119867, e: [1, 4, 5, 7, 8, 11, 12, 17], l: 52 },
                    { h: 25, s: -119919, l: 52 },
                    { h: 24, s: -119971, e: [2, 7, 8, 17], l: 52 },
                    { h: 24, s: -120023, e: [2, 7, 13, 15, 16, 17], l: 52 },
                    { h: 25, s: -120075, l: 52 },
                    { h: 25, s: -120127, l: 52 },
                    { h: 25, s: -120179, l: 52 },
                    { h: 25, s: -120231, l: 52 },
                    { h: 25, s: -120283, l: 52 },
                    { h: 25, s: -120335, l: 52 },
                    { h: 24, s: -119543, e: [17], l: 56 },
                    { h: 24, s: -119601, e: [17], l: 58 },
                    { h: 24, s: -119659, e: [17], l: 58 },
                    { h: 24, s: -119717, e: [17], l: 58 },
                    { h: 24, s: -119775, e: [17], l: 58 },
                ],
                Table_B_2_lut_abs = createTable(
                    "b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3"
                ),
                Table_B_2_lut_rel = createTable(
                    "179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7"
                ),
                Table_B_2_complex = createTable(
                    "df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D",
                    function (data) {
                        if (data.length % 4 != 0) throw Error("bad data");
                        let result = [];
                        for (let i = 0; i < data.length; i += 4) result.push(parseInt(data.substring(i, i + 4), 16));
                        return result;
                    }
                ),
                Table_C_ranges = createRangeTable("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");
            function idna_nameprep(value) {
                if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) return value.toLowerCase();
                let codes = (0, utf8.XL)(value);
                (codes = codes
                    .map((code) =>
                        Table_B_1_flags.indexOf(code) >= 0 || (code >= 65024 && code <= 65039)
                            ? []
                            : (function (codepoint) {
                                  let range = matchMap(codepoint, Table_B_2_ranges);
                                  if (range) return [codepoint + range.s];
                                  let codes = Table_B_2_lut_abs[codepoint];
                                  if (codes) return codes;
                                  let shift = Table_B_2_lut_rel[codepoint];
                                  return shift ? [codepoint + shift[0]] : Table_B_2_complex[codepoint] || null;
                              })(code) || [code]
                    )
                    .reduce(
                        (accum, value) => (
                            value.forEach((value) => {
                                accum.push(value);
                            }),
                            accum
                        ),
                        []
                    )),
                    (codes = (0, utf8.XL)((0, utf8.uu)(codes), utf8.Uj.NFKC)).forEach((code) => {
                        if (matchMap(code, Table_C_ranges)) throw Error("STRINGPREP_CONTAINS_PROHIBITED");
                    }),
                    codes.forEach((code) => {
                        if (matchMap(code, Table_A_1_ranges)) throw Error("STRINGPREP_CONTAINS_UNASSIGNED");
                    });
                let name = (0, utf8.uu)(codes);
                if ("-" === name.substring(0, 1) || "--" === name.substring(2, 4) || "-" === name.substring(name.length - 1)) throw Error("invalid hyphen");
                if (name.length > 63) throw Error("too long");
                return name;
            }
            let namehash_logger = new logger_lib_esm.Yd(_version_version),
                Zeros = new Uint8Array(32);
            Zeros.fill(0);
            let Partition = RegExp("^((.*)\\.)?([^.]+)$");
            function namehash(name) {
                "string" != typeof name && namehash_logger.throwArgumentError("invalid ENS name; not a string", "name", name);
                let current = name,
                    result = Zeros;
                for (; current.length; ) {
                    let partition = current.match(Partition);
                    (null == partition || "" === partition[2]) && namehash_logger.throwArgumentError("invalid ENS address; missing component", "name", name);
                    let label = (0, utf8.Y0)(idna_nameprep(partition[3]));
                    (result = (0, keccak256_lib_esm.w)((0, bytes_lib_esm.zo)([result, (0, keccak256_lib_esm.w)(label)]))), (current = partition[2] || "");
                }
                return (0, bytes_lib_esm.Dv)(result);
            }
            let networks_lib_esm_logger = new logger_lib_esm.Yd("networks/5.6.1");
            function ethDefaultProvider(network) {
                let func = function (providers, options) {
                    null == options && (options = {});
                    let providerList = [];
                    if (providers.InfuraProvider && "-" !== options.infura)
                        try {
                            providerList.push(new providers.InfuraProvider(network, options.infura));
                        } catch (error) {}
                    if (providers.EtherscanProvider && "-" !== options.etherscan)
                        try {
                            providerList.push(new providers.EtherscanProvider(network, options.etherscan));
                        } catch (error1) {}
                    if (providers.AlchemyProvider && "-" !== options.alchemy)
                        try {
                            providerList.push(new providers.AlchemyProvider(network, options.alchemy));
                        } catch (error2) {}
                    if (providers.PocketProvider && "-" !== options.pocket)
                        try {
                            let provider = new providers.PocketProvider(network);
                            provider.network && -1 === ["goerli", "ropsten", "rinkeby"].indexOf(provider.network.name) && providerList.push(provider);
                        } catch (error3) {}
                    if (providers.CloudflareProvider && "-" !== options.cloudflare)
                        try {
                            providerList.push(new providers.CloudflareProvider(network));
                        } catch (error4) {}
                    if (providers.AnkrProvider && "-" !== options.ankr)
                        try {
                            providerList.push(new providers.AnkrProvider(network, options.ankr));
                        } catch (error5) {}
                    if (0 === providerList.length) return null;
                    if (providers.FallbackProvider) {
                        let quorum = 1;
                        return null != options.quorum ? (quorum = options.quorum) : "homestead" === network && (quorum = 2), new providers.FallbackProvider(providerList, quorum);
                    }
                    return providerList[0];
                };
                return (
                    (func.renetwork = function (network) {
                        return ethDefaultProvider(network);
                    }),
                    func
                );
            }
            function etcDefaultProvider(url, network) {
                let func = function (providers, options) {
                    return providers.JsonRpcProvider ? new providers.JsonRpcProvider(url, network) : null;
                };
                return (
                    (func.renetwork = function (network) {
                        return etcDefaultProvider(url, network);
                    }),
                    func
                );
            }
            let homestead = { chainId: 1, ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e", name: "homestead", _defaultProvider: ethDefaultProvider("homestead") },
                ropsten = { chainId: 3, ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e", name: "ropsten", _defaultProvider: ethDefaultProvider("ropsten") },
                classicMordor = { chainId: 63, name: "classicMordor", _defaultProvider: etcDefaultProvider("https://www.ethercluster.com/mordor", "classicMordor") },
                networks = {
                    unspecified: { chainId: 0, name: "unspecified" },
                    homestead: homestead,
                    mainnet: homestead,
                    morden: { chainId: 2, name: "morden" },
                    ropsten: ropsten,
                    testnet: ropsten,
                    rinkeby: { chainId: 4, ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e", name: "rinkeby", _defaultProvider: ethDefaultProvider("rinkeby") },
                    kovan: { chainId: 42, name: "kovan", _defaultProvider: ethDefaultProvider("kovan") },
                    goerli: { chainId: 5, ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e", name: "goerli", _defaultProvider: ethDefaultProvider("goerli") },
                    kintsugi: { chainId: 1337702, name: "kintsugi" },
                    classic: { chainId: 61, name: "classic", _defaultProvider: etcDefaultProvider("https://www.ethercluster.com/etc", "classic") },
                    classicMorden: { chainId: 62, name: "classicMorden" },
                    classicMordor: classicMordor,
                    classicTestnet: classicMordor,
                    classicKotti: { chainId: 6, name: "classicKotti", _defaultProvider: etcDefaultProvider("https://www.ethercluster.com/kotti", "classicKotti") },
                    xdai: { chainId: 100, name: "xdai" },
                    matic: { chainId: 137, name: "matic" },
                    maticmum: { chainId: 80001, name: "maticmum" },
                    optimism: { chainId: 10, name: "optimism" },
                    "optimism-kovan": { chainId: 69, name: "optimism-kovan" },
                    "optimism-goerli": { chainId: 420, name: "optimism-goerli" },
                    arbitrum: { chainId: 42161, name: "arbitrum" },
                    "arbitrum-rinkeby": { chainId: 421611, name: "arbitrum-rinkeby" },
                    bnb: { chainId: 56, name: "bnb" },
                    bnbt: { chainId: 97, name: "bnbt" },
                };
            var lib_hash = __webpack_require__(33715),
                hash_default = __webpack_require__.n(lib_hash);
            function sha256(data) {
                return (
                    "0x" +
                    hash_default()
                        .sha256()
                        .update((0, bytes_lib_esm.lE)(data))
                        .digest("hex")
                );
            }
            new logger_lib_esm.Yd("sha2/5.6.0");
            var bech32 = __webpack_require__(92882),
                bech32_default = __webpack_require__.n(bech32);
            let formatter_logger = new logger_lib_esm.Yd(version);
            class Formatter {
                constructor() {
                    formatter_logger.checkNew(new.target, Formatter), (this.formats = this.getDefaultFormats());
                }
                getDefaultFormats() {
                    let formats = {},
                        address = this.address.bind(this),
                        bigNumber = this.bigNumber.bind(this),
                        blockTag = this.blockTag.bind(this),
                        data = this.data.bind(this),
                        hash = this.hash.bind(this),
                        hex = this.hex.bind(this),
                        number = this.number.bind(this),
                        type = this.type.bind(this),
                        strictData = (v) => this.data(v, !0);
                    return (
                        (formats.transaction = {
                            hash: hash,
                            type: type,
                            accessList: Formatter.allowNull(this.accessList.bind(this), null),
                            blockHash: Formatter.allowNull(hash, null),
                            blockNumber: Formatter.allowNull(number, null),
                            transactionIndex: Formatter.allowNull(number, null),
                            confirmations: Formatter.allowNull(number, null),
                            from: address,
                            gasPrice: Formatter.allowNull(bigNumber),
                            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),
                            maxFeePerGas: Formatter.allowNull(bigNumber),
                            gasLimit: bigNumber,
                            to: Formatter.allowNull(address, null),
                            value: bigNumber,
                            nonce: number,
                            data: data,
                            r: Formatter.allowNull(this.uint256),
                            s: Formatter.allowNull(this.uint256),
                            v: Formatter.allowNull(number),
                            creates: Formatter.allowNull(address, null),
                            raw: Formatter.allowNull(data),
                        }),
                        (formats.transactionRequest = {
                            from: Formatter.allowNull(address),
                            nonce: Formatter.allowNull(number),
                            gasLimit: Formatter.allowNull(bigNumber),
                            gasPrice: Formatter.allowNull(bigNumber),
                            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),
                            maxFeePerGas: Formatter.allowNull(bigNumber),
                            to: Formatter.allowNull(address),
                            value: Formatter.allowNull(bigNumber),
                            data: Formatter.allowNull(strictData),
                            type: Formatter.allowNull(number),
                            accessList: Formatter.allowNull(this.accessList.bind(this), null),
                        }),
                        (formats.receiptLog = { transactionIndex: number, blockNumber: number, transactionHash: hash, address: address, topics: Formatter.arrayOf(hash), data: data, logIndex: number, blockHash: hash }),
                        (formats.receipt = {
                            to: Formatter.allowNull(this.address, null),
                            from: Formatter.allowNull(this.address, null),
                            contractAddress: Formatter.allowNull(address, null),
                            transactionIndex: number,
                            root: Formatter.allowNull(hex),
                            gasUsed: bigNumber,
                            logsBloom: Formatter.allowNull(data),
                            blockHash: hash,
                            transactionHash: hash,
                            logs: Formatter.arrayOf(this.receiptLog.bind(this)),
                            blockNumber: number,
                            confirmations: Formatter.allowNull(number, null),
                            cumulativeGasUsed: bigNumber,
                            effectiveGasPrice: Formatter.allowNull(bigNumber),
                            status: Formatter.allowNull(number),
                            type: type,
                        }),
                        (formats.block = {
                            hash: Formatter.allowNull(hash),
                            parentHash: hash,
                            number: number,
                            timestamp: number,
                            nonce: Formatter.allowNull(hex),
                            difficulty: this.difficulty.bind(this),
                            gasLimit: bigNumber,
                            gasUsed: bigNumber,
                            miner: Formatter.allowNull(address),
                            extraData: data,
                            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),
                            baseFeePerGas: Formatter.allowNull(bigNumber),
                        }),
                        (formats.blockWithTransactions = (0, properties_lib_esm.DC)(formats.block)),
                        (formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)))),
                        (formats.filter = {
                            fromBlock: Formatter.allowNull(blockTag, void 0),
                            toBlock: Formatter.allowNull(blockTag, void 0),
                            blockHash: Formatter.allowNull(hash, void 0),
                            address: Formatter.allowNull(address, void 0),
                            topics: Formatter.allowNull(this.topics.bind(this), void 0),
                        }),
                        (formats.filterLog = {
                            blockNumber: Formatter.allowNull(number),
                            blockHash: Formatter.allowNull(hash),
                            transactionIndex: number,
                            removed: Formatter.allowNull(this.boolean.bind(this)),
                            address: address,
                            data: Formatter.allowFalsish(data, "0x"),
                            topics: Formatter.arrayOf(hash),
                            transactionHash: hash,
                            logIndex: number,
                        }),
                        formats
                    );
                }
                accessList(accessList) {
                    return (0, transactions_lib_esm.z7)(accessList || []);
                }
                number(number) {
                    return "0x" === number ? 0 : bignumber.O$.from(number).toNumber();
                }
                type(number) {
                    return "0x" === number || null == number ? 0 : bignumber.O$.from(number).toNumber();
                }
                bigNumber(value) {
                    return bignumber.O$.from(value);
                }
                boolean(value) {
                    if ("boolean" == typeof value) return value;
                    if ("string" == typeof value) {
                        if ("true" === (value = value.toLowerCase())) return !0;
                        if ("false" === value) return !1;
                    }
                    throw Error("invalid boolean - " + value);
                }
                hex(value, strict) {
                    return "string" == typeof value && (strict || "0x" === value.substring(0, 2) || (value = "0x" + value), (0, bytes_lib_esm.A7)(value))
                        ? value.toLowerCase()
                        : formatter_logger.throwArgumentError("invalid hash", "value", value);
                }
                data(value, strict) {
                    let result = this.hex(value, strict);
                    if (result.length % 2 != 0) throw Error("invalid data; odd-length - " + value);
                    return result;
                }
                address(value) {
                    return (0, address_lib_esm.Kn)(value);
                }
                callAddress(value) {
                    if (!(0, bytes_lib_esm.A7)(value, 32)) return null;
                    let address = (0, address_lib_esm.Kn)((0, bytes_lib_esm.p3)(value, 12));
                    return "0x0000000000000000000000000000000000000000" === address ? null : address;
                }
                contractAddress(value) {
                    return (0, address_lib_esm.CR)(value);
                }
                blockTag(blockTag) {
                    if (null == blockTag) return "latest";
                    if ("earliest" === blockTag) return "0x0";
                    if ("latest" === blockTag || "pending" === blockTag) return blockTag;
                    if ("number" == typeof blockTag || (0, bytes_lib_esm.A7)(blockTag)) return (0, bytes_lib_esm.$P)(blockTag);
                    throw Error("invalid blockTag");
                }
                hash(value, strict) {
                    let result = this.hex(value, strict);
                    return 32 !== (0, bytes_lib_esm.E1)(result) ? formatter_logger.throwArgumentError("invalid hash", "value", value) : result;
                }
                difficulty(value) {
                    if (null == value) return null;
                    let v = bignumber.O$.from(value);
                    try {
                        return v.toNumber();
                    } catch (error) {}
                    return null;
                }
                uint256(value) {
                    if (!(0, bytes_lib_esm.A7)(value)) throw Error("invalid uint256");
                    return (0, bytes_lib_esm.$m)(value, 32);
                }
                _block(value, format) {
                    null != value.author && null == value.miner && (value.miner = value.author);
                    let difficulty = null != value._difficulty ? value._difficulty : value.difficulty,
                        result = Formatter.check(format, value);
                    return (result._difficulty = null == difficulty ? null : bignumber.O$.from(difficulty)), result;
                }
                block(value) {
                    return this._block(value, this.formats.block);
                }
                blockWithTransactions(value) {
                    return this._block(value, this.formats.blockWithTransactions);
                }
                transactionRequest(value) {
                    return Formatter.check(this.formats.transactionRequest, value);
                }
                transactionResponse(transaction) {
                    null != transaction.gas && null == transaction.gasLimit && (transaction.gasLimit = transaction.gas),
                        transaction.to && bignumber.O$.from(transaction.to).isZero() && (transaction.to = "0x0000000000000000000000000000000000000000"),
                        null != transaction.input && null == transaction.data && (transaction.data = transaction.input),
                        null == transaction.to && null == transaction.creates && (transaction.creates = this.contractAddress(transaction)),
                        (1 === transaction.type || 2 === transaction.type) && null == transaction.accessList && (transaction.accessList = []);
                    let result = Formatter.check(this.formats.transaction, transaction);
                    if (null != transaction.chainId) {
                        let chainId = transaction.chainId;
                        (0, bytes_lib_esm.A7)(chainId) && (chainId = bignumber.O$.from(chainId).toNumber()), (result.chainId = chainId);
                    } else {
                        let chainId1 = transaction.networkId;
                        null == chainId1 && null == result.v && (chainId1 = transaction.chainId),
                            (0, bytes_lib_esm.A7)(chainId1) && (chainId1 = bignumber.O$.from(chainId1).toNumber()),
                            "number" != typeof chainId1 && null != result.v && ((chainId1 = (result.v - 35) / 2) < 0 && (chainId1 = 0), (chainId1 = parseInt(chainId1))),
                            "number" != typeof chainId1 && (chainId1 = 0),
                            (result.chainId = chainId1);
                    }
                    return result.blockHash && "x" === result.blockHash.replace(/0/g, "") && (result.blockHash = null), result;
                }
                transaction(value) {
                    return (0, transactions_lib_esm.Qc)(value);
                }
                receiptLog(value) {
                    return Formatter.check(this.formats.receiptLog, value);
                }
                receipt(value) {
                    let result = Formatter.check(this.formats.receipt, value);
                    if (null != result.root) {
                        if (result.root.length <= 4) {
                            let value1 = bignumber.O$.from(result.root).toNumber();
                            0 === value1 || 1 === value1
                                ? (null != result.status && result.status !== value1 && formatter_logger.throwArgumentError("alt-root-status/status mismatch", "value", { root: result.root, status: result.status }),
                                  (result.status = value1),
                                  delete result.root)
                                : formatter_logger.throwArgumentError("invalid alt-root-status", "value.root", result.root);
                        } else 66 !== result.root.length && formatter_logger.throwArgumentError("invalid root hash", "value.root", result.root);
                    }
                    return null != result.status && (result.byzantium = !0), result;
                }
                topics(value) {
                    return Array.isArray(value) ? value.map((v) => this.topics(v)) : null != value ? this.hash(value, !0) : null;
                }
                filter(value) {
                    return Formatter.check(this.formats.filter, value);
                }
                filterLog(value) {
                    return Formatter.check(this.formats.filterLog, value);
                }
                static check(format, object) {
                    let result = {};
                    for (let key in format)
                        try {
                            let value = format[key](object[key]);
                            void 0 !== value && (result[key] = value);
                        } catch (error) {
                            throw ((error.checkKey = key), (error.checkValue = object[key]), error);
                        }
                    return result;
                }
                static allowNull(format, nullValue) {
                    return function (value) {
                        return null == value ? nullValue : format(value);
                    };
                }
                static allowFalsish(format, replaceValue) {
                    return function (value) {
                        return value ? format(value) : replaceValue;
                    };
                }
                static arrayOf(format) {
                    return function (array) {
                        if (!Array.isArray(array)) throw Error("not an array");
                        let result = [];
                        return (
                            array.forEach(function (value) {
                                result.push(format(value));
                            }),
                            result
                        );
                    };
                }
            }
            var base_provider_awaiter = function (thisArg, _arguments, P, generator) {
                return new (P || (P = Promise))(function (resolve, reject) {
                    function fulfilled(value) {
                        try {
                            step(generator.next(value));
                        } catch (e) {
                            reject(e);
                        }
                    }
                    function rejected(value) {
                        try {
                            step(generator.throw(value));
                        } catch (e) {
                            reject(e);
                        }
                    }
                    function step(result) {
                        var value;
                        result.done
                            ? resolve(result.value)
                            : ((value = result.value) instanceof P
                                  ? value
                                  : new P(function (resolve) {
                                        resolve(value);
                                    })
                              ).then(fulfilled, rejected);
                    }
                    step((generator = generator.apply(thisArg, _arguments || [])).next());
                });
            };
            let base_provider_logger = new logger_lib_esm.Yd(version);
            function checkTopic(topic) {
                return null == topic ? "null" : (32 !== (0, bytes_lib_esm.E1)(topic) && base_provider_logger.throwArgumentError("invalid topic", "topic", topic), topic.toLowerCase());
            }
            function serializeTopics(topics) {
                for (topics = topics.slice(); topics.length > 0 && null == topics[topics.length - 1]; ) topics.pop();
                return topics
                    .map((topic) => {
                        if (!Array.isArray(topic)) return checkTopic(topic);
                        {
                            let unique = {};
                            topic.forEach((topic) => {
                                unique[checkTopic(topic)] = !0;
                            });
                            let sorted = Object.keys(unique);
                            return sorted.sort(), sorted.join("|");
                        }
                    })
                    .join("&");
            }
            function getEventTag(eventName) {
                if ("string" == typeof eventName) {
                    if (((eventName = eventName.toLowerCase()), 32 === (0, bytes_lib_esm.E1)(eventName))) return "tx:" + eventName;
                    if (-1 === eventName.indexOf(":")) return eventName;
                } else if (Array.isArray(eventName)) return "filter:*:" + serializeTopics(eventName);
                else if (abstract_provider_lib_esm.Sg.isForkEvent(eventName)) throw (base_provider_logger.warn("not implemented"), Error("not implemented"));
                else if (eventName && "object" == typeof eventName) return "filter:" + (eventName.address || "*") + ":" + serializeTopics(eventName.topics || []);
                throw Error("invalid event - " + eventName);
            }
            function getTime() {
                return new Date().getTime();
            }
            function stall(duration) {
                return new Promise((resolve) => {
                    setTimeout(resolve, duration);
                });
            }
            let PollableEvents = ["block", "network", "pending", "poll"];
            class Event1 {
                constructor(tag, listener, once) {
                    (0, properties_lib_esm.zG)(this, "tag", tag), (0, properties_lib_esm.zG)(this, "listener", listener), (0, properties_lib_esm.zG)(this, "once", once), (this._lastBlockNumber = -2), (this._inflight = !1);
                }
                get event() {
                    switch (this.type) {
                        case "tx":
                            return this.hash;
                        case "filter":
                            return this.filter;
                    }
                    return this.tag;
                }
                get type() {
                    return this.tag.split(":")[0];
                }
                get hash() {
                    let comps = this.tag.split(":");
                    return "tx" !== comps[0] ? null : comps[1];
                }
                get filter() {
                    var data;
                    let comps = this.tag.split(":");
                    if ("filter" !== comps[0]) return null;
                    let address = comps[1],
                        topics =
                            "" === (data = comps[2])
                                ? []
                                : data.split(/&/g).map((topic) => {
                                      if ("" === topic) return [];
                                      let comps = topic.split("|").map((topic) => ("null" === topic ? null : topic));
                                      return 1 === comps.length ? comps[0] : comps;
                                  }),
                        filter = {};
                    return topics.length > 0 && (filter.topics = topics), address && "*" !== address && (filter.address = address), filter;
                }
                pollable() {
                    return this.tag.indexOf(":") >= 0 || PollableEvents.indexOf(this.tag) >= 0;
                }
            }
            let coinInfos = {
                0: { symbol: "btc", p2pkh: 0, p2sh: 5, prefix: "bc" },
                2: { symbol: "ltc", p2pkh: 48, p2sh: 50, prefix: "ltc" },
                3: { symbol: "doge", p2pkh: 30, p2sh: 22 },
                60: { symbol: "eth", ilk: "eth" },
                61: { symbol: "etc", ilk: "eth" },
                700: { symbol: "xdai", ilk: "eth" },
            };
            function bytes32ify(value) {
                return (0, bytes_lib_esm.$m)(bignumber.O$.from(value).toHexString(), 32);
            }
            function base58Encode(data) {
                return Base58.encode((0, bytes_lib_esm.zo)([data, (0, bytes_lib_esm.p3)(sha256(sha256(data)), 0, 4)]));
            }
            let matcherIpfs = RegExp("^(ipfs)://(.*)$", "i"),
                matchers = [RegExp("^(https)://(.*)$", "i"), RegExp("^(data):(.*)$", "i"), matcherIpfs, RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$", "i")];
            function _parseString(result, start) {
                try {
                    return (0, utf8.ZN)(_parseBytes(result, start));
                } catch (error) {}
                return null;
            }
            function _parseBytes(result, start) {
                if ("0x" === result) return null;
                let offset = bignumber.O$.from((0, bytes_lib_esm.p3)(result, start, start + 32)).toNumber(),
                    length = bignumber.O$.from((0, bytes_lib_esm.p3)(result, offset, offset + 32)).toNumber();
                return (0, bytes_lib_esm.p3)(result, offset + 32, offset + 32 + length);
            }
            function getIpfsLink(link) {
                return (
                    link.match(/^ipfs:\/\/ipfs\//i) ? (link = link.substring(12)) : link.match(/^ipfs:\/\//i) ? (link = link.substring(7)) : base_provider_logger.throwArgumentError("unsupported IPFS format", "link", link),
                    `https://gateway.ipfs.io/ipfs/${link}`
                );
            }
            function numPad(value) {
                let result = (0, bytes_lib_esm.lE)(value);
                if (result.length > 32) throw Error("internal; should not happen");
                let padded = new Uint8Array(32);
                return padded.set(result, 32 - result.length), padded;
            }
            function encodeBytes(datas) {
                let result = [],
                    byteCount = 0;
                for (let i = 0; i < datas.length; i++) result.push(null), (byteCount += 32);
                for (let i1 = 0; i1 < datas.length; i1++) {
                    let data = (0, bytes_lib_esm.lE)(datas[i1]);
                    (result[i1] = numPad(byteCount)),
                        result.push(numPad(data.length)),
                        result.push(
                            (function (value) {
                                if (value.length % 32 == 0) return value;
                                let result = new Uint8Array(32 * Math.ceil(value.length / 32));
                                return result.set(value), result;
                            })(data)
                        ),
                        (byteCount += 32 + 32 * Math.ceil(data.length / 32));
                }
                return (0, bytes_lib_esm.xs)(result);
            }
            class Resolver {
                constructor(provider, address, name, resolvedAddress) {
                    (0, properties_lib_esm.zG)(this, "provider", provider),
                        (0, properties_lib_esm.zG)(this, "name", name),
                        (0, properties_lib_esm.zG)(this, "address", provider.formatter.address(address)),
                        (0, properties_lib_esm.zG)(this, "_resolvedAddress", resolvedAddress);
                }
                supportsWildcard() {
                    return (
                        this._supportsEip2544 ||
                            (this._supportsEip2544 = this.provider
                                .call({ to: this.address, data: "0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000" })
                                .then((result) => bignumber.O$.from(result).eq(1))
                                .catch((error) => {
                                    if (error.code === logger_lib_esm.Yd.errors.CALL_EXCEPTION) return !1;
                                    throw ((this._supportsEip2544 = null), error);
                                })),
                        this._supportsEip2544
                    );
                }
                _fetch(selector, parameters) {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        let tx = { to: this.address, ccipReadEnabled: !0, data: (0, bytes_lib_esm.xs)([selector, namehash(this.name), parameters || "0x"]) },
                            parseBytes = !1;
                        if (yield this.supportsWildcard()) {
                            var name;
                            (parseBytes = !0),
                                (tx.data = (0, bytes_lib_esm.xs)([
                                    "0x9061b923",
                                    encodeBytes([
                                        ((name = this.name),
                                        (0, bytes_lib_esm.Dv)(
                                            (0, bytes_lib_esm.zo)(
                                                name.split(".").map((comp) => {
                                                    let bytes = (0, utf8.Y0)("_" + idna_nameprep(comp));
                                                    return (bytes[0] = bytes.length - 1), bytes;
                                                })
                                            )
                                        ) + "00"),
                                        tx.data,
                                    ]),
                                ]));
                        }
                        try {
                            let result = yield this.provider.call(tx);
                            return (
                                (0, bytes_lib_esm.lE)(result).length % 32 == 4 && base_provider_logger.throwError("resolver threw error", logger_lib_esm.Yd.errors.CALL_EXCEPTION, { transaction: tx, data: result }),
                                parseBytes && (result = _parseBytes(result, 0)),
                                result
                            );
                        } catch (error) {
                            if (error.code === logger_lib_esm.Yd.errors.CALL_EXCEPTION) return null;
                            throw error;
                        }
                    });
                }
                _fetchBytes(selector, parameters) {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        let result = yield this._fetch(selector, parameters);
                        return null != result ? _parseBytes(result, 0) : null;
                    });
                }
                _getAddress(coinType, hexBytes) {
                    let coinInfo = coinInfos[String(coinType)];
                    if ((null == coinInfo && base_provider_logger.throwError(`unsupported coin type: ${coinType}`, logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation: `getAddress(${coinType})` }), "eth" === coinInfo.ilk))
                        return this.provider.formatter.address(hexBytes);
                    let bytes = (0, bytes_lib_esm.lE)(hexBytes);
                    if (null != coinInfo.p2pkh) {
                        let p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);
                        if (p2pkh) {
                            let length = parseInt(p2pkh[1], 16);
                            if (p2pkh[2].length === 2 * length && length >= 1 && length <= 75) return base58Encode((0, bytes_lib_esm.zo)([[coinInfo.p2pkh], "0x" + p2pkh[2]]));
                        }
                    }
                    if (null != coinInfo.p2sh) {
                        let p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);
                        if (p2sh) {
                            let length1 = parseInt(p2sh[1], 16);
                            if (p2sh[2].length === 2 * length1 && length1 >= 1 && length1 <= 75) return base58Encode((0, bytes_lib_esm.zo)([[coinInfo.p2sh], "0x" + p2sh[2]]));
                        }
                    }
                    if (null != coinInfo.prefix) {
                        let length2 = bytes[1],
                            version = bytes[0];
                        if ((0 === version ? 20 !== length2 && 32 !== length2 && (version = -1) : (version = -1), version >= 0 && bytes.length === 2 + length2 && length2 >= 1 && length2 <= 75)) {
                            let words = bech32_default().toWords(bytes.slice(2));
                            return words.unshift(version), bech32_default().encode(coinInfo.prefix, words);
                        }
                    }
                    return null;
                }
                getAddress(coinType) {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        if ((null == coinType && (coinType = 60), 60 === coinType))
                            try {
                                let result = yield this._fetch("0x3b3b57de");
                                if ("0x" === result || "0x0000000000000000000000000000000000000000000000000000000000000000" === result) return null;
                                return this.provider.formatter.callAddress(result);
                            } catch (error) {
                                if (error.code === logger_lib_esm.Yd.errors.CALL_EXCEPTION) return null;
                                throw error;
                            }
                        let hexBytes = yield this._fetchBytes("0xf1cb7e06", bytes32ify(coinType));
                        if (null == hexBytes || "0x" === hexBytes) return null;
                        let address = this._getAddress(coinType, hexBytes);
                        return (
                            null == address &&
                                base_provider_logger.throwError("invalid or unsupported coin data", logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation: `getAddress(${coinType})`, coinType: coinType, data: hexBytes }),
                            address
                        );
                    });
                }
                getAvatar() {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        let linkage = [{ type: "name", content: this.name }];
                        try {
                            let avatar = yield this.getText("avatar");
                            if (null == avatar) return null;
                            for (let i = 0; i < matchers.length; i++) {
                                let match = avatar.match(matchers[i]);
                                if (null == match) continue;
                                let scheme = match[1].toLowerCase();
                                switch (scheme) {
                                    case "https":
                                        return linkage.push({ type: "url", content: avatar }), { linkage, url: avatar };
                                    case "data":
                                        return linkage.push({ type: "data", content: avatar }), { linkage, url: avatar };
                                    case "ipfs":
                                        return linkage.push({ type: "ipfs", content: avatar }), { linkage, url: getIpfsLink(avatar) };
                                    case "erc721":
                                    case "erc1155": {
                                        let selector = "erc721" === scheme ? "0xc87b56dd" : "0x0e89341c";
                                        linkage.push({ type: scheme, content: avatar });
                                        let owner = this._resolvedAddress || (yield this.getAddress()),
                                            comps = (match[2] || "").split("/");
                                        if (2 !== comps.length) return null;
                                        let addr = yield this.provider.formatter.address(comps[0]),
                                            tokenId = (0, bytes_lib_esm.$m)(bignumber.O$.from(comps[1]).toHexString(), 32);
                                        if ("erc721" === scheme) {
                                            let tokenOwner = this.provider.formatter.callAddress(yield this.provider.call({ to: addr, data: (0, bytes_lib_esm.xs)(["0x6352211e", tokenId]) }));
                                            if (owner !== tokenOwner) return null;
                                            linkage.push({ type: "owner", content: tokenOwner });
                                        } else if ("erc1155" === scheme) {
                                            let balance = bignumber.O$.from(yield this.provider.call({ to: addr, data: (0, bytes_lib_esm.xs)(["0x00fdd58e", (0, bytes_lib_esm.$m)(owner, 32), tokenId]) }));
                                            if (balance.isZero()) return null;
                                            linkage.push({ type: "balance", content: balance.toString() });
                                        }
                                        let tx = { to: this.provider.formatter.address(comps[0]), data: (0, bytes_lib_esm.xs)([selector, tokenId]) },
                                            metadataUrl = _parseString(yield this.provider.call(tx), 0);
                                        if (null == metadataUrl) return null;
                                        linkage.push({ type: "metadata-url-base", content: metadataUrl }),
                                            "erc1155" === scheme && ((metadataUrl = metadataUrl.replace("{id}", tokenId.substring(2))), linkage.push({ type: "metadata-url-expanded", content: metadataUrl })),
                                            metadataUrl.match(/^ipfs:/i) && (metadataUrl = getIpfsLink(metadataUrl)),
                                            linkage.push({ type: "metadata-url", content: metadataUrl });
                                        let metadata = yield fetchJson(metadataUrl);
                                        if (!metadata) return null;
                                        linkage.push({ type: "metadata", content: JSON.stringify(metadata) });
                                        let imageUrl = metadata.image;
                                        if ("string" != typeof imageUrl) return null;
                                        if (imageUrl.match(/^(https:\/\/|data:)/i));
                                        else {
                                            let ipfs = imageUrl.match(matcherIpfs);
                                            if (null == ipfs) return null;
                                            linkage.push({ type: "url-ipfs", content: imageUrl }), (imageUrl = getIpfsLink(imageUrl));
                                        }
                                        return linkage.push({ type: "url", content: imageUrl }), { linkage, url: imageUrl };
                                    }
                                }
                            }
                        } catch (error) {}
                        return null;
                    });
                }
                getContentHash() {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        let hexBytes = yield this._fetchBytes("0xbc1c58d1");
                        if (null == hexBytes || "0x" === hexBytes) return null;
                        let ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
                        if (ipfs) {
                            let length = parseInt(ipfs[3], 16);
                            if (ipfs[4].length === 2 * length) return "ipfs://" + Base58.encode("0x" + ipfs[1]);
                        }
                        let ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
                        if (ipns) {
                            let length1 = parseInt(ipns[3], 16);
                            if (ipns[4].length === 2 * length1) return "ipns://" + Base58.encode("0x" + ipns[1]);
                        }
                        let swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);
                        return swarm && 64 === swarm[1].length
                            ? "bzz://" + swarm[1]
                            : base_provider_logger.throwError("invalid or unsupported content hash data", logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation: "getContentHash()", data: hexBytes });
                    });
                }
                getText(key) {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        let keyBytes = (0, utf8.Y0)(key);
                        (keyBytes = (0, bytes_lib_esm.zo)([bytes32ify(64), bytes32ify(keyBytes.length), keyBytes])).length % 32 != 0 && (keyBytes = (0, bytes_lib_esm.zo)([keyBytes, (0, bytes_lib_esm.$m)("0x", 32 - (key.length % 32))]));
                        let hexBytes = yield this._fetchBytes("0x59d1d43c", (0, bytes_lib_esm.Dv)(keyBytes));
                        return null == hexBytes || "0x" === hexBytes ? null : (0, utf8.ZN)(hexBytes);
                    });
                }
            }
            let defaultFormatter = null,
                nextPollId = 1;
            class BaseProvider extends abstract_provider_lib_esm.zt {
                constructor(network) {
                    if (
                        (base_provider_logger.checkNew(new.target, abstract_provider_lib_esm.zt),
                        super(),
                        (this._events = []),
                        (this._emitted = { block: -2 }),
                        (this.disableCcipRead = !1),
                        (this.formatter = new.target.getFormatter()),
                        (0, properties_lib_esm.zG)(this, "anyNetwork", "any" === network),
                        this.anyNetwork && (network = this.detectNetwork()),
                        network instanceof Promise)
                    )
                        (this._networkPromise = network), network.catch((error) => {}), this._ready().catch((error) => {});
                    else {
                        let knownNetwork = (0, properties_lib_esm.tu)(new.target, "getNetwork")(network);
                        knownNetwork ? ((0, properties_lib_esm.zG)(this, "_network", knownNetwork), this.emit("network", knownNetwork, null)) : base_provider_logger.throwArgumentError("invalid network", "network", network);
                    }
                    (this._maxInternalBlockNumber = -1024), (this._lastBlockNumber = -2), (this._maxFilterBlockRange = 10), (this._pollingInterval = 4e3), (this._fastQueryDate = 0);
                }
                _ready() {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        if (null == this._network) {
                            let network = null;
                            if (this._networkPromise)
                                try {
                                    network = yield this._networkPromise;
                                } catch (error) {}
                            null == network && (network = yield this.detectNetwork()),
                                network || base_provider_logger.throwError("no network detected", logger_lib_esm.Yd.errors.UNKNOWN_ERROR, {}),
                                null == this._network && (this.anyNetwork ? (this._network = network) : (0, properties_lib_esm.zG)(this, "_network", network), this.emit("network", network, null));
                        }
                        return this._network;
                    });
                }
                get ready() {
                    return poll(() =>
                        this._ready().then(
                            (network) => network,
                            (error) => {
                                if (error.code !== logger_lib_esm.Yd.errors.NETWORK_ERROR || "noNetwork" !== error.event) throw error;
                            }
                        )
                    );
                }
                static getFormatter() {
                    return null == defaultFormatter && (defaultFormatter = new Formatter()), defaultFormatter;
                }
                static getNetwork(network) {
                    return (function (network) {
                        if (null == network) return null;
                        if ("number" == typeof network) {
                            for (let name in networks) {
                                let standard = networks[name];
                                if (standard.chainId === network) return { name: standard.name, chainId: standard.chainId, ensAddress: standard.ensAddress || null, _defaultProvider: standard._defaultProvider || null };
                            }
                            return { chainId: network, name: "unknown" };
                        }
                        if ("string" == typeof network) {
                            let standard1 = networks[network];
                            return null == standard1 ? null : { name: standard1.name, chainId: standard1.chainId, ensAddress: standard1.ensAddress, _defaultProvider: standard1._defaultProvider || null };
                        }
                        let standard2 = networks[network.name];
                        if (!standard2) return "number" != typeof network.chainId && networks_lib_esm_logger.throwArgumentError("invalid network chainId", "network", network), network;
                        0 !== network.chainId && network.chainId !== standard2.chainId && networks_lib_esm_logger.throwArgumentError("network chainId mismatch", "network", network);
                        let defaultProvider = network._defaultProvider || null;
                        if (null == defaultProvider && standard2._defaultProvider) {
                            var value;
                            defaultProvider = (value = standard2._defaultProvider) && "function" == typeof value.renetwork ? standard2._defaultProvider.renetwork(network) : standard2._defaultProvider;
                        }
                        return { name: network.name, chainId: standard2.chainId, ensAddress: network.ensAddress || standard2.ensAddress || null, _defaultProvider: defaultProvider };
                    })(null == network ? "homestead" : network);
                }
                ccipReadFetch(tx, calldata, urls) {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        if (this.disableCcipRead || 0 === urls.length) return null;
                        let sender = tx.to.toLowerCase(),
                            data = calldata.toLowerCase(),
                            errorMessages = [];
                        for (let i = 0; i < urls.length; i++) {
                            let url = urls[i],
                                href = url.replace("{sender}", sender).replace("{data}", data),
                                json = url.indexOf("{data}") >= 0 ? null : JSON.stringify({ data, sender }),
                                result = yield fetchJson({ url: href, errorPassThrough: !0 }, json, (value, response) => ((value.status = response.statusCode), value));
                            if (result.data) return result.data;
                            let errorMessage = result.message || "unknown error";
                            if (result.status >= 400 && result.status < 500) return base_provider_logger.throwError(`response not found during CCIP fetch: ${errorMessage}`, logger_lib_esm.Yd.errors.SERVER_ERROR, { url, errorMessage });
                            errorMessages.push(errorMessage);
                        }
                        return base_provider_logger.throwError(`error encountered during CCIP fetch: ${errorMessages.map((m) => JSON.stringify(m)).join(", ")}`, logger_lib_esm.Yd.errors.SERVER_ERROR, { urls, errorMessages });
                    });
                }
                _getInternalBlockNumber(maxAge) {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        if ((yield this._ready(), maxAge > 0))
                            for (; this._internalBlockNumber; ) {
                                let internalBlockNumber = this._internalBlockNumber;
                                try {
                                    let result = yield internalBlockNumber;
                                    if (getTime() - result.respTime <= maxAge) return result.blockNumber;
                                    break;
                                } catch (error) {
                                    if (this._internalBlockNumber === internalBlockNumber) break;
                                }
                            }
                        let reqTime = getTime(),
                            checkInternalBlockNumber = (0, properties_lib_esm.mE)({
                                blockNumber: this.perform("getBlockNumber", {}),
                                networkError: this.getNetwork().then(
                                    (network) => null,
                                    (error) => error
                                ),
                            }).then(({ blockNumber, networkError }) => {
                                if (networkError) throw (this._internalBlockNumber === checkInternalBlockNumber && (this._internalBlockNumber = null), networkError);
                                let respTime = getTime();
                                return (
                                    (blockNumber = bignumber.O$.from(blockNumber).toNumber()) < this._maxInternalBlockNumber && (blockNumber = this._maxInternalBlockNumber),
                                    (this._maxInternalBlockNumber = blockNumber),
                                    this._setFastBlockNumber(blockNumber),
                                    { blockNumber, reqTime, respTime }
                                );
                            });
                        return (
                            (this._internalBlockNumber = checkInternalBlockNumber),
                            checkInternalBlockNumber.catch((error) => {
                                this._internalBlockNumber === checkInternalBlockNumber && (this._internalBlockNumber = null);
                            }),
                            (yield checkInternalBlockNumber).blockNumber
                        );
                    });
                }
                poll() {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        let pollId = nextPollId++,
                            runners = [],
                            blockNumber = null;
                        try {
                            blockNumber = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2);
                        } catch (error) {
                            this.emit("error", error);
                            return;
                        }
                        if ((this._setFastBlockNumber(blockNumber), this.emit("poll", pollId, blockNumber), blockNumber === this._lastBlockNumber)) {
                            this.emit("didPoll", pollId);
                            return;
                        }
                        if ((-2 === this._emitted.block && (this._emitted.block = blockNumber - 1), Math.abs(this._emitted.block - blockNumber) > 1e3))
                            base_provider_logger.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${blockNumber})`),
                                this.emit(
                                    "error",
                                    base_provider_logger.makeError("network block skew detected", logger_lib_esm.Yd.errors.NETWORK_ERROR, { blockNumber: blockNumber, event: "blockSkew", previousBlockNumber: this._emitted.block })
                                ),
                                this.emit("block", blockNumber);
                        else for (let i = this._emitted.block + 1; i <= blockNumber; i++) this.emit("block", i);
                        this._emitted.block !== blockNumber &&
                            ((this._emitted.block = blockNumber),
                            Object.keys(this._emitted).forEach((key) => {
                                if ("block" === key) return;
                                let eventBlockNumber = this._emitted[key];
                                "pending" !== eventBlockNumber && blockNumber - eventBlockNumber > 12 && delete this._emitted[key];
                            })),
                            -2 === this._lastBlockNumber && (this._lastBlockNumber = blockNumber - 1),
                            this._events.forEach((event) => {
                                switch (event.type) {
                                    case "tx": {
                                        let hash = event.hash,
                                            runner = this.getTransactionReceipt(hash)
                                                .then((receipt) => (receipt && null != receipt.blockNumber && ((this._emitted["t:" + hash] = receipt.blockNumber), this.emit(hash, receipt)), null))
                                                .catch((error) => {
                                                    this.emit("error", error);
                                                });
                                        runners.push(runner);
                                        break;
                                    }
                                    case "filter":
                                        if (!event._inflight) {
                                            event._inflight = !0;
                                            let filter = event.filter;
                                            (filter.fromBlock = event._lastBlockNumber + 1),
                                                (filter.toBlock = blockNumber),
                                                filter.toBlock - this._maxFilterBlockRange > filter.fromBlock && (filter.fromBlock = filter.toBlock - this._maxFilterBlockRange);
                                            let runner1 = this.getLogs(filter)
                                                .then((logs) => {
                                                    (event._inflight = !1),
                                                        0 !== logs.length &&
                                                            logs.forEach((log) => {
                                                                log.blockNumber > event._lastBlockNumber && (event._lastBlockNumber = log.blockNumber),
                                                                    (this._emitted["b:" + log.blockHash] = log.blockNumber),
                                                                    (this._emitted["t:" + log.transactionHash] = log.blockNumber),
                                                                    this.emit(filter, log);
                                                            });
                                                })
                                                .catch((error) => {
                                                    this.emit("error", error), (event._inflight = !1);
                                                });
                                            runners.push(runner1);
                                        }
                                }
                            }),
                            (this._lastBlockNumber = blockNumber),
                            Promise.all(runners)
                                .then(() => {
                                    this.emit("didPoll", pollId);
                                })
                                .catch((error) => {
                                    this.emit("error", error);
                                });
                    });
                }
                resetEventsBlock(blockNumber) {
                    (this._lastBlockNumber = blockNumber - 1), this.polling && this.poll();
                }
                get network() {
                    return this._network;
                }
                detectNetwork() {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        return base_provider_logger.throwError("provider does not support network detection", logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation: "provider.detectNetwork" });
                    });
                }
                getNetwork() {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        let network = yield this._ready(),
                            currentNetwork = yield this.detectNetwork();
                        if (network.chainId !== currentNetwork.chainId) {
                            if (this.anyNetwork)
                                return (
                                    (this._network = currentNetwork),
                                    (this._lastBlockNumber = -2),
                                    (this._fastBlockNumber = null),
                                    (this._fastBlockNumberPromise = null),
                                    (this._fastQueryDate = 0),
                                    (this._emitted.block = -2),
                                    (this._maxInternalBlockNumber = -1024),
                                    (this._internalBlockNumber = null),
                                    this.emit("network", currentNetwork, network),
                                    yield stall(0),
                                    this._network
                                );
                            let error = base_provider_logger.makeError("underlying network changed", logger_lib_esm.Yd.errors.NETWORK_ERROR, { event: "changed", network: network, detectedNetwork: currentNetwork });
                            throw (this.emit("error", error), error);
                        }
                        return network;
                    });
                }
                get blockNumber() {
                    return (
                        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then(
                            (blockNumber) => {
                                this._setFastBlockNumber(blockNumber);
                            },
                            (error) => {}
                        ),
                        null != this._fastBlockNumber ? this._fastBlockNumber : -1
                    );
                }
                get polling() {
                    return null != this._poller;
                }
                set polling(value) {
                    value && !this._poller
                        ? ((this._poller = setInterval(() => {
                              this.poll();
                          }, this.pollingInterval)),
                          this._bootstrapPoll ||
                              (this._bootstrapPoll = setTimeout(() => {
                                  this.poll(),
                                      (this._bootstrapPoll = setTimeout(() => {
                                          this._poller || this.poll(), (this._bootstrapPoll = null);
                                      }, this.pollingInterval));
                              }, 0)))
                        : !value && this._poller && (clearInterval(this._poller), (this._poller = null));
                }
                get pollingInterval() {
                    return this._pollingInterval;
                }
                set pollingInterval(value) {
                    if ("number" != typeof value || value <= 0 || parseInt(String(value)) != value) throw Error("invalid polling interval");
                    (this._pollingInterval = value),
                        this._poller &&
                            (clearInterval(this._poller),
                            (this._poller = setInterval(() => {
                                this.poll();
                            }, this._pollingInterval)));
                }
                _getFastBlockNumber() {
                    let now = getTime();
                    return (
                        now - this._fastQueryDate > 2 * this._pollingInterval &&
                            ((this._fastQueryDate = now),
                            (this._fastBlockNumberPromise = this.getBlockNumber().then(
                                (blockNumber) => ((null == this._fastBlockNumber || blockNumber > this._fastBlockNumber) && (this._fastBlockNumber = blockNumber), this._fastBlockNumber)
                            ))),
                        this._fastBlockNumberPromise
                    );
                }
                _setFastBlockNumber(blockNumber) {
                    (null == this._fastBlockNumber || !(blockNumber < this._fastBlockNumber)) &&
                        ((this._fastQueryDate = getTime()), (null == this._fastBlockNumber || blockNumber > this._fastBlockNumber) && ((this._fastBlockNumber = blockNumber), (this._fastBlockNumberPromise = Promise.resolve(blockNumber))));
                }
                waitForTransaction(transactionHash, confirmations, timeout) {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        return this._waitForTransaction(transactionHash, null == confirmations ? 1 : confirmations, timeout || 0, null);
                    });
                }
                _waitForTransaction(transactionHash, confirmations, timeout, replaceable) {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        let receipt = yield this.getTransactionReceipt(transactionHash);
                        return (receipt ? receipt.confirmations : 0) >= confirmations
                            ? receipt
                            : new Promise((resolve, reject) => {
                                  let cancelFuncs = [],
                                      done = !1,
                                      alreadyDone = function () {
                                          return (
                                              !!done ||
                                              ((done = !0),
                                              cancelFuncs.forEach((func) => {
                                                  func();
                                              }),
                                              !1)
                                          );
                                      },
                                      minedHandler = (receipt) => {
                                          receipt.confirmations < confirmations || alreadyDone() || resolve(receipt);
                                      };
                                  if (
                                      (this.on(transactionHash, minedHandler),
                                      cancelFuncs.push(() => {
                                          this.removeListener(transactionHash, minedHandler);
                                      }),
                                      replaceable)
                                  ) {
                                      let lastBlockNumber = replaceable.startBlock,
                                          scannedBlock = null,
                                          replaceHandler = (blockNumber) =>
                                              base_provider_awaiter(this, void 0, void 0, function* () {
                                                  done ||
                                                      (yield stall(1e3),
                                                      this.getTransactionCount(replaceable.from).then(
                                                          (nonce) =>
                                                              base_provider_awaiter(this, void 0, void 0, function* () {
                                                                  if (!done) {
                                                                      if (nonce <= replaceable.nonce) lastBlockNumber = blockNumber;
                                                                      else {
                                                                          {
                                                                              let mined = yield this.getTransaction(transactionHash);
                                                                              if (mined && null != mined.blockNumber) return;
                                                                          }
                                                                          for (
                                                                              null == scannedBlock && (scannedBlock = lastBlockNumber - 3) < replaceable.startBlock && (scannedBlock = replaceable.startBlock);
                                                                              scannedBlock <= blockNumber;

                                                                          ) {
                                                                              if (done) return;
                                                                              let block = yield this.getBlockWithTransactions(scannedBlock);
                                                                              for (let ti = 0; ti < block.transactions.length; ti++) {
                                                                                  let tx = block.transactions[ti];
                                                                                  if (tx.hash === transactionHash) return;
                                                                                  if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {
                                                                                      if (done) return;
                                                                                      let receipt = yield this.waitForTransaction(tx.hash, confirmations);
                                                                                      if (alreadyDone()) return;
                                                                                      let reason = "replaced";
                                                                                      tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)
                                                                                          ? (reason = "repriced")
                                                                                          : "0x" === tx.data && tx.from === tx.to && tx.value.isZero() && (reason = "cancelled"),
                                                                                          reject(
                                                                                              base_provider_logger.makeError("transaction was replaced", logger_lib_esm.Yd.errors.TRANSACTION_REPLACED, {
                                                                                                  cancelled: "replaced" === reason || "cancelled" === reason,
                                                                                                  reason,
                                                                                                  replacement: this._wrapTransaction(tx),
                                                                                                  hash: transactionHash,
                                                                                                  receipt,
                                                                                              })
                                                                                          );
                                                                                      return;
                                                                                  }
                                                                              }
                                                                              scannedBlock++;
                                                                          }
                                                                      }
                                                                      done || this.once("block", replaceHandler);
                                                                  }
                                                              }),
                                                          (error) => {
                                                              done || this.once("block", replaceHandler);
                                                          }
                                                      ));
                                              });
                                      if (done) return;
                                      this.once("block", replaceHandler),
                                          cancelFuncs.push(() => {
                                              this.removeListener("block", replaceHandler);
                                          });
                                  }
                                  if ("number" == typeof timeout && timeout > 0) {
                                      let timer = setTimeout(() => {
                                          alreadyDone() || reject(base_provider_logger.makeError("timeout exceeded", logger_lib_esm.Yd.errors.TIMEOUT, { timeout: timeout }));
                                      }, timeout);
                                      timer.unref && timer.unref(),
                                          cancelFuncs.push(() => {
                                              clearTimeout(timer);
                                          });
                                  }
                              });
                    });
                }
                getBlockNumber() {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        return this._getInternalBlockNumber(0);
                    });
                }
                getGasPrice() {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        yield this.getNetwork();
                        let result = yield this.perform("getGasPrice", {});
                        try {
                            return bignumber.O$.from(result);
                        } catch (error) {
                            return base_provider_logger.throwError("bad result from backend", logger_lib_esm.Yd.errors.SERVER_ERROR, { method: "getGasPrice", result, error });
                        }
                    });
                }
                getBalance(addressOrName, blockTag) {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        yield this.getNetwork();
                        let params = yield (0, properties_lib_esm.mE)({ address: this._getAddress(addressOrName), blockTag: this._getBlockTag(blockTag) }),
                            result = yield this.perform("getBalance", params);
                        try {
                            return bignumber.O$.from(result);
                        } catch (error) {
                            return base_provider_logger.throwError("bad result from backend", logger_lib_esm.Yd.errors.SERVER_ERROR, { method: "getBalance", params, result, error });
                        }
                    });
                }
                getTransactionCount(addressOrName, blockTag) {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        yield this.getNetwork();
                        let params = yield (0, properties_lib_esm.mE)({ address: this._getAddress(addressOrName), blockTag: this._getBlockTag(blockTag) }),
                            result = yield this.perform("getTransactionCount", params);
                        try {
                            return bignumber.O$.from(result).toNumber();
                        } catch (error) {
                            return base_provider_logger.throwError("bad result from backend", logger_lib_esm.Yd.errors.SERVER_ERROR, { method: "getTransactionCount", params, result, error });
                        }
                    });
                }
                getCode(addressOrName, blockTag) {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        yield this.getNetwork();
                        let params = yield (0, properties_lib_esm.mE)({ address: this._getAddress(addressOrName), blockTag: this._getBlockTag(blockTag) }),
                            result = yield this.perform("getCode", params);
                        try {
                            return (0, bytes_lib_esm.Dv)(result);
                        } catch (error) {
                            return base_provider_logger.throwError("bad result from backend", logger_lib_esm.Yd.errors.SERVER_ERROR, { method: "getCode", params, result, error });
                        }
                    });
                }
                getStorageAt(addressOrName, position, blockTag) {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        yield this.getNetwork();
                        let params = yield (0, properties_lib_esm.mE)({ address: this._getAddress(addressOrName), blockTag: this._getBlockTag(blockTag), position: Promise.resolve(position).then((p) => (0, bytes_lib_esm.$P)(p)) }),
                            result = yield this.perform("getStorageAt", params);
                        try {
                            return (0, bytes_lib_esm.Dv)(result);
                        } catch (error) {
                            return base_provider_logger.throwError("bad result from backend", logger_lib_esm.Yd.errors.SERVER_ERROR, { method: "getStorageAt", params, result, error });
                        }
                    });
                }
                _wrapTransaction(tx, hash, startBlock) {
                    if (null != hash && 32 !== (0, bytes_lib_esm.E1)(hash)) throw Error("invalid response - sendTransaction");
                    let result = tx;
                    return (
                        null != hash && tx.hash !== hash && base_provider_logger.throwError("Transaction hash mismatch from Provider.sendTransaction.", logger_lib_esm.Yd.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash }),
                        (result.wait = (confirms, timeout) =>
                            base_provider_awaiter(this, void 0, void 0, function* () {
                                let replacement;
                                null == confirms && (confirms = 1),
                                    null == timeout && (timeout = 0),
                                    0 !== confirms && null != startBlock && (replacement = { data: tx.data, from: tx.from, nonce: tx.nonce, to: tx.to, value: tx.value, startBlock });
                                let receipt = yield this._waitForTransaction(tx.hash, confirms, timeout, replacement);
                                return null == receipt && 0 === confirms
                                    ? null
                                    : ((this._emitted["t:" + tx.hash] = receipt.blockNumber),
                                      0 === receipt.status && base_provider_logger.throwError("transaction failed", logger_lib_esm.Yd.errors.CALL_EXCEPTION, { transactionHash: tx.hash, transaction: tx, receipt: receipt }),
                                      receipt);
                            })),
                        result
                    );
                }
                sendTransaction(signedTransaction) {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        yield this.getNetwork();
                        let hexTx = yield Promise.resolve(signedTransaction).then((t) => (0, bytes_lib_esm.Dv)(t)),
                            tx = this.formatter.transaction(signedTransaction);
                        null == tx.confirmations && (tx.confirmations = 0);
                        let blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                        try {
                            let hash = yield this.perform("sendTransaction", { signedTransaction: hexTx });
                            return this._wrapTransaction(tx, hash, blockNumber);
                        } catch (error) {
                            throw ((error.transaction = tx), (error.transactionHash = tx.hash), error);
                        }
                    });
                }
                _getTransactionRequest(transaction) {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        let values = yield transaction,
                            tx = {};
                        return (
                            ["from", "to"].forEach((key) => {
                                null != values[key] && (tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v) : null)));
                            }),
                            ["gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "value"].forEach((key) => {
                                null != values[key] && (tx[key] = Promise.resolve(values[key]).then((v) => (v ? bignumber.O$.from(v) : null)));
                            }),
                            ["type"].forEach((key) => {
                                null != values[key] && (tx[key] = Promise.resolve(values[key]).then((v) => (null != v ? v : null)));
                            }),
                            values.accessList && (tx.accessList = this.formatter.accessList(values.accessList)),
                            ["data"].forEach((key) => {
                                null != values[key] && (tx[key] = Promise.resolve(values[key]).then((v) => (v ? (0, bytes_lib_esm.Dv)(v) : null)));
                            }),
                            this.formatter.transactionRequest(yield (0, properties_lib_esm.mE)(tx))
                        );
                    });
                }
                _getFilter(filter) {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        filter = yield filter;
                        let result = {};
                        return (
                            null != filter.address && (result.address = this._getAddress(filter.address)),
                            ["blockHash", "topics"].forEach((key) => {
                                null != filter[key] && (result[key] = filter[key]);
                            }),
                            ["fromBlock", "toBlock"].forEach((key) => {
                                null != filter[key] && (result[key] = this._getBlockTag(filter[key]));
                            }),
                            this.formatter.filter(yield (0, properties_lib_esm.mE)(result))
                        );
                    });
                }
                _call(transaction, blockTag, attempt) {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        attempt >= 10 && base_provider_logger.throwError("CCIP read exceeded maximum redirections", logger_lib_esm.Yd.errors.SERVER_ERROR, { redirects: attempt, transaction });
                        let txSender = transaction.to,
                            result = yield this.perform("call", { transaction, blockTag });
                        if (attempt >= 0 && "latest" === blockTag && null != txSender && "0x556f1830" === result.substring(0, 10) && (0, bytes_lib_esm.E1)(result) % 32 == 4)
                            try {
                                let data = (0, bytes_lib_esm.p3)(result, 4),
                                    sender = (0, bytes_lib_esm.p3)(data, 0, 32);
                                bignumber.O$.from(sender).eq(txSender) ||
                                    base_provider_logger.throwError("CCIP Read sender did not match", logger_lib_esm.Yd.errors.CALL_EXCEPTION, {
                                        name: "OffchainLookup",
                                        signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                        transaction,
                                        data: result,
                                    });
                                let urls = [],
                                    urlsOffset = bignumber.O$.from((0, bytes_lib_esm.p3)(data, 32, 64)).toNumber(),
                                    urlsLength = bignumber.O$.from((0, bytes_lib_esm.p3)(data, urlsOffset, urlsOffset + 32)).toNumber(),
                                    urlsData = (0, bytes_lib_esm.p3)(data, urlsOffset + 32);
                                for (let u = 0; u < urlsLength; u++) {
                                    let url = _parseString(urlsData, 32 * u);
                                    null == url &&
                                        base_provider_logger.throwError("CCIP Read contained corrupt URL string", logger_lib_esm.Yd.errors.CALL_EXCEPTION, {
                                            name: "OffchainLookup",
                                            signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                            transaction,
                                            data: result,
                                        }),
                                        urls.push(url);
                                }
                                let calldata = _parseBytes(data, 64);
                                bignumber.O$.from((0, bytes_lib_esm.p3)(data, 100, 128)).isZero() ||
                                    base_provider_logger.throwError("CCIP Read callback selector included junk", logger_lib_esm.Yd.errors.CALL_EXCEPTION, {
                                        name: "OffchainLookup",
                                        signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                        transaction,
                                        data: result,
                                    });
                                let callbackSelector = (0, bytes_lib_esm.p3)(data, 96, 100),
                                    extraData = _parseBytes(data, 128),
                                    ccipResult = yield this.ccipReadFetch(transaction, calldata, urls);
                                null == ccipResult &&
                                    base_provider_logger.throwError("CCIP Read disabled or provided no URLs", logger_lib_esm.Yd.errors.CALL_EXCEPTION, {
                                        name: "OffchainLookup",
                                        signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                        transaction,
                                        data: result,
                                    });
                                let tx = { to: txSender, data: (0, bytes_lib_esm.xs)([callbackSelector, encodeBytes([ccipResult, extraData])]) };
                                return this._call(tx, blockTag, attempt + 1);
                            } catch (error) {
                                if (error.code === logger_lib_esm.Yd.errors.SERVER_ERROR) throw error;
                            }
                        try {
                            return (0, bytes_lib_esm.Dv)(result);
                        } catch (error1) {
                            return base_provider_logger.throwError("bad result from backend", logger_lib_esm.Yd.errors.SERVER_ERROR, { method: "call", params: { transaction, blockTag }, result, error: error1 });
                        }
                    });
                }
                call(transaction, blockTag) {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        yield this.getNetwork();
                        let resolved = yield (0, properties_lib_esm.mE)({ transaction: this._getTransactionRequest(transaction), blockTag: this._getBlockTag(blockTag), ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled) });
                        return this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0 : -1);
                    });
                }
                estimateGas(transaction) {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        yield this.getNetwork();
                        let params = yield (0, properties_lib_esm.mE)({ transaction: this._getTransactionRequest(transaction) }),
                            result = yield this.perform("estimateGas", params);
                        try {
                            return bignumber.O$.from(result);
                        } catch (error) {
                            return base_provider_logger.throwError("bad result from backend", logger_lib_esm.Yd.errors.SERVER_ERROR, { method: "estimateGas", params, result, error });
                        }
                    });
                }
                _getAddress(addressOrName) {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        "string" != typeof (addressOrName = yield addressOrName) && base_provider_logger.throwArgumentError("invalid address or ENS name", "name", addressOrName);
                        let address = yield this.resolveName(addressOrName);
                        return null == address && base_provider_logger.throwError("ENS name not configured", logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation: `resolveName(${JSON.stringify(addressOrName)})` }), address;
                    });
                }
                _getBlock(blockHashOrBlockTag, includeTransactions) {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        yield this.getNetwork(), (blockHashOrBlockTag = yield blockHashOrBlockTag);
                        let blockNumber = -128,
                            params = { includeTransactions: !!includeTransactions };
                        if ((0, bytes_lib_esm.A7)(blockHashOrBlockTag, 32)) params.blockHash = blockHashOrBlockTag;
                        else
                            try {
                                (params.blockTag = yield this._getBlockTag(blockHashOrBlockTag)), (0, bytes_lib_esm.A7)(params.blockTag) && (blockNumber = parseInt(params.blockTag.substring(2), 16));
                            } catch (error) {
                                base_provider_logger.throwArgumentError("invalid block hash or block tag", "blockHashOrBlockTag", blockHashOrBlockTag);
                            }
                        return poll(
                            () =>
                                base_provider_awaiter(this, void 0, void 0, function* () {
                                    let block = yield this.perform("getBlock", params);
                                    if (null == block) return (null != params.blockHash && null == this._emitted["b:" + params.blockHash]) || (null != params.blockTag && blockNumber > this._emitted.block) ? null : void 0;
                                    if (includeTransactions) {
                                        let blockNumber1 = null;
                                        for (let i = 0; i < block.transactions.length; i++) {
                                            let tx = block.transactions[i];
                                            if (null == tx.blockNumber) tx.confirmations = 0;
                                            else if (null == tx.confirmations) {
                                                null == blockNumber1 && (blockNumber1 = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval));
                                                let confirmations = blockNumber1 - tx.blockNumber + 1;
                                                confirmations <= 0 && (confirmations = 1), (tx.confirmations = confirmations);
                                            }
                                        }
                                        let blockWithTxs = this.formatter.blockWithTransactions(block);
                                        return (blockWithTxs.transactions = blockWithTxs.transactions.map((tx) => this._wrapTransaction(tx))), blockWithTxs;
                                    }
                                    return this.formatter.block(block);
                                }),
                            { oncePoll: this }
                        );
                    });
                }
                getBlock(blockHashOrBlockTag) {
                    return this._getBlock(blockHashOrBlockTag, !1);
                }
                getBlockWithTransactions(blockHashOrBlockTag) {
                    return this._getBlock(blockHashOrBlockTag, !0);
                }
                getTransaction(transactionHash) {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        yield this.getNetwork(), (transactionHash = yield transactionHash);
                        let params = { transactionHash: this.formatter.hash(transactionHash, !0) };
                        return poll(
                            () =>
                                base_provider_awaiter(this, void 0, void 0, function* () {
                                    let result = yield this.perform("getTransaction", params);
                                    if (null == result) return null == this._emitted["t:" + transactionHash] ? null : void 0;
                                    let tx = this.formatter.transactionResponse(result);
                                    if (null == tx.blockNumber) tx.confirmations = 0;
                                    else if (null == tx.confirmations) {
                                        let blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval),
                                            confirmations = blockNumber - tx.blockNumber + 1;
                                        confirmations <= 0 && (confirmations = 1), (tx.confirmations = confirmations);
                                    }
                                    return this._wrapTransaction(tx);
                                }),
                            { oncePoll: this }
                        );
                    });
                }
                getTransactionReceipt(transactionHash) {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        yield this.getNetwork(), (transactionHash = yield transactionHash);
                        let params = { transactionHash: this.formatter.hash(transactionHash, !0) };
                        return poll(
                            () =>
                                base_provider_awaiter(this, void 0, void 0, function* () {
                                    let result = yield this.perform("getTransactionReceipt", params);
                                    if (null == result) return null == this._emitted["t:" + transactionHash] ? null : void 0;
                                    if (null == result.blockHash) return;
                                    let receipt = this.formatter.receipt(result);
                                    if (null == receipt.blockNumber) receipt.confirmations = 0;
                                    else if (null == receipt.confirmations) {
                                        let blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval),
                                            confirmations = blockNumber - receipt.blockNumber + 1;
                                        confirmations <= 0 && (confirmations = 1), (receipt.confirmations = confirmations);
                                    }
                                    return receipt;
                                }),
                            { oncePoll: this }
                        );
                    });
                }
                getLogs(filter) {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        yield this.getNetwork();
                        let params = yield (0, properties_lib_esm.mE)({ filter: this._getFilter(filter) }),
                            logs = yield this.perform("getLogs", params);
                        return (
                            logs.forEach((log) => {
                                null == log.removed && (log.removed = !1);
                            }),
                            Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs)
                        );
                    });
                }
                getEtherPrice() {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        return yield this.getNetwork(), this.perform("getEtherPrice", {});
                    });
                }
                _getBlockTag(blockTag) {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        if ("number" == typeof (blockTag = yield blockTag) && blockTag < 0) {
                            blockTag % 1 && base_provider_logger.throwArgumentError("invalid BlockTag", "blockTag", blockTag);
                            let blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                            return (blockNumber += blockTag) < 0 && (blockNumber = 0), this.formatter.blockTag(blockNumber);
                        }
                        return this.formatter.blockTag(blockTag);
                    });
                }
                getResolver(name) {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        let currentName = name;
                        for (;;) {
                            if ("" === currentName || "." === currentName || ("eth" !== name && "eth" === currentName)) return null;
                            let addr = yield this._getResolver(currentName, "getResolver");
                            if (null != addr) {
                                let resolver = new Resolver(this, addr, name);
                                if (currentName !== name && !(yield resolver.supportsWildcard())) return null;
                                return resolver;
                            }
                            currentName = currentName.split(".").slice(1).join(".");
                        }
                    });
                }
                _getResolver(name, operation) {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        null == operation && (operation = "ENS");
                        let network = yield this.getNetwork();
                        network.ensAddress || base_provider_logger.throwError("network does not support ENS", logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation, network: network.name });
                        try {
                            let addrData = yield this.call({ to: network.ensAddress, data: "0x0178b8bf" + namehash(name).substring(2) });
                            return this.formatter.callAddress(addrData);
                        } catch (error) {}
                        return null;
                    });
                }
                resolveName(name) {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        name = yield name;
                        try {
                            return Promise.resolve(this.formatter.address(name));
                        } catch (error) {
                            if ((0, bytes_lib_esm.A7)(name)) throw error;
                        }
                        "string" != typeof name && base_provider_logger.throwArgumentError("invalid ENS name", "name", name);
                        let resolver = yield this.getResolver(name);
                        return resolver ? yield resolver.getAddress() : null;
                    });
                }
                lookupAddress(address) {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        (address = yield address), (address = this.formatter.address(address));
                        let node = address.substring(2).toLowerCase() + ".addr.reverse",
                            resolverAddr = yield this._getResolver(node, "lookupAddress");
                        if (null == resolverAddr) return null;
                        let name = _parseString(yield this.call({ to: resolverAddr, data: "0x691f3431" + namehash(node).substring(2) }), 0),
                            addr = yield this.resolveName(name);
                        return addr != address ? null : name;
                    });
                }
                getAvatar(nameOrAddress) {
                    return base_provider_awaiter(this, void 0, void 0, function* () {
                        let resolver = null;
                        if ((0, bytes_lib_esm.A7)(nameOrAddress)) {
                            let address = this.formatter.address(nameOrAddress),
                                node = address.substring(2).toLowerCase() + ".addr.reverse",
                                resolverAddress = yield this._getResolver(node, "getAvatar");
                            if (!resolverAddress) return null;
                            resolver = new Resolver(this, resolverAddress, node);
                            try {
                                let avatar = yield resolver.getAvatar();
                                if (avatar) return avatar.url;
                            } catch (error) {
                                if (error.code !== logger_lib_esm.Yd.errors.CALL_EXCEPTION) throw error;
                            }
                            try {
                                let name = _parseString(yield this.call({ to: resolverAddress, data: "0x691f3431" + namehash(node).substring(2) }), 0);
                                resolver = yield this.getResolver(name);
                            } catch (error1) {
                                if (error1.code !== logger_lib_esm.Yd.errors.CALL_EXCEPTION) throw error1;
                                return null;
                            }
                        } else if (!(resolver = yield this.getResolver(nameOrAddress))) return null;
                        let avatar1 = yield resolver.getAvatar();
                        return null == avatar1 ? null : avatar1.url;
                    });
                }
                perform(method, params) {
                    return base_provider_logger.throwError(method + " not implemented", logger_lib_esm.Yd.errors.NOT_IMPLEMENTED, { operation: method });
                }
                _startEvent(event) {
                    this.polling = this._events.filter((e) => e.pollable()).length > 0;
                }
                _stopEvent(event) {
                    this.polling = this._events.filter((e) => e.pollable()).length > 0;
                }
                _addEventListener(eventName, listener, once) {
                    let event = new Event1(getEventTag(eventName), listener, once);
                    return this._events.push(event), this._startEvent(event), this;
                }
                on(eventName, listener) {
                    return this._addEventListener(eventName, listener, !1);
                }
                once(eventName, listener) {
                    return this._addEventListener(eventName, listener, !0);
                }
                emit(eventName, ...args) {
                    let result = !1,
                        stopped = [],
                        eventTag = getEventTag(eventName);
                    return (
                        (this._events = this._events.filter(
                            (event) =>
                                event.tag !== eventTag ||
                                (setTimeout(() => {
                                    event.listener.apply(this, args);
                                }, 0),
                                (result = !0),
                                !event.once || (stopped.push(event), !1))
                        )),
                        stopped.forEach((event) => {
                            this._stopEvent(event);
                        }),
                        result
                    );
                }
                listenerCount(eventName) {
                    if (!eventName) return this._events.length;
                    let eventTag = getEventTag(eventName);
                    return this._events.filter((event) => event.tag === eventTag).length;
                }
                listeners(eventName) {
                    if (null == eventName) return this._events.map((event) => event.listener);
                    let eventTag = getEventTag(eventName);
                    return this._events.filter((event) => event.tag === eventTag).map((event) => event.listener);
                }
                off(eventName, listener) {
                    if (null == listener) return this.removeAllListeners(eventName);
                    let stopped = [],
                        found = !1,
                        eventTag = getEventTag(eventName);
                    return (
                        (this._events = this._events.filter((event) => event.tag !== eventTag || event.listener != listener || !!found || ((found = !0), stopped.push(event), !1))),
                        stopped.forEach((event) => {
                            this._stopEvent(event);
                        }),
                        this
                    );
                }
                removeAllListeners(eventName) {
                    let stopped = [];
                    if (null == eventName) (stopped = this._events), (this._events = []);
                    else {
                        let eventTag = getEventTag(eventName);
                        this._events = this._events.filter((event) => event.tag !== eventTag || (stopped.push(event), !1));
                    }
                    return (
                        stopped.forEach((event) => {
                            this._stopEvent(event);
                        }),
                        this
                    );
                }
            }
            var json_rpc_provider_awaiter = function (thisArg, _arguments, P, generator) {
                return new (P || (P = Promise))(function (resolve, reject) {
                    function fulfilled(value) {
                        try {
                            step(generator.next(value));
                        } catch (e) {
                            reject(e);
                        }
                    }
                    function rejected(value) {
                        try {
                            step(generator.throw(value));
                        } catch (e) {
                            reject(e);
                        }
                    }
                    function step(result) {
                        var value;
                        result.done
                            ? resolve(result.value)
                            : ((value = result.value) instanceof P
                                  ? value
                                  : new P(function (resolve) {
                                        resolve(value);
                                    })
                              ).then(fulfilled, rejected);
                    }
                    step((generator = generator.apply(thisArg, _arguments || [])).next());
                });
            };
            let json_rpc_provider_logger = new logger_lib_esm.Yd(version),
                errorGas = ["call", "estimateGas"];
            function checkError(method, error, params) {
                if ("call" === method) {
                    let result = (function spelunk(value) {
                        if (null == value) return null;
                        if ("string" == typeof value.message && value.message.match("reverted") && (0, bytes_lib_esm.A7)(value.data)) return { message: value.message, data: value.data };
                        if ("object" == typeof value) {
                            for (let key in value) {
                                let result = spelunk(value[key]);
                                if (result) return result;
                            }
                            return null;
                        }
                        if ("string" == typeof value)
                            try {
                                return spelunk(JSON.parse(value));
                            } catch (error) {}
                        return null;
                    })(error);
                    if (result) return result.data;
                    json_rpc_provider_logger.throwError("missing revert data in call exception", logger_lib_esm.Yd.errors.CALL_EXCEPTION, { error, data: "0x" });
                }
                let message = error.message;
                error.code === logger_lib_esm.Yd.errors.SERVER_ERROR && error.error && "string" == typeof error.error.message
                    ? (message = error.error.message)
                    : "string" == typeof error.body
                    ? (message = error.body)
                    : "string" == typeof error.responseText && (message = error.responseText),
                    (message = (message || "").toLowerCase());
                let transaction = params.transaction || params.signedTransaction;
                throw (
                    (message.match(/insufficient funds|base fee exceeds gas limit/) &&
                        json_rpc_provider_logger.throwError("insufficient funds for intrinsic transaction cost", logger_lib_esm.Yd.errors.INSUFFICIENT_FUNDS, { error, method, transaction }),
                    message.match(/nonce too low/) && json_rpc_provider_logger.throwError("nonce has already been used", logger_lib_esm.Yd.errors.NONCE_EXPIRED, { error, method, transaction }),
                    message.match(/replacement transaction underpriced/) && json_rpc_provider_logger.throwError("replacement fee too low", logger_lib_esm.Yd.errors.REPLACEMENT_UNDERPRICED, { error, method, transaction }),
                    message.match(/only replay-protected/) && json_rpc_provider_logger.throwError("legacy pre-eip-155 transactions not supported", logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { error, method, transaction }),
                    errorGas.indexOf(method) >= 0 &&
                        message.match(/gas required exceeds allowance|always failing transaction|execution reverted/) &&
                        json_rpc_provider_logger.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", logger_lib_esm.Yd.errors.UNPREDICTABLE_GAS_LIMIT, { error, method, transaction }),
                    error)
                );
            }
            function timer(timeout) {
                return new Promise(function (resolve) {
                    setTimeout(resolve, timeout);
                });
            }
            function getResult(payload) {
                if (payload.error) {
                    let error = Error(payload.error.message);
                    throw ((error.code = payload.error.code), (error.data = payload.error.data), error);
                }
                return payload.result;
            }
            function getLowerCase(value) {
                return value ? value.toLowerCase() : value;
            }
            let _constructorGuard = {};
            class JsonRpcSigner extends abstract_signer_lib_esm.E {
                constructor(constructorGuard, provider, addressOrIndex) {
                    if ((json_rpc_provider_logger.checkNew(new.target, JsonRpcSigner), super(), constructorGuard !== _constructorGuard)) throw Error("do not call the JsonRpcSigner constructor directly; use provider.getSigner");
                    (0, properties_lib_esm.zG)(this, "provider", provider),
                        null == addressOrIndex && (addressOrIndex = 0),
                        "string" == typeof addressOrIndex
                            ? ((0, properties_lib_esm.zG)(this, "_address", this.provider.formatter.address(addressOrIndex)), (0, properties_lib_esm.zG)(this, "_index", null))
                            : "number" == typeof addressOrIndex
                            ? ((0, properties_lib_esm.zG)(this, "_index", addressOrIndex), (0, properties_lib_esm.zG)(this, "_address", null))
                            : json_rpc_provider_logger.throwArgumentError("invalid address or index", "addressOrIndex", addressOrIndex);
                }
                connect(provider) {
                    return json_rpc_provider_logger.throwError("cannot alter JSON-RPC Signer connection", logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation: "connect" });
                }
                connectUnchecked() {
                    return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);
                }
                getAddress() {
                    return this._address
                        ? Promise.resolve(this._address)
                        : this.provider
                              .send("eth_accounts", [])
                              .then(
                                  (accounts) => (
                                      accounts.length <= this._index && json_rpc_provider_logger.throwError("unknown account #" + this._index, logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation: "getAddress" }),
                                      this.provider.formatter.address(accounts[this._index])
                                  )
                              );
                }
                sendUncheckedTransaction(transaction) {
                    transaction = (0, properties_lib_esm.DC)(transaction);
                    let fromAddress = this.getAddress().then((address) => (address && (address = address.toLowerCase()), address));
                    if (null == transaction.gasLimit) {
                        let estimate = (0, properties_lib_esm.DC)(transaction);
                        (estimate.from = fromAddress), (transaction.gasLimit = this.provider.estimateGas(estimate));
                    }
                    return (
                        null != transaction.to &&
                            (transaction.to = Promise.resolve(transaction.to).then((to) =>
                                json_rpc_provider_awaiter(this, void 0, void 0, function* () {
                                    if (null == to) return null;
                                    let address = yield this.provider.resolveName(to);
                                    return null == address && json_rpc_provider_logger.throwArgumentError("provided ENS name resolves to null", "tx.to", to), address;
                                })
                            )),
                        (0, properties_lib_esm.mE)({ tx: (0, properties_lib_esm.mE)(transaction), sender: fromAddress }).then(({ tx, sender }) => {
                            null != tx.from ? tx.from.toLowerCase() !== sender && json_rpc_provider_logger.throwArgumentError("from address mismatch", "transaction", transaction) : (tx.from = sender);
                            let hexTx = this.provider.constructor.hexlifyTransaction(tx, { from: !0 });
                            return this.provider.send("eth_sendTransaction", [hexTx]).then(
                                (hash) => hash,
                                (error) => checkError("sendTransaction", error, hexTx)
                            );
                        })
                    );
                }
                signTransaction(transaction) {
                    return json_rpc_provider_logger.throwError("signing transactions is unsupported", logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation: "signTransaction" });
                }
                sendTransaction(transaction) {
                    return json_rpc_provider_awaiter(this, void 0, void 0, function* () {
                        let blockNumber = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval),
                            hash = yield this.sendUncheckedTransaction(transaction);
                        try {
                            return yield poll(
                                () =>
                                    json_rpc_provider_awaiter(this, void 0, void 0, function* () {
                                        let tx = yield this.provider.getTransaction(hash);
                                        if (null !== tx) return this.provider._wrapTransaction(tx, hash, blockNumber);
                                    }),
                                { oncePoll: this.provider }
                            );
                        } catch (error) {
                            throw ((error.transactionHash = hash), error);
                        }
                    });
                }
                signMessage(message) {
                    return json_rpc_provider_awaiter(this, void 0, void 0, function* () {
                        let data = "string" == typeof message ? (0, utf8.Y0)(message) : message,
                            address = yield this.getAddress();
                        return yield this.provider.send("personal_sign", [(0, bytes_lib_esm.Dv)(data), address.toLowerCase()]);
                    });
                }
                _legacySignMessage(message) {
                    return json_rpc_provider_awaiter(this, void 0, void 0, function* () {
                        let data = "string" == typeof message ? (0, utf8.Y0)(message) : message,
                            address = yield this.getAddress();
                        return yield this.provider.send("eth_sign", [address.toLowerCase(), (0, bytes_lib_esm.Dv)(data)]);
                    });
                }
                _signTypedData(domain, types, value) {
                    return json_rpc_provider_awaiter(this, void 0, void 0, function* () {
                        let populated = yield TypedDataEncoder.resolveNames(domain, types, value, (name) => this.provider.resolveName(name)),
                            address = yield this.getAddress();
                        return yield this.provider.send("eth_signTypedData_v4", [address.toLowerCase(), JSON.stringify(TypedDataEncoder.getPayload(populated.domain, types, populated.value))]);
                    });
                }
                unlock(password) {
                    return json_rpc_provider_awaiter(this, void 0, void 0, function* () {
                        let provider = this.provider,
                            address = yield this.getAddress();
                        return provider.send("personal_unlockAccount", [address.toLowerCase(), password, null]);
                    });
                }
            }
            class UncheckedJsonRpcSigner extends JsonRpcSigner {
                sendTransaction(transaction) {
                    return this.sendUncheckedTransaction(transaction).then((hash) => ({
                        hash: hash,
                        nonce: null,
                        gasLimit: null,
                        gasPrice: null,
                        data: null,
                        value: null,
                        chainId: null,
                        confirmations: 0,
                        from: null,
                        wait: (confirmations) => this.provider.waitForTransaction(hash, confirmations),
                    }));
                }
            }
            let allowedTransactionKeys = { chainId: !0, data: !0, gasLimit: !0, gasPrice: !0, nonce: !0, to: !0, value: !0, type: !0, accessList: !0, maxFeePerGas: !0, maxPriorityFeePerGas: !0 };
            class JsonRpcProvider extends BaseProvider {
                constructor(url, network) {
                    json_rpc_provider_logger.checkNew(new.target, JsonRpcProvider);
                    let networkOrReady = network;
                    null == networkOrReady &&
                        (networkOrReady = new Promise((resolve, reject) => {
                            setTimeout(() => {
                                this.detectNetwork().then(
                                    (network) => {
                                        resolve(network);
                                    },
                                    (error) => {
                                        reject(error);
                                    }
                                );
                            }, 0);
                        })),
                        super(networkOrReady),
                        url || (url = (0, properties_lib_esm.tu)(this.constructor, "defaultUrl")()),
                        "string" == typeof url ? (0, properties_lib_esm.zG)(this, "connection", Object.freeze({ url: url })) : (0, properties_lib_esm.zG)(this, "connection", Object.freeze((0, properties_lib_esm.DC)(url))),
                        (this._nextId = 42);
                }
                get _cache() {
                    return null == this._eventLoopCache && (this._eventLoopCache = {}), this._eventLoopCache;
                }
                static defaultUrl() {
                    return "http://localhost:8545";
                }
                detectNetwork() {
                    return (
                        this._cache.detectNetwork ||
                            ((this._cache.detectNetwork = this._uncachedDetectNetwork()),
                            setTimeout(() => {
                                this._cache.detectNetwork = null;
                            }, 0)),
                        this._cache.detectNetwork
                    );
                }
                _uncachedDetectNetwork() {
                    return json_rpc_provider_awaiter(this, void 0, void 0, function* () {
                        yield timer(0);
                        let chainId = null;
                        try {
                            chainId = yield this.send("eth_chainId", []);
                        } catch (error1) {
                            try {
                                chainId = yield this.send("net_version", []);
                            } catch (error) {}
                        }
                        if (null != chainId) {
                            let getNetwork = (0, properties_lib_esm.tu)(this.constructor, "getNetwork");
                            try {
                                return getNetwork(bignumber.O$.from(chainId).toNumber());
                            } catch (error2) {
                                return json_rpc_provider_logger.throwError("could not detect network", logger_lib_esm.Yd.errors.NETWORK_ERROR, { chainId: chainId, event: "invalidNetwork", serverError: error2 });
                            }
                        }
                        return json_rpc_provider_logger.throwError("could not detect network", logger_lib_esm.Yd.errors.NETWORK_ERROR, { event: "noNetwork" });
                    });
                }
                getSigner(addressOrIndex) {
                    return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);
                }
                getUncheckedSigner(addressOrIndex) {
                    return this.getSigner(addressOrIndex).connectUnchecked();
                }
                listAccounts() {
                    return this.send("eth_accounts", []).then((accounts) => accounts.map((a) => this.formatter.address(a)));
                }
                send(method, params) {
                    let request = { method: method, params: params, id: this._nextId++, jsonrpc: "2.0" };
                    this.emit("debug", { action: "request", request: (0, properties_lib_esm.p$)(request), provider: this });
                    let cache = ["eth_chainId", "eth_blockNumber"].indexOf(method) >= 0;
                    if (cache && this._cache[method]) return this._cache[method];
                    let result = fetchJson(this.connection, JSON.stringify(request), getResult).then(
                        (result) => (this.emit("debug", { action: "response", request: request, response: result, provider: this }), result),
                        (error) => {
                            throw (this.emit("debug", { action: "response", error: error, request: request, provider: this }), error);
                        }
                    );
                    return (
                        cache &&
                            ((this._cache[method] = result),
                            setTimeout(() => {
                                this._cache[method] = null;
                            }, 0)),
                        result
                    );
                }
                prepareRequest(method, params) {
                    switch (method) {
                        case "getBlockNumber":
                            return ["eth_blockNumber", []];
                        case "getGasPrice":
                            return ["eth_gasPrice", []];
                        case "getBalance":
                            return ["eth_getBalance", [getLowerCase(params.address), params.blockTag]];
                        case "getTransactionCount":
                            return ["eth_getTransactionCount", [getLowerCase(params.address), params.blockTag]];
                        case "getCode":
                            return ["eth_getCode", [getLowerCase(params.address), params.blockTag]];
                        case "getStorageAt":
                            return ["eth_getStorageAt", [getLowerCase(params.address), params.position, params.blockTag]];
                        case "sendTransaction":
                            return ["eth_sendRawTransaction", [params.signedTransaction]];
                        case "getBlock":
                            if (params.blockTag) return ["eth_getBlockByNumber", [params.blockTag, !!params.includeTransactions]];
                            if (params.blockHash) return ["eth_getBlockByHash", [params.blockHash, !!params.includeTransactions]];
                            break;
                        case "getTransaction":
                            return ["eth_getTransactionByHash", [params.transactionHash]];
                        case "getTransactionReceipt":
                            return ["eth_getTransactionReceipt", [params.transactionHash]];
                        case "call": {
                            let hexlifyTransaction = (0, properties_lib_esm.tu)(this.constructor, "hexlifyTransaction");
                            return ["eth_call", [hexlifyTransaction(params.transaction, { from: !0 }), params.blockTag]];
                        }
                        case "estimateGas": {
                            let hexlifyTransaction1 = (0, properties_lib_esm.tu)(this.constructor, "hexlifyTransaction");
                            return ["eth_estimateGas", [hexlifyTransaction1(params.transaction, { from: !0 })]];
                        }
                        case "getLogs":
                            return params.filter && null != params.filter.address && (params.filter.address = getLowerCase(params.filter.address)), ["eth_getLogs", [params.filter]];
                    }
                    return null;
                }
                perform(method, params) {
                    return json_rpc_provider_awaiter(this, void 0, void 0, function* () {
                        if ("call" === method || "estimateGas" === method) {
                            let tx = params.transaction;
                            if (tx && null != tx.type && bignumber.O$.from(tx.type).isZero() && null == tx.maxFeePerGas && null == tx.maxPriorityFeePerGas) {
                                let feeData = yield this.getFeeData();
                                null == feeData.maxFeePerGas && null == feeData.maxPriorityFeePerGas && (((params = (0, properties_lib_esm.DC)(params)).transaction = (0, properties_lib_esm.DC)(tx)), delete params.transaction.type);
                            }
                        }
                        let args = this.prepareRequest(method, params);
                        null == args && json_rpc_provider_logger.throwError(method + " not implemented", logger_lib_esm.Yd.errors.NOT_IMPLEMENTED, { operation: method });
                        try {
                            return yield this.send(args[0], args[1]);
                        } catch (error) {
                            return checkError(method, error, params);
                        }
                    });
                }
                _startEvent(event) {
                    "pending" === event.tag && this._startPending(), super._startEvent(event);
                }
                _startPending() {
                    if (null != this._pendingFilter) return;
                    let self1 = this,
                        pendingFilter = this.send("eth_newPendingTransactionFilter", []);
                    (this._pendingFilter = pendingFilter),
                        pendingFilter
                            .then(function (filterId) {
                                return (
                                    (function poll() {
                                        self1
                                            .send("eth_getFilterChanges", [filterId])
                                            .then(function (hashes) {
                                                if (self1._pendingFilter != pendingFilter) return null;
                                                let seq = Promise.resolve();
                                                return (
                                                    hashes.forEach(function (hash) {
                                                        (self1._emitted["t:" + hash.toLowerCase()] = "pending"),
                                                            (seq = seq.then(function () {
                                                                return self1.getTransaction(hash).then(function (tx) {
                                                                    return self1.emit("pending", tx), null;
                                                                });
                                                            }));
                                                    }),
                                                    seq.then(function () {
                                                        return timer(1e3);
                                                    })
                                                );
                                            })
                                            .then(function () {
                                                if (self1._pendingFilter != pendingFilter) {
                                                    self1.send("eth_uninstallFilter", [filterId]);
                                                    return;
                                                }
                                                return (
                                                    setTimeout(function () {
                                                        poll();
                                                    }, 0),
                                                    null
                                                );
                                            })
                                            .catch((error) => {});
                                    })(),
                                    filterId
                                );
                            })
                            .catch((error) => {});
                }
                _stopEvent(event) {
                    "pending" === event.tag && 0 === this.listenerCount("pending") && (this._pendingFilter = null), super._stopEvent(event);
                }
                static hexlifyTransaction(transaction, allowExtra) {
                    let allowed = (0, properties_lib_esm.DC)(allowedTransactionKeys);
                    if (allowExtra) for (let key in allowExtra) allowExtra[key] && (allowed[key] = !0);
                    (0, properties_lib_esm.uj)(transaction, allowed);
                    let result = {};
                    return (
                        ["chainId", "gasLimit", "gasPrice", "type", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "value"].forEach(function (key) {
                            if (null == transaction[key]) return;
                            let value = (0, bytes_lib_esm.$P)(transaction[key]);
                            "gasLimit" === key && (key = "gas"), (result[key] = value);
                        }),
                        ["from", "to", "data"].forEach(function (key) {
                            null != transaction[key] && (result[key] = (0, bytes_lib_esm.Dv)(transaction[key]));
                        }),
                        transaction.accessList && (result.accessList = (0, transactions_lib_esm.z7)(transaction.accessList)),
                        result
                    );
                }
            }
            let web3_provider_logger = new logger_lib_esm.Yd(version),
                _nextId = 1;
            function buildWeb3LegacyFetcher(provider, sendFunc) {
                let fetcher = "Web3LegacyFetcher";
                return function (method, params) {
                    let request = { method: method, params: params, id: _nextId++, jsonrpc: "2.0" };
                    return new Promise((resolve, reject) => {
                        this.emit("debug", { action: "request", fetcher, request: (0, properties_lib_esm.p$)(request), provider: this }),
                            sendFunc(request, (error, response) => {
                                if (error) return this.emit("debug", { action: "response", fetcher, error, request, provider: this }), reject(error);
                                if ((this.emit("debug", { action: "response", fetcher, request, response, provider: this }), response.error)) {
                                    let error1 = Error(response.error.message);
                                    return (error1.code = response.error.code), (error1.data = response.error.data), reject(error1);
                                }
                                resolve(response.result);
                            });
                    });
                };
            }
            class Web3Provider extends JsonRpcProvider {
                constructor(provider, network) {
                    web3_provider_logger.checkNew(new.target, Web3Provider), null == provider && web3_provider_logger.throwArgumentError("missing provider", "provider", provider);
                    let path = null,
                        jsonRpcFetchFunc = null,
                        subprovider = null;
                    "function" == typeof provider
                        ? ((path = "unknown:"), (jsonRpcFetchFunc = provider))
                        : (((path = provider.host || provider.path || "") || !provider.isMetaMask || (path = "metamask"), (subprovider = provider), provider.request)
                              ? ("" === path && (path = "eip-1193:"),
                                (jsonRpcFetchFunc = function (method, params) {
                                    null == params && (params = []);
                                    let request = { method, params };
                                    return (
                                        this.emit("debug", { action: "request", fetcher: "Eip1193Fetcher", request: (0, properties_lib_esm.p$)(request), provider: this }),
                                        provider.request(request).then(
                                            (response) => (this.emit("debug", { action: "response", fetcher: "Eip1193Fetcher", request, response, provider: this }), response),
                                            (error) => {
                                                throw (this.emit("debug", { action: "response", fetcher: "Eip1193Fetcher", request, error, provider: this }), error);
                                            }
                                        )
                                    );
                                }))
                              : provider.sendAsync
                              ? (jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider)))
                              : provider.send
                              ? (jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider)))
                              : web3_provider_logger.throwArgumentError("unsupported provider", "provider", provider),
                          path || (path = "unknown:")),
                        super(path, network),
                        (0, properties_lib_esm.zG)(this, "jsonRpcFetchFunc", jsonRpcFetchFunc),
                        (0, properties_lib_esm.zG)(this, "provider", subprovider);
                }
                send(method, params) {
                    return this.jsonRpcFetchFunc(method, params);
                }
            }
            var esm = __webpack_require__(21445);
            let reservedEvents = ["session_request", "session_update", "exchange_key", "connect", "disconnect", "display_uri", "modal_closed", "transport_open", "transport_close", "transport_error"],
                signingMethods = [
                    "eth_sendTransaction",
                    "eth_signTransaction",
                    "eth_sign",
                    "eth_signTypedData",
                    "eth_signTypedData_v1",
                    "eth_signTypedData_v2",
                    "eth_signTypedData_v3",
                    "eth_signTypedData_v4",
                    "personal_sign",
                    "wallet_addEthereumChain",
                    "wallet_switchEthereumChain",
                    "wallet_getPermissions",
                    "wallet_requestPermissions",
                    "wallet_registerOnboarding",
                    "wallet_watchAsset",
                    "wallet_scanQRCode",
                ],
                infuraNetworks = { 1: "mainnet", 3: "ropsten", 4: "rinkeby", 5: "goerli", 42: "kovan" };
            var bn = __webpack_require__(11460),
                bn_default = __webpack_require__.n(bn);
            __webpack_require__(4501);
            var typedarray_to_buffer = __webpack_require__(65054),
                typedarray_to_buffer_default = __webpack_require__.n(typedarray_to_buffer),
                Buffer = __webpack_require__(48764).Buffer;
            let ENC_UTF8 = "utf8";
            function bufferToArray(buf) {
                return new Uint8Array(buf);
            }
            function bufferToHex(buf, prefixed = !1) {
                let hex = buf.toString("hex");
                return prefixed ? addHexPrefix(hex) : hex;
            }
            function arrayToHex(arr, prefixed = !1) {
                return bufferToHex(typedarray_to_buffer_default()(arr), prefixed);
            }
            function hexToArray(hex) {
                return bufferToArray(Buffer.from(removeHexPrefix(hex), "hex"));
            }
            function utf8ToBuffer(utf8) {
                return Buffer.from(utf8, ENC_UTF8);
            }
            function concatArrays(...args) {
                let result = [];
                return args.forEach((arg) => (result = result.concat(Array.from(arg)))), new Uint8Array([...result]);
            }
            function removeHexPrefix(hex) {
                return hex.replace(/^0x/, "");
            }
            function addHexPrefix(hex) {
                return hex.startsWith("0x") ? hex : `0x${hex}`;
            }
            function sanitizeHex(hex) {
                return (
                    (hex = (function (str, byteSize = 8, padding = "0") {
                        return (function (str, length, padding = "0") {
                            return (function (str, length, left, padding = "0") {
                                let diff = length - str.length,
                                    result = str;
                                if (diff > 0) {
                                    let pad = padding.repeat(diff);
                                    result = left ? pad + str : str + pad;
                                }
                                return result;
                            })(str, length, !0, padding);
                        })(
                            str,
                            (function (length, byteSize = 8) {
                                let remainder = length % byteSize;
                                return remainder ? ((length - remainder) / byteSize) * byteSize + byteSize : length;
                            })(str.length, byteSize),
                            padding
                        );
                    })((hex = removeHexPrefix(hex)), 2)) && (hex = addHexPrefix(hex)),
                    hex
                );
            }
            function convertArrayBufferToBuffer(arrBuf) {
                var arr;
                return (arr = new Uint8Array(arrBuf)), typedarray_to_buffer_default()(arr);
            }
            function convertNumberToHex(num, noPrefix) {
                let hex = removeHexPrefix(sanitizeHex(new (bn_default())(num).toString(16)));
                return noPrefix ? hex : addHexPrefix(hex);
            }
            var sha3 = __webpack_require__(91094),
                cjs = __webpack_require__(1468);
            let misc_payloadId = function () {
                let date = 1e3 * Date.now();
                return date + Math.floor(1e3 * Math.random());
            };
            function uuid() {
                let result = ((a, b) => {
                    for (b = a = ""; a++ < 36; b += (51 * a) & 52 ? (15 ^ a ? 8 ^ (Math.random() * (20 ^ a ? 16 : 4)) : 4).toString(16) : "-");
                    return b;
                })();
                return result;
            }
            function validators_isHexString(value, length) {
                return "string" == typeof value && !!value.match(/^0x[0-9A-Fa-f]*$/) && (!length || value.length === 2 + 2 * length);
            }
            function isJsonRpcResponseSuccess(object) {
                return void 0 !== object.result;
            }
            function isJsonRpcResponseError(object) {
                return void 0 !== object.error;
            }
            function isInternalEvent(object) {
                return void 0 !== object.event;
            }
            let isValidAddress = (address) =>
                !!address &&
                "0x" === address.toLowerCase().substring(0, 2) &&
                !!/^(0x)?[0-9a-f]{40}$/i.test(address) &&
                (!!(/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) ||
                    address ===
                        (function (address) {
                            address = removeHexPrefix(address.toLowerCase());
                            let hash = removeHexPrefix((0, sha3.keccak_256)(utf8ToBuffer(address))),
                                checksum = "";
                            for (let i = 0; i < address.length; i++) parseInt(hash[i], 16) > 7 ? (checksum += address[i].toUpperCase()) : (checksum += address[i]);
                            return addHexPrefix(checksum);
                        })(address));
            function parsePersonalSign(params) {
                return (
                    params &&
                        params.length &&
                        !validators_isHexString(params[0]) &&
                        (params[0] = (function (utf8, prefixed = !1) {
                            return bufferToHex(utf8ToBuffer(utf8), prefixed);
                        })(params[0], !0)),
                    params
                );
            }
            function parseTransactionData(txData) {
                if (void 0 !== txData.type && "0" !== txData.type) return txData;
                if (void 0 === txData.from || !isValidAddress(txData.from)) throw Error("Transaction object must include a valid 'from' value.");
                function parseHexValues(value) {
                    let result = value;
                    return (
                        ("number" != typeof value && ("string" != typeof value || "" === value || ("string" == typeof value && "" === value.trim()))) ||
                            (validators_isHexString(value) ? "string" == typeof value && (result = sanitizeHex(value)) : (result = convertNumberToHex(value))),
                        "string" == typeof result &&
                            (result = (function (hex) {
                                let prefixed = hex.startsWith("0x");
                                return (hex = (hex = removeHexPrefix(hex)).startsWith("0") ? hex.substring(1) : hex), prefixed ? addHexPrefix(hex) : hex;
                            })(addHexPrefix(result))),
                        result
                    );
                }
                let txDataRPC = {
                        from: sanitizeHex(txData.from),
                        to: void 0 === txData.to ? void 0 : sanitizeHex(txData.to),
                        gasPrice: void 0 === txData.gasPrice ? "" : parseHexValues(txData.gasPrice),
                        gas: void 0 === txData.gas ? (void 0 === txData.gasLimit ? "" : parseHexValues(txData.gasLimit)) : parseHexValues(txData.gas),
                        value: void 0 === txData.value ? "" : parseHexValues(txData.value),
                        nonce: void 0 === txData.nonce ? "" : parseHexValues(txData.nonce),
                        data: void 0 === txData.data ? "" : sanitizeHex(txData.data) || "0x",
                    },
                    prunable = ["gasPrice", "gas", "value", "nonce"];
                return (
                    Object.keys(txDataRPC).forEach((key) => {
                        (void 0 === txDataRPC[key] || ("string" == typeof txDataRPC[key] && !txDataRPC[key].trim().length)) && prunable.includes(key) && delete txDataRPC[key];
                    }),
                    txDataRPC
                );
            }
            var query_string = __webpack_require__(17563),
                network = class {
                    constructor() {
                        (this._eventEmitters = []),
                            "undefined" != typeof window && void 0 !== window.addEventListener && (window.addEventListener("online", () => this.trigger("online")), window.addEventListener("offline", () => this.trigger("offline")));
                    }
                    on(event, callback) {
                        this._eventEmitters.push({ event, callback });
                    }
                    trigger(event) {
                        let eventEmitters = [];
                        event && (eventEmitters = this._eventEmitters.filter((eventEmitter) => eventEmitter.event === event)),
                            eventEmitters.forEach((eventEmitter) => {
                                eventEmitter.callback();
                            });
                    }
                };
            let WS = void 0 !== __webpack_require__.g.WebSocket ? __webpack_require__.g.WebSocket : __webpack_require__(68007);
            var dist_esm = class {
                constructor(opts) {
                    if (
                        ((this.opts = opts),
                        (this._queue = []),
                        (this._events = []),
                        (this._subscriptions = []),
                        (this._protocol = opts.protocol),
                        (this._version = opts.version),
                        (this._url = ""),
                        (this._netMonitor = null),
                        (this._socket = null),
                        (this._nextSocket = null),
                        (this._subscriptions = opts.subscriptions || []),
                        (this._netMonitor = opts.netMonitor || new network()),
                        !opts.url || "string" != typeof opts.url)
                    )
                        throw Error("Missing or invalid WebSocket url");
                    (this._url = opts.url), this._netMonitor.on("online", () => this._socketCreate());
                }
                set readyState(value) {}
                get readyState() {
                    return this._socket ? this._socket.readyState : -1;
                }
                set connecting(value) {}
                get connecting() {
                    return 0 === this.readyState;
                }
                set connected(value) {}
                get connected() {
                    return 1 === this.readyState;
                }
                set closing(value) {}
                get closing() {
                    return 2 === this.readyState;
                }
                set closed(value) {}
                get closed() {
                    return 3 === this.readyState;
                }
                open() {
                    this._socketCreate();
                }
                close() {
                    this._socketClose();
                }
                send(message, topic, silent) {
                    if (!topic || "string" != typeof topic) throw Error("Missing or invalid topic field");
                    this._socketSend({ topic: topic, type: "pub", payload: message, silent: !!silent });
                }
                subscribe(topic) {
                    this._socketSend({ topic: topic, type: "sub", payload: "", silent: !0 });
                }
                on(event, callback) {
                    this._events.push({ event, callback });
                }
                _socketCreate() {
                    if (this._nextSocket) return;
                    let url = (function (_url, protocol, version) {
                        var _a, _b, queryString, queryString1, queryParams;
                        let queryParams1;
                        let url = _url.startsWith("https") ? _url.replace("https", "wss") : _url.startsWith("http") ? _url.replace("http", "ws") : _url,
                            splitUrl = url.split("?"),
                            params = (0, esm.isBrowser)()
                                ? { protocol, version, env: "browser", host: (null === (_a = (0, esm.getLocation)()) || void 0 === _a ? void 0 : _a.host) || "" }
                                : { protocol, version, env: (null === (_b = (0, esm.detectEnv)()) || void 0 === _b ? void 0 : _b.name) || "" },
                            queryString2 =
                                ((queryParams = Object.assign(
                                    Object.assign(
                                        {},
                                        ((queryString1 = (function (url) {
                                            let pathEnd = -1 !== url.indexOf("?") ? url.indexOf("?") : void 0,
                                                queryString = void 0 !== pathEnd ? url.substr(pathEnd) : "";
                                            return queryString;
                                        })(splitUrl[1] || "")),
                                        query_string.parse(queryString1))
                                    ),
                                    params
                                )),
                                query_string.stringify(queryParams));
                        return splitUrl[0] + "?" + queryString2;
                    })(this._url, this._protocol, this._version);
                    if (((this._nextSocket = new WS(url)), !this._nextSocket)) throw Error("Failed to create socket");
                    (this._nextSocket.onmessage = (event) => this._socketReceive(event)),
                        (this._nextSocket.onopen = () => this._socketOpen()),
                        (this._nextSocket.onerror = (event) => this._socketError(event)),
                        (this._nextSocket.onclose = () => {
                            setTimeout(() => {
                                (this._nextSocket = null), this._socketCreate();
                            }, 1e3);
                        });
                }
                _socketOpen() {
                    this._socketClose(), (this._socket = this._nextSocket), (this._nextSocket = null), this._queueSubscriptions(), this._pushQueue();
                }
                _socketClose() {
                    this._socket && ((this._socket.onclose = () => {}), this._socket.close());
                }
                _socketSend(socketMessage) {
                    let message = JSON.stringify(socketMessage);
                    this._socket && 1 === this._socket.readyState ? this._socket.send(message) : (this._setToQueue(socketMessage), this._socketCreate());
                }
                async _socketReceive(event) {
                    let socketMessage;
                    try {
                        socketMessage = JSON.parse(event.data);
                    } catch (error) {
                        return;
                    }
                    if ((this._socketSend({ topic: socketMessage.topic, type: "ack", payload: "", silent: !0 }), this._socket && 1 === this._socket.readyState)) {
                        let events = this._events.filter((event) => "message" === event.event);
                        events && events.length && events.forEach((event) => event.callback(socketMessage));
                    }
                }
                _socketError(e) {
                    let events = this._events.filter((event) => "error" === event.event);
                    events && events.length && events.forEach((event) => event.callback(e));
                }
                _queueSubscriptions() {
                    let subscriptions = this._subscriptions;
                    subscriptions.forEach((topic) => this._queue.push({ topic: topic, type: "sub", payload: "", silent: !0 })), (this._subscriptions = this.opts.subscriptions || []);
                }
                _setToQueue(socketMessage) {
                    this._queue.push(socketMessage);
                }
                _pushQueue() {
                    let queue = this._queue;
                    queue.forEach((socketMessage) => this._socketSend(socketMessage)), (this._queue = []);
                }
            };
            let ERROR_SESSION_CONNECTED = "Session currently connected",
                ERROR_SESSION_DISCONNECTED = "Session currently disconnected",
                ERROR_INVALID_RESPONSE = "JSON RPC response format is invalid",
                ERROR_QRCODE_MODAL_USER_CLOSED = "User close QRCode Modal";
            var events = class {
                    constructor() {
                        this._eventEmitters = [];
                    }
                    subscribe(eventEmitter) {
                        this._eventEmitters.push(eventEmitter);
                    }
                    unsubscribe(event) {
                        this._eventEmitters = this._eventEmitters.filter((x) => x.event !== event);
                    }
                    trigger(payload) {
                        let event,
                            eventEmitters = [];
                        (event = void 0 !== payload.method ? payload.method : isJsonRpcResponseSuccess(payload) || isJsonRpcResponseError(payload) ? `response:${payload.id}` : isInternalEvent(payload) ? payload.event : "") &&
                            (eventEmitters = this._eventEmitters.filter((eventEmitter) => eventEmitter.event === event)),
                            (eventEmitters && eventEmitters.length) ||
                                reservedEvents.includes(event) ||
                                event.startsWith("wc_") ||
                                isInternalEvent(event) ||
                                (eventEmitters = this._eventEmitters.filter((eventEmitter) => "call_request" === eventEmitter.event)),
                            eventEmitters.forEach((eventEmitter) => {
                                if (isJsonRpcResponseError(payload)) {
                                    let error = Error(payload.error.message);
                                    eventEmitter.callback(error, null);
                                } else eventEmitter.callback(null, payload);
                            });
                    }
                },
                storage = class {
                    constructor(storageId = "walletconnect") {
                        this.storageId = storageId;
                    }
                    getSession() {
                        let session = null,
                            json = (0, esm.getLocal)(this.storageId);
                        return json && void 0 !== json.bridge && (session = json), session;
                    }
                    setSession(session) {
                        return (0, esm.setLocal)(this.storageId, session), session;
                    }
                    removeSession() {
                        (0, esm.removeLocal)(this.storageId);
                    }
                };
            let bridges = "abcdefghijklmnopqrstuvwxyz0123456789".split("").map((char) => `https://${char}.bridge.walletconnect.org`);
            var core_dist_esm = class {
                constructor(opts) {
                    if (
                        ((this.protocol = "wc"),
                        (this.version = 1),
                        (this._bridge = ""),
                        (this._key = null),
                        (this._clientId = ""),
                        (this._clientMeta = null),
                        (this._peerId = ""),
                        (this._peerMeta = null),
                        (this._handshakeId = 0),
                        (this._handshakeTopic = ""),
                        (this._connected = !1),
                        (this._accounts = []),
                        (this._chainId = 0),
                        (this._networkId = 0),
                        (this._rpcUrl = ""),
                        (this._eventManager = new events()),
                        (this._clientMeta = (0, esm.getClientMeta)() || opts.connectorOpts.clientMeta || null),
                        (this._cryptoLib = opts.cryptoLib),
                        (this._sessionStorage = opts.sessionStorage || new storage(opts.connectorOpts.storageId)),
                        (this._qrcodeModal = opts.connectorOpts.qrcodeModal),
                        (this._qrcodeModalOptions = opts.connectorOpts.qrcodeModalOptions),
                        (this._signingMethods = [...signingMethods, ...(opts.connectorOpts.signingMethods || [])]),
                        !opts.connectorOpts.bridge && !opts.connectorOpts.uri && !opts.connectorOpts.session)
                    )
                        throw Error("Missing one of the required parameters: bridge / uri / session");
                    if (opts.connectorOpts.bridge) {
                        var url, url1;
                        this.bridge =
                            "walletconnect.org" !== (0, (0, ((url1 = url = opts.connectorOpts.bridge).indexOf("//") > -1 ? url1.split("/")[2] : url1.split("/")[0]).split(":")[0]).split("?")[0]).split(".").slice(-2).join(".")
                                ? url
                                : bridges[Math.floor(Math.random() * bridges.length)];
                    }
                    opts.connectorOpts.uri && (this.uri = opts.connectorOpts.uri);
                    let session = opts.connectorOpts.session || this._getStorageSession();
                    session && (this.session = session),
                        this.handshakeId && this._subscribeToSessionResponse(this.handshakeId, "Session request rejected"),
                        (this._transport = opts.transport || new dist_esm({ protocol: this.protocol, version: this.version, url: this.bridge, subscriptions: [this.clientId] })),
                        this._subscribeToInternalEvents(),
                        this._initTransport(),
                        opts.connectorOpts.uri && this._subscribeToSessionRequest(),
                        opts.pushServerOpts && this._registerPushServer(opts.pushServerOpts);
                }
                set bridge(value) {
                    value && (this._bridge = value);
                }
                get bridge() {
                    return this._bridge;
                }
                set key(value) {
                    if (!value) return;
                    let key = hexToArray(value).buffer;
                    this._key = key;
                }
                get key() {
                    if (this._key) {
                        var arrBuf;
                        let key = ((arrBuf = this._key), arrayToHex(new Uint8Array(arrBuf), !1));
                        return key;
                    }
                    return "";
                }
                set clientId(value) {
                    value && (this._clientId = value);
                }
                get clientId() {
                    let clientId = this._clientId;
                    return clientId || (clientId = this._clientId = uuid()), this._clientId;
                }
                set peerId(value) {
                    value && (this._peerId = value);
                }
                get peerId() {
                    return this._peerId;
                }
                set clientMeta(value) {}
                get clientMeta() {
                    let clientMeta = this._clientMeta;
                    return clientMeta || (clientMeta = this._clientMeta = (0, esm.getClientMeta)()), clientMeta;
                }
                set peerMeta(value) {
                    this._peerMeta = value;
                }
                get peerMeta() {
                    let peerMeta = this._peerMeta;
                    return peerMeta;
                }
                set handshakeTopic(value) {
                    value && (this._handshakeTopic = value);
                }
                get handshakeTopic() {
                    return this._handshakeTopic;
                }
                set handshakeId(value) {
                    value && (this._handshakeId = value);
                }
                get handshakeId() {
                    return this._handshakeId;
                }
                get uri() {
                    let _uri = this._formatUri();
                    return _uri;
                }
                set uri(value) {
                    if (!value) return;
                    let { handshakeTopic, bridge, key } = this._parseUri(value);
                    (this.handshakeTopic = handshakeTopic), (this.bridge = bridge), (this.key = key);
                }
                set chainId(value) {
                    this._chainId = value;
                }
                get chainId() {
                    let chainId = this._chainId;
                    return chainId;
                }
                set networkId(value) {
                    this._networkId = value;
                }
                get networkId() {
                    let networkId = this._networkId;
                    return networkId;
                }
                set accounts(value) {
                    this._accounts = value;
                }
                get accounts() {
                    let accounts = this._accounts;
                    return accounts;
                }
                set rpcUrl(value) {
                    this._rpcUrl = value;
                }
                get rpcUrl() {
                    let rpcUrl = this._rpcUrl;
                    return rpcUrl;
                }
                set connected(value) {}
                get connected() {
                    return this._connected;
                }
                set pending(value) {}
                get pending() {
                    return !!this._handshakeTopic;
                }
                get session() {
                    return {
                        connected: this.connected,
                        accounts: this.accounts,
                        chainId: this.chainId,
                        bridge: this.bridge,
                        key: this.key,
                        clientId: this.clientId,
                        clientMeta: this.clientMeta,
                        peerId: this.peerId,
                        peerMeta: this.peerMeta,
                        handshakeId: this.handshakeId,
                        handshakeTopic: this.handshakeTopic,
                    };
                }
                set session(value) {
                    value &&
                        ((this._connected = value.connected),
                        (this.accounts = value.accounts),
                        (this.chainId = value.chainId),
                        (this.bridge = value.bridge),
                        (this.key = value.key),
                        (this.clientId = value.clientId),
                        (this.clientMeta = value.clientMeta),
                        (this.peerId = value.peerId),
                        (this.peerMeta = value.peerMeta),
                        (this.handshakeId = value.handshakeId),
                        (this.handshakeTopic = value.handshakeTopic));
                }
                on(event, callback) {
                    this._eventManager.subscribe({ event, callback });
                }
                off(event) {
                    this._eventManager.unsubscribe(event);
                }
                async createInstantRequest(instantRequest) {
                    this._key = await this._generateKey();
                    let request = this._formatRequest({ method: "wc_instantRequest", params: [{ peerId: this.clientId, peerMeta: this.clientMeta, request: this._formatRequest(instantRequest) }] });
                    (this.handshakeId = request.id),
                        (this.handshakeTopic = uuid()),
                        this._eventManager.trigger({ event: "display_uri", params: [this.uri] }),
                        this.on("modal_closed", () => {
                            throw Error(ERROR_QRCODE_MODAL_USER_CLOSED);
                        });
                    let endInstantRequest = () => {
                        this.killSession();
                    };
                    try {
                        let result = await this._sendCallRequest(request);
                        return result && endInstantRequest(), result;
                    } catch (error) {
                        throw (endInstantRequest(), error);
                    }
                }
                async connect(opts) {
                    if (!this._qrcodeModal) throw Error("QRCode Modal not provided");
                    return this.connected
                        ? { chainId: this.chainId, accounts: this.accounts }
                        : (await this.createSession(opts),
                          new Promise(async (resolve, reject) => {
                              this.on("modal_closed", () => reject(Error(ERROR_QRCODE_MODAL_USER_CLOSED))),
                                  this.on("connect", (error, payload) => {
                                      if (error) return reject(error);
                                      resolve(payload.params[0]);
                                  });
                          }));
                }
                async createSession(opts) {
                    if (this._connected) throw Error(ERROR_SESSION_CONNECTED);
                    if (this.pending) return;
                    this._key = await this._generateKey();
                    let request = this._formatRequest({ method: "wc_sessionRequest", params: [{ peerId: this.clientId, peerMeta: this.clientMeta, chainId: opts && opts.chainId ? opts.chainId : null }] });
                    (this.handshakeId = request.id),
                        (this.handshakeTopic = uuid()),
                        this._sendSessionRequest(request, "Session update rejected", { topic: this.handshakeTopic }),
                        this._eventManager.trigger({ event: "display_uri", params: [this.uri] });
                }
                approveSession(sessionStatus) {
                    if (this._connected) throw Error(ERROR_SESSION_CONNECTED);
                    (this.chainId = sessionStatus.chainId), (this.accounts = sessionStatus.accounts), (this.networkId = sessionStatus.networkId || 0), (this.rpcUrl = sessionStatus.rpcUrl || "");
                    let sessionParams = { approved: !0, chainId: this.chainId, networkId: this.networkId, accounts: this.accounts, rpcUrl: this.rpcUrl, peerId: this.clientId, peerMeta: this.clientMeta },
                        response = { id: this.handshakeId, jsonrpc: "2.0", result: sessionParams };
                    this._sendResponse(response),
                        (this._connected = !0),
                        this._setStorageSession(),
                        this._eventManager.trigger({ event: "connect", params: [{ peerId: this.peerId, peerMeta: this.peerMeta, chainId: this.chainId, accounts: this.accounts }] });
                }
                rejectSession(sessionError) {
                    if (this._connected) throw Error(ERROR_SESSION_CONNECTED);
                    let message = sessionError && sessionError.message ? sessionError.message : "Session Rejected",
                        response = this._formatResponse({ id: this.handshakeId, error: { message } });
                    this._sendResponse(response), (this._connected = !1), this._eventManager.trigger({ event: "disconnect", params: [{ message }] }), this._removeStorageSession();
                }
                updateSession(sessionStatus) {
                    if (!this._connected) throw Error(ERROR_SESSION_DISCONNECTED);
                    (this.chainId = sessionStatus.chainId), (this.accounts = sessionStatus.accounts), (this.networkId = sessionStatus.networkId || 0), (this.rpcUrl = sessionStatus.rpcUrl || "");
                    let sessionParams = { approved: !0, chainId: this.chainId, networkId: this.networkId, accounts: this.accounts, rpcUrl: this.rpcUrl },
                        request = this._formatRequest({ method: "wc_sessionUpdate", params: [sessionParams] });
                    this._sendSessionRequest(request, "Session update rejected"), this._eventManager.trigger({ event: "session_update", params: [{ chainId: this.chainId, accounts: this.accounts }] }), this._manageStorageSession();
                }
                async killSession(sessionError) {
                    let message = sessionError ? sessionError.message : "Session Disconnected",
                        request = this._formatRequest({ method: "wc_sessionUpdate", params: [{ approved: !1, chainId: null, networkId: null, accounts: null }] });
                    await this._sendRequest(request), this._handleSessionDisconnect(message);
                }
                async sendTransaction(tx) {
                    if (!this._connected) throw Error(ERROR_SESSION_DISCONNECTED);
                    let parsedTx = parseTransactionData(tx),
                        request = this._formatRequest({ method: "eth_sendTransaction", params: [parsedTx] }),
                        result = await this._sendCallRequest(request);
                    return result;
                }
                async signTransaction(tx) {
                    if (!this._connected) throw Error(ERROR_SESSION_DISCONNECTED);
                    let parsedTx = parseTransactionData(tx),
                        request = this._formatRequest({ method: "eth_signTransaction", params: [parsedTx] }),
                        result = await this._sendCallRequest(request);
                    return result;
                }
                async signMessage(params) {
                    if (!this._connected) throw Error(ERROR_SESSION_DISCONNECTED);
                    let request = this._formatRequest({ method: "eth_sign", params }),
                        result = await this._sendCallRequest(request);
                    return result;
                }
                async signPersonalMessage(params) {
                    if (!this._connected) throw Error(ERROR_SESSION_DISCONNECTED);
                    params = parsePersonalSign(params);
                    let request = this._formatRequest({ method: "personal_sign", params }),
                        result = await this._sendCallRequest(request);
                    return result;
                }
                async signTypedData(params) {
                    if (!this._connected) throw Error(ERROR_SESSION_DISCONNECTED);
                    let request = this._formatRequest({ method: "eth_signTypedData", params }),
                        result = await this._sendCallRequest(request);
                    return result;
                }
                async updateChain(chainParams) {
                    if (!this._connected) throw Error("Session currently disconnected");
                    let request = this._formatRequest({ method: "wallet_updateChain", params: [chainParams] }),
                        result = await this._sendCallRequest(request);
                    return result;
                }
                unsafeSend(request, options) {
                    return (
                        this._sendRequest(request, options),
                        this._eventManager.trigger({ event: "call_request_sent", params: [{ request, options }] }),
                        new Promise((resolve, reject) => {
                            this._subscribeToResponse(request.id, (error, payload) => {
                                if (error) {
                                    reject(error);
                                    return;
                                }
                                if (!payload) throw Error("Missing JSON RPC response");
                                resolve(payload);
                            });
                        })
                    );
                }
                async sendCustomRequest(request, options) {
                    if (!this._connected) throw Error(ERROR_SESSION_DISCONNECTED);
                    switch (request.method) {
                        case "eth_accounts":
                            return this.accounts;
                        case "eth_chainId":
                            return convertNumberToHex(this.chainId);
                        case "eth_sendTransaction":
                        case "eth_signTransaction":
                            request.params && (request.params[0] = parseTransactionData(request.params[0]));
                            break;
                        case "personal_sign":
                            request.params && (request.params = parsePersonalSign(request.params));
                    }
                    let formattedRequest = this._formatRequest(request),
                        result = await this._sendCallRequest(formattedRequest, options);
                    return result;
                }
                approveRequest(response) {
                    if (isJsonRpcResponseSuccess(response)) {
                        let formattedResponse = this._formatResponse(response);
                        this._sendResponse(formattedResponse);
                    } else throw Error('JSON-RPC success response must include "result" field');
                }
                rejectRequest(response) {
                    if (isJsonRpcResponseError(response)) {
                        let formattedResponse = this._formatResponse(response);
                        this._sendResponse(formattedResponse);
                    } else throw Error('JSON-RPC error response must include "error" field');
                }
                transportClose() {
                    this._transport.close();
                }
                async _sendRequest(request, options) {
                    let callRequest = this._formatRequest(request),
                        encryptionPayload = await this._encrypt(callRequest),
                        topic = void 0 !== (null == options ? void 0 : options.topic) ? options.topic : this.peerId,
                        payload = JSON.stringify(encryptionPayload),
                        silent = void 0 !== (null == options ? void 0 : options.forcePushNotification) ? !options.forcePushNotification : !!callRequest.method.startsWith("wc_") || !signingMethods.includes(callRequest.method);
                    this._transport.send(payload, topic, silent);
                }
                async _sendResponse(response) {
                    let encryptionPayload = await this._encrypt(response),
                        topic = this.peerId,
                        payload = JSON.stringify(encryptionPayload);
                    this._transport.send(payload, topic, !0);
                }
                async _sendSessionRequest(request, errorMsg, options) {
                    this._sendRequest(request, options), this._subscribeToSessionResponse(request.id, errorMsg);
                }
                _sendCallRequest(request, options) {
                    return this._sendRequest(request, options), this._eventManager.trigger({ event: "call_request_sent", params: [{ request, options }] }), this._subscribeToCallResponse(request.id);
                }
                _formatRequest(request) {
                    if (void 0 === request.method) throw Error('JSON RPC request must have valid "method" value');
                    let formattedRequest = { id: void 0 === request.id ? misc_payloadId() : request.id, jsonrpc: "2.0", method: request.method, params: void 0 === request.params ? [] : request.params };
                    return formattedRequest;
                }
                _formatResponse(response) {
                    if (void 0 === response.id) throw Error('JSON RPC request must have valid "id" value');
                    let baseResponse = { id: response.id, jsonrpc: "2.0" };
                    if (isJsonRpcResponseError(response)) {
                        let error = (function (error) {
                                let message = error.message || "Failed or Rejected Request",
                                    code = -32e3;
                                if (error && !error.code)
                                    switch (message) {
                                        case "Parse error":
                                            code = -32700;
                                            break;
                                        case "Invalid request":
                                            code = -32600;
                                            break;
                                        case "Method not found":
                                            code = -32601;
                                            break;
                                        case "Invalid params":
                                            code = -32602;
                                            break;
                                        case "Internal error":
                                            code = -32603;
                                            break;
                                        default:
                                            code = -32e3;
                                    }
                                let result = { code, message };
                                return error.data && (result.data = error.data), result;
                            })(response.error),
                            errorResponse = Object.assign(Object.assign(Object.assign({}, baseResponse), response), { error });
                        return errorResponse;
                    }
                    if (isJsonRpcResponseSuccess(response)) {
                        let successResponse = Object.assign(Object.assign({}, baseResponse), response);
                        return successResponse;
                    }
                    throw Error(ERROR_INVALID_RESPONSE);
                }
                _handleSessionDisconnect(errorMsg) {
                    this._connected || (this._qrcodeModal && this._qrcodeModal.close(), (0, esm.removeLocal)(esm.mobileLinkChoiceKey)),
                        this._connected && (this._connected = !1),
                        this._handshakeId && (this._handshakeId = 0),
                        this._handshakeTopic && (this._handshakeTopic = ""),
                        this._peerId && (this._peerId = ""),
                        this._eventManager.trigger({ event: "disconnect", params: [{ message: errorMsg || "Session Disconnected" }] }),
                        this._removeStorageSession(),
                        this.transportClose();
                }
                _handleSessionResponse(errorMsg, sessionParams) {
                    sessionParams && sessionParams.approved
                        ? (this._connected
                              ? (sessionParams.chainId && (this.chainId = sessionParams.chainId),
                                sessionParams.accounts && (this.accounts = sessionParams.accounts),
                                this._eventManager.trigger({ event: "session_update", params: [{ chainId: this.chainId, accounts: this.accounts }] }))
                              : ((this._connected = !0),
                                sessionParams.chainId && (this.chainId = sessionParams.chainId),
                                sessionParams.accounts && (this.accounts = sessionParams.accounts),
                                sessionParams.peerId && !this.peerId && (this.peerId = sessionParams.peerId),
                                sessionParams.peerMeta && !this.peerMeta && (this.peerMeta = sessionParams.peerMeta),
                                this._eventManager.trigger({ event: "connect", params: [{ peerId: this.peerId, peerMeta: this.peerMeta, chainId: this.chainId, accounts: this.accounts }] })),
                          this._manageStorageSession())
                        : this._handleSessionDisconnect(errorMsg);
                }
                async _handleIncomingMessages(socketMessage) {
                    let encryptionPayload;
                    let activeTopics = [this.clientId, this.handshakeTopic];
                    if (!activeTopics.includes(socketMessage.topic)) return;
                    try {
                        encryptionPayload = JSON.parse(socketMessage.payload);
                    } catch (error) {
                        return;
                    }
                    let payload = await this._decrypt(encryptionPayload);
                    payload && this._eventManager.trigger(payload);
                }
                _subscribeToSessionRequest() {
                    this._transport.subscribe(this.handshakeTopic);
                }
                _subscribeToResponse(id, callback) {
                    this.on(`response:${id}`, callback);
                }
                _subscribeToSessionResponse(id, errorMsg) {
                    this._subscribeToResponse(id, (error, payload) => {
                        if (error) {
                            this._handleSessionResponse(error.message);
                            return;
                        }
                        isJsonRpcResponseSuccess(payload)
                            ? this._handleSessionResponse(errorMsg, payload.result)
                            : payload.error && payload.error.message
                            ? this._handleSessionResponse(payload.error.message)
                            : this._handleSessionResponse(errorMsg);
                    });
                }
                _subscribeToCallResponse(id) {
                    return new Promise((resolve, reject) => {
                        this._subscribeToResponse(id, (error, payload) => {
                            if (error) {
                                reject(error);
                                return;
                            }
                            isJsonRpcResponseSuccess(payload) ? resolve(payload.result) : payload.error && payload.error.message ? reject(payload.error) : reject(Error(ERROR_INVALID_RESPONSE));
                        });
                    });
                }
                _subscribeToInternalEvents() {
                    this.on("display_uri", () => {
                        this._qrcodeModal &&
                            this._qrcodeModal.open(
                                this.uri,
                                () => {
                                    this._eventManager.trigger({ event: "modal_closed", params: [] });
                                },
                                this._qrcodeModalOptions
                            );
                    }),
                        this.on("connect", () => {
                            this._qrcodeModal && this._qrcodeModal.close();
                        }),
                        this.on("call_request_sent", (error, payload) => {
                            let { request } = payload.params[0];
                            if ((0, esm.isMobile)() && this._signingMethods.includes(request.method)) {
                                let mobileLinkUrl = (0, esm.getLocal)(esm.mobileLinkChoiceKey);
                                mobileLinkUrl && (window.location.href = mobileLinkUrl.href);
                            }
                        }),
                        this.on("wc_sessionRequest", (error, payload) => {
                            error && this._eventManager.trigger({ event: "error", params: [{ code: "SESSION_REQUEST_ERROR", message: error.toString() }] }),
                                (this.handshakeId = payload.id),
                                (this.peerId = payload.params[0].peerId),
                                (this.peerMeta = payload.params[0].peerMeta);
                            let internalPayload = Object.assign(Object.assign({}, payload), { method: "session_request" });
                            this._eventManager.trigger(internalPayload);
                        }),
                        this.on("wc_sessionUpdate", (error, payload) => {
                            error && this._handleSessionResponse(error.message), this._handleSessionResponse("Session disconnected", payload.params[0]);
                        });
                }
                _initTransport() {
                    this._transport.on("message", (socketMessage) => this._handleIncomingMessages(socketMessage)),
                        this._transport.on("open", () => this._eventManager.trigger({ event: "transport_open", params: [] })),
                        this._transport.on("close", () => this._eventManager.trigger({ event: "transport_close", params: [] })),
                        this._transport.on("error", () => this._eventManager.trigger({ event: "transport_error", params: ["Websocket connection failed"] })),
                        this._transport.open();
                }
                _formatUri() {
                    let protocol = this.protocol,
                        handshakeTopic = this.handshakeTopic,
                        version = this.version,
                        bridge = encodeURIComponent(this.bridge),
                        key = this.key,
                        uri = `${protocol}:${handshakeTopic}@${version}?bridge=${bridge}&key=${key}`;
                    return uri;
                }
                _parseUri(uri) {
                    let result = (function (str) {
                        let pathStart = str.indexOf(":"),
                            pathEnd = -1 !== str.indexOf("?") ? str.indexOf("?") : void 0,
                            protocol = str.substring(0, pathStart),
                            path = str.substring(pathStart + 1, pathEnd),
                            requiredParams = (function (path) {
                                let values = path.split("@"),
                                    requiredParams = { handshakeTopic: values[0], version: parseInt(values[1], 10) };
                                return requiredParams;
                            })(path),
                            queryString = void 0 !== pathEnd ? str.substr(pathEnd) : "",
                            queryParams = (function (queryString) {
                                let result = query_string.parse(queryString),
                                    parameters = { key: result.key || "", bridge: result.bridge || "" };
                                return parameters;
                            })(queryString),
                            result = Object.assign(Object.assign({ protocol }, requiredParams), queryParams);
                        return result;
                    })(uri);
                    if (result.protocol === this.protocol) {
                        if (!result.handshakeTopic) throw Error("Invalid or missing handshakeTopic parameter value");
                        let handshakeTopic = result.handshakeTopic;
                        if (!result.bridge) throw Error("Invalid or missing bridge url parameter value");
                        let bridge = decodeURIComponent(result.bridge);
                        if (!result.key) throw Error("Invalid or missing key parameter value");
                        let key = result.key;
                        return { handshakeTopic, bridge, key };
                    }
                    throw Error("URI format is invalid");
                }
                async _generateKey() {
                    if (this._cryptoLib) {
                        let result = await this._cryptoLib.generateKey();
                        return result;
                    }
                    return null;
                }
                async _encrypt(data) {
                    let key = this._key;
                    if (this._cryptoLib && key) {
                        let result = await this._cryptoLib.encrypt(data, key);
                        return result;
                    }
                    return null;
                }
                async _decrypt(payload) {
                    let key = this._key;
                    if (this._cryptoLib && key) {
                        let result = await this._cryptoLib.decrypt(payload, key);
                        return result;
                    }
                    return null;
                }
                _getStorageSession() {
                    let result = null;
                    return this._sessionStorage && (result = this._sessionStorage.getSession()), result;
                }
                _setStorageSession() {
                    this._sessionStorage && this._sessionStorage.setSession(this.session);
                }
                _removeStorageSession() {
                    this._sessionStorage && this._sessionStorage.removeSession();
                }
                _manageStorageSession() {
                    this._connected ? this._setStorageSession() : this._removeStorageSession();
                }
                _registerPushServer(pushServerOpts) {
                    if (!pushServerOpts.url || "string" != typeof pushServerOpts.url) throw Error("Invalid or missing pushServerOpts.url parameter value");
                    if (!pushServerOpts.type || "string" != typeof pushServerOpts.type) throw Error("Invalid or missing pushServerOpts.type parameter value");
                    if (!pushServerOpts.token || "string" != typeof pushServerOpts.token) throw Error("Invalid or missing pushServerOpts.token parameter value");
                    let pushSubscription = { bridge: this.bridge, topic: this.clientId, type: pushServerOpts.type, token: pushServerOpts.token, peerName: "", language: pushServerOpts.language || "" };
                    this.on("connect", async (error, payload) => {
                        if (error) throw error;
                        if (pushServerOpts.peerMeta) {
                            let peerName = payload.params[0].peerMeta.name;
                            pushSubscription.peerName = peerName;
                        }
                        try {
                            let response = await fetch(`${pushServerOpts.url}/new`, { method: "POST", headers: { Accept: "application/json", "Content-Type": "application/json" }, body: JSON.stringify(pushSubscription) }),
                                json = await response.json();
                            if (!json.success) throw Error("Failed to register in Push Server");
                        } catch (error1) {
                            throw Error("Failed to register in Push Server");
                        }
                    });
                }
            };
            let default_AES_BROWSER_ALGO = "AES-CBC",
                default_HMAC_BROWSER = "HMAC";
            async function browserImportKey(buffer, type = default_AES_BROWSER_ALGO) {
                return cjs
                    .getSubtleCrypto()
                    .importKey(
                        "raw",
                        buffer,
                        type === default_AES_BROWSER_ALGO ? { length: 256, name: default_AES_BROWSER_ALGO } : { hash: { name: "SHA-256" }, name: default_HMAC_BROWSER },
                        !0,
                        type === default_AES_BROWSER_ALGO ? ["encrypt", "decrypt"] : ["sign", "verify"]
                    );
            }
            async function browserAesEncrypt(iv, key, data) {
                let subtle = cjs.getSubtleCrypto(),
                    cryptoKey = await browserImportKey(key, default_AES_BROWSER_ALGO),
                    result = await subtle.encrypt({ iv, name: default_AES_BROWSER_ALGO }, cryptoKey, data);
                return new Uint8Array(result);
            }
            async function browserAesDecrypt(iv, key, data) {
                let subtle = cjs.getSubtleCrypto(),
                    cryptoKey = await browserImportKey(key, default_AES_BROWSER_ALGO),
                    result = await subtle.decrypt({ iv, name: default_AES_BROWSER_ALGO }, cryptoKey, data);
                return new Uint8Array(result);
            }
            async function browser_browserHmacSha256Sign(key, data) {
                let subtle = cjs.getSubtleCrypto(),
                    cryptoKey = await browserImportKey(key, default_HMAC_BROWSER),
                    signature = await subtle.sign({ length: 256, name: default_HMAC_BROWSER }, cryptoKey, data);
                return new Uint8Array(signature);
            }
            async function hmacSha256Sign(key, msg) {
                let result = await browser_browserHmacSha256Sign(key, msg);
                return result;
            }
            async function generateKey(length) {
                let bytes = (function (length) {
                        let browserCrypto = cjs.getBrowerCrypto();
                        return browserCrypto.getRandomValues(new Uint8Array(length));
                    })((length || 256) / 8),
                    result = bufferToArray(typedarray_to_buffer_default()(bytes)).buffer;
                return result;
            }
            async function verifyHmac(payload, key) {
                let cipherText = hexToArray(payload.data),
                    iv = hexToArray(payload.iv),
                    hmac = hexToArray(payload.hmac),
                    hmacHex = arrayToHex(hmac, !1),
                    unsigned = concatArrays(cipherText, iv),
                    chmac = await hmacSha256Sign(key, unsigned),
                    chmacHex = arrayToHex(chmac, !1);
                return removeHexPrefix(hmacHex) === removeHexPrefix(chmacHex);
            }
            async function encrypt(data, key, providedIv) {
                let _key = bufferToArray(convertArrayBufferToBuffer(key)),
                    ivArrayBuffer = providedIv || (await generateKey(128)),
                    iv = bufferToArray(convertArrayBufferToBuffer(ivArrayBuffer)),
                    ivHex = arrayToHex(iv, !1),
                    contentString = JSON.stringify(data),
                    content = bufferToArray(utf8ToBuffer(contentString)),
                    cipherText = await browserAesEncrypt(iv, _key, content),
                    cipherTextHex = arrayToHex(cipherText, !1),
                    unsigned = concatArrays(cipherText, iv),
                    hmac = await hmacSha256Sign(_key, unsigned),
                    hmacHex = arrayToHex(hmac, !1);
                return { data: cipherTextHex, hmac: hmacHex, iv: ivHex };
            }
            async function decrypt(payload, key) {
                var arr;
                let data;
                let _key = bufferToArray(convertArrayBufferToBuffer(key));
                if (!_key) throw Error("Missing key: required for decryption");
                let verified = await verifyHmac(payload, _key);
                if (!verified) return null;
                let cipherText = hexToArray(payload.data),
                    iv = hexToArray(payload.iv),
                    buffer = await browserAesDecrypt(iv, _key, cipherText),
                    utf8 = ((arr = buffer), typedarray_to_buffer_default()(arr).toString(ENC_UTF8));
                try {
                    data = JSON.parse(utf8);
                } catch (error) {
                    return null;
                }
                return data;
            }
            var client_dist_esm = class extends core_dist_esm {
                    constructor(connectorOpts, pushServerOpts) {
                        super({ cryptoLib: iso_crypto_dist_esm_namespaceObject, connectorOpts, pushServerOpts });
                    }
                },
                dist_cjs = __webpack_require__(4337),
                dist_cjs_default = __webpack_require__.n(dist_cjs),
                eventemitter3 = __webpack_require__(26729),
                eventemitter3_default = __webpack_require__.n(eventemitter3),
                dist = __webpack_require__(59536);
            let XHR = (0, esm.getFromWindow)("XMLHttpRequest") || dist.XMLHttpRequest;
            class HTTPConnection extends eventemitter3_default() {
                constructor(url) {
                    super(), (this.url = url);
                }
                formatError(payload, message, code = -1) {
                    return { error: { message, code }, id: payload.id, jsonrpc: payload.jsonrpc };
                }
                send(payload, internal) {
                    return new Promise((resolve) => {
                        if ("eth_subscribe" === payload.method) {
                            let error = this.formatError(payload, "Subscriptions are not supported by this HTTP endpoint");
                            return this.emit("error", error), resolve(error);
                        }
                        let xhr = new XHR(),
                            responded = !1,
                            res = (err, result) => {
                                if (!responded) {
                                    if ((xhr.abort(), (responded = !0), internal)) internal(err, result);
                                    else {
                                        let { id, jsonrpc } = payload,
                                            response = err ? { id, jsonrpc, error: { message: err.message, code: err.code } } : { id, jsonrpc, result };
                                        this.emit("payload", response), resolve(response);
                                    }
                                }
                            };
                        xhr.open("POST", this.url, !0),
                            xhr.setRequestHeader("Content-Type", "application/json"),
                            (xhr.timeout = 6e4),
                            (xhr.onerror = res),
                            (xhr.ontimeout = res),
                            (xhr.onreadystatechange = () => {
                                if (4 === xhr.readyState)
                                    try {
                                        let response = JSON.parse(xhr.responseText);
                                        res(response.error, response.result);
                                    } catch (e) {
                                        res(e);
                                    }
                            }),
                            xhr.send(JSON.stringify(payload));
                    });
                }
            }
            let ProviderEngine = __webpack_require__(12906),
                CacheSubprovider = __webpack_require__(41955),
                FixtureSubprovider = __webpack_require__(2110),
                FilterSubprovider = __webpack_require__(28260),
                HookedWalletSubprovider = __webpack_require__(78747),
                NonceSubprovider = __webpack_require__(3621),
                SubscriptionsSubprovider = __webpack_require__(78191);
            var web3_provider_dist_esm = class extends ProviderEngine {
                constructor(opts) {
                    if (
                        (super({ pollingInterval: opts.pollingInterval || 8e3 }),
                        (this.bridge = "https://bridge.walletconnect.org"),
                        (this.qrcode = !0),
                        (this.qrcodeModal = dist_cjs_default()),
                        (this.qrcodeModalOptions = void 0),
                        (this.rpc = null),
                        (this.infuraId = ""),
                        (this.http = null),
                        (this.isConnecting = !1),
                        (this.connected = !1),
                        (this.connectCallbacks = []),
                        (this.accounts = []),
                        (this.chainId = 1),
                        (this.rpcUrl = ""),
                        (this.enable = async () => {
                            let wc = await this.getWalletConnector();
                            if (wc) return this.start(), this.subscribeWalletConnector(), wc.accounts;
                            throw Error("Failed to connect to WalleConnect");
                        }),
                        (this.request = async (payload) => this.send(payload)),
                        (this.send = async (payload, callback) => {
                            var _a;
                            if ("string" == typeof payload) {
                                let method = payload,
                                    params = callback;
                                return "personal_sign" === method && (params = parsePersonalSign(params)), this.sendAsyncPromise(method, params);
                            }
                            if (("personal_sign" === (payload = Object.assign({ id: misc_payloadId(), jsonrpc: "2.0" }, payload)).method && (payload.params = parsePersonalSign(payload.params)), callback)) {
                                this.sendAsync(payload, callback);
                                return;
                            }
                            if ("eth_signTypedData_v4" !== payload.method || (null === (_a = this.walletMeta) || void 0 === _a ? void 0 : _a.name) !== "MetaMask") return this.sendAsyncPromise(payload.method, payload.params);
                            {
                                let { result } = await this.handleOtherRequests(payload);
                                return result;
                            }
                        }),
                        (this.onConnect = (callback) => {
                            this.connectCallbacks.push(callback);
                        }),
                        (this.triggerConnect = (result) => {
                            this.connectCallbacks && this.connectCallbacks.length && this.connectCallbacks.forEach((callback) => callback(result));
                        }),
                        (this.bridge = opts.connector ? opts.connector.bridge : opts.bridge || "https://bridge.walletconnect.org"),
                        (this.qrcode = void 0 === opts.qrcode || !1 !== opts.qrcode),
                        (this.qrcodeModal = opts.qrcodeModal || this.qrcodeModal),
                        (this.qrcodeModalOptions = opts.qrcodeModalOptions),
                        (this.wc =
                            opts.connector ||
                            new client_dist_esm({
                                bridge: this.bridge,
                                qrcodeModal: this.qrcode ? this.qrcodeModal : void 0,
                                qrcodeModalOptions: this.qrcodeModalOptions,
                                storageId: null == opts ? void 0 : opts.storageId,
                                signingMethods: null == opts ? void 0 : opts.signingMethods,
                                clientMeta: null == opts ? void 0 : opts.clientMeta,
                            })),
                        (this.rpc = opts.rpc || null),
                        !this.rpc && (!opts.infuraId || "string" != typeof opts.infuraId || !opts.infuraId.trim()))
                    )
                        throw Error("Missing one of the required parameters: rpc or infuraId");
                    (this.infuraId = opts.infuraId || ""), (this.chainId = (null == opts ? void 0 : opts.chainId) || this.chainId), this.initialize();
                }
                get isWalletConnect() {
                    return !0;
                }
                get connector() {
                    return this.wc;
                }
                get walletMeta() {
                    return this.wc.peerMeta;
                }
                async disconnect() {
                    this.close();
                }
                async close() {
                    let wc = await this.getWalletConnector({ disableSessionCreation: !0 });
                    await wc.killSession(), await this.onDisconnect();
                }
                async handleRequest(payload) {
                    try {
                        let response;
                        let result = null,
                            wc = await this.getWalletConnector();
                        switch (payload.method) {
                            case "wc_killSession":
                                await this.close(), (result = null);
                                break;
                            case "eth_accounts":
                                result = wc.accounts;
                                break;
                            case "eth_coinbase":
                                result = wc.accounts[0];
                                break;
                            case "eth_chainId":
                            case "net_version":
                                result = wc.chainId;
                                break;
                            case "eth_uninstallFilter":
                                this.sendAsync(payload, (_) => _), (result = !0);
                                break;
                            default:
                                response = await this.handleOtherRequests(payload);
                        }
                        if (response) return response;
                        return this.formatResponse(payload, result);
                    } catch (error) {
                        throw (this.emit("error", error), error);
                    }
                }
                async handleOtherRequests(payload) {
                    if (!signingMethods.includes(payload.method) && payload.method.startsWith("eth_")) return this.handleReadRequests(payload);
                    let wc = await this.getWalletConnector(),
                        result = await wc.sendCustomRequest(payload);
                    return this.formatResponse(payload, result);
                }
                async handleReadRequests(payload) {
                    if (!this.http) {
                        let error = Error("HTTP Connection not available");
                        throw (this.emit("error", error), error);
                    }
                    return this.http.send(payload);
                }
                formatResponse(payload, result) {
                    return { id: payload.id, jsonrpc: payload.jsonrpc, result: result };
                }
                getWalletConnector(opts = {}) {
                    let { disableSessionCreation = !1 } = opts;
                    return new Promise((resolve, reject) => {
                        let wc = this.wc;
                        this.isConnecting
                            ? this.onConnect((x) => resolve(x))
                            : wc.connected || disableSessionCreation
                            ? (this.connected || ((this.connected = !0), this.updateState(wc.session)), resolve(wc))
                            : ((this.isConnecting = !0),
                              wc.on("modal_closed", () => {
                                  reject(Error("User closed modal"));
                              }),
                              wc
                                  .createSession({ chainId: this.chainId })
                                  .then(() => {
                                      wc.on("connect", (error, payload) => {
                                          if (error) return (this.isConnecting = !1), reject(error);
                                          (this.isConnecting = !1), (this.connected = !0), payload && this.updateState(payload.params[0]), this.emit("connect"), this.triggerConnect(wc), resolve(wc);
                                      });
                                  })
                                  .catch((error) => {
                                      (this.isConnecting = !1), reject(error);
                                  }));
                    });
                }
                async subscribeWalletConnector() {
                    let wc = await this.getWalletConnector();
                    wc.on("disconnect", (error) => {
                        if (error) {
                            this.emit("error", error);
                            return;
                        }
                        this.onDisconnect();
                    }),
                        wc.on("session_update", (error, payload) => {
                            if (error) {
                                this.emit("error", error);
                                return;
                            }
                            this.updateState(payload.params[0]);
                        });
                }
                async onDisconnect() {
                    await this.stop(), this.emit("close", 1e3, "Connection closed"), this.emit("disconnect", 1e3, "Connection disconnected"), (this.connected = !1);
                }
                async updateState(sessionParams) {
                    let { accounts, chainId, networkId, rpcUrl } = sessionParams;
                    (!this.accounts || (accounts && this.accounts !== accounts)) && ((this.accounts = accounts), this.emit("accountsChanged", accounts)),
                        (!this.chainId || (chainId && this.chainId !== chainId)) && ((this.chainId = chainId), this.emit("chainChanged", chainId)),
                        (!this.networkId || (networkId && this.networkId !== networkId)) && ((this.networkId = networkId), this.emit("networkChanged", networkId)),
                        this.updateRpcUrl(this.chainId, rpcUrl || "");
                }
                updateRpcUrl(chainId, rpcUrl = "") {
                    let rpc = { infuraId: this.infuraId, custom: this.rpc || void 0 };
                    (rpcUrl =
                        rpcUrl ||
                        (function (chainId, rpc) {
                            let rpcUrl;
                            let infuraUrl = (function (chainId, infuraId) {
                                let rpcUrl;
                                let network = infuraNetworks[chainId];
                                return network && (rpcUrl = `https://${network}.infura.io/v3/${infuraId}`), rpcUrl;
                            })(chainId, rpc.infuraId);
                            return rpc.custom && rpc.custom[chainId] ? (rpcUrl = rpc.custom[chainId]) : infuraUrl && (rpcUrl = infuraUrl), rpcUrl;
                        })(chainId, rpc))
                        ? ((this.rpcUrl = rpcUrl), this.updateHttpConnection())
                        : this.emit("error", Error(`No RPC Url available for chainId: ${chainId}`));
                }
                updateHttpConnection() {
                    this.rpcUrl && ((this.http = new HTTPConnection(this.rpcUrl)), this.http.on("payload", (payload) => this.emit("payload", payload)), this.http.on("error", (error) => this.emit("error", error)));
                }
                sendAsyncPromise(method, params) {
                    return new Promise((resolve, reject) => {
                        this.sendAsync({ id: misc_payloadId(), jsonrpc: "2.0", method, params: params || [] }, (error, response) => {
                            if (error) {
                                reject(error);
                                return;
                            }
                            resolve(response.result);
                        });
                    });
                }
                initialize() {
                    this.updateRpcUrl(this.chainId),
                        this.addProvider(new FixtureSubprovider({ eth_hashrate: "0x00", eth_mining: !1, eth_syncing: !0, net_listening: !0, web3_clientVersion: "WalletConnect/v1.x.x/javascript" })),
                        this.addProvider(new CacheSubprovider()),
                        this.addProvider(new SubscriptionsSubprovider()),
                        this.addProvider(new FilterSubprovider()),
                        this.addProvider(new NonceSubprovider()),
                        this.addProvider(new HookedWalletSubprovider(this.configWallet())),
                        this.addProvider({
                            handleRequest: async (payload, next, end) => {
                                try {
                                    let { error, result } = await this.handleRequest(payload);
                                    end(error, result);
                                } catch (error1) {
                                    end(error1);
                                }
                            },
                            setEngine: (_) => _,
                        });
                }
                configWallet() {
                    return {
                        getAccounts: async (cb) => {
                            try {
                                let wc = await this.getWalletConnector(),
                                    accounts = wc.accounts;
                                accounts && accounts.length ? cb(null, accounts) : cb(Error("Failed to get accounts"));
                            } catch (error) {
                                cb(error);
                            }
                        },
                        processMessage: async (msgParams, cb) => {
                            try {
                                let wc = await this.getWalletConnector(),
                                    result = await wc.signMessage([msgParams.from, msgParams.data]);
                                cb(null, result);
                            } catch (error) {
                                cb(error);
                            }
                        },
                        processPersonalMessage: async (msgParams, cb) => {
                            try {
                                let wc = await this.getWalletConnector(),
                                    result = await wc.signPersonalMessage([msgParams.data, msgParams.from]);
                                cb(null, result);
                            } catch (error) {
                                cb(error);
                            }
                        },
                        processSignTransaction: async (txParams, cb) => {
                            try {
                                let wc = await this.getWalletConnector(),
                                    result = await wc.signTransaction(txParams);
                                cb(null, result);
                            } catch (error) {
                                cb(error);
                            }
                        },
                        processTransaction: async (txParams, cb) => {
                            try {
                                let wc = await this.getWalletConnector(),
                                    result = await wc.sendTransaction(txParams);
                                cb(null, result);
                            } catch (error) {
                                cb(error);
                            }
                        },
                        processTypedMessage: async (msgParams, cb) => {
                            try {
                                let wc = await this.getWalletConnector(),
                                    result = await wc.signTypedData([msgParams.from, msgParams.data]);
                                cb(null, result);
                            } catch (error) {
                                cb(error);
                            }
                        },
                    };
                }
            };
            ((ConnectorName = ConnectorName1 || (ConnectorName1 = {})).METAMASK = "METAMASK"), (ConnectorName.WALLETCONNECT = "WALLETCONNECT"), (ConnectorName.COINBASE_WALLET = "COINBASE_WALLET");
            let metamaskConnector = {
                    id: ConnectorName1.METAMASK,
                    name: "Metamask",
                    logoSrc: "/metamask.png",
                    async connect() {
                        var ref;
                        let { ethereum } = window;
                        if (!Boolean(ethereum)) throw Error();
                        let useProvider = ethereum;
                        return (
                            (null === (ref = ethereum.providers) || void 0 === ref ? void 0 : ref.length) &&
                                ethereum.providers.forEach(async (p) => {
                                    p.isMetaMask && (useProvider = p);
                                }),
                            await useProvider.request({ method: "eth_requestAccounts", params: [] }),
                            new Web3Provider(useProvider)
                        );
                    },
                    chainChange: (handler) => [
                        "chainChanged",
                        (chainId) => {
                            handler(Number(chainId));
                        },
                    ],
                    disconnect: (handler) => [
                        "accountsChanged",
                        (accounts) => {
                            0 === accounts.length && handler();
                        },
                    ],
                    accountChange: (handler) => [
                        "accountsChanged",
                        (accounts) => {
                            let [address] = accounts;
                            address && handler(address);
                        },
                    ],
                },
                walletconnectConnector = {
                    id: ConnectorName1.WALLETCONNECT,
                    name: "Walletconnect",
                    logoSrc: "/walletconnect.png",
                    async connect() {
                        let walletConnectProvider = new web3_provider_dist_esm({ infuraId: "ffdbc95380b94996b3c51ee67aad2852" });
                        return await walletConnectProvider.enable(), new Web3Provider(walletConnectProvider);
                    },
                    disconnect: (handler) => [
                        "disconnect",
                        (error) => {
                            "number" == typeof error && 1e3 === error && handler();
                        },
                    ],
                },
                coinbaseWalletConnector = {
                    id: ConnectorName1.COINBASE_WALLET,
                    name: "Coinbase Wallet",
                    logoSrc: "/coinbase.png",
                    async connect() {
                        var ref;
                        let { ethereum } = window;
                        if (!Boolean(ethereum)) throw Error();
                        let useProvider = ethereum;
                        return (
                            (null === (ref = ethereum.providers) || void 0 === ref ? void 0 : ref.length) &&
                                ethereum.providers.forEach(async (p) => {
                                    p.isCoinbaseWallet && (useProvider = p);
                                }),
                            await useProvider.request({ method: "eth_requestAccounts", params: [] }),
                            new Web3Provider(useProvider)
                        );
                    },
                    chainChange: (handler) => [
                        "chainChanged",
                        (chainId) => {
                            handler(Number(chainId));
                        },
                    ],
                    disconnect: (handler) => [
                        "accountsChanged",
                        (accounts) => {
                            0 === accounts.length && handler();
                        },
                    ],
                    accountChange: (handler) => [
                        "accountsChanged",
                        (accounts) => {
                            let [address] = accounts;
                            address && handler(address);
                        },
                    ],
                },
                connectors = new Map([
                    [ConnectorName1.METAMASK, metamaskConnector],
                    [ConnectorName1.WALLETCONNECT, walletconnectConnector],
                    [ConnectorName1.COINBASE_WALLET, coinbaseWalletConnector],
                ]),
                KEYS = { CONNECTOR: "blur.webthree.connector" },
                setCachedConnector = (connector) => {
                    localStorage.setItem(KEYS.CONNECTOR, connector.id);
                },
                getCachedConnector = () => {
                    let raw = localStorage.getItem(KEYS.CONNECTOR);
                    return ("string" == typeof raw && Array.from(connectors.keys()).includes(raw) && connectors.get(raw)) || null;
                },
                clearCachedConnector = () => {
                    localStorage.removeItem(KEYS.CONNECTOR);
                };
            async function _approveCollection(notify, provider, params, onTransactionResponse) {
                return new Promise((resolve, reject) => {
                    let signer = provider.getSigner(params.userAddress);
                    analytics.PS.initiated("APPROVE_COLLECTION", { collectionId: params.collectionAddress }),
                        signer.sendTransaction(params.txnData).then(
                            function (tx) {
                                notify({ nfts: [], title: "transaction pending", txHash: tx.hash, collection: params.collectionName, transactionType: TransactionType1.APPROVE_COLLECTION }),
                                    analytics.PS.submitted("APPROVE_COLLECTION", { txHash: tx.hash, collectionId: params.collectionAddress }),
                                    resolve(!0),
                                    provider.waitForTransaction(tx.hash).then(
                                        function () {
                                            notify({ nfts: [], title: "transaction confirmed", txHash: tx.hash, collection: params.collectionName, transactionType: TransactionType1.APPROVE_COLLECTION }),
                                                analytics.PS.succeeded("APPROVE_COLLECTION", { txHash: tx.hash, collectionId: params.collectionAddress }),
                                                onTransactionResponse(!0);
                                        },
                                        function (error) {
                                            notify({ nfts: [], title: "transaction failed", txHash: tx.hash, collection: params.collectionName, transactionType: TransactionType1.APPROVE_COLLECTION }),
                                                analytics.PS.failed("APPROVE_COLLECTION", { txHash: tx.hash, collectionId: params.collectionAddress }),
                                                onTransactionResponse(!1);
                                        }
                                    );
                            },
                            function (error) {
                                if ((console.debug(error), "object" == typeof error && "message" in error)) {
                                    let message = error.message.toLowerCase();
                                    analytics.PS.cancelled("APPROVE_COLLECTION", { collectionId: params.collectionAddress, error_message: message, error_toString: error.toString(), doNotTrust_LOC: 83 }),
                                        message.includes("user rejected") || message.includes("user denied")
                                            ? notify({ nfts: [], title: "user rejected", collection: params.collectionName, transactionType: TransactionType1.APPROVE_COLLECTION })
                                            : notify({ nfts: [], title: "transaction cancelled", collection: params.collectionName, transactionType: TransactionType1.APPROVE_COLLECTION });
                                } else
                                    notify({ nfts: [], title: "transaction cancelled", collection: params.collectionName, transactionType: TransactionType1.APPROVE_COLLECTION }),
                                        analytics.PS.cancelled("APPROVE_COLLECTION", { collectionId: params.collectionAddress, error_toString: error.toString(), doNotTrust_LOC: 117 });
                                reject(error);
                            }
                        );
                });
            }
            async function _cancelOrder(notify, provider, params) {
                return new Promise(async (resolve, reject) => {
                    try {
                        let signer = provider.getSigner(params.userAddress);
                        signer.sendTransaction(params.txnData).then(
                            function (tx) {
                                notify({ nfts: params.nfts, title: "".concat(params.marketplace, " transaction pending"), txHash: tx.hash, collection: "", transactionType: TransactionType1.CANCEL }),
                                    analytics.PS.submitted("CANCEL", { nfts: params.nfts, txHash: tx.hash }),
                                    provider.waitForTransaction(tx.hash).then(
                                        function (txReceipt) {
                                            let txStatus = txReceipt.status ? txReceipt.status : 0;
                                            1 === txStatus
                                                ? (params.onTxnConfirmed(params.nfts, params.marketplace),
                                                  notify({ nfts: params.nfts, title: "".concat(params.marketplace, " transaction confirmed"), txHash: tx.hash, collection: "", transactionType: TransactionType1.CANCEL }),
                                                  analytics.PS.succeeded("CANCEL", { nfts: params.nfts, txHash: tx.hash }))
                                                : (params.onTxnFailed(params.nfts, params.marketplace),
                                                  notify({ nfts: params.nfts, title: "".concat(params.marketplace, " transaction failed"), txHash: tx.hash, collection: "", transactionType: TransactionType1.CANCEL }),
                                                  analytics.PS.failed("CANCEL", { nfts: params.nfts, txHash: tx.hash }));
                                        },
                                        function (error) {
                                            console.debug(error),
                                                params.onTxnFailed(params.nfts, params.marketplace),
                                                notify({ nfts: params.nfts, title: "".concat(params.marketplace, " transaction failed"), txHash: tx.hash, collection: "", transactionType: TransactionType1.CANCEL }),
                                                analytics.PS.failed("CANCEL", { nfts: params.nfts, txHash: tx.hash, doNotTrust_LOC: 95, error_toString: error.toString() });
                                        }
                                    ),
                                    resolve(!0);
                            },
                            function (error) {
                                if ((console.debug(error), "object" == typeof error && "message" in error)) {
                                    let message = error.message.toLowerCase();
                                    message.includes("user rejected") || message.includes("user denied")
                                        ? (notify({ nfts: params.nfts, title: "user rejected", collection: "", transactionType: TransactionType1.CANCEL }),
                                          analytics.PS.failed("CANCEL", { nfts: params.nfts, reason: "user rejected", doNotTrust_LOC: 119, error_toString: error.toString() }))
                                        : (notify({ nfts: params.nfts, title: "transaction cancelled", collection: "", transactionType: TransactionType1.CANCEL }),
                                          analytics.PS.cancelled("CANCEL", { nfts: params.nfts, reason: "unknown", doNotTrust_LOC: 132, error_toString: error.toString() }));
                                } else
                                    notify({ nfts: params.nfts, title: "transaction cancelled", collection: "", transactionType: TransactionType1.CANCEL }),
                                        analytics.PS.cancelled("CANCEL", { nfts: params.nfts, reason: "unknown", doNotTrust_LOC: 146, error_toString: error.toString() });
                                reject(error);
                            }
                        );
                    } catch (error) {
                        console.debug(error),
                            "object" == typeof error && "message" in error
                                ? error.message.includes("insufficient funds")
                                    ? (notify({ nfts: params.nfts, title: "insufficient funds", collection: "", transactionType: TransactionType1.CANCEL }),
                                      analytics.PS.failed("CANCEL", { nfts: params.nfts, reason: "insufficent funds", doNotTrust_LOC: 166, error_toString: error.toString() }))
                                    : (notify({ nfts: params.nfts, title: "transaction cancelled", collection: "", transactionType: TransactionType1.CANCEL }),
                                      analytics.PS.cancelled("CANCEL", { nfts: params.nfts, reason: "unknown", doNotTrust_LOC: 179, error_toString: error.toString() }))
                                : (notify({ nfts: params.nfts, title: "transaction cancelled", collection: "", transactionType: TransactionType1.CANCEL }),
                                  analytics.PS.cancelled("CANCEL", { nfts: params.nfts, reason: "unknown", doNotTrust_LOC: 193, error_toString: error.toString() })),
                            reject(error);
                    }
                });
            }
            let random_logger = new logger_lib_esm.Yd("random/5.6.0"),
                anyGlobal = (function () {
                    if ("undefined" != typeof self) return self;
                    if ("undefined" != typeof window) return window;
                    if (void 0 !== __webpack_require__.g) return __webpack_require__.g;
                    throw Error("unable to locate global object");
                })(),
                random_crypto = anyGlobal.crypto || anyGlobal.msCrypto;
            (random_crypto && random_crypto.getRandomValues) ||
                (random_logger.warn("WARNING: Missing strong random number source"),
                (random_crypto = {
                    getRandomValues: function (buffer) {
                        return random_logger.throwError("no secure random source avaialble", logger_lib_esm.Yd.errors.UNSUPPORTED_OPERATION, { operation: "crypto.getRandomValues" });
                    },
                }));
            var _fulfillOrder_Buffer = __webpack_require__(48764).Buffer;
            async function _fulfillOrder(notify, provider, params) {
                let { nfts, txnData, userAddress, collectionName, maxFeePerGas, maxPriorityFeePerGas } = params,
                    totalPrice = nfts.reduce((runningTotal, nft) => {
                        var ref;
                        return "".concat(Number(runningTotal) + Number((null === (ref = nft.price) || void 0 === ref ? void 0 : ref.amount) || 0));
                    }, "0"),
                    collectionId = nfts[0].contractAddress;
                return new Promise(async (resolve, reject) => {
                    try {
                        let signer = provider.getSigner(userAddress),
                            balance = await provider.getBalance(userAddress);
                        if (balance.lt(txnData.value)) throw Error("insufficient funds");
                        let destinationAddress = txnData.to.toLowerCase();
                        ["0x39da41747a83aee658334415666f3ef92dd0d541", "0x000000000000ad05ccc4f10045630fb830b95127"].includes(destinationAddress) || (txnData.data += "332d1229");
                        let randomHex =
                                "0x" +
                                _fulfillOrder_Buffer
                                    .from(
                                        (function (length) {
                                            (length <= 0 || length > 1024 || length % 1 || length != length) && random_logger.throwArgumentError("invalid length", "length", length);
                                            let result = new Uint8Array(length);
                                            return random_crypto.getRandomValues(result), (0, bytes_lib_esm.lE)(result);
                                        })(16)
                                    )
                                    .toString("hex"),
                            trace = bytes_lib_esm.$m(randomHex, 64);
                        analytics.PS.initiated("BUY", {
                            nfts: nfts.map((nft) => {
                                var ref;
                                return { tokenId: nft.id, price: null === (ref = nft.price) || void 0 === ref ? void 0 : ref.amount, quantity: 1 };
                            }),
                            totalPrice,
                            collectionId,
                            trace,
                        }),
                            signer.sendTransaction({ ...txnData, value: bignumber.O$.from(txnData.value), gasLimit: params.gasEstimate, maxFeePerGas, maxPriorityFeePerGas }).then(
                                function (tx) {
                                    params.onTransactionPending(),
                                        notify({ nfts, title: "transaction pending", txHash: tx.hash, collection: collectionName, transactionType: TransactionType1.BUY }),
                                        analytics.WG.submitted({ nfts: nfts, txHash: tx.hash, collectionId }),
                                        analytics.PS.submitted("BUY", {
                                            nfts: nfts.map((nft) => {
                                                var ref;
                                                return { tokenId: nft.id, price: null === (ref = nft.price) || void 0 === ref ? void 0 : ref.amount, quantity: 1 };
                                            }),
                                            txHash: tx.hash,
                                            totalPrice,
                                            collectionId,
                                            trace,
                                        }),
                                        provider.waitForTransaction(tx.hash).then(
                                            function (txReceipt) {
                                                let txStatus = txReceipt.status ? txReceipt.status : 0;
                                                if (1 === txStatus) {
                                                    let countSucceeded = (function (nfts, txReceipt, userAddress, contractAddress) {
                                                        let { logs } = txReceipt,
                                                            tokenIds = nfts.map((nft) => nft.id),
                                                            safeUserAddr = bytes_lib_esm.Ou(userAddress.toLowerCase()),
                                                            contractLogs = logs.filter((log) => log.address.toLowerCase() === contractAddress.toLowerCase()),
                                                            transferLogs = contractLogs.filter((log) => "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef" === log.topics[0]);
                                                        return transferLogs.reduce((count, log) => {
                                                            let topicTokenId = Number(bytes_lib_esm.Ou(log.topics[3])),
                                                                topicWalletAddr = bytes_lib_esm.Ou(log.topics[2]).toLowerCase(),
                                                                tokenIdMatches = tokenIds.some((tokenId) => tokenId === String(topicTokenId));
                                                            return tokenIdMatches && topicWalletAddr === safeUserAddr ? count + 1 : count;
                                                        }, 0);
                                                    })(nfts, txReceipt, userAddress, collectionId);
                                                    notify({ nfts, title: "transaction confirmed", txHash: tx.hash, collection: collectionName, countSucceeded, transactionType: TransactionType1.BUY }),
                                                        analytics.WG.succeeded({ nfts: nfts, txHash: tx.hash, collectionId }),
                                                        analytics.PS.succeeded("BUY", {
                                                            nfts: nfts.map((nft) => {
                                                                var ref;
                                                                return { tokenId: nft.id, price: null === (ref = nft.price) || void 0 === ref ? void 0 : ref.amount, quantity: 1 };
                                                            }),
                                                            txHash: tx.hash,
                                                            totalPrice,
                                                            collectionId,
                                                            trace,
                                                        });
                                                } else
                                                    notify({ nfts, title: "transaction failed", txHash: tx.hash, collection: collectionName, transactionType: TransactionType1.BUY }),
                                                        analytics.WG.failed("reverted", { nfts, txHash: tx.hash, collectionId }),
                                                        analytics.PS.failed("BUY", {
                                                            nfts: nfts.map((nft) => {
                                                                var ref;
                                                                return { tokenId: nft.id, price: null === (ref = nft.price) || void 0 === ref ? void 0 : ref.amount, quantity: 1 };
                                                            }),
                                                            txHash: tx.hash,
                                                            totalPrice,
                                                            collectionId,
                                                            trace,
                                                        });
                                            },
                                            function (error) {
                                                console.debug(error),
                                                    notify({ nfts, title: "transaction failed", txHash: tx.hash, collection: collectionName, transactionType: TransactionType1.BUY }),
                                                    analytics.WG.failed("unknown", { nfts, txHash: tx.hash, collectionId, doNotTrust_LOC: 183, error_toString: error.toString() }),
                                                    analytics.PS.failed("BUY", {
                                                        nfts: nfts.map((nft) => {
                                                            var ref;
                                                            return { tokenId: nft.id, price: null === (ref = nft.price) || void 0 === ref ? void 0 : ref.amount, quantity: 1 };
                                                        }),
                                                        txHash: tx.hash,
                                                        totalPrice,
                                                        collectionId,
                                                        doNotTrust_LOC: 195,
                                                        error_toString: error.toString(),
                                                    });
                                            }
                                        ),
                                        resolve(!0);
                                },
                                function (error) {
                                    if ((console.debug(error), "object" == typeof error && "message" in error)) {
                                        let message = error.message.toLowerCase();
                                        error.message.includes("insufficient funds")
                                            ? (notify({ nfts, title: "insufficient funds", collection: collectionName, transactionType: TransactionType1.BUY }),
                                              analytics.WG.failed("insufficient funds", { nfts, collectionId }),
                                              analytics.PS.failed("BUY", {
                                                  nfts: nfts.map((nft) => {
                                                      var ref;
                                                      return { tokenId: nft.id, price: null === (ref = nft.price) || void 0 === ref ? void 0 : ref.amount, quantity: 1 };
                                                  }),
                                                  totalPrice,
                                                  collectionId,
                                              }))
                                            : message.includes("user rejected") || message.includes("user denied")
                                            ? (notify({ nfts, title: "user rejected", collection: collectionName, transactionType: TransactionType1.BUY }),
                                              analytics.WG.cancelled("user rejected", { nfts, collectionId }),
                                              analytics.PS.cancelled("BUY", {
                                                  nfts: nfts.map((nft) => {
                                                      var ref;
                                                      return { tokenId: nft.id, price: null === (ref = nft.price) || void 0 === ref ? void 0 : ref.amount, quantity: 1 };
                                                  }),
                                                  totalPrice,
                                                  collectionId,
                                              }))
                                            : (notify({ nfts, title: "transaction cancelled", collection: collectionName, transactionType: TransactionType1.BUY }),
                                              analytics.WG.cancelled("unknown", { nfts, collectionId, error_message: error.message, doNotTrust_LOC: 260, error_toString: error.toString() }),
                                              analytics.PS.cancelled("BUY", {
                                                  nfts: nfts.map((nft) => {
                                                      var ref;
                                                      return { tokenId: nft.id, price: null === (ref = nft.price) || void 0 === ref ? void 0 : ref.amount, quantity: 1 };
                                                  }),
                                                  totalPrice,
                                                  collectionId,
                                                  error_message: error.message,
                                                  doNotTrust_LOC: 272,
                                                  error_toString: error.toString(),
                                              }));
                                    } else
                                        notify({ nfts, title: "transaction cancelled", collection: collectionName, transactionType: TransactionType1.BUY }),
                                            analytics.WG.cancelled("unknown", { nfts, collectionId, doNotTrust_LOC: 286, error_toString: error.toString() }),
                                            analytics.PS.cancelled("BUY", {
                                                nfts: nfts.map((nft) => {
                                                    var ref;
                                                    return { tokenId: nft.id, price: null === (ref = nft.price) || void 0 === ref ? void 0 : ref.amount, quantity: 1 };
                                                }),
                                                totalPrice,
                                                collectionId,
                                                doNotTrust_LOC: 297,
                                                error_toString: error.toString(),
                                            });
                                    reject(error);
                                }
                            );
                    } catch (error) {
                        console.debug(error),
                            "object" == typeof error && "message" in error
                                ? error.message.includes("insufficient funds")
                                    ? (notify({ nfts, title: "insufficient funds", collection: collectionName, transactionType: TransactionType1.BUY }),
                                      analytics.WG.failed("insufficient funds", { nfts, collectionId }),
                                      analytics.PS.failed("BUY", {
                                          nfts: nfts.map((nft) => {
                                              var ref;
                                              return { tokenId: nft.id, price: null === (ref = nft.price) || void 0 === ref ? void 0 : ref.amount, quantity: 1 };
                                          }),
                                          totalPrice,
                                          collectionId,
                                      }))
                                    : (notify({ nfts, title: "transaction cancelled", collection: collectionName, transactionType: TransactionType1.BUY }),
                                      analytics.WG.cancelled("unknown", { nfts, collectionId, error_message: error.message, doNotTrust_LOC: 338, error_toString: error.toString() }),
                                      analytics.PS.cancelled("BUY", {
                                          nfts: nfts.map((nft) => {
                                              var ref;
                                              return { tokenId: nft.id, price: null === (ref = nft.price) || void 0 === ref ? void 0 : ref.amount, quantity: 1 };
                                          }),
                                          totalPrice,
                                          collectionId,
                                          error_message: error.message,
                                          doNotTrust_LOC: 350,
                                          error_toString: error.toString(),
                                      }))
                                : (notify({ nfts, title: "transaction cancelled", collection: collectionName, transactionType: TransactionType1.BUY }),
                                  analytics.WG.cancelled("unknown", { nfts, collectionId, doNotTrust_LOC: 364, error_toString: error.toString() }),
                                  analytics.PS.cancelled("BUY", {
                                      nfts: nfts.map((nft) => {
                                          var ref;
                                          return { tokenId: nft.id, price: null === (ref = nft.price) || void 0 === ref ? void 0 : ref.amount, quantity: 1 };
                                      }),
                                      totalPrice,
                                      collectionId,
                                      doNotTrust_LOC: 375,
                                      error_toString: error.toString(),
                                  })),
                            reject(error);
                    }
                });
            }
            async function _signSubmitOrder(notify, provider, params) {
                let fireAnalyticsEvent = (method) => {
                    for (let order of params.orders) analytics.tH.listing[method](order.nft, order.price, params.marketplace);
                };
                return new Promise((resolve, reject) => {
                    let signer = provider.getSigner(params.userAddress);
                    fireAnalyticsEvent("signatureInitiated"),
                        signTypedData(params.type, params.signData, signer).then(
                            function (value) {
                                fireAnalyticsEvent("signatureApproved"), resolve(value);
                            },
                            function (error) {
                                for (let order of (console.debug(error), params.orders)) analytics.tH.listing.signatureCancelled(order.nft, order.price, params.marketplace, error.message, error.stack);
                                notify({
                                    nfts: params.orders.map((param) => {
                                        let { nft } = param;
                                        return nft;
                                    }),
                                    title: "user rejected",
                                    collection: params.collectionName,
                                    transactionType: TransactionType1.LIST,
                                }),
                                    reject();
                            }
                        );
                });
            }
            async function signTypedData(type, data, signer) {
                if ("personal_sign" === type) return signer.signMessage(bytes_lib_esm.lE(data));
                if ("signTypedData_v4" === type) return signer._signTypedData(data.domain, data.types, data.value);
                if ("signTypedData_v4_compact" === type) return signer._signTypedData(data.domain, data.types, data.value).then((signature) => bytes_lib_esm.N(signature).compact);
                throw Error("Invalid or unknown signature type: ".concat(type));
            }
            var _tagged_template_literal = __webpack_require__(7297),
                styled_components_browser_esm = __webpack_require__(87379),
                next_image = __webpack_require__(25675),
                image_default = __webpack_require__.n(next_image),
                Link = __webpack_require__(31593),
                PageSection = __webpack_require__(88615),
                components = __webpack_require__(69976);
            function _templateObject() {
                let data = (0, _tagged_template_literal.Z)(["\n  width: 332px;\n  height: 42px;\n  background: ", ";\n  border-radius: 4px;\n"]);
                return (
                    (_templateObject = function () {
                        return data;
                    }),
                    data
                );
            }
            function _templateObject1() {
                let data = (0, _tagged_template_literal.Z)(["\n  border-top: 1px solid ", ";\n"]);
                return (
                    (_templateObject1 = function () {
                        return data;
                    }),
                    data
                );
            }
            function _templateObject2() {
                let data = (0, _tagged_template_literal.Z)(["\n  a {\n    color: ", ";\n    ", ";\n  }\n"]);
                return (
                    (_templateObject2 = function () {
                        return data;
                    }),
                    data
                );
            }
            let ConnectModal = (param) => {
                    let { onConnector, ...modalProps } = param;
                    return (0, jsx_runtime.jsx)(components.u_, {
                        ...modalProps,
                        children: (0, jsx_runtime.jsxs)(PageSection.NP, {
                            icon: "wallet",
                            title: "Connect Wallet",
                            options: { background: "transparent" },
                            children: [
                                (0, jsx_runtime.jsx)(ModalSubtitle, { pt: "16px", pb: "16px", color: "white", variant: "body", transform: "uppercase", children: "Choose a wallet to connect." }),
                                (0, jsx_runtime.jsx)(components.Kq, {
                                    spacing: "16px",
                                    direction: "column",
                                    children: Array.from(connectors.entries()).map((param) => {
                                        let [id, connector] = param;
                                        return (0, jsx_runtime.jsx)(
                                            ModalButton,
                                            {
                                                id: id,
                                                onClick: () => onConnector(connector),
                                                children: (0, jsx_runtime.jsxs)(components.Kq, {
                                                    ml: "24px",
                                                    spacing: "12px",
                                                    direction: "row",
                                                    align: "center",
                                                    justify: "flex-start",
                                                    children: [
                                                        (0, jsx_runtime.jsx)(image_default(), { alt: connector.name, src: connector.logoSrc, width: 24, height: 24 }),
                                                        (0, jsx_runtime.jsx)(components.xv, { color: "grey900", variant: "body", transform: "uppercase", children: connector.name }),
                                                    ],
                                                }),
                                            },
                                            id
                                        );
                                    }),
                                }),
                                (0, jsx_runtime.jsx)(TermsAndConditions, {
                                    pt: "24px",
                                    pb: "24px",
                                    style: { width: "336px" },
                                    color: "grey300",
                                    weight: 300,
                                    variant: "body",
                                    dangerouslySetInnerHTML: {
                                        __html: 'By using Blur, you agree to our <a rel="noopener noreferrer" href="'
                                            .concat("https://drive.google.com/file/d/1ql2GCywhXqwcxo6-NVNplkIM14zVdjNj/view?usp=sharing", '" target="_blank">Terms of Service</a> and our <a rel="noopener noreferrer" href="')
                                            .concat("https://drive.google.com/file/d/1BeVii71Jm-7UEDc2ICoUBSXkZdW4HT8L/view?usp=sharing", '" target="_blank">Privacy Policy</a>.'),
                                    },
                                }),
                            ],
                        }),
                    });
                },
                ModalButton = styled_components_browser_esm.ZP.button(_templateObject(), (param) => {
                    let { theme } = param;
                    return theme.color.white;
                }),
                ModalSubtitle = (0, styled_components_browser_esm.ZP)(components.xv)(_templateObject1(), (param) => {
                    let { theme } = param;
                    return theme.color.grey600;
                }),
                TermsAndConditions = (0, styled_components_browser_esm.ZP)(components.xv)(
                    _templateObject2(),
                    (param) => {
                        let { theme } = param;
                        return theme.color.white;
                    },
                    Link.W
                );
            function stateReducer(state, action) {
                if (action.type === StateActionType1.INIT) return { address: action.address, loggedIn: action.loggedIn, whitelisted: !0, addressChange: null };
                if (action.type === StateActionType1.DISCONNECT) return { address: null, loggedIn: !1, whitelisted: !0, addressChange: null };
                if (action.type === StateActionType1.LOGIN_FAIL) return { address: state.address, loggedIn: !1, whitelisted: !1, addressChange: null };
                if (action.type === StateActionType1.LOGIN_SUCCESS) return { address: state.address, loggedIn: !0, whitelisted: !0, addressChange: null };
                if (action.type === StateActionType1.ADDRESS_CHANGE) {
                    var ref;
                    return {
                        address: state.address,
                        loggedIn: state.loggedIn,
                        whitelisted: state.whitelisted,
                        addressChange: action.address.toLowerCase() === (null === (ref = state.address) || void 0 === ref ? void 0 : ref.toLowerCase()) ? null : action.address,
                    };
                }
                if (action.type === StateActionType1.APPLY_ADDRESS_CHANGE) return { address: state.addressChange, loggedIn: !1, whitelisted: !0, addressChange: state.addressChange };
                if (action.type === StateActionType1.CACHED_LOGIN) return { address: action.address, loggedIn: !0, whitelisted: !0, addressChange: null };
                else return state;
            }
            ((StateActionType = StateActionType1 || (StateActionType1 = {})).INIT = "INIT"),
                (StateActionType.DISCONNECT = "DISCONNECT"),
                (StateActionType.LOGIN_FAIL = "LOGIN_FAIL"),
                (StateActionType.LOGIN_SUCCESS = "LOGIN_SUCCESS"),
                (StateActionType.ADDRESS_CHANGE = "ADDRESS_CHANGE"),
                (StateActionType.APPLY_ADDRESS_CHANGE = "APPLY_ADDRESS_CHANGE"),
                (StateActionType.CACHED_LOGIN = "CACHED_LOGIN");
            var context_Buffer = __webpack_require__(48764).Buffer;
            let Context = react.createContext({
                    chainId: 1,
                    address: null,
                    loggedIn: !1,
                    provider: null,
                    whitelisted: !0,
                    addressChange: null,
                    getSigner: () => null,
                    connect() {},
                    getFeeData: () => new Promise(() => null),
                    setGasLimit() {},
                    submitOrder: () => new Promise(() => !0),
                    cancelOrder: () => new Promise(() => !0),
                    fulfillOrder: () => new Promise(() => !0),
                    switchToMainnet() {},
                }),
                Provider = (props) => {
                    let { dispatchNotifications } = react.useContext(notifications._y),
                        maxFeePerGasRef = react.useRef(null),
                        maxPriorityFeePerGasRef = react.useRef(null),
                        initializedListenersRef = react.useRef(!1),
                        [state, dispatchState] = react.useReducer(stateReducer, { address: null, loggedIn: !1, whitelisted: !0, addressChange: null }),
                        [chainId, setChainId] = react.useState(1),
                        [connector, setConnector] = react.useState(null),
                        [modalOpen, setModalOpen] = react.useState(!1),
                        [web3Provider, setWeb3Provider] = react.useState(null);
                    react.useEffect(() => {
                        let { address } = state;
                        if (!address || null === web3Provider) return;
                        let authChallengeAndLogin = async () => {
                            let isAuthenticated = await api.Cy(address, (message) => {
                                let signer = web3Provider.getSigner(address);
                                return signer.signMessage(message);
                            });
                            isAuthenticated ? dispatchState({ type: StateActionType1.LOGIN_SUCCESS }) : dispatchState({ type: StateActionType1.LOGIN_FAIL });
                        };
                        authChallengeAndLogin();
                    }, [state.address, web3Provider]),
                        react.useEffect(() => {
                            let cachedConnector = getCachedConnector();
                            null !== cachedConnector && initWeb3Provider(cachedConnector);
                        }, [chainId]),
                        react.useEffect(() => {
                            null === connector ||
                                null === web3Provider ||
                                null === web3Provider.provider ||
                                initializedListenersRef.current ||
                                "function" != typeof web3Provider.provider.on ||
                                ("function" == typeof connector.chainChange &&
                                    web3Provider.provider.on(
                                        ...connector.chainChange((id) => {
                                            setChainId(id);
                                        })
                                    ),
                                "function" == typeof connector.disconnect &&
                                    web3Provider.provider.on(
                                        ...connector.disconnect(() => {
                                            dispatchState({ type: StateActionType1.DISCONNECT }), setWeb3Provider(null), api.UD(), clearCachedConnector();
                                        })
                                    ),
                                "function" == typeof connector.accountChange &&
                                    web3Provider.provider.on(
                                        ...connector.accountChange(async (address) => {
                                            analytics.gU.switched(address);
                                            let isAuthenticated = await api.Xc(address);
                                            isAuthenticated ? dispatchState({ type: StateActionType1.CACHED_LOGIN, address }) : dispatchState({ type: StateActionType1.ADDRESS_CHANGE, address });
                                        })
                                    ),
                                (initializedListenersRef.current = !0));
                        }, [connector, web3Provider]);
                    let getFeeData = react.useCallback(async () => (web3Provider ? await web3Provider.getFeeData() : null), [web3Provider]),
                        switchToMainnet = react.useCallback(async () => {
                            if (null === web3Provider) return;
                            let {
                                provider: { request },
                            } = web3Provider;
                            "function" == typeof request && (await request({ method: "wallet_switchEthereumChain", params: [{ chainId: "0x1" }] }));
                        }, [web3Provider]),
                        connect = react.useCallback(
                            async function () {
                                state.addressChange ? (api.UD(), dispatchState({ type: StateActionType1.APPLY_ADDRESS_CHANGE })) : setModalOpen(!0);
                            },
                            [state]
                        ),
                        getSigner = react.useCallback(
                            function () {
                                return null === web3Provider || null === state.address ? null : web3Provider.getSigner(state.address);
                            },
                            [state.address, web3Provider]
                        ),
                        initWeb3Provider = react.useCallback(async (connector) => {
                            try {
                                let provider = await connector.connect(),
                                    accounts = await provider.listAccounts(),
                                    networkId = (await provider.getNetwork()).chainId;
                                setWeb3Provider(provider),
                                    setChainId(networkId),
                                    setConnector(connector),
                                    setModalOpen(!1),
                                    dispatchState({ type: StateActionType1.INIT, address: accounts[0], loggedIn: api.jl(accounts[0]) }),
                                    analytics.gU.connected(accounts[0]),
                                    setCachedConnector(connector);
                            } catch (error) {
                                console.log(error);
                            }
                        }, []),
                        notify = (args) => {
                            let { nfts, title, txHash, collection, countSucceeded, transactionType } = args,
                                formatTitle = title,
                                formatSubtitle = "";
                            if (1 === nfts.length) {
                                let [nft] = nfts,
                                    prefix = (0, utils_0.kC)("".concat(transactionType));
                                formatSubtitle = transactionType === TransactionType1.LIST ? "".concat(collection, " #").concat(nft.id) : "".concat(prefix, " ").concat(collection, " #").concat(nft.id);
                            } else if (transactionType === TransactionType1.LIST) formatSubtitle = "Bulk list (".concat(nfts.length, ") ").concat(collection);
                            else if (transactionType === TransactionType1.BUY) {
                                if (void 0 === countSucceeded || countSucceeded === nfts.length) formatSubtitle = "Bulk buy (".concat(nfts.length, ") ").concat(collection);
                                else {
                                    let countSniped = nfts.length - countSucceeded;
                                    (formatTitle = "".concat(countSucceeded, "/").concat(nfts.length, " ").concat(collection, " purchased")),
                                        (formatSubtitle = "".concat(countSniped, " ").concat(1 === countSniped ? "was" : "were", " sniped"));
                                }
                            } else
                                transactionType === TransactionType1.CANCEL
                                    ? (formatSubtitle = "Bulk cancel (".concat(nfts.length, ")"))
                                    : transactionType === TransactionType1.APPROVE_COLLECTION && (formatSubtitle = "Approve collection ".concat(collection));
                            dispatchNotifications({ type: notifications.Us.ADD_ONE, payload: { title: formatTitle, linkHref: txHash ? "https://etherscan.io/tx/".concat(txHash) : void 0, subtitle: formatSubtitle } });
                        },
                        { address } = state,
                        fulfillOrder = react.useCallback(
                            async (nfts, collectionName, contractAddress, reportFulfillOrderProgress) => {
                                analytics.WG.started({ nfts: nfts, collectionId: contractAddress });
                                try {
                                    if (!address || !web3Provider) {
                                        let error = Error("!address || !web3Provider");
                                        throw (
                                            (notify({ nfts, title: "Could not proceed with purchase", collection: collectionName, transactionType: TransactionType1.BUY }),
                                            analytics.WG.failed("unknown", { nfts, location: "fulfillOrder", collectionId: contractAddress, error_message: error.message, error_toString: error.toString() }),
                                            error)
                                        );
                                    }
                                    let { buys, exclusions } = await api.hi.v1.buy.contractAddress(contractAddress).post(nfts, address);
                                    if (0 === buys.length) {
                                        let error1 = Error("buys.length === 0");
                                        throw (
                                            (notify({ nfts, title: "Items no longer available", collection: collectionName, transactionType: TransactionType1.BUY }),
                                            analytics.WG.failed("unknown", { nfts, location: "fulfillOrder", collectionId: contractAddress, error_message: error1.message, error_toString: error1.toString() }),
                                            error1)
                                        );
                                    }
                                    for (let { txnData, gasEstimate, includedTokens } of (exclusions.length > 0 &&
                                        reportFulfillOrderProgress({
                                            tokenIds: exclusions.map((param) => {
                                                let { tokenId } = param;
                                                return tokenId;
                                            }),
                                            progress: FulfillOrderProgress1.TOKEN_EXCLUDED,
                                        }),
                                    buys)) {
                                        let includedTokenIds = includedTokens.map((param) => {
                                            let { tokenId } = param;
                                            return tokenId;
                                        });
                                        reportFulfillOrderProgress({ tokenIds: includedTokenIds, progress: FulfillOrderProgress1.TOKEN_PENDING }),
                                            await _fulfillOrder(notify, web3Provider, {
                                                nfts: nfts.filter((param) => {
                                                    let { id } = param;
                                                    return includedTokenIds.includes(id);
                                                }),
                                                txnData,
                                                gasEstimate,
                                                userAddress: address,
                                                collectionName,
                                                maxFeePerGas: maxFeePerGasRef.current,
                                                maxPriorityFeePerGas: maxPriorityFeePerGasRef.current,
                                                onTransactionPending() {
                                                    reportFulfillOrderProgress({ tokenIds: includedTokenIds, progress: FulfillOrderProgress1.TOKEN_POSTED });
                                                },
                                            });
                                    }
                                    return !0;
                                } catch (error2) {
                                    return !1;
                                }
                            },
                            [address, web3Provider]
                        ),
                        singleSubmitOrder = react.useCallback(async (nfts, postData, clientSignature, collection, marketplace, progressCallback) => {
                            let responseJson = await api.hi.v1.orders.submit.post(postData, clientSignature, marketplace);
                            if (responseJson.hasOwnProperty("success"))
                                progressCallback({ tokenIds: nfts.map((nft) => nft.id), progress: SubmitOrderProgress1.TOKEN_POSTED, marketplace }),
                                    setTimeout(
                                        () => {
                                            notify({ nfts, title: "".concat((0, utils.kR)(marketplace), " listing").concat(nfts.length > 1 ? "s" : "", " confirmed"), collection, transactionType: TransactionType1.LIST });
                                        },
                                        marketplace === types.xq.BLUR ? 5500 : 8500
                                    );
                            else {
                                let marketplaceDisplayName = (0, utils.kR)(marketplace),
                                    defaultMessage = "".concat(marketplaceDisplayName, " listing").concat(nfts.length > 1 ? "s" : "", " failed"),
                                    { statusCode: responseStatus, message } = responseJson,
                                    errorMessage = responseStatus >= 400 && responseStatus < 500 ? "".concat(marketplaceDisplayName, ": ").concat(message) : null;
                                progressCallback({ tokenIds: nfts.map((nft) => nft.id), progress: SubmitOrderProgress1.TOKEN_FAILED, marketplace }),
                                    notify({ nfts, title: null != errorMessage ? errorMessage : defaultMessage, collection, transactionType: TransactionType1.LIST });
                            }
                        }, []),
                        approveCollection = react.useCallback(
                            async function () {
                                for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                                let [data, skipData, duration, blurRoyalty, _reportSubmitOrderProgress, reportApproveCollectionProgress] = args;
                                if (!address || !web3Provider) throw Error();
                                if (
                                    0 !== Object.keys(skipData[types.xq.BLUR]).length ||
                                    0 !== Object.keys(skipData[types.xq.X2Y2]).length ||
                                    0 !== Object.keys(skipData[types.xq.OPENSEA]).length ||
                                    0 !== Object.keys(skipData[types.xq.LOOKSRARE]).length
                                )
                                    return !0;
                                let marketplaces = Object.keys(data),
                                    requiredApprovals = [],
                                    [referenceNft, referencePrice, referenceCollectionName] = data[marketplaces[0]][0];
                                for (let marketplace of marketplaces) {
                                    let { approvals } = await api.hi.v1.orders.format.post(
                                        [{ price: { ...referencePrice, unit: "ETH" }, tokenId: referenceNft.id, feeRate: marketplace === types.xq.BLUR ? blurRoyalty : void 0, duration, contractAddress: referenceNft.contractAddress }],
                                        marketplace
                                    );
                                    requiredApprovals = [...requiredApprovals, ...approvals];
                                }
                                if (0 === requiredApprovals.length) return !0;
                                let successes = [];
                                for (let approval of requiredApprovals)
                                    reportApproveCollectionProgress({ progress: ApproveCollectionProgress1.SIGNATURE, marketplace: approval.marketplace }),
                                        await _approveCollection(
                                            notify,
                                            web3Provider,
                                            { txnData: approval.transactionRequest, userAddress: address, collectionName: referenceCollectionName, collectionAddress: referenceNft.contractAddress },
                                            (success) => {
                                                if (success) reportApproveCollectionProgress({ progress: ApproveCollectionProgress1.SUCCEEDED, marketplace: approval.marketplace }), successes.push(success);
                                                else throw Error();
                                            }
                                        ),
                                        reportApproveCollectionProgress({ progress: ApproveCollectionProgress1.PENDING, marketplace: approval.marketplace });
                                for (let marketplace1 of (await (0, utils_0.X_)(() => successes.length === requiredApprovals.length), marketplaces))
                                    reportApproveCollectionProgress({ progress: ApproveCollectionProgress1.SUCCEEDED, marketplace: marketplace1 });
                                return !0;
                            },
                            [address, web3Provider]
                        ),
                        bulkSubmitOrder = react.useCallback(
                            async function () {
                                for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                                let [data, skipData, duration, blurRoyalty, reportSubmitOrderProgress, reportApproveCollectionProgress] = args;
                                if (!address || !web3Provider) return !1;
                                try {
                                    await approveCollection(...args);
                                } catch (e) {
                                    return reportApproveCollectionProgress({ progress: ApproveCollectionProgress1.FAILED }), !1;
                                }
                                let marketplaces = Object.keys(data);
                                for (let marketplace of marketplaces) {
                                    let ordersForMarketplace = data[marketplace],
                                        collectionName = ordersForMarketplace[0][2];
                                    if (marketplace === types.xq.BLUR) {
                                        let ordersToSubmit = [];
                                        if (
                                            (ordersForMarketplace.forEach((param) => {
                                                let [nft, price] = param,
                                                    hasBeenPosted = skipData[marketplace][nft.id] && skipData[marketplace][nft.id] === SubmitOrderProgress1.TOKEN_POSTED;
                                                hasBeenPosted || ordersToSubmit.push({ nft, price });
                                            }),
                                            0 === ordersToSubmit.length)
                                        )
                                            continue;
                                        let { signatures } = await api.hi.v1.orders.format.post(
                                            ordersToSubmit.map((param) => {
                                                let { nft, price } = param;
                                                return { price: { ...price, unit: "ETH" }, tokenId: nft.id, feeRate: blurRoyalty, duration, contractAddress: nft.contractAddress };
                                            }),
                                            marketplace
                                        );
                                        for (let signature of signatures) {
                                            let tokens = signature.tokens.map((token) => new nft.S(token.contractAddress, token.tokenId));
                                            reportSubmitOrderProgress({ tokenIds: tokens.map((token) => token.id), progress: SubmitOrderProgress1.TOKEN_PENDING, marketplace });
                                            try {
                                                let clientSignature = null;
                                                (clientSignature = await _signSubmitOrder(notify, web3Provider, {
                                                    type: signature.type,
                                                    orders: tokens.map((nft) => ({ nft, price: ordersToSubmit.find((order) => order.nft.id === nft.id).price })),
                                                    signData: signature.signData,
                                                    userAddress: address,
                                                    marketplace,
                                                    collectionName,
                                                })),
                                                    notify({
                                                        nfts: tokens,
                                                        title: "".concat((0, utils.kR)(marketplace), " listing").concat(tokens.length > 1 ? "s" : "", " pending"),
                                                        collection: collectionName,
                                                        transactionType: TransactionType1.LIST,
                                                    }),
                                                    singleSubmitOrder(tokens, signature.marketplaceData, clientSignature, collectionName, marketplace, reportSubmitOrderProgress);
                                            } catch (e1) {
                                                return reportSubmitOrderProgress({ tokenIds: tokens.map((token) => token.id), progress: SubmitOrderProgress1.TOKEN_REJECTED, marketplace }), !1;
                                            }
                                        }
                                        continue;
                                    }
                                    for (let [nft1, price, collection] of ordersForMarketplace) {
                                        if (skipData[marketplace][nft1.id] && skipData[marketplace][nft1.id] === SubmitOrderProgress1.TOKEN_POSTED) continue;
                                        reportSubmitOrderProgress({ tokenIds: [nft1.id], progress: SubmitOrderProgress1.TOKEN_PENDING, marketplace: marketplace });
                                        let { signatures: signatures1 } = await api.hi.v1.orders.format.post([{ price: { ...price, unit: "ETH" }, tokenId: nft1.id, duration, contractAddress: nft1.contractAddress }], marketplace);
                                        for (let signature1 of signatures1) {
                                            let { type, signData, marketplaceData } = signature1,
                                                clientSignature1 = null;
                                            try {
                                                clientSignature1 = await _signSubmitOrder(notify, web3Provider, { type, orders: [{ nft: nft1, price }], signData, userAddress: address, marketplace: marketplace, collectionName: collection });
                                            } catch (e2) {
                                                return reportSubmitOrderProgress({ tokenIds: [nft1.id], progress: SubmitOrderProgress1.TOKEN_REJECTED, marketplace: marketplace }), !1;
                                            }
                                            notify({ nfts: [nft1], title: "".concat((0, utils.kR)(marketplace), " listing pending"), collection, transactionType: TransactionType1.LIST }),
                                                singleSubmitOrder([nft1], marketplaceData, clientSignature1, collection, marketplace, reportSubmitOrderProgress);
                                        }
                                    }
                                }
                                return !0;
                            },
                            [address, web3Provider]
                        ),
                        bulkCancelOrder = react.useCallback(
                            async (data, skipData, marketplaces, reportCancelOrderProgress) => {
                                if (!address || !web3Provider) return !1;
                                let tokens = data.map((param) => {
                                        let [nft, price] = param;
                                        return { price, tokenId: nft.id, contractAddress: nft.contractAddress };
                                    }),
                                    formattedMarketplaces = [
                                        { marketplace: types.xq.BLUR },
                                        { data: { message: "", signature: "" }, marketplace: types.xq.X2Y2 },
                                        { marketplace: types.xq.LOOKSRARE },
                                        { marketplace: types.xq.OPENSEA },
                                    ].filter((param) => {
                                        let { marketplace } = param;
                                        return marketplaces.includes(marketplace);
                                    }),
                                    cancelResponse = await api.hi.v1.orders.cancel.format.post(tokens, formattedMarketplaces),
                                    cancelRequests = [...cancelResponse.cancelRequests];
                                for (let failedRequest of cancelResponse.failedRequests)
                                    if (0 !== failedRequest.tokens.length && failedRequest.marketplace === types.xq.X2Y2)
                                        try {
                                            let msg = "To proceed with this cancel, sign this message to verify that you are the owner of the address",
                                                message = context_Buffer.from(utf8.XL(msg)).toString("hex"),
                                                signer = web3Provider.getSigner(address),
                                                signature = await signer.signMessage(msg),
                                                retryResponse = await api.hi.v1.orders.cancel.format.post(failedRequest.tokens, [{ data: { message, signature }, marketplace: types.xq.X2Y2 }]);
                                            cancelRequests = [...retryResponse.cancelRequests, ...cancelRequests];
                                        } catch (e) {
                                            return (
                                                reportCancelOrderProgress({
                                                    tokenIds: failedRequest.tokens.map((param) => {
                                                        let { tokenId } = param;
                                                        return tokenId;
                                                    }),
                                                    progress: CancelOrderProgress1.TXN_REJECTED,
                                                    marketplace: types.xq.X2Y2,
                                                }),
                                                !1
                                            );
                                        }
                                for (let cancelRequest of cancelRequests) {
                                    let { tokens: tokens1, marketplace, transactionRequest } = cancelRequest,
                                        shouldSkip = tokens1.every((param) => {
                                            let { tokenId } = param,
                                                tokenProgress = skipData[marketplace][tokenId];
                                            return tokenProgress === CancelOrderProgress1.TXN_PENDING || tokenProgress === CancelOrderProgress1.TXN_CONFIRMED;
                                        });
                                    if (!shouldSkip) {
                                        reportCancelOrderProgress({
                                            tokenIds: tokens1.map((param) => {
                                                let { tokenId } = param;
                                                return tokenId;
                                            }),
                                            progress: CancelOrderProgress1.TXN_PENDING,
                                            marketplace: marketplace,
                                        });
                                        try {
                                            let nfts = [];
                                            tokens1.forEach((param) => {
                                                let { tokenId } = param;
                                                nfts.push(data.find((datum) => datum[0].id === tokenId)[0]);
                                            });
                                            let marketplace1 = cancelRequest.marketplace;
                                            await _cancelOrder(notify, web3Provider, {
                                                nfts,
                                                txnData: transactionRequest,
                                                userAddress: address,
                                                marketplace: marketplace1,
                                                onTxnFailed(nfts, marketplace) {
                                                    reportCancelOrderProgress({
                                                        tokenIds: nfts.map((param) => {
                                                            let { id } = param;
                                                            return id;
                                                        }),
                                                        progress: CancelOrderProgress1.TXN_FAILED,
                                                        marketplace,
                                                    });
                                                },
                                                onTxnConfirmed(nfts, marketplace) {
                                                    reportCancelOrderProgress({
                                                        tokenIds: nfts.map((param) => {
                                                            let { id } = param;
                                                            return id;
                                                        }),
                                                        progress: CancelOrderProgress1.TXN_CONFIRMED,
                                                        marketplace,
                                                    });
                                                },
                                            });
                                        } catch (e1) {
                                            return (
                                                reportCancelOrderProgress({
                                                    tokenIds: tokens1.map((param) => {
                                                        let { tokenId } = param;
                                                        return tokenId;
                                                    }),
                                                    progress: CancelOrderProgress1.TXN_REJECTED,
                                                    marketplace: marketplace,
                                                }),
                                                !1
                                            );
                                        }
                                    }
                                }
                                return !0;
                            },
                            [address, web3Provider]
                        );
                    return (0, jsx_runtime.jsxs)(Context.Provider, {
                        value: {
                            ...state,
                            address,
                            chainId,
                            connect,
                            provider: web3Provider,
                            getFeeData,
                            getSigner,
                            setGasLimit(maxFeePerGas, maxPriorityFeePerGas) {
                                (maxFeePerGasRef.current = maxFeePerGas), (maxPriorityFeePerGasRef.current = maxPriorityFeePerGas);
                            },
                            submitOrder: bulkSubmitOrder,
                            cancelOrder: bulkCancelOrder,
                            fulfillOrder,
                            switchToMainnet,
                        },
                        children: [props.children, (0, jsx_runtime.jsx)(ConnectModal, { open: modalOpen, onClose: () => setModalOpen(!1), onConnector: (connector) => initWeb3Provider(connector) })],
                    });
                };
            var context = Provider;
        },
        87475: function () {},
        11987: function (module, __unused_webpack_exports, __webpack_require__) {
            !(function () {
                var e = {
                        477: function (e) {
                            "use strict";
                            e.exports = __webpack_require__(17673);
                        },
                    },
                    t = {};
                function __nccwpck_require__1(o) {
                    var a = t[o];
                    if (void 0 !== a) return a.exports;
                    var s = (t[o] = { exports: {} }),
                        n = !0;
                    try {
                        e[o](s, s.exports, __nccwpck_require__1), (n = !1);
                    } finally {
                        n && delete t[o];
                    }
                    return s.exports;
                }
                __nccwpck_require__1.ab = "//";
                var o = {};
                !(function () {
                    var t,
                        e = o,
                        a = (t = __nccwpck_require__1(477)) && "object" == typeof t && "default" in t ? t.default : t,
                        s = /https?|ftp|gopher|file/;
                    function r(e) {
                        "string" == typeof e && (e = d(e));
                        var e1,
                            a1,
                            s1,
                            n,
                            p,
                            c,
                            i,
                            u,
                            f,
                            t =
                                ((a1 = (e1 = e).auth),
                                (s1 = e1.hostname),
                                (n = e1.protocol || ""),
                                (p = e1.pathname || ""),
                                (c = e1.hash || ""),
                                (i = e1.query || ""),
                                (u = !1),
                                (a1 = a1 ? encodeURIComponent(a1).replace(/%3A/i, ":") + "@" : ""),
                                e1.host ? (u = a1 + e1.host) : s1 && ((u = a1 + (~s1.indexOf(":") ? "[" + s1 + "]" : s1)), e1.port && (u += ":" + e1.port)),
                                i && "object" == typeof i && (i = a.encode(i)),
                                (f = e1.search || (i && "?" + i) || ""),
                                n && ":" !== n.substr(-1) && (n += ":"),
                                e1.slashes || ((!n || s.test(n)) && !1 !== u) ? ((u = "//" + (u || "")), p && "/" !== p[0] && (p = "/" + p)) : u || (u = ""),
                                c && "#" !== c[0] && (c = "#" + c),
                                f && "?" !== f[0] && (f = "?" + f),
                                { protocol: n, host: u, pathname: (p = p.replace(/[?#]/g, encodeURIComponent)), search: (f = f.replace("#", "%23")), hash: c });
                        return "" + t.protocol + t.host + t.pathname + t.search + t.hash;
                    }
                    var n = "http://",
                        c = n + "w.w",
                        i = /^([a-z0-9.+-]*:\/\/\/)([a-z0-9.+-]:\/*)?/i,
                        u = /https?|ftp|gopher|file/;
                    function h(e, t) {
                        var o = "string" == typeof e ? d(e) : e;
                        e = "object" == typeof e ? r(e) : e;
                        var a = d(t),
                            s = "";
                        o.protocol && !o.slashes && ((s = o.protocol), (e = e.replace(o.protocol, "")), (s += "/" === t[0] || "/" === e[0] ? "/" : "")),
                            s && a.protocol && ((s = ""), a.slashes || ((s = a.protocol), (t = t.replace(a.protocol, ""))));
                        var p = e.match(i);
                        p && !a.protocol && ((e = e.substr((s = p[1] + (p[2] || "")).length)), /^\/\/[^/]/.test(t) && (s = s.slice(0, -1)));
                        var f = new URL(e, c + "/"),
                            m = new URL(t, f).toString().replace(c, ""),
                            v = a.protocol || o.protocol;
                        return (
                            (v += o.slashes || a.slashes ? "//" : ""),
                            !s && v ? (m = m.replace(n, v)) : s && (m = m.replace(n, "")),
                            u.test(m) || ~t.indexOf(".") || "/" === e.slice(-1) || "/" === t.slice(-1) || "/" !== m.slice(-1) || (m = m.slice(0, -1)),
                            s && (m = s + ("/" === m[0] ? m.substr(1) : m)),
                            m
                        );
                    }
                    function l() {}
                    (l.prototype.parse = d), (l.prototype.format = r), (l.prototype.resolve = h), (l.prototype.resolveObject = h);
                    var f = /^https?|ftp|gopher|file/,
                        m = /^(.*?)([#?].*)/,
                        v = /^([a-z0-9.+-]*:)(\/{0,3})(.*)/i,
                        _ = /^([a-z0-9.+-]*:)?\/\/\/*/i,
                        b = /^([a-z0-9.+-]*:)(\/{0,2})\[(.*)\]$/i;
                    function d(e, t, o) {
                        if ((void 0 === t && (t = !1), void 0 === o && (o = !1), e && "object" == typeof e && e instanceof l)) return e;
                        var s = (e = e.trim()).match(m);
                        (e = s ? s[1].replace(/\\/g, "/") + s[2] : e.replace(/\\/g, "/")), b.test(e) && "/" !== e.slice(-1) && (e += "/");
                        var n = !/(^javascript)/.test(e) && e.match(v),
                            i = _.test(e),
                            u = "";
                        n &&
                            (f.test(n[1]) || ((u = n[1].toLowerCase()), (e = "" + n[2] + n[3])),
                            n[2] || ((i = !1), f.test(n[1]) ? ((u = n[1]), (e = "" + n[3])) : (e = "//" + n[3])),
                            (3 !== n[2].length && 1 !== n[2].length) || ((u = n[1]), (e = "/" + n[3])));
                        var g,
                            y = (s ? s[1] : e).match(/^https?:\/\/[^/]+(:[0-9]+)(?=\/|$)/),
                            w = y && y[1],
                            C = new l(),
                            U = "",
                            j = "";
                        try {
                            g = new URL(e);
                        } catch (t1) {
                            (U = t1), u || o || !/^\/\//.test(e) || /^\/\/.+[@.]/.test(e) || ((j = "/"), (e = e.substr(1)));
                            try {
                                g = new URL(e, c);
                            } catch (e1) {
                                return (C.protocol = u), (C.href = u), C;
                            }
                        }
                        (C.slashes = i && !j),
                            (C.host = "w.w" === g.host ? "" : g.host),
                            (C.hostname = "w.w" === g.hostname ? "" : g.hostname.replace(/(\[|\])/g, "")),
                            (C.protocol = U ? u || null : g.protocol),
                            (C.search = g.search.replace(/\\/g, "%5C")),
                            (C.hash = g.hash.replace(/\\/g, "%5C"));
                        var x = e.split("#");
                        !C.search && ~x[0].indexOf("?") && (C.search = "?"),
                            C.hash || "" !== x[1] || (C.hash = "#"),
                            (C.query = t ? a.decode(g.search.substr(1)) : C.search.substr(1)),
                            (C.pathname =
                                j +
                                (n
                                    ? g.pathname
                                          .replace(/['^|`]/g, function (e) {
                                              return "%" + e.charCodeAt().toString(16).toUpperCase();
                                          })
                                          .replace(/((?:%[0-9A-F]{2})+)/g, function (e, t) {
                                              try {
                                                  return decodeURIComponent(t)
                                                      .split("")
                                                      .map(function (e) {
                                                          var t = e.charCodeAt();
                                                          return t > 256 || /^[a-z0-9]$/i.test(e) ? e : "%" + t.toString(16).toUpperCase();
                                                      })
                                                      .join("");
                                              } catch (e1) {
                                                  return t;
                                              }
                                          })
                                    : g.pathname)),
                            "about:" === C.protocol && "blank" === C.pathname && ((C.protocol = ""), (C.pathname = "")),
                            U && "/" !== e[0] && (C.pathname = C.pathname.substr(1)),
                            u && !f.test(u) && "/" !== e.slice(-1) && "/" === C.pathname && (C.pathname = ""),
                            (C.path = C.pathname + C.search),
                            (C.auth = [g.username, g.password].map(decodeURIComponent).filter(Boolean).join(":")),
                            (C.port = g.port),
                            w && !C.host.endsWith(w) && ((C.host += w), (C.port = w.slice(1))),
                            (C.href = j ? "" + C.pathname + C.search + C.hash : r(C));
                        var q = /^(file)/.test(C.href) ? ["host", "hostname"] : [];
                        return (
                            Object.keys(C).forEach(function (e) {
                                ~q.indexOf(e) || (C[e] = C[e] || null);
                            }),
                            C
                        );
                    }
                    (e.parse = d),
                        (e.format = r),
                        (e.resolve = h),
                        (e.resolveObject = function (e, t) {
                            return d(h(e, t));
                        }),
                        (e.Url = l);
                })(),
                    (module.exports = o);
            })();
        },
        73461: function (module) {
            var n, e;
            "undefined" != typeof __nccwpck_require__ && (__nccwpck_require__.ab = "//"),
                ((e = n = {}).endianness = function () {
                    return "LE";
                }),
                (e.hostname = function () {
                    return "undefined" != typeof location ? location.hostname : "";
                }),
                (e.loadavg = function () {
                    return [];
                }),
                (e.uptime = function () {
                    return 0;
                }),
                (e.freemem = function () {
                    return Number.MAX_VALUE;
                }),
                (e.totalmem = function () {
                    return Number.MAX_VALUE;
                }),
                (e.cpus = function () {
                    return [];
                }),
                (e.type = function () {
                    return "Browser";
                }),
                (e.release = function () {
                    return "undefined" != typeof navigator ? navigator.appVersion : "";
                }),
                (e.networkInterfaces = e.getNetworkInterfaces = function () {
                    return {};
                }),
                (e.arch = function () {
                    return "javascript";
                }),
                (e.platform = function () {
                    return "browser";
                }),
                (e.tmpdir = e.tmpDir = function () {
                    return "/tmp";
                }),
                (e.EOL = "\n"),
                (e.homedir = function () {
                    return "/";
                }),
                (module.exports = n);
        },
        99647: function (module, __unused_webpack_exports, __webpack_require__) {
            var process = __webpack_require__(34155);
            "undefined" != typeof __nccwpck_require__ && (__nccwpck_require__.ab = "//"),
                {
                    189: function () {
                        !(function (e, t) {
                            "use strict";
                            if (!e.setImmediate) {
                                var t1,
                                    onGlobalMessage,
                                    e1,
                                    e2,
                                    r,
                                    n = 1,
                                    a = {},
                                    s = !1,
                                    i = e.document,
                                    o = Object.getPrototypeOf && Object.getPrototypeOf(e);
                                ((o = o && o.setTimeout ? o : e), "[object process]" === {}.toString.call(e.process))
                                    ? (r = function (e) {
                                          process.nextTick(function () {
                                              runIfPresent(e);
                                          });
                                      })
                                    : (function () {
                                          if (e.postMessage && !e.importScripts) {
                                              var t = !0,
                                                  n = e.onmessage;
                                              return (
                                                  (e.onmessage = function () {
                                                      t = !1;
                                                  }),
                                                  e.postMessage("", "*"),
                                                  (e.onmessage = n),
                                                  t
                                              );
                                          }
                                      })()
                                    ? ((t1 = "setImmediate$" + Math.random() + "$"),
                                      (onGlobalMessage = function (n) {
                                          n.source === e && "string" == typeof n.data && 0 === n.data.indexOf(t1) && runIfPresent(+n.data.slice(t1.length));
                                      }),
                                      e.addEventListener ? e.addEventListener("message", onGlobalMessage, !1) : e.attachEvent("onmessage", onGlobalMessage),
                                      (r = function (n) {
                                          e.postMessage(t1 + n, "*");
                                      }))
                                    : e.MessageChannel
                                    ? (((e1 = new MessageChannel()).port1.onmessage = function (e) {
                                          runIfPresent(e.data);
                                      }),
                                      (r = function (t) {
                                          e1.port2.postMessage(t);
                                      }))
                                    : i && "onreadystatechange" in i.createElement("script")
                                    ? ((e2 = i.documentElement),
                                      (r = function (t) {
                                          var n = i.createElement("script");
                                          (n.onreadystatechange = function () {
                                              runIfPresent(t), (n.onreadystatechange = null), e2.removeChild(n), (n = null);
                                          }),
                                              e2.appendChild(n);
                                      }))
                                    : (r = function (e) {
                                          setTimeout(runIfPresent, 0, e);
                                      }),
                                    (o.setImmediate = function (e) {
                                        "function" != typeof e && (e = Function("" + e));
                                        for (var t = Array(arguments.length - 1), s = 0; s < t.length; s++) t[s] = arguments[s + 1];
                                        var i = { callback: e, args: t };
                                        return (a[n] = i), r(n), n++;
                                    }),
                                    (o.clearImmediate = clearImmediate);
                            }
                            function clearImmediate(e) {
                                delete a[e];
                            }
                            function runIfPresent(e) {
                                if (s) setTimeout(runIfPresent, 0, e);
                                else {
                                    var t = a[e];
                                    if (t) {
                                        s = !0;
                                        try {
                                            !(function (e) {
                                                var n = e.callback,
                                                    a = e.args;
                                                switch (a.length) {
                                                    case 0:
                                                        n();
                                                        break;
                                                    case 1:
                                                        n(a[0]);
                                                        break;
                                                    case 2:
                                                        n(a[0], a[1]);
                                                        break;
                                                    case 3:
                                                        n(a[0], a[1], a[2]);
                                                        break;
                                                    default:
                                                        n.apply(void 0, a);
                                                }
                                            })(t);
                                        } finally {
                                            clearImmediate(e), (s = !1);
                                        }
                                    }
                                }
                            }
                        })("undefined" == typeof self ? (void 0 === __webpack_require__.g ? this : __webpack_require__.g) : self);
                    },
                }[189](),
                (module.exports = {});
        },
        25675: function (module, __unused_webpack_exports, __webpack_require__) {
            module.exports = __webpack_require__(19749);
        },
        4298: function (module, __unused_webpack_exports, __webpack_require__) {
            module.exports = __webpack_require__(63573);
        },
        81830: function (__unused_webpack_module, exports) {
            (exports.encode = function (obj) {
                var str = "";
                for (var i in obj) obj.hasOwnProperty(i) && (str.length && (str += "&"), (str += encodeURIComponent(i) + "=" + encodeURIComponent(obj[i])));
                return str;
            }),
                (exports.decode = function (qs) {
                    for (var qry = {}, pairs = qs.split("&"), i = 0, l = pairs.length; i < l; i++) {
                        var pair = pairs[i].split("=");
                        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);
                    }
                    return qry;
                });
        },
        64187: function (module) {
            var re = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,
                parts = ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"];
            module.exports = function (str) {
                var path,
                    names,
                    query,
                    data,
                    src = str,
                    b = str.indexOf("["),
                    e = str.indexOf("]");
                -1 != b && -1 != e && (str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ";") + str.substring(e, str.length));
                for (var m = re.exec(str || ""), uri = {}, i = 14; i--; ) uri[parts[i]] = m[i] || "";
                return (
                    -1 != b &&
                        -1 != e &&
                        ((uri.source = src), (uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ":")), (uri.authority = uri.authority.replace("[", "").replace("]", "").replace(/;/g, ":")), (uri.ipv6uri = !0)),
                    (uri.pathNames =
                        ((names = (path = uri.path).replace(/\/{2,9}/g, "/").split("/")),
                        ("/" == path.substr(0, 1) || 0 === path.length) && names.splice(0, 1),
                        "/" == path.substr(path.length - 1, 1) && names.splice(names.length - 1, 1),
                        names)),
                    (uri.queryKey =
                        ((query = uri.query),
                        (data = {}),
                        query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {
                            $1 && (data[$1] = $2);
                        }),
                        data)),
                    uri
                );
            };
        },
        12352: function (module) {
            "use strict";
            let processFn = (fn, opts) =>
                function () {
                    let P = opts.promiseModule,
                        args = Array(arguments.length);
                    for (let i = 0; i < arguments.length; i++) args[i] = arguments[i];
                    return new P((resolve, reject) => {
                        opts.errorFirst
                            ? args.push(function (err, result) {
                                  if (opts.multiArgs) {
                                      let results = Array(arguments.length - 1);
                                      for (let i = 1; i < arguments.length; i++) results[i - 1] = arguments[i];
                                      err ? (results.unshift(err), reject(results)) : resolve(results);
                                  } else err ? reject(err) : resolve(result);
                              })
                            : args.push(function (result) {
                                  if (opts.multiArgs) {
                                      let results = Array(arguments.length - 1);
                                      for (let i = 0; i < arguments.length; i++) results[i] = arguments[i];
                                      resolve(results);
                                  } else resolve(result);
                              }),
                            fn.apply(this, args);
                    });
                };
            module.exports = (obj, opts) => {
                let ret;
                opts = Object.assign({ exclude: [/.+(Sync|Stream)$/], errorFirst: !0, promiseModule: Promise }, opts);
                let filter = (key) => {
                    let match = (pattern) => ("string" == typeof pattern ? key === pattern : pattern.test(key));
                    return opts.include ? opts.include.some(match) : !opts.exclude.some(match);
                };
                for (let key in ((ret =
                    "function" == typeof obj
                        ? function () {
                              return opts.excludeMain ? obj.apply(this, arguments) : processFn(obj, opts).apply(this, arguments);
                          }
                        : Object.create(Object.getPrototypeOf(obj))),
                obj)) {
                    let x = obj[key];
                    ret[key] = "function" == typeof x && filter(key) ? processFn(x, opts) : x;
                }
                return ret;
            };
        },
        57423: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.r(__webpack_exports__),
                __webpack_require__.d(__webpack_exports__, {
                    Children: function () {
                        return R;
                    },
                    Component: function () {
                        return m;
                    },
                    Fragment: function () {
                        return d;
                    },
                    PureComponent: function () {
                        return compat_module_C;
                    },
                    Suspense: function () {
                        return U;
                    },
                    SuspenseList: function () {
                        return O;
                    },
                    cloneElement: function () {
                        return K;
                    },
                    createContext: function () {
                        return M;
                    },
                    createElement: function () {
                        return h;
                    },
                    createFactory: function () {
                        return G;
                    },
                    createPortal: function () {
                        return compat_module_z;
                    },
                    createRef: function () {
                        return y;
                    },
                    default: function () {
                        return compat_module;
                    },
                    findDOMNode: function () {
                        return X;
                    },
                    forwardRef: function () {
                        return S;
                    },
                    hydrate: function () {
                        return V;
                    },
                    isValidElement: function () {
                        return J;
                    },
                    lazy: function () {
                        return compat_module_L;
                    },
                    memo: function () {
                        return compat_module_;
                    },
                    render: function () {
                        return compat_module_T;
                    },
                    unmountComponentAtNode: function () {
                        return Q;
                    },
                    unstable_batchedUpdates: function () {
                        return Y;
                    },
                    useCallback: function () {
                        return hooks_module_T;
                    },
                    useContext: function () {
                        return hooks_module_w;
                    },
                    useDebugValue: function () {
                        return hooks_module_A;
                    },
                    useEffect: function () {
                        return hooks_module_l;
                    },
                    useErrorBoundary: function () {
                        return F;
                    },
                    useImperativeHandle: function () {
                        return hooks_module_s;
                    },
                    useLayoutEffect: function () {
                        return hooks_module_y;
                    },
                    useMemo: function () {
                        return hooks_module_h;
                    },
                    useReducer: function () {
                        return hooks_module_p;
                    },
                    useRef: function () {
                        return hooks_module_d;
                    },
                    useState: function () {
                        return hooks_module_m;
                    },
                    version: function () {
                        return B;
                    },
                });
            var n,
                u,
                i,
                t,
                r,
                o,
                f,
                e = {},
                c = [],
                s = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord/i;
            function a(n, l) {
                for (var u in l) n[u] = l[u];
                return n;
            }
            function v(n) {
                var l = n.parentNode;
                l && l.removeChild(n);
            }
            function h(n, l, u) {
                var i,
                    t = arguments,
                    r = {};
                for (i in l) "key" !== i && "ref" !== i && (r[i] = l[i]);
                if (arguments.length > 3) for (u = [u], i = 3; i < arguments.length; i++) u.push(t[i]);
                if ((null != u && (r.children = u), "function" == typeof n && null != n.defaultProps)) for (i in n.defaultProps) void 0 === r[i] && (r[i] = n.defaultProps[i]);
                return p(n, r, l && l.key, l && l.ref, null);
            }
            function p(l, u, i, t, r) {
                var o = { type: l, props: u, key: i, ref: t, __k: null, __: null, __b: 0, __e: null, __d: void 0, __c: null, constructor: void 0, __v: r };
                return null == r && (o.__v = o), n.vnode && n.vnode(o), o;
            }
            function y() {
                return {};
            }
            function d(n) {
                return n.children;
            }
            function m(n, l) {
                (this.props = n), (this.context = l);
            }
            function w(n, l) {
                if (null == l) return n.__ ? w(n.__, n.__.__k.indexOf(n) + 1) : null;
                for (var u; l < n.__k.length; l++) if (null != (u = n.__k[l]) && null != u.__e) return u.__e;
                return "function" == typeof n.type ? w(n) : null;
            }
            function g(l) {
                ((!l.__d && (l.__d = !0) && u.push(l) && !i++) || r !== n.debounceRendering) && ((r = n.debounceRendering) || t)(_);
            }
            function _() {
                for (var n; (i = u.length); )
                    (n = u.sort(function (n, l) {
                        return n.__v.__b - l.__v.__b;
                    })),
                        (u = []),
                        n.some(function (n) {
                            var u, i, t, r, o, f;
                            n.__d &&
                                ((o = (r = n.__v).__e),
                                (f = n.__P) &&
                                    ((u = []),
                                    ((i = a({}, r)).__v = i),
                                    (t = A(f, r, i, n.__n, void 0 !== f.ownerSVGElement, null, u, null == o ? w(r) : o)),
                                    T(u, r),
                                    t != o &&
                                        (function k(n) {
                                            var l, u;
                                            if (null != (n = n.__) && null != n.__c) {
                                                for (n.__e = n.__c.base = null, l = 0; l < n.__k.length; l++)
                                                    if (null != (u = n.__k[l]) && null != u.__e) {
                                                        n.__e = n.__c.base = u.__e;
                                                        break;
                                                    }
                                                return k(n);
                                            }
                                        })(r)));
                        });
            }
            function b(n, l, u, i, t, r, o, f, s) {
                var a,
                    h,
                    p,
                    y,
                    d,
                    m,
                    k,
                    g = (u && u.__k) || c,
                    _ = g.length;
                if (
                    (f == e && (f = null != r ? r[0] : _ ? w(u, 0) : null),
                    (a = 0),
                    (l.__k = x(l.__k, function (u) {
                        if (null != u) {
                            if (((u.__ = l), (u.__b = l.__b + 1), null === (p = g[a]) || (p && u.key == p.key && u.type === p.type))) g[a] = void 0;
                            else
                                for (h = 0; h < _; h++) {
                                    if ((p = g[h]) && u.key == p.key && u.type === p.type) {
                                        g[h] = void 0;
                                        break;
                                    }
                                    p = null;
                                }
                            if (((y = A(n, u, (p = p || e), i, t, r, o, f, s)), (h = u.ref) && p.ref != h && (k || (k = []), p.ref && k.push(p.ref, null, u), k.push(h, u.__c || y, u)), null != y)) {
                                var c;
                                if ((null == m && (m = y), void 0 !== u.__d)) (c = u.__d), (u.__d = void 0);
                                else if (r == p || y != f || null == y.parentNode) {
                                    n: if (null == f || f.parentNode !== n) n.appendChild(y), (c = null);
                                    else {
                                        for (d = f, h = 0; (d = d.nextSibling) && h < _; h += 2) if (d == y) break n;
                                        n.insertBefore(y, f), (c = f);
                                    }
                                    "option" == l.type && (n.value = "");
                                }
                                (f = void 0 !== c ? c : y.nextSibling), "function" == typeof l.type && (l.__d = f);
                            } else f && p.__e == f && f.parentNode != n && (f = w(p));
                        }
                        return a++, u;
                    })),
                    (l.__e = m),
                    null != r && "function" != typeof l.type)
                )
                    for (a = r.length; a--; ) null != r[a] && v(r[a]);
                for (a = _; a--; ) null != g[a] && D(g[a], g[a]);
                if (k) for (a = 0; a < k.length; a++) j(k[a], k[++a], k[++a]);
            }
            function x(n, l, u) {
                if ((null == u && (u = []), null == n || "boolean" == typeof n)) l && u.push(l(null));
                else if (Array.isArray(n)) for (var i = 0; i < n.length; i++) x(n[i], l, u);
                else u.push(l ? l("string" == typeof n || "number" == typeof n ? p(null, n, null, null, n) : null != n.__e || null != n.__c ? p(n.type, n.props, n.key, null, n.__v) : n) : n);
                return u;
            }
            function C(n, l, u) {
                "-" === l[0] ? n.setProperty(l, u) : (n[l] = "number" == typeof u && !1 === s.test(l) ? u + "px" : null == u ? "" : u);
            }
            function N(n, l, u, i, t) {
                var r, o, f, e, c;
                if ((t ? "className" === l && (l = "class") : "class" === l && (l = "className"), "style" === l)) {
                    if (((r = n.style), "string" == typeof u)) r.cssText = u;
                    else {
                        if (("string" == typeof i && ((r.cssText = ""), (i = null)), i)) for (e in i) (u && e in u) || C(r, e, "");
                        if (u) for (c in u) (i && u[c] === i[c]) || C(r, c, u[c]);
                    }
                } else
                    "o" === l[0] && "n" === l[1]
                        ? ((o = l !== (l = l.replace(/Capture$/, ""))), (l = ((f = l.toLowerCase()) in n ? f : l).slice(2)), u ? (i || n.addEventListener(l, z, o), ((n.l || (n.l = {}))[l] = u)) : n.removeEventListener(l, z, o))
                        : "list" !== l && "tagName" !== l && "form" !== l && "type" !== l && "size" !== l && !t && l in n
                        ? (n[l] = null == u ? "" : u)
                        : "function" != typeof u &&
                          "dangerouslySetInnerHTML" !== l &&
                          (l !== (l = l.replace(/^xlink:?/, ""))
                              ? null == u || !1 === u
                                  ? n.removeAttributeNS("http://www.w3.org/1999/xlink", l.toLowerCase())
                                  : n.setAttributeNS("http://www.w3.org/1999/xlink", l.toLowerCase(), u)
                              : null != u && (!1 !== u || /^ar/.test(l))
                              ? n.setAttribute(l, u)
                              : n.removeAttribute(l));
            }
            function z(l) {
                this.l[l.type](n.event ? n.event(l) : l);
            }
            function A(l, u, i, t, r, o, f, e1, c1) {
                var s,
                    v,
                    h,
                    p,
                    y,
                    w,
                    k,
                    g,
                    _,
                    x,
                    P = u.type;
                if (void 0 !== u.constructor) return null;
                (s = n.__b) && s(u);
                try {
                    n: if ("function" == typeof P) {
                        if (
                            ((g = u.props),
                            (_ = (s = P.contextType) && t[s.__c]),
                            (x = s ? (_ ? _.props.value : s.__) : t),
                            i.__c
                                ? (k = (v = u.__c = i.__c).__ = v.__E)
                                : ("prototype" in P && P.prototype.render ? (u.__c = v = new P(g, x)) : ((u.__c = v = new m(g, x)), (v.constructor = P), (v.render = E)),
                                  _ && _.sub(v),
                                  (v.props = g),
                                  v.state || (v.state = {}),
                                  (v.context = x),
                                  (v.__n = t),
                                  (h = v.__d = !0),
                                  (v.__h = [])),
                            null == v.__s && (v.__s = v.state),
                            null != P.getDerivedStateFromProps && (v.__s == v.state && (v.__s = a({}, v.__s)), a(v.__s, P.getDerivedStateFromProps(g, v.__s))),
                            (p = v.props),
                            (y = v.state),
                            h)
                        )
                            null == P.getDerivedStateFromProps && null != v.componentWillMount && v.componentWillMount(), null != v.componentDidMount && v.__h.push(v.componentDidMount);
                        else {
                            if (
                                (null == P.getDerivedStateFromProps && g !== p && null != v.componentWillReceiveProps && v.componentWillReceiveProps(g, x),
                                (!v.__e && null != v.shouldComponentUpdate && !1 === v.shouldComponentUpdate(g, v.__s, x)) || (u.__v === i.__v && !v.__))
                            ) {
                                for (v.props = g, v.state = v.__s, u.__v !== i.__v && (v.__d = !1), v.__v = u, u.__e = i.__e, u.__k = i.__k, v.__h.length && f.push(v), s = 0; s < u.__k.length; s++) u.__k[s] && (u.__k[s].__ = u);
                                break n;
                            }
                            null != v.componentWillUpdate && v.componentWillUpdate(g, v.__s, x),
                                null != v.componentDidUpdate &&
                                    v.__h.push(function () {
                                        v.componentDidUpdate(p, y, w);
                                    });
                        }
                        (v.context = x),
                            (v.props = g),
                            (v.state = v.__s),
                            (s = n.__r) && s(u),
                            (v.__d = !1),
                            (v.__v = u),
                            (v.__P = l),
                            (s = v.render(v.props, v.state, v.context)),
                            (u.__k = null != s && s.type == d && null == s.key ? s.props.children : Array.isArray(s) ? s : [s]),
                            null != v.getChildContext && (t = a(a({}, t), v.getChildContext())),
                            h || null == v.getSnapshotBeforeUpdate || (w = v.getSnapshotBeforeUpdate(p, y)),
                            b(l, u, i, t, r, o, f, e1, c1),
                            (v.base = u.__e),
                            v.__h.length && f.push(v),
                            k && (v.__E = v.__ = null),
                            (v.__e = !1);
                    } else
                        null == o && u.__v === i.__v
                            ? ((u.__k = i.__k), (u.__e = i.__e))
                            : (u.__e = (function (n, l, u, i, t, r, o, f) {
                                  var s,
                                      a,
                                      v,
                                      h,
                                      p,
                                      y = u.props,
                                      d = l.props;
                                  if (((t = "svg" === l.type || t), null != r)) {
                                      for (s = 0; s < r.length; s++)
                                          if (null != (a = r[s]) && ((null === l.type ? 3 === a.nodeType : a.localName === l.type) || n == a)) {
                                              (n = a), (r[s] = null);
                                              break;
                                          }
                                  }
                                  if (null == n) {
                                      if (null === l.type) return document.createTextNode(d);
                                      (n = t ? document.createElementNS("http://www.w3.org/2000/svg", l.type) : document.createElement(l.type, d.is && { is: d.is })), (r = null), (f = !1);
                                  }
                                  if (null === l.type) y !== d && n.data != d && (n.data = d);
                                  else {
                                      if ((null != r && (r = c.slice.call(n.childNodes)), (v = (y = u.props || e).dangerouslySetInnerHTML), (h = d.dangerouslySetInnerHTML), !f)) {
                                          if (y === e) for (y = {}, p = 0; p < n.attributes.length; p++) y[n.attributes[p].name] = n.attributes[p].value;
                                          (h || v) && ((h && v && h.__html == v.__html) || (n.innerHTML = (h && h.__html) || ""));
                                      }
                                      (function (n, l, u, i, t) {
                                          var r;
                                          for (r in u) "children" === r || "key" === r || r in l || N(n, r, null, u[r], i);
                                          for (r in l) (t && "function" != typeof l[r]) || "children" === r || "key" === r || "value" === r || "checked" === r || u[r] === l[r] || N(n, r, l[r], u[r], i);
                                      })(n, d, y, t, f),
                                          h ? (l.__k = []) : ((l.__k = l.props.children), b(n, l, u, i, "foreignObject" !== l.type && t, r, o, e, f)),
                                          f ||
                                              ("value" in d && void 0 !== (s = d.value) && s !== n.value && N(n, "value", s, y.value, !1),
                                              "checked" in d && void 0 !== (s = d.checked) && s !== n.checked && N(n, "checked", s, y.checked, !1));
                                  }
                                  return n;
                              })(i.__e, u, i, t, r, o, f, c1));
                    (s = n.diffed) && s(u);
                } catch (l1) {
                    (u.__v = null), n.__e(l1, u, i);
                }
                return u.__e;
            }
            function T(l, u) {
                n.__c && n.__c(u, l),
                    l.some(function (u) {
                        try {
                            (l = u.__h),
                                (u.__h = []),
                                l.some(function (n) {
                                    n.call(u);
                                });
                        } catch (l1) {
                            n.__e(l1, u.__v);
                        }
                    });
            }
            function j(l, u, i) {
                try {
                    "function" == typeof l ? l(u) : (l.current = u);
                } catch (l1) {
                    n.__e(l1, i);
                }
            }
            function D(l, u, i) {
                var t, r, o;
                if ((n.unmount && n.unmount(l), (t = l.ref) && ((t.current && t.current !== l.__e) || j(t, null, u)), i || "function" == typeof l.type || (i = null != (r = l.__e)), (l.__e = l.__d = void 0), null != (t = l.__c))) {
                    if (t.componentWillUnmount)
                        try {
                            t.componentWillUnmount();
                        } catch (l1) {
                            n.__e(l1, u);
                        }
                    t.base = t.__P = null;
                }
                if ((t = l.__k)) for (o = 0; o < t.length; o++) t[o] && D(t[o], u, i);
                null != r && v(r);
            }
            function E(n, l, u) {
                return this.constructor(n, u);
            }
            function H(l, u, i) {
                var t, r, f;
                n.__ && n.__(l, u),
                    (r = (t = i === o) ? null : (i && i.__k) || u.__k),
                    (l = h(d, null, [l])),
                    (f = []),
                    A(u, ((t ? u : i || u).__k = l), r || e, e, void 0 !== u.ownerSVGElement, i && !t ? [i] : r ? null : c.slice.call(u.childNodes), f, i || e, t),
                    T(f, l);
            }
            function L(n, l) {
                var u, i;
                for (i in ((l = a(a({}, n.props), l)), arguments.length > 2 && (l.children = c.slice.call(arguments, 2)), (u = {}), l)) "key" !== i && "ref" !== i && (u[i] = l[i]);
                return p(n.type, u, l.key || n.key, l.ref || n.ref, null);
            }
            function M(n) {
                var l = {},
                    u = {
                        __c: "__cC" + f++,
                        __: n,
                        Consumer: function (n, l) {
                            return n.children(l);
                        },
                        Provider: function (n) {
                            var i,
                                t = this;
                            return (
                                this.getChildContext ||
                                    ((i = []),
                                    (this.getChildContext = function () {
                                        return (l[u.__c] = t), l;
                                    }),
                                    (this.shouldComponentUpdate = function (n) {
                                        t.props.value !== n.value &&
                                            i.some(function (l) {
                                                (l.context = n.value), g(l);
                                            });
                                    }),
                                    (this.sub = function (n) {
                                        i.push(n);
                                        var l = n.componentWillUnmount;
                                        n.componentWillUnmount = function () {
                                            i.splice(i.indexOf(n), 1), l && l.call(n);
                                        };
                                    })),
                                n.children
                            );
                        },
                    };
                return (u.Consumer.contextType = u), (u.Provider.__ = u), u;
            }
            (n = {
                __e: function (n, l) {
                    for (var u, i; (l = l.__); )
                        if ((u = l.__c) && !u.__)
                            try {
                                if (
                                    (u.constructor && null != u.constructor.getDerivedStateFromError && ((i = !0), u.setState(u.constructor.getDerivedStateFromError(n))), null != u.componentDidCatch && ((i = !0), u.componentDidCatch(n)), i)
                                )
                                    return g((u.__E = u));
                            } catch (l1) {
                                n = l1;
                            }
                    throw n;
                },
            }),
                (m.prototype.setState = function (n, l) {
                    var u;
                    (u = this.__s !== this.state ? this.__s : (this.__s = a({}, this.state))), "function" == typeof n && (n = n(u, this.props)), n && a(u, n), null != n && this.__v && (l && this.__h.push(l), g(this));
                }),
                (m.prototype.forceUpdate = function (n) {
                    this.__v && ((this.__e = !0), n && this.__h.push(n), g(this));
                }),
                (m.prototype.render = d),
                (u = []),
                (i = 0),
                (t = "function" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout),
                (o = e),
                (f = 0);
            var hooks_module_t,
                hooks_module_u,
                hooks_module_r,
                hooks_module_i = 0,
                hooks_module_o = [],
                hooks_module_c = n.__r,
                hooks_module_f = n.diffed,
                hooks_module_e = n.__c,
                hooks_module_a = n.unmount;
            function hooks_module_v(t, r) {
                n.__h && n.__h(hooks_module_u, t, hooks_module_i || r), (hooks_module_i = 0);
                var o = hooks_module_u.__H || (hooks_module_u.__H = { __: [], __h: [] });
                return t >= o.__.length && o.__.push({}), o.__[t];
            }
            function hooks_module_m(n) {
                return (hooks_module_i = 1), hooks_module_p(hooks_module_E, n);
            }
            function hooks_module_p(n, r, i) {
                var o = hooks_module_v(hooks_module_t++, 2);
                return (
                    o.__c ||
                        ((o.__c = hooks_module_u),
                        (o.__ = [
                            i ? i(r) : hooks_module_E(void 0, r),
                            function (t) {
                                var u = n(o.__[0], t);
                                o.__[0] !== u && ((o.__[0] = u), o.__c.setState({}));
                            },
                        ])),
                    o.__
                );
            }
            function hooks_module_l(r, i) {
                var o = hooks_module_v(hooks_module_t++, 3);
                !n.__s && hooks_module_x(o.__H, i) && ((o.__ = r), (o.__H = i), hooks_module_u.__H.__h.push(o));
            }
            function hooks_module_y(r, i) {
                var o = hooks_module_v(hooks_module_t++, 4);
                !n.__s && hooks_module_x(o.__H, i) && ((o.__ = r), (o.__H = i), hooks_module_u.__h.push(o));
            }
            function hooks_module_d(n) {
                return (
                    (hooks_module_i = 5),
                    hooks_module_h(function () {
                        return { current: n };
                    }, [])
                );
            }
            function hooks_module_s(n, t, u) {
                (hooks_module_i = 6),
                    hooks_module_y(
                        function () {
                            "function" == typeof n ? n(t()) : n && (n.current = t());
                        },
                        null == u ? u : u.concat(n)
                    );
            }
            function hooks_module_h(n, u) {
                var r = hooks_module_v(hooks_module_t++, 7);
                return hooks_module_x(r.__H, u) ? ((r.__H = u), (r.__h = n), (r.__ = n())) : r.__;
            }
            function hooks_module_T(n, t) {
                return (
                    (hooks_module_i = 8),
                    hooks_module_h(function () {
                        return n;
                    }, t)
                );
            }
            function hooks_module_w(n) {
                var r = hooks_module_u.context[n.__c],
                    i = hooks_module_v(hooks_module_t++, 9);
                return (i.__c = n), r ? (null == i.__ && ((i.__ = !0), r.sub(hooks_module_u)), r.props.value) : n.__;
            }
            function hooks_module_A(t, u) {
                n.useDebugValue && n.useDebugValue(u ? u(t) : t);
            }
            function F(n) {
                var r = hooks_module_v(hooks_module_t++, 10),
                    i = hooks_module_m();
                return (
                    (r.__ = n),
                    hooks_module_u.componentDidCatch ||
                        (hooks_module_u.componentDidCatch = function (n) {
                            r.__ && r.__(n), i[1](n);
                        }),
                    [
                        i[0],
                        function () {
                            i[1](void 0);
                        },
                    ]
                );
            }
            function hooks_module_() {
                hooks_module_o.some(function (t) {
                    if (t.__P)
                        try {
                            t.__H.__h.forEach(hooks_module_g), t.__H.__h.forEach(q), (t.__H.__h = []);
                        } catch (u) {
                            return (t.__H.__h = []), n.__e(u, t.__v), !0;
                        }
                }),
                    (hooks_module_o = []);
            }
            function hooks_module_g(n) {
                n.t && n.t();
            }
            function q(n) {
                var t = n.__();
                "function" == typeof t && (n.t = t);
            }
            function hooks_module_x(n, t) {
                return (
                    !n ||
                    t.some(function (t, u) {
                        return t !== n[u];
                    })
                );
            }
            function hooks_module_E(n, t) {
                return "function" == typeof t ? t(n) : t;
            }
            function compat_module_E(n, t) {
                for (var e in t) n[e] = t[e];
                return n;
            }
            function compat_module_w(n, t) {
                for (var e in n) if ("__source" !== e && !(e in t)) return !0;
                for (var r in t) if ("__source" !== r && n[r] !== t[r]) return !0;
                return !1;
            }
            (n.__r = function (n) {
                hooks_module_c && hooks_module_c(n), (hooks_module_t = 0), (hooks_module_u = n.__c).__H && (hooks_module_u.__H.__h.forEach(hooks_module_g), hooks_module_u.__H.__h.forEach(q), (hooks_module_u.__H.__h = []));
            }),
                (n.diffed = function (t) {
                    hooks_module_f && hooks_module_f(t);
                    var u = t.__c;
                    if (u) {
                        var i = u.__H;
                        i &&
                            i.__h.length &&
                            ((1 !== hooks_module_o.push(u) && hooks_module_r === n.requestAnimationFrame) ||
                                (
                                    (hooks_module_r = n.requestAnimationFrame) ||
                                    function (n) {
                                        var t,
                                            u = function () {
                                                clearTimeout(r), cancelAnimationFrame(t), setTimeout(n);
                                            },
                                            r = setTimeout(u, 100);
                                        "undefined" != typeof window && (t = requestAnimationFrame(u));
                                    }
                                )(hooks_module_));
                    }
                }),
                (n.__c = function (t, u) {
                    u.some(function (t) {
                        try {
                            t.__h.forEach(hooks_module_g),
                                (t.__h = t.__h.filter(function (n) {
                                    return !n.__ || q(n);
                                }));
                        } catch (r) {
                            u.some(function (n) {
                                n.__h && (n.__h = []);
                            }),
                                (u = []),
                                n.__e(r, t.__v);
                        }
                    }),
                        hooks_module_e && hooks_module_e(t, u);
                }),
                (n.unmount = function (t) {
                    hooks_module_a && hooks_module_a(t);
                    var u = t.__c;
                    if (u) {
                        var r = u.__H;
                        if (r)
                            try {
                                r.__.forEach(function (n) {
                                    return n.t && n.t();
                                });
                            } catch (t1) {
                                n.__e(t1, u.__v);
                            }
                    }
                });
            var compat_module_C = (function (n) {
                var t;
                function r(t) {
                    var e;
                    return ((e = n.call(this, t) || this).isPureReactComponent = !0), e;
                }
                return (
                    ((t = r).prototype = Object.create(n.prototype)),
                    (t.prototype.constructor = t),
                    (t.__proto__ = n),
                    (r.prototype.shouldComponentUpdate = function (n, t) {
                        return compat_module_w(this.props, n) || compat_module_w(this.state, t);
                    }),
                    r
                );
            })(m);
            function compat_module_(n, t) {
                function e(n) {
                    var e = this.props.ref,
                        r = e == n.ref;
                    return !r && e && (e.call ? e(null) : (e.current = null)), t ? !t(this.props, n) || !r : compat_module_w(this.props, n);
                }
                function r(t) {
                    return (this.shouldComponentUpdate = e), h(n, compat_module_E({}, t));
                }
                return (r.prototype.isReactComponent = !0), (r.displayName = "Memo(" + (n.displayName || n.name) + ")"), (r.t = !0), r;
            }
            var compat_module_A = n.__b;
            function S(n) {
                function t(t) {
                    var e = compat_module_E({}, t);
                    return delete e.ref, n(e, t.ref);
                }
                return (t.prototype.isReactComponent = t.t = !0), (t.displayName = "ForwardRef(" + (n.displayName || n.name) + ")"), t;
            }
            n.__b = function (n) {
                n.type && n.type.t && n.ref && ((n.props.ref = n.ref), (n.ref = null)), compat_module_A && compat_module_A(n);
            };
            var compat_module_k = function (n, t) {
                    return n
                        ? x(n).reduce(function (n, e, r) {
                              return n.concat(t(e, r));
                          }, [])
                        : null;
                },
                R = {
                    map: compat_module_k,
                    forEach: compat_module_k,
                    count: function (n) {
                        return n ? x(n).length : 0;
                    },
                    only: function (n) {
                        if (1 !== (n = x(n)).length) throw Error("Children.only() expects only one child.");
                        return n[0];
                    },
                    toArray: x,
                },
                compat_module_F = n.__e;
            function U() {
                (this.__u = 0), (this.o = null), (this.__b = null);
            }
            function compat_module_M(n) {
                var t = n.__.__c;
                return t && t.u && t.u(n);
            }
            function compat_module_L(n) {
                var t, e, r;
                function o(o) {
                    if (
                        (t ||
                            (t = n()).then(
                                function (n) {
                                    e = n.default || n;
                                },
                                function (n) {
                                    r = n;
                                }
                            ),
                        r)
                    )
                        throw r;
                    if (!e) throw t;
                    return h(e, o);
                }
                return (o.displayName = "Lazy"), (o.t = !0), o;
            }
            function O() {
                (this.i = null), (this.l = null);
            }
            (n.__e = function (n, t, e) {
                if (n.then) {
                    for (var r, o = t; (o = o.__); ) if ((r = o.__c) && r.__c) return r.__c(n, t.__c);
                }
                compat_module_F(n, t, e);
            }),
                ((U.prototype = new m()).__c = function (n, t) {
                    var e = this;
                    null == e.o && (e.o = []), e.o.push(t);
                    var r = compat_module_M(e.__v),
                        o = !1,
                        u = function () {
                            o || ((o = !0), r ? r(i) : i());
                        };
                    (t.__c = t.componentWillUnmount),
                        (t.componentWillUnmount = function () {
                            u(), t.__c && t.__c();
                        });
                    var i = function () {
                        var n;
                        if (!--e.__u) for (e.__v.__k[0] = e.state.u, e.setState({ u: (e.__b = null) }); (n = e.o.pop()); ) n.forceUpdate();
                    };
                    e.__u++ || e.setState({ u: (e.__b = e.__v.__k[0]) }), n.then(u, u);
                }),
                (U.prototype.render = function (n, t) {
                    return (
                        this.__b &&
                            ((this.__v.__k[0] = (function compat_module_N(n) {
                                return n && (((n = compat_module_E({}, n)).__c = null), (n.__k = n.__k && n.__k.map(compat_module_N))), n;
                            })(this.__b)),
                            (this.__b = null)),
                        [h(m, null, t.u ? null : n.children), t.u && n.fallback]
                    );
                });
            var compat_module_P = function (n, t, e) {
                if ((++e[1] === e[0] && n.l.delete(t), n.props.revealOrder && ("t" !== n.props.revealOrder[0] || !n.l.size)))
                    for (e = n.i; e; ) {
                        for (; e.length > 3; ) e.pop()();
                        if (e[1] < e[0]) break;
                        n.i = e = e[2];
                    }
            };
            ((O.prototype = new m()).u = function (n) {
                var t = this,
                    e = compat_module_M(t.__v),
                    r = t.l.get(n);
                return (
                    r[0]++,
                    function (o) {
                        var u = function () {
                            t.props.revealOrder ? (r.push(o), compat_module_P(t, n, r)) : o();
                        };
                        e ? e(u) : u();
                    }
                );
            }),
                (O.prototype.render = function (n) {
                    (this.i = null), (this.l = new Map());
                    var t = x(n.children);
                    n.revealOrder && "b" === n.revealOrder[0] && t.reverse();
                    for (var e = t.length; e--; ) this.l.set(t[e], (this.i = [1, 0, this.i]));
                    return n.children;
                }),
                (O.prototype.componentDidUpdate = O.prototype.componentDidMount = function () {
                    var n = this;
                    n.l.forEach(function (t, e) {
                        compat_module_P(n, e, t);
                    });
                });
            var W = (function () {
                function n() {}
                var t = n.prototype;
                return (
                    (t.getChildContext = function () {
                        return this.props.context;
                    }),
                    (t.render = function (n) {
                        return n.children;
                    }),
                    n
                );
            })();
            function compat_module_j(n) {
                var t = this,
                    e = n.container,
                    r = h(W, { context: t.context }, n.vnode);
                return (
                    t.s && t.s !== e && (t.v.parentNode && t.s.removeChild(t.v), D(t.h), (t.p = !1)),
                    n.vnode
                        ? t.p
                            ? ((e.__k = t.__k), H(r, e), (t.__k = e.__k))
                            : ((t.v = document.createTextNode("")), H("", e, o), e.appendChild(t.v), (t.p = !0), (t.s = e), H(r, e, t.v), (t.__k = t.v.__k))
                        : t.p && (t.v.parentNode && t.s.removeChild(t.v), D(t.h)),
                    (t.h = r),
                    (t.componentWillUnmount = function () {
                        t.v.parentNode && t.s.removeChild(t.v), D(t.h);
                    }),
                    null
                );
            }
            function compat_module_z(n, t) {
                return h(compat_module_j, { vnode: n, container: t });
            }
            var compat_module_D = /^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|fill|flood|font|glyph(?!R)|horiz|marker(?!H|W|U)|overline|paint|stop|strikethrough|stroke|text(?!L)|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/;
            m.prototype.isReactComponent = {};
            var compat_module_H = ("undefined" != typeof Symbol && Symbol.for && Symbol.for("react.element")) || 60103;
            function compat_module_T(n, t, e) {
                if (null == t.__k) for (; t.firstChild; ) t.removeChild(t.firstChild);
                return H(n, t), "function" == typeof e && e(), n ? n.__c : null;
            }
            function V(n, t, e) {
                return H(n, t, o), "function" == typeof e && e(), n ? n.__c : null;
            }
            var Z = n.event;
            function compat_module_I(n, t) {
                n["UNSAFE_" + t] &&
                    !n[t] &&
                    Object.defineProperty(n, t, {
                        configurable: !1,
                        get: function () {
                            return this["UNSAFE_" + t];
                        },
                        set: function (n) {
                            this["UNSAFE_" + t] = n;
                        },
                    });
            }
            n.event = function (n) {
                Z && (n = Z(n)), (n.persist = function () {});
                var t = !1,
                    e = !1,
                    r = n.stopPropagation;
                n.stopPropagation = function () {
                    r.call(n), (t = !0);
                };
                var o = n.preventDefault;
                return (
                    (n.preventDefault = function () {
                        o.call(n), (e = !0);
                    }),
                    (n.isPropagationStopped = function () {
                        return t;
                    }),
                    (n.isDefaultPrevented = function () {
                        return e;
                    }),
                    (n.nativeEvent = n)
                );
            };
            var compat_module_$ = {
                    configurable: !0,
                    get: function () {
                        return this.class;
                    },
                },
                compat_module_q = n.vnode;
            n.vnode = function (n) {
                n.$$typeof = compat_module_H;
                var r,
                    o,
                    u,
                    t = n.type,
                    e = n.props;
                if (t) {
                    if ((e.class != e.className && ((compat_module_$.enumerable = "className" in e), null != e.className && (e.class = e.className), Object.defineProperty(e, "className", compat_module_$)), "function" != typeof t)) {
                        for (u in (e.defaultValue && void 0 !== e.value && (e.value || 0 === e.value || (e.value = e.defaultValue), delete e.defaultValue),
                        Array.isArray(e.value) &&
                            e.multiple &&
                            "select" === t &&
                            (x(e.children).forEach(function (n) {
                                -1 != e.value.indexOf(n.props.value) && (n.props.selected = !0);
                            }),
                            delete e.value),
                        e))
                            if ((r = compat_module_D.test(u))) break;
                        if (r) for (u in ((o = n.props = {}), e)) o[compat_module_D.test(u) ? u.replace(/[A-Z0-9]/, "-$&").toLowerCase() : u] = e[u];
                    }
                    !(function () {
                        var e = n.type,
                            r = n.props;
                        if (r && "string" == typeof e) {
                            var o = {};
                            for (var u in r) /^on(Ani|Tra|Tou)/.test(u) && ((r[u.toLowerCase()] = r[u]), delete r[u]), (o[u.toLowerCase()] = u);
                            if (
                                (o.ondoubleclick && ((r.ondblclick = r[o.ondoubleclick]), delete r[o.ondoubleclick]),
                                o.onbeforeinput && ((r.onbeforeinput = r[o.onbeforeinput]), delete r[o.onbeforeinput]),
                                o.onchange && ("textarea" === e || ("input" === e.toLowerCase() && !/^fil|che|ra/i.test(r.type))))
                            ) {
                                var i = o.oninput || "oninput";
                                r[i] || ((r[i] = r[o.onchange]), delete r[o.onchange]);
                            }
                        }
                    })(),
                        "function" == typeof t &&
                            !t.m &&
                            t.prototype &&
                            (compat_module_I(t.prototype, "componentWillMount"), compat_module_I(t.prototype, "componentWillReceiveProps"), compat_module_I(t.prototype, "componentWillUpdate"), (t.m = !0));
                }
                compat_module_q && compat_module_q(n);
            };
            var B = "16.8.0";
            function G(n) {
                return h.bind(null, n);
            }
            function J(n) {
                return !!n && n.$$typeof === compat_module_H;
            }
            function K(n) {
                return J(n) ? L.apply(null, arguments) : n;
            }
            function Q(n) {
                return !!n.__k && (H(null, n), !0);
            }
            function X(n) {
                return (n && (n.base || (1 === n.nodeType && n))) || null;
            }
            var Y = function (n, t) {
                    return n(t);
                },
                compat_module = {
                    useState: hooks_module_m,
                    useReducer: hooks_module_p,
                    useEffect: hooks_module_l,
                    useLayoutEffect: hooks_module_y,
                    useRef: hooks_module_d,
                    useImperativeHandle: hooks_module_s,
                    useMemo: hooks_module_h,
                    useCallback: hooks_module_T,
                    useContext: hooks_module_w,
                    useDebugValue: hooks_module_A,
                    version: "16.8.0",
                    Children: R,
                    render: compat_module_T,
                    hydrate: compat_module_T,
                    unmountComponentAtNode: Q,
                    createPortal: compat_module_z,
                    createElement: h,
                    createContext: M,
                    createFactory: G,
                    cloneElement: K,
                    createRef: y,
                    Fragment: d,
                    isValidElement: J,
                    findDOMNode: X,
                    Component: m,
                    PureComponent: compat_module_C,
                    memo: compat_module_,
                    forwardRef: S,
                    unstable_batchedUpdates: Y,
                    Suspense: U,
                    SuspenseList: O,
                    lazy: compat_module_L,
                };
        },
        34155: function (module) {
            var cachedSetTimeout,
                cachedClearTimeout,
                currentQueue,
                process = (module.exports = {});
            function defaultSetTimout() {
                throw Error("setTimeout has not been defined");
            }
            function defaultClearTimeout() {
                throw Error("clearTimeout has not been defined");
            }
            function runTimeout(fun) {
                if (cachedSetTimeout === setTimeout) return setTimeout(fun, 0);
                if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) return (cachedSetTimeout = setTimeout), setTimeout(fun, 0);
                try {
                    return cachedSetTimeout(fun, 0);
                } catch (e1) {
                    try {
                        return cachedSetTimeout.call(null, fun, 0);
                    } catch (e) {
                        return cachedSetTimeout.call(this, fun, 0);
                    }
                }
            }
            !(function () {
                try {
                    cachedSetTimeout = "function" == typeof setTimeout ? setTimeout : defaultSetTimout;
                } catch (e) {
                    cachedSetTimeout = defaultSetTimout;
                }
                try {
                    cachedClearTimeout = "function" == typeof clearTimeout ? clearTimeout : defaultClearTimeout;
                } catch (e1) {
                    cachedClearTimeout = defaultClearTimeout;
                }
            })();
            var queue = [],
                draining = !1,
                queueIndex = -1;
            function cleanUpNextTick() {
                draining && currentQueue && ((draining = !1), currentQueue.length ? (queue = currentQueue.concat(queue)) : (queueIndex = -1), queue.length && drainQueue());
            }
            function drainQueue() {
                if (!draining) {
                    var timeout = runTimeout(cleanUpNextTick);
                    draining = !0;
                    for (var len = queue.length; len; ) {
                        for (currentQueue = queue, queue = []; ++queueIndex < len; ) currentQueue && currentQueue[queueIndex].run();
                        (queueIndex = -1), (len = queue.length);
                    }
                    (currentQueue = null),
                        (draining = !1),
                        (function (marker) {
                            if (cachedClearTimeout === clearTimeout) return clearTimeout(marker);
                            if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) return (cachedClearTimeout = clearTimeout), clearTimeout(marker);
                            try {
                                cachedClearTimeout(marker);
                            } catch (e1) {
                                try {
                                    return cachedClearTimeout.call(null, marker);
                                } catch (e) {
                                    return cachedClearTimeout.call(this, marker);
                                }
                            }
                        })(timeout);
                }
            }
            function Item(fun, array) {
                (this.fun = fun), (this.array = array);
            }
            function noop() {}
            (process.nextTick = function (fun) {
                var args = Array(arguments.length - 1);
                if (arguments.length > 1) for (var i = 1; i < arguments.length; i++) args[i - 1] = arguments[i];
                queue.push(new Item(fun, args)), 1 !== queue.length || draining || runTimeout(drainQueue);
            }),
                (Item.prototype.run = function () {
                    this.fun.apply(null, this.array);
                }),
                (process.title = "browser"),
                (process.browser = !0),
                (process.env = {}),
                (process.argv = []),
                (process.version = ""),
                (process.versions = {}),
                (process.on = noop),
                (process.addListener = noop),
                (process.once = noop),
                (process.off = noop),
                (process.removeListener = noop),
                (process.removeAllListeners = noop),
                (process.emit = noop),
                (process.prependListener = noop),
                (process.prependOnceListener = noop),
                (process.listeners = function (name) {
                    return [];
                }),
                (process.binding = function (name) {
                    throw Error("process.binding is not supported");
                }),
                (process.cwd = function () {
                    return "/";
                }),
                (process.chdir = function (dir) {
                    throw Error("process.chdir is not supported");
                }),
                (process.umask = function () {
                    return 0;
                });
        },
        92592: function (__unused_webpack_module, exports, __webpack_require__) {
            var canPromise = __webpack_require__(47138),
                QRCode = __webpack_require__(95115),
                CanvasRenderer = __webpack_require__(6907),
                SvgRenderer = __webpack_require__(93776);
            function renderCanvas(renderFunc, canvas, text, opts, cb) {
                var args = [].slice.call(arguments, 1),
                    argsNum = args.length,
                    isLastArgCb = "function" == typeof args[argsNum - 1];
                if (!isLastArgCb && !canPromise()) throw Error("Callback required as last argument");
                if (isLastArgCb) {
                    if (argsNum < 2) throw Error("Too few arguments provided");
                    2 === argsNum
                        ? ((cb = text), (text = canvas), (canvas = opts = void 0))
                        : 3 === argsNum && (canvas.getContext && void 0 === cb ? ((cb = opts), (opts = void 0)) : ((cb = opts), (opts = text), (text = canvas), (canvas = void 0)));
                } else {
                    if (argsNum < 1) throw Error("Too few arguments provided");
                    return (
                        1 === argsNum ? ((text = canvas), (canvas = opts = void 0)) : 2 !== argsNum || canvas.getContext || ((opts = text), (text = canvas), (canvas = void 0)),
                        new Promise(function (resolve, reject) {
                            try {
                                var data = QRCode.create(text, opts);
                                resolve(renderFunc(data, canvas, opts));
                            } catch (e) {
                                reject(e);
                            }
                        })
                    );
                }
                try {
                    var data = QRCode.create(text, opts);
                    cb(null, renderFunc(data, canvas, opts));
                } catch (e) {
                    cb(e);
                }
            }
            (exports.create = QRCode.create),
                (exports.toCanvas = renderCanvas.bind(null, CanvasRenderer.render)),
                (exports.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL)),
                (exports.toString = renderCanvas.bind(null, function (data, _, opts) {
                    return SvgRenderer.render(data, opts);
                }));
        },
        47138: function (module) {
            module.exports = function () {
                return "function" == typeof Promise && Promise.prototype && Promise.prototype.then;
            };
        },
        21845: function (__unused_webpack_module, exports, __webpack_require__) {
            var getSymbolSize = __webpack_require__(10242).getSymbolSize;
            (exports.getRowColCoords = function (version) {
                if (1 === version) return [];
                for (var posCount = Math.floor(version / 7) + 2, size = getSymbolSize(version), intervals = 145 === size ? 26 : 2 * Math.ceil((size - 13) / (2 * posCount - 2)), positions = [size - 7], i = 1; i < posCount - 1; i++)
                    positions[i] = positions[i - 1] - intervals;
                return positions.push(6), positions.reverse();
            }),
                (exports.getPositions = function (version) {
                    for (var coords = [], pos = exports.getRowColCoords(version), posLength = pos.length, i = 0; i < posLength; i++)
                        for (var j = 0; j < posLength; j++) (0 !== i || 0 !== j) && (0 !== i || j !== posLength - 1) && (i !== posLength - 1 || 0 !== j) && coords.push([pos[i], pos[j]]);
                    return coords;
                });
        },
        8260: function (module, __unused_webpack_exports, __webpack_require__) {
            var Mode = __webpack_require__(76910),
                ALPHA_NUM_CHARS = [
                    "0",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6",
                    "7",
                    "8",
                    "9",
                    "A",
                    "B",
                    "C",
                    "D",
                    "E",
                    "F",
                    "G",
                    "H",
                    "I",
                    "J",
                    "K",
                    "L",
                    "M",
                    "N",
                    "O",
                    "P",
                    "Q",
                    "R",
                    "S",
                    "T",
                    "U",
                    "V",
                    "W",
                    "X",
                    "Y",
                    "Z",
                    " ",
                    "$",
                    "%",
                    "*",
                    "+",
                    "-",
                    ".",
                    "/",
                    ":",
                ];
            function AlphanumericData(data) {
                (this.mode = Mode.ALPHANUMERIC), (this.data = data);
            }
            (AlphanumericData.getBitsLength = function (length) {
                return 11 * Math.floor(length / 2) + 6 * (length % 2);
            }),
                (AlphanumericData.prototype.getLength = function () {
                    return this.data.length;
                }),
                (AlphanumericData.prototype.getBitsLength = function () {
                    return AlphanumericData.getBitsLength(this.data.length);
                }),
                (AlphanumericData.prototype.write = function (bitBuffer) {
                    var i;
                    for (i = 0; i + 2 <= this.data.length; i += 2) {
                        var value = 45 * ALPHA_NUM_CHARS.indexOf(this.data[i]);
                        (value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1])), bitBuffer.put(value, 11);
                    }
                    this.data.length % 2 && bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6);
                }),
                (module.exports = AlphanumericData);
        },
        97245: function (module) {
            function BitBuffer() {
                (this.buffer = []), (this.length = 0);
            }
            (BitBuffer.prototype = {
                get: function (index) {
                    return ((this.buffer[Math.floor(index / 8)] >>> (7 - (index % 8))) & 1) == 1;
                },
                put: function (num, length) {
                    for (var i = 0; i < length; i++) this.putBit(((num >>> (length - i - 1)) & 1) == 1);
                },
                getLengthInBits: function () {
                    return this.length;
                },
                putBit: function (bit) {
                    var bufIndex = Math.floor(this.length / 8);
                    this.buffer.length <= bufIndex && this.buffer.push(0), bit && (this.buffer[bufIndex] |= 128 >>> this.length % 8), this.length++;
                },
            }),
                (module.exports = BitBuffer);
        },
        73280: function (module, __unused_webpack_exports, __webpack_require__) {
            var BufferUtil = __webpack_require__(99131);
            function BitMatrix(size) {
                if (!size || size < 1) throw Error("BitMatrix size must be defined and greater than 0");
                (this.size = size), (this.data = BufferUtil.alloc(size * size)), (this.reservedBit = BufferUtil.alloc(size * size));
            }
            (BitMatrix.prototype.set = function (row, col, value, reserved) {
                var index = row * this.size + col;
                (this.data[index] = value), reserved && (this.reservedBit[index] = !0);
            }),
                (BitMatrix.prototype.get = function (row, col) {
                    return this.data[row * this.size + col];
                }),
                (BitMatrix.prototype.xor = function (row, col, value) {
                    this.data[row * this.size + col] ^= value;
                }),
                (BitMatrix.prototype.isReserved = function (row, col) {
                    return this.reservedBit[row * this.size + col];
                }),
                (module.exports = BitMatrix);
        },
        43424: function (module, __unused_webpack_exports, __webpack_require__) {
            var BufferUtil = __webpack_require__(99131),
                Mode = __webpack_require__(76910);
            function ByteData(data) {
                (this.mode = Mode.BYTE), (this.data = BufferUtil.from(data));
            }
            (ByteData.getBitsLength = function (length) {
                return 8 * length;
            }),
                (ByteData.prototype.getLength = function () {
                    return this.data.length;
                }),
                (ByteData.prototype.getBitsLength = function () {
                    return ByteData.getBitsLength(this.data.length);
                }),
                (ByteData.prototype.write = function (bitBuffer) {
                    for (var i = 0, l = this.data.length; i < l; i++) bitBuffer.put(this.data[i], 8);
                }),
                (module.exports = ByteData);
        },
        35393: function (__unused_webpack_module, exports, __webpack_require__) {
            var ECLevel = __webpack_require__(64908),
                EC_BLOCKS_TABLE = [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    1,
                    2,
                    2,
                    4,
                    1,
                    2,
                    4,
                    4,
                    2,
                    4,
                    4,
                    4,
                    2,
                    4,
                    6,
                    5,
                    2,
                    4,
                    6,
                    6,
                    2,
                    5,
                    8,
                    8,
                    4,
                    5,
                    8,
                    8,
                    4,
                    5,
                    8,
                    11,
                    4,
                    8,
                    10,
                    11,
                    4,
                    9,
                    12,
                    16,
                    4,
                    9,
                    16,
                    16,
                    6,
                    10,
                    12,
                    18,
                    6,
                    10,
                    17,
                    16,
                    6,
                    11,
                    16,
                    19,
                    6,
                    13,
                    18,
                    21,
                    7,
                    14,
                    21,
                    25,
                    8,
                    16,
                    20,
                    25,
                    8,
                    17,
                    23,
                    25,
                    9,
                    17,
                    23,
                    34,
                    9,
                    18,
                    25,
                    30,
                    10,
                    20,
                    27,
                    32,
                    12,
                    21,
                    29,
                    35,
                    12,
                    23,
                    34,
                    37,
                    12,
                    25,
                    34,
                    40,
                    13,
                    26,
                    35,
                    42,
                    14,
                    28,
                    38,
                    45,
                    15,
                    29,
                    40,
                    48,
                    16,
                    31,
                    43,
                    51,
                    17,
                    33,
                    45,
                    54,
                    18,
                    35,
                    48,
                    57,
                    19,
                    37,
                    51,
                    60,
                    19,
                    38,
                    53,
                    63,
                    20,
                    40,
                    56,
                    66,
                    21,
                    43,
                    59,
                    70,
                    22,
                    45,
                    62,
                    74,
                    24,
                    47,
                    65,
                    77,
                    25,
                    49,
                    68,
                    81,
                ],
                EC_CODEWORDS_TABLE = [
                    7,
                    10,
                    13,
                    17,
                    10,
                    16,
                    22,
                    28,
                    15,
                    26,
                    36,
                    44,
                    20,
                    36,
                    52,
                    64,
                    26,
                    48,
                    72,
                    88,
                    36,
                    64,
                    96,
                    112,
                    40,
                    72,
                    108,
                    130,
                    48,
                    88,
                    132,
                    156,
                    60,
                    110,
                    160,
                    192,
                    72,
                    130,
                    192,
                    224,
                    80,
                    150,
                    224,
                    264,
                    96,
                    176,
                    260,
                    308,
                    104,
                    198,
                    288,
                    352,
                    120,
                    216,
                    320,
                    384,
                    132,
                    240,
                    360,
                    432,
                    144,
                    280,
                    408,
                    480,
                    168,
                    308,
                    448,
                    532,
                    180,
                    338,
                    504,
                    588,
                    196,
                    364,
                    546,
                    650,
                    224,
                    416,
                    600,
                    700,
                    224,
                    442,
                    644,
                    750,
                    252,
                    476,
                    690,
                    816,
                    270,
                    504,
                    750,
                    900,
                    300,
                    560,
                    810,
                    960,
                    312,
                    588,
                    870,
                    1050,
                    336,
                    644,
                    952,
                    1110,
                    360,
                    700,
                    1020,
                    1200,
                    390,
                    728,
                    1050,
                    1260,
                    420,
                    784,
                    1140,
                    1350,
                    450,
                    812,
                    1200,
                    1440,
                    480,
                    868,
                    1290,
                    1530,
                    510,
                    924,
                    1350,
                    1620,
                    540,
                    980,
                    1440,
                    1710,
                    570,
                    1036,
                    1530,
                    1800,
                    570,
                    1064,
                    1590,
                    1890,
                    600,
                    1120,
                    1680,
                    1980,
                    630,
                    1204,
                    1770,
                    2100,
                    660,
                    1260,
                    1860,
                    2220,
                    720,
                    1316,
                    1950,
                    2310,
                    750,
                    1372,
                    2040,
                    2430,
                ];
            (exports.getBlocksCount = function (version, errorCorrectionLevel) {
                switch (errorCorrectionLevel) {
                    case ECLevel.L:
                        return EC_BLOCKS_TABLE[(version - 1) * 4 + 0];
                    case ECLevel.M:
                        return EC_BLOCKS_TABLE[(version - 1) * 4 + 1];
                    case ECLevel.Q:
                        return EC_BLOCKS_TABLE[(version - 1) * 4 + 2];
                    case ECLevel.H:
                        return EC_BLOCKS_TABLE[(version - 1) * 4 + 3];
                    default:
                        return;
                }
            }),
                (exports.getTotalCodewordsCount = function (version, errorCorrectionLevel) {
                    switch (errorCorrectionLevel) {
                        case ECLevel.L:
                            return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0];
                        case ECLevel.M:
                            return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1];
                        case ECLevel.Q:
                            return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2];
                        case ECLevel.H:
                            return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3];
                        default:
                            return;
                    }
                });
        },
        64908: function (__unused_webpack_module, exports) {
            (exports.L = { bit: 1 }),
                (exports.M = { bit: 0 }),
                (exports.Q = { bit: 3 }),
                (exports.H = { bit: 2 }),
                (exports.isValid = function (level) {
                    return level && void 0 !== level.bit && level.bit >= 0 && level.bit < 4;
                }),
                (exports.from = function (value, defaultValue) {
                    if (exports.isValid(value)) return value;
                    try {
                        return (function (string) {
                            if ("string" != typeof string) throw Error("Param is not a string");
                            switch (string.toLowerCase()) {
                                case "l":
                                case "low":
                                    return exports.L;
                                case "m":
                                case "medium":
                                    return exports.M;
                                case "q":
                                case "quartile":
                                    return exports.Q;
                                case "h":
                                case "high":
                                    return exports.H;
                                default:
                                    throw Error("Unknown EC Level: " + string);
                            }
                        })(value);
                    } catch (e) {
                        return defaultValue;
                    }
                });
        },
        76526: function (__unused_webpack_module, exports, __webpack_require__) {
            var getSymbolSize = __webpack_require__(10242).getSymbolSize;
            exports.getPositions = function (version) {
                var size = getSymbolSize(version);
                return [
                    [0, 0],
                    [size - 7, 0],
                    [0, size - 7],
                ];
            };
        },
        61642: function (__unused_webpack_module, exports, __webpack_require__) {
            var Utils = __webpack_require__(10242),
                G15_BCH = Utils.getBCHDigit(1335);
            exports.getEncodedBits = function (errorCorrectionLevel, mask) {
                for (var data = (errorCorrectionLevel.bit << 3) | mask, d = data << 10; Utils.getBCHDigit(d) - G15_BCH >= 0; ) d ^= 1335 << (Utils.getBCHDigit(d) - G15_BCH);
                return ((data << 10) | d) ^ 21522;
            };
        },
        69729: function (__unused_webpack_module, exports, __webpack_require__) {
            var BufferUtil = __webpack_require__(99131),
                EXP_TABLE = BufferUtil.alloc(512),
                LOG_TABLE = BufferUtil.alloc(256);
            !(function () {
                for (var x = 1, i = 0; i < 255; i++) (EXP_TABLE[i] = x), (LOG_TABLE[x] = i), 256 & (x <<= 1) && (x ^= 285);
                for (i = 255; i < 512; i++) EXP_TABLE[i] = EXP_TABLE[i - 255];
            })(),
                (exports.log = function (n) {
                    if (n < 1) throw Error("log(" + n + ")");
                    return LOG_TABLE[n];
                }),
                (exports.exp = function (n) {
                    return EXP_TABLE[n];
                }),
                (exports.mul = function (x, y) {
                    return 0 === x || 0 === y ? 0 : EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]];
                });
        },
        35442: function (module, __unused_webpack_exports, __webpack_require__) {
            var Mode = __webpack_require__(76910),
                Utils = __webpack_require__(10242);
            function KanjiData(data) {
                (this.mode = Mode.KANJI), (this.data = data);
            }
            (KanjiData.getBitsLength = function (length) {
                return 13 * length;
            }),
                (KanjiData.prototype.getLength = function () {
                    return this.data.length;
                }),
                (KanjiData.prototype.getBitsLength = function () {
                    return KanjiData.getBitsLength(this.data.length);
                }),
                (KanjiData.prototype.write = function (bitBuffer) {
                    var i;
                    for (i = 0; i < this.data.length; i++) {
                        var value = Utils.toSJIS(this.data[i]);
                        if (value >= 33088 && value <= 40956) value -= 33088;
                        else if (value >= 57408 && value <= 60351) value -= 49472;
                        else throw Error("Invalid SJIS character: " + this.data[i] + "\nMake sure your charset is UTF-8");
                        (value = ((value >>> 8) & 255) * 192 + (255 & value)), bitBuffer.put(value, 13);
                    }
                }),
                (module.exports = KanjiData);
        },
        27126: function (__unused_webpack_module, exports) {
            exports.Patterns = { PATTERN000: 0, PATTERN001: 1, PATTERN010: 2, PATTERN011: 3, PATTERN100: 4, PATTERN101: 5, PATTERN110: 6, PATTERN111: 7 };
            var PenaltyScores = { N1: 3, N2: 3, N3: 40, N4: 10 };
            (exports.isValid = function (mask) {
                return null != mask && "" !== mask && !isNaN(mask) && mask >= 0 && mask <= 7;
            }),
                (exports.from = function (value) {
                    return exports.isValid(value) ? parseInt(value, 10) : void 0;
                }),
                (exports.getPenaltyN1 = function (data) {
                    for (var size = data.size, points = 0, sameCountCol = 0, sameCountRow = 0, lastCol = null, lastRow = null, row = 0; row < size; row++) {
                        (sameCountCol = sameCountRow = 0), (lastCol = lastRow = null);
                        for (var col = 0; col < size; col++) {
                            var module = data.get(row, col);
                            module === lastCol ? sameCountCol++ : (sameCountCol >= 5 && (points += PenaltyScores.N1 + (sameCountCol - 5)), (lastCol = module), (sameCountCol = 1)),
                                (module = data.get(col, row)) === lastRow ? sameCountRow++ : (sameCountRow >= 5 && (points += PenaltyScores.N1 + (sameCountRow - 5)), (lastRow = module), (sameCountRow = 1));
                        }
                        sameCountCol >= 5 && (points += PenaltyScores.N1 + (sameCountCol - 5)), sameCountRow >= 5 && (points += PenaltyScores.N1 + (sameCountRow - 5));
                    }
                    return points;
                }),
                (exports.getPenaltyN2 = function (data) {
                    for (var size = data.size, points = 0, row = 0; row < size - 1; row++)
                        for (var col = 0; col < size - 1; col++) {
                            var last = data.get(row, col) + data.get(row, col + 1) + data.get(row + 1, col) + data.get(row + 1, col + 1);
                            (4 === last || 0 === last) && points++;
                        }
                    return points * PenaltyScores.N2;
                }),
                (exports.getPenaltyN3 = function (data) {
                    for (var size = data.size, points = 0, bitsCol = 0, bitsRow = 0, row = 0; row < size; row++) {
                        bitsCol = bitsRow = 0;
                        for (var col = 0; col < size; col++)
                            (bitsCol = ((bitsCol << 1) & 2047) | data.get(row, col)),
                                col >= 10 && (1488 === bitsCol || 93 === bitsCol) && points++,
                                (bitsRow = ((bitsRow << 1) & 2047) | data.get(col, row)),
                                col >= 10 && (1488 === bitsRow || 93 === bitsRow) && points++;
                    }
                    return points * PenaltyScores.N3;
                }),
                (exports.getPenaltyN4 = function (data) {
                    for (var darkCount = 0, modulesCount = data.data.length, i = 0; i < modulesCount; i++) darkCount += data.data[i];
                    return Math.abs(Math.ceil((100 * darkCount) / modulesCount / 5) - 10) * PenaltyScores.N4;
                }),
                (exports.applyMask = function (pattern, data) {
                    for (var size = data.size, col = 0; col < size; col++)
                        for (var row = 0; row < size; row++)
                            data.isReserved(row, col) ||
                                data.xor(
                                    row,
                                    col,
                                    (function (maskPattern, i, j) {
                                        switch (maskPattern) {
                                            case exports.Patterns.PATTERN000:
                                                return (i + j) % 2 == 0;
                                            case exports.Patterns.PATTERN001:
                                                return i % 2 == 0;
                                            case exports.Patterns.PATTERN010:
                                                return j % 3 == 0;
                                            case exports.Patterns.PATTERN011:
                                                return (i + j) % 3 == 0;
                                            case exports.Patterns.PATTERN100:
                                                return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;
                                            case exports.Patterns.PATTERN101:
                                                return ((i * j) % 2) + ((i * j) % 3) == 0;
                                            case exports.Patterns.PATTERN110:
                                                return (((i * j) % 2) + ((i * j) % 3)) % 2 == 0;
                                            case exports.Patterns.PATTERN111:
                                                return (((i * j) % 3) + ((i + j) % 2)) % 2 == 0;
                                            default:
                                                throw Error("bad maskPattern:" + maskPattern);
                                        }
                                    })(pattern, row, col)
                                );
                }),
                (exports.getBestMask = function (data, setupFormatFunc) {
                    for (var numPatterns = Object.keys(exports.Patterns).length, bestPattern = 0, lowerPenalty = 1 / 0, p = 0; p < numPatterns; p++) {
                        setupFormatFunc(p), exports.applyMask(p, data);
                        var penalty = exports.getPenaltyN1(data) + exports.getPenaltyN2(data) + exports.getPenaltyN3(data) + exports.getPenaltyN4(data);
                        exports.applyMask(p, data), penalty < lowerPenalty && ((lowerPenalty = penalty), (bestPattern = p));
                    }
                    return bestPattern;
                });
        },
        76910: function (__unused_webpack_module, exports, __webpack_require__) {
            var VersionCheck = __webpack_require__(43114),
                Regex = __webpack_require__(7007);
            (exports.NUMERIC = { id: "Numeric", bit: 1, ccBits: [10, 12, 14] }),
                (exports.ALPHANUMERIC = { id: "Alphanumeric", bit: 2, ccBits: [9, 11, 13] }),
                (exports.BYTE = { id: "Byte", bit: 4, ccBits: [8, 16, 16] }),
                (exports.KANJI = { id: "Kanji", bit: 8, ccBits: [8, 10, 12] }),
                (exports.MIXED = { bit: -1 }),
                (exports.getCharCountIndicator = function (mode, version) {
                    if (!mode.ccBits) throw Error("Invalid mode: " + mode);
                    if (!VersionCheck.isValid(version)) throw Error("Invalid version: " + version);
                    return version >= 1 && version < 10 ? mode.ccBits[0] : version < 27 ? mode.ccBits[1] : mode.ccBits[2];
                }),
                (exports.getBestModeForData = function (dataStr) {
                    return Regex.testNumeric(dataStr) ? exports.NUMERIC : Regex.testAlphanumeric(dataStr) ? exports.ALPHANUMERIC : Regex.testKanji(dataStr) ? exports.KANJI : exports.BYTE;
                }),
                (exports.toString = function (mode) {
                    if (mode && mode.id) return mode.id;
                    throw Error("Invalid mode");
                }),
                (exports.isValid = function (mode) {
                    return mode && mode.bit && mode.ccBits;
                }),
                (exports.from = function (value, defaultValue) {
                    if (exports.isValid(value)) return value;
                    try {
                        return (function (string) {
                            if ("string" != typeof string) throw Error("Param is not a string");
                            switch (string.toLowerCase()) {
                                case "numeric":
                                    return exports.NUMERIC;
                                case "alphanumeric":
                                    return exports.ALPHANUMERIC;
                                case "kanji":
                                    return exports.KANJI;
                                case "byte":
                                    return exports.BYTE;
                                default:
                                    throw Error("Unknown mode: " + string);
                            }
                        })(value);
                    } catch (e) {
                        return defaultValue;
                    }
                });
        },
        41085: function (module, __unused_webpack_exports, __webpack_require__) {
            var Mode = __webpack_require__(76910);
            function NumericData(data) {
                (this.mode = Mode.NUMERIC), (this.data = data.toString());
            }
            (NumericData.getBitsLength = function (length) {
                return 10 * Math.floor(length / 3) + (length % 3 ? (length % 3) * 3 + 1 : 0);
            }),
                (NumericData.prototype.getLength = function () {
                    return this.data.length;
                }),
                (NumericData.prototype.getBitsLength = function () {
                    return NumericData.getBitsLength(this.data.length);
                }),
                (NumericData.prototype.write = function (bitBuffer) {
                    for (i = 0; i + 3 <= this.data.length; i += 3) (value = parseInt(this.data.substr(i, 3), 10)), bitBuffer.put(value, 10);
                    var i,
                        value,
                        remainingNum = this.data.length - i;
                    remainingNum > 0 && ((value = parseInt(this.data.substr(i), 10)), bitBuffer.put(value, 3 * remainingNum + 1));
                }),
                (module.exports = NumericData);
        },
        26143: function (__unused_webpack_module, exports, __webpack_require__) {
            var BufferUtil = __webpack_require__(99131),
                GF = __webpack_require__(69729);
            (exports.mul = function (p1, p2) {
                for (var coeff = BufferUtil.alloc(p1.length + p2.length - 1), i = 0; i < p1.length; i++) for (var j = 0; j < p2.length; j++) coeff[i + j] ^= GF.mul(p1[i], p2[j]);
                return coeff;
            }),
                (exports.mod = function (divident, divisor) {
                    for (var result = BufferUtil.from(divident); result.length - divisor.length >= 0; ) {
                        for (var coeff = result[0], i = 0; i < divisor.length; i++) result[i] ^= GF.mul(divisor[i], coeff);
                        for (var offset = 0; offset < result.length && 0 === result[offset]; ) offset++;
                        result = result.slice(offset);
                    }
                    return result;
                }),
                (exports.generateECPolynomial = function (degree) {
                    for (var poly = BufferUtil.from([1]), i = 0; i < degree; i++) poly = exports.mul(poly, [1, GF.exp(i)]);
                    return poly;
                });
        },
        95115: function (__unused_webpack_module, exports, __webpack_require__) {
            var BufferUtil = __webpack_require__(99131),
                Utils = __webpack_require__(10242),
                ECLevel = __webpack_require__(64908),
                BitBuffer = __webpack_require__(97245),
                BitMatrix = __webpack_require__(73280),
                AlignmentPattern = __webpack_require__(21845),
                FinderPattern = __webpack_require__(76526),
                MaskPattern = __webpack_require__(27126),
                ECCode = __webpack_require__(35393),
                ReedSolomonEncoder = __webpack_require__(52882),
                Version = __webpack_require__(23103),
                FormatInfo = __webpack_require__(61642),
                Mode = __webpack_require__(76910),
                Segments = __webpack_require__(16130),
                isArray = __webpack_require__(55147);
            function setupFormatInfo(matrix, errorCorrectionLevel, maskPattern) {
                var i,
                    mod,
                    size = matrix.size,
                    bits = FormatInfo.getEncodedBits(errorCorrectionLevel, maskPattern);
                for (i = 0; i < 15; i++)
                    (mod = ((bits >> i) & 1) == 1),
                        i < 6 ? matrix.set(i, 8, mod, !0) : i < 8 ? matrix.set(i + 1, 8, mod, !0) : matrix.set(size - 15 + i, 8, mod, !0),
                        i < 8 ? matrix.set(8, size - i - 1, mod, !0) : i < 9 ? matrix.set(8, 15 - i - 1 + 1, mod, !0) : matrix.set(8, 15 - i - 1, mod, !0);
                matrix.set(size - 8, 8, 1, !0);
            }
            exports.create = function (data, options) {
                if (void 0 === data || "" === data) throw Error("No input text");
                var version,
                    mask,
                    errorCorrectionLevel = ECLevel.M;
                return (
                    void 0 !== options &&
                        ((errorCorrectionLevel = ECLevel.from(options.errorCorrectionLevel, ECLevel.M)),
                        (version = Version.from(options.version)),
                        (mask = MaskPattern.from(options.maskPattern)),
                        options.toSJISFunc && Utils.setToSJISFunction(options.toSJISFunc)),
                    (function (data, version, errorCorrectionLevel, maskPattern) {
                        if (isArray(data)) segments = Segments.fromArray(data);
                        else if ("string" == typeof data) {
                            var segments,
                                estimatedVersion = version;
                            if (!estimatedVersion) {
                                var rawSegments = Segments.rawSplit(data);
                                estimatedVersion = Version.getBestVersionForData(rawSegments, errorCorrectionLevel);
                            }
                            segments = Segments.fromString(data, estimatedVersion || 40);
                        } else throw Error("Invalid data");
                        var bestVersion = Version.getBestVersionForData(segments, errorCorrectionLevel);
                        if (!bestVersion) throw Error("The amount of data is too big to be stored in a QR Code");
                        if (version) {
                            if (version < bestVersion) throw Error("\nThe chosen QR Code version cannot contain this amount of data.\nMinimum version required to store current data is: " + bestVersion + ".\n");
                        } else version = bestVersion;
                        var dataBits = (function (version, errorCorrectionLevel, segments) {
                                var buffer = new BitBuffer();
                                segments.forEach(function (data) {
                                    buffer.put(data.mode.bit, 4), buffer.put(data.getLength(), Mode.getCharCountIndicator(data.mode, version)), data.write(buffer);
                                });
                                var dataTotalCodewordsBits = (Utils.getSymbolTotalCodewords(version) - ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)) * 8;
                                for (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits && buffer.put(0, 4); buffer.getLengthInBits() % 8 != 0; ) buffer.putBit(0);
                                for (var remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8, i = 0; i < remainingByte; i++) buffer.put(i % 2 ? 17 : 236, 8);
                                return (function (bitBuffer, version, errorCorrectionLevel) {
                                    for (
                                        var i,
                                            r,
                                            totalCodewords = Utils.getSymbolTotalCodewords(version),
                                            ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel),
                                            ecTotalBlocks = ECCode.getBlocksCount(version, errorCorrectionLevel),
                                            blocksInGroup1 = ecTotalBlocks - (totalCodewords % ecTotalBlocks),
                                            dataCodewordsInGroup1 = Math.floor((totalCodewords - ecTotalCodewords) / ecTotalBlocks),
                                            dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1,
                                            ecCount = Math.floor(totalCodewords / ecTotalBlocks) - dataCodewordsInGroup1,
                                            rs = new ReedSolomonEncoder(ecCount),
                                            offset = 0,
                                            dcData = Array(ecTotalBlocks),
                                            ecData = Array(ecTotalBlocks),
                                            maxDataSize = 0,
                                            buffer = BufferUtil.from(bitBuffer.buffer),
                                            b = 0;
                                        b < ecTotalBlocks;
                                        b++
                                    ) {
                                        var dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2;
                                        (dcData[b] = buffer.slice(offset, offset + dataSize)), (ecData[b] = rs.encode(dcData[b])), (offset += dataSize), (maxDataSize = Math.max(maxDataSize, dataSize));
                                    }
                                    var data = BufferUtil.alloc(totalCodewords),
                                        index = 0;
                                    for (i = 0; i < maxDataSize; i++) for (r = 0; r < ecTotalBlocks; r++) i < dcData[r].length && (data[index++] = dcData[r][i]);
                                    for (i = 0; i < ecCount; i++) for (r = 0; r < ecTotalBlocks; r++) data[index++] = ecData[r][i];
                                    return data;
                                })(buffer, version, errorCorrectionLevel);
                            })(version, errorCorrectionLevel, segments),
                            moduleCount = Utils.getSymbolSize(version),
                            modules = new BitMatrix(moduleCount);
                        return (
                            (function (matrix, version) {
                                for (var size = matrix.size, pos = FinderPattern.getPositions(version), i = 0; i < pos.length; i++)
                                    for (var row = pos[i][0], col = pos[i][1], r = -1; r <= 7; r++)
                                        if (!(row + r <= -1) && !(size <= row + r))
                                            for (var c = -1; c <= 7; c++)
                                                col + c <= -1 ||
                                                    size <= col + c ||
                                                    ((r >= 0 && r <= 6 && (0 === c || 6 === c)) || (c >= 0 && c <= 6 && (0 === r || 6 === r)) || (r >= 2 && r <= 4 && c >= 2 && c <= 4)
                                                        ? matrix.set(row + r, col + c, !0, !0)
                                                        : matrix.set(row + r, col + c, !1, !0));
                            })(modules, version),
                            (function (matrix) {
                                for (var size = matrix.size, r = 8; r < size - 8; r++) {
                                    var value = r % 2 == 0;
                                    matrix.set(r, 6, value, !0), matrix.set(6, r, value, !0);
                                }
                            })(modules),
                            (function (matrix, version) {
                                for (var pos = AlignmentPattern.getPositions(version), i = 0; i < pos.length; i++)
                                    for (var row = pos[i][0], col = pos[i][1], r = -2; r <= 2; r++)
                                        for (var c = -2; c <= 2; c++) -2 === r || 2 === r || -2 === c || 2 === c || (0 === r && 0 === c) ? matrix.set(row + r, col + c, !0, !0) : matrix.set(row + r, col + c, !1, !0);
                            })(modules, version),
                            setupFormatInfo(modules, errorCorrectionLevel, 0),
                            version >= 7 &&
                                (function (matrix, version) {
                                    for (var row, col, mod, size = matrix.size, bits = Version.getEncodedBits(version), i = 0; i < 18; i++)
                                        (row = Math.floor(i / 3)), (col = (i % 3) + size - 8 - 3), (mod = ((bits >> i) & 1) == 1), matrix.set(row, col, mod, !0), matrix.set(col, row, mod, !0);
                                })(modules, version),
                            (function (matrix, data) {
                                for (var size = matrix.size, inc = -1, row = size - 1, bitIndex = 7, byteIndex = 0, col = size - 1; col > 0; col -= 2)
                                    for (6 === col && col--; ; ) {
                                        for (var c = 0; c < 2; c++)
                                            if (!matrix.isReserved(row, col - c)) {
                                                var dark = !1;
                                                byteIndex < data.length && (dark = ((data[byteIndex] >>> bitIndex) & 1) == 1), matrix.set(row, col - c, dark), -1 == --bitIndex && (byteIndex++, (bitIndex = 7));
                                            }
                                        if ((row += inc) < 0 || size <= row) {
                                            (row -= inc), (inc = -inc);
                                            break;
                                        }
                                    }
                            })(modules, dataBits),
                            isNaN(maskPattern) && (maskPattern = MaskPattern.getBestMask(modules, setupFormatInfo.bind(null, modules, errorCorrectionLevel))),
                            MaskPattern.applyMask(maskPattern, modules),
                            setupFormatInfo(modules, errorCorrectionLevel, maskPattern),
                            { modules: modules, version: version, errorCorrectionLevel: errorCorrectionLevel, maskPattern: maskPattern, segments: segments }
                        );
                    })(data, version, errorCorrectionLevel, mask)
                );
            };
        },
        52882: function (module, __unused_webpack_exports, __webpack_require__) {
            var BufferUtil = __webpack_require__(99131),
                Polynomial = __webpack_require__(26143),
                Buffer = __webpack_require__(48764).Buffer;
            function ReedSolomonEncoder(degree) {
                (this.genPoly = void 0), (this.degree = degree), this.degree && this.initialize(this.degree);
            }
            (ReedSolomonEncoder.prototype.initialize = function (degree) {
                (this.degree = degree), (this.genPoly = Polynomial.generateECPolynomial(this.degree));
            }),
                (ReedSolomonEncoder.prototype.encode = function (data) {
                    if (!this.genPoly) throw Error("Encoder not initialized");
                    var pad = BufferUtil.alloc(this.degree),
                        paddedData = Buffer.concat([data, pad], data.length + this.degree),
                        remainder = Polynomial.mod(paddedData, this.genPoly),
                        start = this.degree - remainder.length;
                    if (start > 0) {
                        var buff = BufferUtil.alloc(this.degree);
                        return remainder.copy(buff, start), buff;
                    }
                    return remainder;
                }),
                (module.exports = ReedSolomonEncoder);
        },
        7007: function (__unused_webpack_module, exports) {
            var numeric = "[0-9]+",
                kanji = "(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+",
                byte = "(?:(?![A-Z0-9 $%*+\\-./:]|" + (kanji = kanji.replace(/u/g, "\\u")) + ")(?:.|[\r\n]))+";
            (exports.KANJI = RegExp(kanji, "g")),
                (exports.BYTE_KANJI = RegExp("[^A-Z0-9 $%*+\\-./:]+", "g")),
                (exports.BYTE = RegExp(byte, "g")),
                (exports.NUMERIC = RegExp(numeric, "g")),
                (exports.ALPHANUMERIC = RegExp("[A-Z $%*+\\-./:]+", "g"));
            var TEST_KANJI = RegExp("^" + kanji + "$"),
                TEST_NUMERIC = RegExp("^" + numeric + "$"),
                TEST_ALPHANUMERIC = RegExp("^[A-Z0-9 $%*+\\-./:]+$");
            (exports.testKanji = function (str) {
                return TEST_KANJI.test(str);
            }),
                (exports.testNumeric = function (str) {
                    return TEST_NUMERIC.test(str);
                }),
                (exports.testAlphanumeric = function (str) {
                    return TEST_ALPHANUMERIC.test(str);
                });
        },
        16130: function (__unused_webpack_module, exports, __webpack_require__) {
            var Mode = __webpack_require__(76910),
                NumericData = __webpack_require__(41085),
                AlphanumericData = __webpack_require__(8260),
                ByteData = __webpack_require__(43424),
                KanjiData = __webpack_require__(35442),
                Regex = __webpack_require__(7007),
                Utils = __webpack_require__(10242),
                dijkstra = __webpack_require__(65987);
            function getStringByteLength(str) {
                return unescape(encodeURIComponent(str)).length;
            }
            function getSegments(regex, mode, str) {
                for (var result, segments = []; null !== (result = regex.exec(str)); ) segments.push({ data: result[0], index: result.index, mode: mode, length: result[0].length });
                return segments;
            }
            function getSegmentsFromString(dataStr) {
                var byteSegs,
                    kanjiSegs,
                    numSegs = getSegments(Regex.NUMERIC, Mode.NUMERIC, dataStr),
                    alphaNumSegs = getSegments(Regex.ALPHANUMERIC, Mode.ALPHANUMERIC, dataStr);
                return (
                    Utils.isKanjiModeEnabled()
                        ? ((byteSegs = getSegments(Regex.BYTE, Mode.BYTE, dataStr)), (kanjiSegs = getSegments(Regex.KANJI, Mode.KANJI, dataStr)))
                        : ((byteSegs = getSegments(Regex.BYTE_KANJI, Mode.BYTE, dataStr)), (kanjiSegs = [])),
                    numSegs
                        .concat(alphaNumSegs, byteSegs, kanjiSegs)
                        .sort(function (s1, s2) {
                            return s1.index - s2.index;
                        })
                        .map(function (obj) {
                            return { data: obj.data, mode: obj.mode, length: obj.length };
                        })
                );
            }
            function getSegmentBitsLength(length, mode) {
                switch (mode) {
                    case Mode.NUMERIC:
                        return NumericData.getBitsLength(length);
                    case Mode.ALPHANUMERIC:
                        return AlphanumericData.getBitsLength(length);
                    case Mode.KANJI:
                        return KanjiData.getBitsLength(length);
                    case Mode.BYTE:
                        return ByteData.getBitsLength(length);
                }
            }
            function buildSingleSegment(data, modesHint) {
                var mode,
                    bestMode = Mode.getBestModeForData(data);
                if ((mode = Mode.from(modesHint, bestMode)) !== Mode.BYTE && mode.bit < bestMode.bit) throw Error('"' + data + '" cannot be encoded with mode ' + Mode.toString(mode) + ".\n Suggested mode is: " + Mode.toString(bestMode));
                switch ((mode !== Mode.KANJI || Utils.isKanjiModeEnabled() || (mode = Mode.BYTE), mode)) {
                    case Mode.NUMERIC:
                        return new NumericData(data);
                    case Mode.ALPHANUMERIC:
                        return new AlphanumericData(data);
                    case Mode.KANJI:
                        return new KanjiData(data);
                    case Mode.BYTE:
                        return new ByteData(data);
                }
            }
            (exports.fromArray = function (array) {
                return array.reduce(function (acc, seg) {
                    return "string" == typeof seg ? acc.push(buildSingleSegment(seg, null)) : seg.data && acc.push(buildSingleSegment(seg.data, seg.mode)), acc;
                }, []);
            }),
                (exports.fromString = function (data, version) {
                    for (
                        var graph = (function (nodes, version) {
                                for (var table = {}, graph = { start: {} }, prevNodeIds = ["start"], i = 0; i < nodes.length; i++) {
                                    for (var nodeGroup = nodes[i], currentNodeIds = [], j = 0; j < nodeGroup.length; j++) {
                                        var node = nodeGroup[j],
                                            key = "" + i + j;
                                        currentNodeIds.push(key), (table[key] = { node: node, lastCount: 0 }), (graph[key] = {});
                                        for (var n = 0; n < prevNodeIds.length; n++) {
                                            var prevNodeId = prevNodeIds[n];
                                            table[prevNodeId] && table[prevNodeId].node.mode === node.mode
                                                ? ((graph[prevNodeId][key] = getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) - getSegmentBitsLength(table[prevNodeId].lastCount, node.mode)),
                                                  (table[prevNodeId].lastCount += node.length))
                                                : (table[prevNodeId] && (table[prevNodeId].lastCount = node.length),
                                                  (graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) + 4 + Mode.getCharCountIndicator(node.mode, version)));
                                        }
                                    }
                                    prevNodeIds = currentNodeIds;
                                }
                                for (n = 0; n < prevNodeIds.length; n++) graph[prevNodeIds[n]].end = 0;
                                return { map: graph, table: table };
                            })(
                                (function (segs) {
                                    for (var nodes = [], i = 0; i < segs.length; i++) {
                                        var seg = segs[i];
                                        switch (seg.mode) {
                                            case Mode.NUMERIC:
                                                nodes.push([seg, { data: seg.data, mode: Mode.ALPHANUMERIC, length: seg.length }, { data: seg.data, mode: Mode.BYTE, length: seg.length }]);
                                                break;
                                            case Mode.ALPHANUMERIC:
                                                nodes.push([seg, { data: seg.data, mode: Mode.BYTE, length: seg.length }]);
                                                break;
                                            case Mode.KANJI:
                                                nodes.push([seg, { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }]);
                                                break;
                                            case Mode.BYTE:
                                                nodes.push([{ data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }]);
                                        }
                                    }
                                    return nodes;
                                })(getSegmentsFromString(data, Utils.isKanjiModeEnabled())),
                                version
                            ),
                            path = dijkstra.find_path(graph.map, "start", "end"),
                            optimizedSegs = [],
                            i = 1;
                        i < path.length - 1;
                        i++
                    )
                        optimizedSegs.push(graph.table[path[i]].node);
                    return exports.fromArray(
                        optimizedSegs.reduce(function (acc, curr) {
                            var prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null;
                            return prevSeg && prevSeg.mode === curr.mode ? ((acc[acc.length - 1].data += curr.data), acc) : (acc.push(curr), acc);
                        }, [])
                    );
                }),
                (exports.rawSplit = function (data) {
                    return exports.fromArray(getSegmentsFromString(data, Utils.isKanjiModeEnabled()));
                });
        },
        10242: function (__unused_webpack_module, exports) {
            var toSJISFunction,
                CODEWORDS_COUNT = [
                    0,
                    26,
                    44,
                    70,
                    100,
                    134,
                    172,
                    196,
                    242,
                    292,
                    346,
                    404,
                    466,
                    532,
                    581,
                    655,
                    733,
                    815,
                    901,
                    991,
                    1085,
                    1156,
                    1258,
                    1364,
                    1474,
                    1588,
                    1706,
                    1828,
                    1921,
                    2051,
                    2185,
                    2323,
                    2465,
                    2611,
                    2761,
                    2876,
                    3034,
                    3196,
                    3362,
                    3532,
                    3706,
                ];
            (exports.getSymbolSize = function (version) {
                if (!version) throw Error('"version" cannot be null or undefined');
                if (version < 1 || version > 40) throw Error('"version" should be in range from 1 to 40');
                return 4 * version + 17;
            }),
                (exports.getSymbolTotalCodewords = function (version) {
                    return CODEWORDS_COUNT[version];
                }),
                (exports.getBCHDigit = function (data) {
                    for (var digit = 0; 0 !== data; ) digit++, (data >>>= 1);
                    return digit;
                }),
                (exports.setToSJISFunction = function (f) {
                    if ("function" != typeof f) throw Error('"toSJISFunc" is not a valid function.');
                    toSJISFunction = f;
                }),
                (exports.isKanjiModeEnabled = function () {
                    return void 0 !== toSJISFunction;
                }),
                (exports.toSJIS = function (kanji) {
                    return toSJISFunction(kanji);
                });
        },
        43114: function (__unused_webpack_module, exports) {
            exports.isValid = function (version) {
                return !isNaN(version) && version >= 1 && version <= 40;
            };
        },
        23103: function (__unused_webpack_module, exports, __webpack_require__) {
            var Utils = __webpack_require__(10242),
                ECCode = __webpack_require__(35393),
                ECLevel = __webpack_require__(64908),
                Mode = __webpack_require__(76910),
                VersionCheck = __webpack_require__(43114),
                isArray = __webpack_require__(55147),
                G18_BCH = Utils.getBCHDigit(7973);
            function getReservedBitsCount(mode, version) {
                return Mode.getCharCountIndicator(mode, version) + 4;
            }
            (exports.from = function (value, defaultValue) {
                return VersionCheck.isValid(value) ? parseInt(value, 10) : defaultValue;
            }),
                (exports.getCapacity = function (version, errorCorrectionLevel, mode) {
                    if (!VersionCheck.isValid(version)) throw Error("Invalid QR Code version");
                    void 0 === mode && (mode = Mode.BYTE);
                    var dataTotalCodewordsBits = (Utils.getSymbolTotalCodewords(version) - ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)) * 8;
                    if (mode === Mode.MIXED) return dataTotalCodewordsBits;
                    var usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode, version);
                    switch (mode) {
                        case Mode.NUMERIC:
                            return Math.floor((usableBits / 10) * 3);
                        case Mode.ALPHANUMERIC:
                            return Math.floor((usableBits / 11) * 2);
                        case Mode.KANJI:
                            return Math.floor(usableBits / 13);
                        case Mode.BYTE:
                        default:
                            return Math.floor(usableBits / 8);
                    }
                }),
                (exports.getBestVersionForData = function (data, errorCorrectionLevel) {
                    var seg,
                        ecl = ECLevel.from(errorCorrectionLevel, ECLevel.M);
                    if (isArray(data)) {
                        if (data.length > 1)
                            return (function (segments, errorCorrectionLevel) {
                                for (var currentVersion = 1; currentVersion <= 40; currentVersion++)
                                    if (
                                        (function (segments, version) {
                                            var totalBits = 0;
                                            return (
                                                segments.forEach(function (data) {
                                                    totalBits += getReservedBitsCount(data.mode, version) + data.getBitsLength();
                                                }),
                                                totalBits
                                            );
                                        })(segments, currentVersion) <= exports.getCapacity(currentVersion, errorCorrectionLevel, Mode.MIXED)
                                    )
                                        return currentVersion;
                            })(data, ecl);
                        if (0 === data.length) return 1;
                        seg = data[0];
                    } else seg = data;
                    return (function (mode, length, errorCorrectionLevel) {
                        for (var currentVersion = 1; currentVersion <= 40; currentVersion++) if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) return currentVersion;
                    })(seg.mode, seg.getLength(), ecl);
                }),
                (exports.getEncodedBits = function (version) {
                    if (!VersionCheck.isValid(version) || version < 7) throw Error("Invalid QR Code version");
                    for (var d = version << 12; Utils.getBCHDigit(d) - G18_BCH >= 0; ) d ^= 7973 << (Utils.getBCHDigit(d) - G18_BCH);
                    return (version << 12) | d;
                });
        },
        6907: function (__unused_webpack_module, exports, __webpack_require__) {
            var Utils = __webpack_require__(89653);
            (exports.render = function (qrData, canvas, options) {
                var canvas1,
                    opts = options,
                    canvasEl = canvas;
                void 0 !== opts || (canvas && canvas.getContext) || ((opts = canvas), (canvas = void 0)),
                    canvas ||
                        (canvasEl = (function () {
                            try {
                                return document.createElement("canvas");
                            } catch (e) {
                                throw Error("You need to specify a canvas element");
                            }
                        })()),
                    (opts = Utils.getOptions(opts));
                var size = Utils.getImageWidth(qrData.modules.size, opts),
                    ctx = canvasEl.getContext("2d"),
                    image = ctx.createImageData(size, size);
                return (
                    Utils.qrToImageData(image.data, qrData, opts),
                    (canvas1 = canvasEl),
                    ctx.clearRect(0, 0, canvas1.width, canvas1.height),
                    canvas1.style || (canvas1.style = {}),
                    (canvas1.height = size),
                    (canvas1.width = size),
                    (canvas1.style.height = size + "px"),
                    (canvas1.style.width = size + "px"),
                    ctx.putImageData(image, 0, 0),
                    canvasEl
                );
            }),
                (exports.renderToDataURL = function (qrData, canvas, options) {
                    var opts = options;
                    void 0 !== opts || (canvas && canvas.getContext) || ((opts = canvas), (canvas = void 0)), opts || (opts = {});
                    var canvasEl = exports.render(qrData, canvas, opts),
                        type = opts.type || "image/png",
                        rendererOpts = opts.rendererOpts || {};
                    return canvasEl.toDataURL(type, rendererOpts.quality);
                });
        },
        93776: function (__unused_webpack_module, exports, __webpack_require__) {
            var Utils = __webpack_require__(89653);
            function getColorAttrib(color, attrib) {
                var alpha = color.a / 255,
                    str = attrib + '="' + color.hex + '"';
                return alpha < 1 ? str + " " + attrib + '-opacity="' + alpha.toFixed(2).slice(1) + '"' : str;
            }
            function svgCmd(cmd, x, y) {
                var str = cmd + x;
                return void 0 !== y && (str += " " + y), str;
            }
            exports.render = function (qrData, options, cb) {
                var opts = Utils.getOptions(options),
                    size = qrData.modules.size,
                    data = qrData.modules.data,
                    qrcodesize = size + 2 * opts.margin,
                    bg = opts.color.light.a ? "<path " + getColorAttrib(opts.color.light, "fill") + ' d="M0 0h' + qrcodesize + "v" + qrcodesize + 'H0z"/>' : "",
                    path =
                        "<path " +
                        getColorAttrib(opts.color.dark, "stroke") +
                        ' d="' +
                        (function (data, size, margin) {
                            for (var path = "", moveBy = 0, newRow = !1, lineLength = 0, i = 0; i < data.length; i++) {
                                var col = Math.floor(i % size),
                                    row = Math.floor(i / size);
                                col || newRow || (newRow = !0),
                                    data[i]
                                        ? (lineLength++,
                                          (i > 0 && col > 0 && data[i - 1]) || ((path += newRow ? svgCmd("M", col + margin, 0.5 + row + margin) : svgCmd("m", moveBy, 0)), (moveBy = 0), (newRow = !1)),
                                          (col + 1 < size && data[i + 1]) || ((path += svgCmd("h", lineLength)), (lineLength = 0)))
                                        : moveBy++;
                            }
                            return path;
                        })(data, size, opts.margin) +
                        '"/>',
                    svgTag =
                        '<svg xmlns="http://www.w3.org/2000/svg" ' +
                        (opts.width ? 'width="' + opts.width + '" height="' + opts.width + '" ' : "") +
                        ('viewBox="0 0 ' + qrcodesize) +
                        " " +
                        qrcodesize +
                        '" shape-rendering="crispEdges">' +
                        bg +
                        path +
                        "</svg>\n";
                return "function" == typeof cb && cb(null, svgTag), svgTag;
            };
        },
        89653: function (__unused_webpack_module, exports) {
            function hex2rgba(hex) {
                if (("number" == typeof hex && (hex = hex.toString()), "string" != typeof hex)) throw Error("Color should be defined as hex string");
                var hexCode = hex.slice().replace("#", "").split("");
                if (hexCode.length < 3 || 5 === hexCode.length || hexCode.length > 8) throw Error("Invalid hex color: " + hex);
                (3 === hexCode.length || 4 === hexCode.length) &&
                    (hexCode = Array.prototype.concat.apply(
                        [],
                        hexCode.map(function (c) {
                            return [c, c];
                        })
                    )),
                    6 === hexCode.length && hexCode.push("F", "F");
                var hexValue = parseInt(hexCode.join(""), 16);
                return { r: (hexValue >> 24) & 255, g: (hexValue >> 16) & 255, b: (hexValue >> 8) & 255, a: 255 & hexValue, hex: "#" + hexCode.slice(0, 6).join("") };
            }
            (exports.getOptions = function (options) {
                options || (options = {}), options.color || (options.color = {});
                var margin = void 0 === options.margin || null === options.margin || options.margin < 0 ? 4 : options.margin,
                    width = options.width && options.width >= 21 ? options.width : void 0,
                    scale = options.scale || 4;
                return {
                    width: width,
                    scale: width ? 4 : scale,
                    margin: margin,
                    color: { dark: hex2rgba(options.color.dark || "#000000ff"), light: hex2rgba(options.color.light || "#ffffffff") },
                    type: options.type,
                    rendererOpts: options.rendererOpts || {},
                };
            }),
                (exports.getScale = function (qrSize, opts) {
                    return opts.width && opts.width >= qrSize + 2 * opts.margin ? opts.width / (qrSize + 2 * opts.margin) : opts.scale;
                }),
                (exports.getImageWidth = function (qrSize, opts) {
                    var scale = exports.getScale(qrSize, opts);
                    return Math.floor((qrSize + 2 * opts.margin) * scale);
                }),
                (exports.qrToImageData = function (imgData, qr, opts) {
                    for (
                        var size = qr.modules.size,
                            data = qr.modules.data,
                            scale = exports.getScale(size, opts),
                            symbolSize = Math.floor((size + 2 * opts.margin) * scale),
                            scaledMargin = opts.margin * scale,
                            palette = [opts.color.light, opts.color.dark],
                            i = 0;
                        i < symbolSize;
                        i++
                    )
                        for (var j = 0; j < symbolSize; j++) {
                            var posDst = (i * symbolSize + j) * 4,
                                pxColor = opts.color.light;
                            i >= scaledMargin &&
                                j >= scaledMargin &&
                                i < symbolSize - scaledMargin &&
                                j < symbolSize - scaledMargin &&
                                (pxColor = palette[data[Math.floor((i - scaledMargin) / scale) * size + Math.floor((j - scaledMargin) / scale)] ? 1 : 0]),
                                (imgData[posDst++] = pxColor.r),
                                (imgData[posDst++] = pxColor.g),
                                (imgData[posDst++] = pxColor.b),
                                (imgData[posDst] = pxColor.a);
                        }
                });
        },
        99131: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var isArray = __webpack_require__(55147);
            Buffer.TYPED_ARRAY_SUPPORT = (function () {
                try {
                    var arr = new Uint8Array(1);
                    return (
                        (arr.__proto__ = {
                            __proto__: Uint8Array.prototype,
                            foo: function () {
                                return 42;
                            },
                        }),
                        42 === arr.foo()
                    );
                } catch (e) {
                    return !1;
                }
            })();
            var K_MAX_LENGTH = Buffer.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
            function Buffer(arg, offset, length) {
                return Buffer.TYPED_ARRAY_SUPPORT || this instanceof Buffer
                    ? "number" == typeof arg
                        ? allocUnsafe(this, arg)
                        : (function (that, value, offset, length) {
                              if ("number" == typeof value) throw TypeError('"value" argument must not be a number');
                              if ("undefined" != typeof ArrayBuffer && value instanceof ArrayBuffer)
                                  return (function (that, array, byteOffset, length) {
                                      var buf;
                                      if (byteOffset < 0 || array.byteLength < byteOffset) throw RangeError("'offset' is out of bounds");
                                      if (array.byteLength < byteOffset + (length || 0)) throw RangeError("'length' is out of bounds");
                                      return (
                                          (buf = void 0 === byteOffset && void 0 === length ? new Uint8Array(array) : void 0 === length ? new Uint8Array(array, byteOffset) : new Uint8Array(array, byteOffset, length)),
                                          Buffer.TYPED_ARRAY_SUPPORT ? (buf.__proto__ = Buffer.prototype) : (buf = fromArrayLike(that, buf)),
                                          buf
                                      );
                                  })(that, value, offset, length);
                              if ("string" == typeof value) {
                                  var length1, buf, actual;
                                  return (actual = (buf = createBuffer(that, (length1 = 0 | byteLength(value)))).write(value)) !== length1 && (buf = buf.slice(0, actual)), buf;
                              }
                              return (function (that, obj) {
                                  if (Buffer.isBuffer(obj)) {
                                      var val,
                                          len = 0 | checked(obj.length),
                                          buf = createBuffer(that, len);
                                      return 0 === buf.length || obj.copy(buf, 0, 0, len), buf;
                                  }
                                  if (obj) {
                                      if (("undefined" != typeof ArrayBuffer && obj.buffer instanceof ArrayBuffer) || "length" in obj)
                                          return "number" != typeof obj.length || (val = obj.length) != val ? createBuffer(that, 0) : fromArrayLike(that, obj);
                                      if ("Buffer" === obj.type && Array.isArray(obj.data)) return fromArrayLike(that, obj.data);
                                  }
                                  throw TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");
                              })(that, value);
                          })(this, arg, offset, length)
                    : new Buffer(arg, offset, length);
            }
            function checked(length) {
                if (length >= K_MAX_LENGTH) throw RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + K_MAX_LENGTH.toString(16) + " bytes");
                return 0 | length;
            }
            function createBuffer(that, length) {
                var buf;
                return Buffer.TYPED_ARRAY_SUPPORT ? ((buf = new Uint8Array(length)).__proto__ = Buffer.prototype) : (null === (buf = that) && (buf = new Buffer(length)), (buf.length = length)), buf;
            }
            function allocUnsafe(that, size) {
                var buf = createBuffer(that, size < 0 ? 0 : 0 | checked(size));
                if (!Buffer.TYPED_ARRAY_SUPPORT) for (var i = 0; i < size; ++i) buf[i] = 0;
                return buf;
            }
            function fromArrayLike(that, array) {
                for (var length = array.length < 0 ? 0 : 0 | checked(array.length), buf = createBuffer(that, length), i = 0; i < length; i += 1) buf[i] = 255 & array[i];
                return buf;
            }
            function utf8ToBytes(string, units) {
                units = units || 1 / 0;
                for (var codePoint, length = string.length, leadSurrogate = null, bytes = [], i = 0; i < length; ++i) {
                    if ((codePoint = string.charCodeAt(i)) > 55295 && codePoint < 57344) {
                        if (!leadSurrogate) {
                            if (codePoint > 56319 || i + 1 === length) {
                                (units -= 3) > -1 && bytes.push(239, 191, 189);
                                continue;
                            }
                            leadSurrogate = codePoint;
                            continue;
                        }
                        if (codePoint < 56320) {
                            (units -= 3) > -1 && bytes.push(239, 191, 189), (leadSurrogate = codePoint);
                            continue;
                        }
                        codePoint = (((leadSurrogate - 55296) << 10) | (codePoint - 56320)) + 65536;
                    } else leadSurrogate && (units -= 3) > -1 && bytes.push(239, 191, 189);
                    if (((leadSurrogate = null), codePoint < 128)) {
                        if ((units -= 1) < 0) break;
                        bytes.push(codePoint);
                    } else if (codePoint < 2048) {
                        if ((units -= 2) < 0) break;
                        bytes.push((codePoint >> 6) | 192, (63 & codePoint) | 128);
                    } else if (codePoint < 65536) {
                        if ((units -= 3) < 0) break;
                        bytes.push((codePoint >> 12) | 224, ((codePoint >> 6) & 63) | 128, (63 & codePoint) | 128);
                    } else if (codePoint < 1114112) {
                        if ((units -= 4) < 0) break;
                        bytes.push((codePoint >> 18) | 240, ((codePoint >> 12) & 63) | 128, ((codePoint >> 6) & 63) | 128, (63 & codePoint) | 128);
                    } else throw Error("Invalid code point");
                }
                return bytes;
            }
            function byteLength(string) {
                return Buffer.isBuffer(string)
                    ? string.length
                    : "undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)
                    ? string.byteLength
                    : ("string" != typeof string && (string = "" + string), 0 === string.length)
                    ? 0
                    : utf8ToBytes(string).length;
            }
            Buffer.TYPED_ARRAY_SUPPORT &&
                ((Buffer.prototype.__proto__ = Uint8Array.prototype),
                (Buffer.__proto__ = Uint8Array),
                "undefined" != typeof Symbol && Symbol.species && Buffer[Symbol.species] === Buffer && Object.defineProperty(Buffer, Symbol.species, { value: null, configurable: !0, enumerable: !1, writable: !1 })),
                (Buffer.prototype.write = function (string, offset, length) {
                    void 0 === offset
                        ? ((length = this.length), (offset = 0))
                        : void 0 === length && "string" == typeof offset
                        ? ((length = this.length), (offset = 0))
                        : isFinite(offset) && ((offset |= 0), isFinite(length) ? (length |= 0) : (length = void 0));
                    var offset1,
                        length1,
                        remaining = this.length - offset;
                    if (((void 0 === length || length > remaining) && (length = remaining), (string.length > 0 && (length < 0 || offset < 0)) || offset > this.length)) throw RangeError("Attempt to write outside buffer bounds");
                    return (
                        (offset1 = offset),
                        (length1 = length),
                        (function (src, dst, offset, length) {
                            for (var i = 0; i < length && !(i + offset >= dst.length) && !(i >= src.length); ++i) dst[i + offset] = src[i];
                            return i;
                        })(utf8ToBytes(string, this.length - offset1), this, offset1, length1)
                    );
                }),
                (Buffer.prototype.slice = function (start, end) {
                    var newBuf,
                        len = this.length;
                    if (
                        ((start = ~~start),
                        (end = void 0 === end ? len : ~~end),
                        start < 0 ? (start += len) < 0 && (start = 0) : start > len && (start = len),
                        end < 0 ? (end += len) < 0 && (end = 0) : end > len && (end = len),
                        end < start && (end = start),
                        Buffer.TYPED_ARRAY_SUPPORT)
                    )
                        (newBuf = this.subarray(start, end)).__proto__ = Buffer.prototype;
                    else {
                        var sliceLen = end - start;
                        newBuf = new Buffer(sliceLen, void 0);
                        for (var i = 0; i < sliceLen; ++i) newBuf[i] = this[i + start];
                    }
                    return newBuf;
                }),
                (Buffer.prototype.copy = function (target, targetStart, start, end) {
                    if (
                        (start || (start = 0),
                        end || 0 === end || (end = this.length),
                        targetStart >= target.length && (targetStart = target.length),
                        targetStart || (targetStart = 0),
                        end > 0 && end < start && (end = start),
                        end === start || 0 === target.length || 0 === this.length)
                    )
                        return 0;
                    if (targetStart < 0) throw RangeError("targetStart out of bounds");
                    if (start < 0 || start >= this.length) throw RangeError("sourceStart out of bounds");
                    if (end < 0) throw RangeError("sourceEnd out of bounds");
                    end > this.length && (end = this.length), target.length - targetStart < end - start && (end = target.length - targetStart + start);
                    var i,
                        len = end - start;
                    if (this === target && start < targetStart && targetStart < end) for (i = len - 1; i >= 0; --i) target[i + targetStart] = this[i + start];
                    else if (len < 1e3 || !Buffer.TYPED_ARRAY_SUPPORT) for (i = 0; i < len; ++i) target[i + targetStart] = this[i + start];
                    else Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);
                    return len;
                }),
                (Buffer.prototype.fill = function (val, start, end) {
                    if ("string" == typeof val) {
                        if (("string" == typeof start ? ((start = 0), (end = this.length)) : "string" == typeof end && (end = this.length), 1 === val.length)) {
                            var i,
                                code = val.charCodeAt(0);
                            code < 256 && (val = code);
                        }
                    } else "number" == typeof val && (val &= 255);
                    if (start < 0 || this.length < start || this.length < end) throw RangeError("Out of range index");
                    if (end <= start) return this;
                    if (((start >>>= 0), (end = void 0 === end ? this.length : end >>> 0), val || (val = 0), "number" == typeof val)) for (i = start; i < end; ++i) this[i] = val;
                    else {
                        var bytes = Buffer.isBuffer(val) ? val : new Buffer(val),
                            len = bytes.length;
                        for (i = 0; i < end - start; ++i) this[i + start] = bytes[i % len];
                    }
                    return this;
                }),
                (Buffer.concat = function (list, length) {
                    if (!isArray(list)) throw TypeError('"list" argument must be an Array of Buffers');
                    if (0 === list.length) return createBuffer(null, 0);
                    if (void 0 === length) for (i = 0, length = 0; i < list.length; ++i) length += list[i].length;
                    var i,
                        buffer = allocUnsafe(null, length),
                        pos = 0;
                    for (i = 0; i < list.length; ++i) {
                        var buf = list[i];
                        if (!Buffer.isBuffer(buf)) throw TypeError('"list" argument must be an Array of Buffers');
                        buf.copy(buffer, pos), (pos += buf.length);
                    }
                    return buffer;
                }),
                (Buffer.byteLength = byteLength),
                (Buffer.prototype._isBuffer = !0),
                (Buffer.isBuffer = function (b) {
                    return !!(null != b && b._isBuffer);
                }),
                (module.exports.alloc = function (size) {
                    var buffer = new Buffer(size);
                    return buffer.fill(0), buffer;
                }),
                (module.exports.from = function (data) {
                    return new Buffer(data);
                });
        },
        55147: function (module) {
            var toString = {}.toString;
            module.exports =
                Array.isArray ||
                function (arr) {
                    return "[object Array]" == toString.call(arr);
                };
        },
        17563: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            let strictUriEncode = __webpack_require__(70610),
                decodeComponent = __webpack_require__(44020),
                splitOnFirst = __webpack_require__(80500),
                isNullOrUndefined = (value) => null == value;
            function validateArrayFormatSeparator(value) {
                if ("string" != typeof value || 1 !== value.length) throw TypeError("arrayFormatSeparator must be single character string");
            }
            function encode(value, options) {
                return options.encode ? (options.strict ? strictUriEncode(value) : encodeURIComponent(value)) : value;
            }
            function decode(value, options) {
                return options.decode ? decodeComponent(value) : value;
            }
            function removeHash(input) {
                let hashStart = input.indexOf("#");
                return -1 !== hashStart && (input = input.slice(0, hashStart)), input;
            }
            function extract(input) {
                input = removeHash(input);
                let queryStart = input.indexOf("?");
                return -1 === queryStart ? "" : input.slice(queryStart + 1);
            }
            function parseValue(value, options) {
                return (
                    options.parseNumbers && !Number.isNaN(Number(value)) && "string" == typeof value && "" !== value.trim()
                        ? (value = Number(value))
                        : options.parseBooleans && null !== value && ("true" === value.toLowerCase() || "false" === value.toLowerCase()) && (value = "true" === value.toLowerCase()),
                    value
                );
            }
            function parse(input, options) {
                validateArrayFormatSeparator((options = Object.assign({ decode: !0, sort: !0, arrayFormat: "none", arrayFormatSeparator: ",", parseNumbers: !1, parseBooleans: !1 }, options)).arrayFormatSeparator);
                let formatter = (function (options) {
                        let result;
                        switch (options.arrayFormat) {
                            case "index":
                                return (key, value, accumulator) => {
                                    if (((result = /\[(\d*)\]$/.exec(key)), (key = key.replace(/\[\d*\]$/, "")), !result)) {
                                        accumulator[key] = value;
                                        return;
                                    }
                                    void 0 === accumulator[key] && (accumulator[key] = {}), (accumulator[key][result[1]] = value);
                                };
                            case "bracket":
                                return (key, value, accumulator) => {
                                    if (((result = /(\[\])$/.exec(key)), (key = key.replace(/\[\]$/, "")), !result)) {
                                        accumulator[key] = value;
                                        return;
                                    }
                                    if (void 0 === accumulator[key]) {
                                        accumulator[key] = [value];
                                        return;
                                    }
                                    accumulator[key] = [].concat(accumulator[key], value);
                                };
                            case "comma":
                            case "separator":
                                return (key, value, accumulator) => {
                                    let isArray = "string" == typeof value && value.split("").indexOf(options.arrayFormatSeparator) > -1,
                                        newValue = isArray ? value.split(options.arrayFormatSeparator).map((item) => decode(item, options)) : null === value ? value : decode(value, options);
                                    accumulator[key] = newValue;
                                };
                            default:
                                return (key, value, accumulator) => {
                                    if (void 0 === accumulator[key]) {
                                        accumulator[key] = value;
                                        return;
                                    }
                                    accumulator[key] = [].concat(accumulator[key], value);
                                };
                        }
                    })(options),
                    ret = Object.create(null);
                if ("string" != typeof input || !(input = input.trim().replace(/^[?#&]/, ""))) return ret;
                for (let param of input.split("&")) {
                    let [key, value] = splitOnFirst(options.decode ? param.replace(/\+/g, " ") : param, "=");
                    (value = void 0 === value ? null : ["comma", "separator"].includes(options.arrayFormat) ? value : decode(value, options)), formatter(decode(key, options), value, ret);
                }
                for (let key1 of Object.keys(ret)) {
                    let value1 = ret[key1];
                    if ("object" == typeof value1 && null !== value1) for (let k of Object.keys(value1)) value1[k] = parseValue(value1[k], options);
                    else ret[key1] = parseValue(value1, options);
                }
                return !1 === options.sort
                    ? ret
                    : (!0 === options.sort ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {
                          let value = ret[key];
                          return (
                              Boolean(value) && "object" == typeof value && !Array.isArray(value)
                                  ? (result[key] = (function keysSorter(input) {
                                        return Array.isArray(input)
                                            ? input.sort()
                                            : "object" == typeof input
                                            ? keysSorter(Object.keys(input))
                                                  .sort((a, b) => Number(a) - Number(b))
                                                  .map((key) => input[key])
                                            : input;
                                    })(value))
                                  : (result[key] = value),
                              result
                          );
                      }, Object.create(null));
            }
            (exports.extract = extract),
                (exports.parse = parse),
                (exports.stringify = (object, options) => {
                    if (!object) return "";
                    validateArrayFormatSeparator((options = Object.assign({ encode: !0, strict: !0, arrayFormat: "none", arrayFormatSeparator: "," }, options)).arrayFormatSeparator);
                    let shouldFilter = (key) => (options.skipNull && isNullOrUndefined(object[key])) || (options.skipEmptyString && "" === object[key]),
                        formatter = (function (options) {
                            switch (options.arrayFormat) {
                                case "index":
                                    return (key) => (result, value) => {
                                        let index = result.length;
                                        return void 0 === value || (options.skipNull && null === value) || (options.skipEmptyString && "" === value)
                                            ? result
                                            : null === value
                                            ? [...result, [encode(key, options), "[", index, "]"].join("")]
                                            : [...result, [encode(key, options), "[", encode(index, options), "]=", encode(value, options)].join("")];
                                    };
                                case "bracket":
                                    return (key) => (result, value) =>
                                        void 0 === value || (options.skipNull && null === value) || (options.skipEmptyString && "" === value)
                                            ? result
                                            : null === value
                                            ? [...result, [encode(key, options), "[]"].join("")]
                                            : [...result, [encode(key, options), "[]=", encode(value, options)].join("")];
                                case "comma":
                                case "separator":
                                    return (key) => (result, value) =>
                                        null == value || 0 === value.length
                                            ? result
                                            : 0 === result.length
                                            ? [[encode(key, options), "=", encode(value, options)].join("")]
                                            : [[result, encode(value, options)].join(options.arrayFormatSeparator)];
                                default:
                                    return (key) => (result, value) =>
                                        void 0 === value || (options.skipNull && null === value) || (options.skipEmptyString && "" === value)
                                            ? result
                                            : null === value
                                            ? [...result, encode(key, options)]
                                            : [...result, [encode(key, options), "=", encode(value, options)].join("")];
                            }
                        })(options),
                        objectCopy = {};
                    for (let key of Object.keys(object)) shouldFilter(key) || (objectCopy[key] = object[key]);
                    let keys = Object.keys(objectCopy);
                    return (
                        !1 !== options.sort && keys.sort(options.sort),
                        keys
                            .map((key) => {
                                let value = object[key];
                                return void 0 === value ? "" : null === value ? encode(key, options) : Array.isArray(value) ? value.reduce(formatter(key), []).join("&") : encode(key, options) + "=" + encode(value, options);
                            })
                            .filter((x) => x.length > 0)
                            .join("&")
                    );
                }),
                (exports.parseUrl = (input, options) => {
                    options = Object.assign({ decode: !0 }, options);
                    let [url, hash] = splitOnFirst(input, "#");
                    return Object.assign({ url: url.split("?")[0] || "", query: parse(extract(input), options) }, options && options.parseFragmentIdentifier && hash ? { fragmentIdentifier: decode(hash, options) } : {});
                }),
                (exports.stringifyUrl = (input, options) => {
                    options = Object.assign({ encode: !0, strict: !0 }, options);
                    let url = removeHash(input.url).split("?")[0] || "",
                        queryFromUrl = exports.extract(input.url),
                        parsedQueryFromUrl = exports.parse(queryFromUrl, { sort: !1 }),
                        query = Object.assign(parsedQueryFromUrl, input.query),
                        queryString = exports.stringify(query, options);
                    queryString && (queryString = `?${queryString}`);
                    let hash = (function (url) {
                        let hash = "",
                            hashStart = url.indexOf("#");
                        return -1 !== hashStart && (hash = url.slice(hashStart)), hash;
                    })(input.url);
                    return input.fragmentIdentifier && (hash = `#${encode(input.fragmentIdentifier, options)}`), `${url}${queryString}${hash}`;
                });
        },
        62587: function (module) {
            "use strict";
            module.exports = function (qs, sep, eq, options) {
                (sep = sep || "&"), (eq = eq || "=");
                var obj = {};
                if ("string" != typeof qs || 0 === qs.length) return obj;
                var regexp = /\+/g;
                qs = qs.split(sep);
                var maxKeys = 1e3;
                options && "number" == typeof options.maxKeys && (maxKeys = options.maxKeys);
                var len = qs.length;
                maxKeys > 0 && len > maxKeys && (len = maxKeys);
                for (var i = 0; i < len; ++i) {
                    var kstr,
                        vstr,
                        k,
                        v,
                        x = qs[i].replace(regexp, "%20"),
                        idx = x.indexOf(eq);
                    (idx >= 0 ? ((kstr = x.substr(0, idx)), (vstr = x.substr(idx + 1))) : ((kstr = x), (vstr = "")), (k = decodeURIComponent(kstr)), (v = decodeURIComponent(vstr)), Object.prototype.hasOwnProperty.call(obj, k))
                        ? Array.isArray(obj[k])
                            ? obj[k].push(v)
                            : (obj[k] = [obj[k], v])
                        : (obj[k] = v);
                }
                return obj;
            };
        },
        12361: function (module) {
            "use strict";
            var stringifyPrimitive = function (v) {
                switch (typeof v) {
                    case "string":
                        return v;
                    case "boolean":
                        return v ? "true" : "false";
                    case "number":
                        return isFinite(v) ? v : "";
                    default:
                        return "";
                }
            };
            module.exports = function (obj, sep, eq, name) {
                return ((sep = sep || "&"), (eq = eq || "="), null === obj && (obj = void 0), "object" == typeof obj)
                    ? Object.keys(obj)
                          .map(function (k) {
                              var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
                              return Array.isArray(obj[k])
                                  ? obj[k]
                                        .map(function (v) {
                                            return ks + encodeURIComponent(stringifyPrimitive(v));
                                        })
                                        .join(sep)
                                  : ks + encodeURIComponent(stringifyPrimitive(obj[k]));
                          })
                          .join(sep)
                    : name
                    ? encodeURIComponent(stringifyPrimitive(name)) + eq + encodeURIComponent(stringifyPrimitive(obj))
                    : "";
            };
        },
        17673: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            (exports.decode = exports.parse = __webpack_require__(62587)), (exports.encode = exports.stringify = __webpack_require__(12361));
        },
        61798: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var process = __webpack_require__(34155),
                Buffer = __webpack_require__(89509).Buffer,
                crypto1 = __webpack_require__.g.crypto || __webpack_require__.g.msCrypto;
            crypto1 && crypto1.getRandomValues
                ? (module.exports = function (size, cb) {
                      if (size > 4294967295) throw RangeError("requested too many random bytes");
                      var bytes = Buffer.allocUnsafe(size);
                      if (size > 0) {
                          if (size > 65536) for (var generated = 0; generated < size; generated += 65536) crypto1.getRandomValues(bytes.slice(generated, generated + 65536));
                          else crypto1.getRandomValues(bytes);
                      }
                      return "function" == typeof cb
                          ? process.nextTick(function () {
                                cb(null, bytes);
                            })
                          : bytes;
                  })
                : (module.exports = function () {
                      throw Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11");
                  });
        },
        69921: function (__unused_webpack_module, exports) {
            "use strict";
            /** @license React v16.13.1
             * react-is.production.min.js
             *
             * Copyright (c) Facebook, Inc. and its affiliates.
             *
             * This source code is licensed under the MIT license found in the
             * LICENSE file in the root directory of this source tree.
             */ var b = "function" == typeof Symbol && Symbol.for,
                c = b ? Symbol.for("react.element") : 60103,
                d = b ? Symbol.for("react.portal") : 60106,
                e = b ? Symbol.for("react.fragment") : 60107,
                f = b ? Symbol.for("react.strict_mode") : 60108,
                g = b ? Symbol.for("react.profiler") : 60114,
                h = b ? Symbol.for("react.provider") : 60109,
                k = b ? Symbol.for("react.context") : 60110,
                l = b ? Symbol.for("react.async_mode") : 60111,
                m = b ? Symbol.for("react.concurrent_mode") : 60111,
                n = b ? Symbol.for("react.forward_ref") : 60112,
                p = b ? Symbol.for("react.suspense") : 60113,
                q = b ? Symbol.for("react.suspense_list") : 60120,
                r = b ? Symbol.for("react.memo") : 60115,
                t = b ? Symbol.for("react.lazy") : 60116,
                v = b ? Symbol.for("react.block") : 60121,
                w = b ? Symbol.for("react.fundamental") : 60117,
                x = b ? Symbol.for("react.responder") : 60118,
                y = b ? Symbol.for("react.scope") : 60119;
            function z(a) {
                if ("object" == typeof a && null !== a) {
                    var u = a.$$typeof;
                    switch (u) {
                        case c:
                            switch ((a = a.type)) {
                                case l:
                                case m:
                                case e:
                                case g:
                                case f:
                                case p:
                                    return a;
                                default:
                                    switch ((a = a && a.$$typeof)) {
                                        case k:
                                        case n:
                                        case t:
                                        case r:
                                        case h:
                                            return a;
                                        default:
                                            return u;
                                    }
                            }
                        case d:
                            return u;
                    }
                }
            }
            function A(a) {
                return z(a) === m;
            }
            (exports.AsyncMode = l),
                (exports.ConcurrentMode = m),
                (exports.ContextConsumer = k),
                (exports.ContextProvider = h),
                (exports.Element = c),
                (exports.ForwardRef = n),
                (exports.Fragment = e),
                (exports.Lazy = t),
                (exports.Memo = r),
                (exports.Portal = d),
                (exports.Profiler = g),
                (exports.StrictMode = f),
                (exports.Suspense = p),
                (exports.isAsyncMode = function (a) {
                    return A(a) || z(a) === l;
                }),
                (exports.isConcurrentMode = A),
                (exports.isContextConsumer = function (a) {
                    return z(a) === k;
                }),
                (exports.isContextProvider = function (a) {
                    return z(a) === h;
                }),
                (exports.isElement = function (a) {
                    return "object" == typeof a && null !== a && a.$$typeof === c;
                }),
                (exports.isForwardRef = function (a) {
                    return z(a) === n;
                }),
                (exports.isFragment = function (a) {
                    return z(a) === e;
                }),
                (exports.isLazy = function (a) {
                    return z(a) === t;
                }),
                (exports.isMemo = function (a) {
                    return z(a) === r;
                }),
                (exports.isPortal = function (a) {
                    return z(a) === d;
                }),
                (exports.isProfiler = function (a) {
                    return z(a) === g;
                }),
                (exports.isStrictMode = function (a) {
                    return z(a) === f;
                }),
                (exports.isSuspense = function (a) {
                    return z(a) === p;
                }),
                (exports.isValidElementType = function (a) {
                    return (
                        "string" == typeof a ||
                        "function" == typeof a ||
                        a === e ||
                        a === m ||
                        a === g ||
                        a === f ||
                        a === p ||
                        a === q ||
                        ("object" == typeof a &&
                            null !== a &&
                            (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n || a.$$typeof === w || a.$$typeof === x || a.$$typeof === y || a.$$typeof === v))
                    );
                }),
                (exports.typeOf = z);
        },
        59864: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            module.exports = __webpack_require__(69921);
        },
        39711: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                VK: function () {
                    return BrowserRouter;
                },
                lr: function () {
                    return useSearchParams;
                },
                rU: function () {
                    return Link;
                },
            });
            var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294),
                history__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(82717),
                react_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(96974);
            /**
             * React Router DOM v6.3.0
             *
             * Copyright (c) Remix Software Inc.
             *
             * This source code is licensed under the MIT license found in the
             * LICENSE.md file in the root directory of this source tree.
             *
             * @license MIT
             */ function _extends() {
                return (_extends =
                    Object.assign ||
                    function (target) {
                        for (var i = 1; i < arguments.length; i++) {
                            var source = arguments[i];
                            for (var key in source) Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
                        }
                        return target;
                    }).apply(this, arguments);
            }
            let _excluded = ["onClick", "reloadDocument", "replace", "state", "target", "to"];
            function BrowserRouter(_ref) {
                let { basename, children, window: window1 } = _ref,
                    historyRef = (0, react__WEBPACK_IMPORTED_MODULE_0__.useRef)();
                null == historyRef.current && (historyRef.current = (0, history__WEBPACK_IMPORTED_MODULE_1__.lX)({ window: window1 }));
                let history = historyRef.current,
                    [state, setState] = (0, react__WEBPACK_IMPORTED_MODULE_0__.useState)({ action: history.action, location: history.location });
                return (
                    (0, react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => history.listen(setState), [history]),
                    (0, react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react_router__WEBPACK_IMPORTED_MODULE_2__.F0, { basename: basename, children: children, location: state.location, navigationType: state.action, navigator: history })
                );
            }
            let Link = (0, react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function (_ref4, ref) {
                let { onClick, reloadDocument, replace = !1, state, target, to } = _ref4,
                    rest = (function (source, excluded) {
                        if (null == source) return {};
                        var key,
                            i,
                            target = {},
                            sourceKeys = Object.keys(source);
                        for (i = 0; i < sourceKeys.length; i++) (key = sourceKeys[i]), excluded.indexOf(key) >= 0 || (target[key] = source[key]);
                        return target;
                    })(_ref4, _excluded),
                    href = (0, react_router__WEBPACK_IMPORTED_MODULE_2__.oQ)(to),
                    internalOnClick = (function (to, _temp) {
                        let { target, replace: replaceProp, state } = void 0 === _temp ? {} : _temp,
                            navigate = (0, react_router__WEBPACK_IMPORTED_MODULE_2__.s0)(),
                            location1 = (0, react_router__WEBPACK_IMPORTED_MODULE_2__.TH)(),
                            path = (0, react_router__WEBPACK_IMPORTED_MODULE_2__.WU)(to);
                        return (0, react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(
                            (event) => {
                                if (0 === event.button && (!target || "_self" === target) && !(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)) {
                                    event.preventDefault();
                                    let replace = !!replaceProp || (0, history__WEBPACK_IMPORTED_MODULE_1__.Ep)(location1) === (0, history__WEBPACK_IMPORTED_MODULE_1__.Ep)(path);
                                    navigate(to, { replace, state });
                                }
                            },
                            [location1, navigate, path, replaceProp, state, target, to]
                        );
                    })(to, { replace, state, target });
                return (0, react__WEBPACK_IMPORTED_MODULE_0__.createElement)(
                    "a",
                    _extends({}, rest, {
                        href: href,
                        onClick: function (event) {
                            onClick && onClick(event), event.defaultPrevented || reloadDocument || internalOnClick(event);
                        },
                        ref: ref,
                        target: target,
                    })
                );
            });
            function useSearchParams(defaultInit) {
                let defaultSearchParamsRef = (0, react__WEBPACK_IMPORTED_MODULE_0__.useRef)(createSearchParams(defaultInit)),
                    location1 = (0, react_router__WEBPACK_IMPORTED_MODULE_2__.TH)(),
                    searchParams = (0, react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
                        let searchParams = createSearchParams(location1.search);
                        for (let key of defaultSearchParamsRef.current.keys())
                            searchParams.has(key) ||
                                defaultSearchParamsRef.current.getAll(key).forEach((value) => {
                                    searchParams.append(key, value);
                                });
                        return searchParams;
                    }, [location1.search]),
                    navigate = (0, react_router__WEBPACK_IMPORTED_MODULE_2__.s0)();
                return [
                    searchParams,
                    (0, react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(
                        (nextInit, navigateOptions) => {
                            navigate("?" + createSearchParams(nextInit), navigateOptions);
                        },
                        [navigate]
                    ),
                ];
            }
            function createSearchParams(init) {
                return (
                    void 0 === init && (init = ""),
                    new URLSearchParams(
                        "string" == typeof init || Array.isArray(init) || init instanceof URLSearchParams
                            ? init
                            : Object.keys(init).reduce((memo, key) => {
                                  let value = init[key];
                                  return memo.concat(Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]);
                              }, [])
                    )
                );
            }
        },
        96974: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                AW: function () {
                    return Route;
                },
                F0: function () {
                    return Router;
                },
                TH: function () {
                    return useLocation;
                },
                UO: function () {
                    return useParams;
                },
                WU: function () {
                    return useResolvedPath;
                },
                Z5: function () {
                    return Routes;
                },
                bS: function () {
                    return useMatch;
                },
                j3: function () {
                    return Outlet;
                },
                oQ: function () {
                    return useHref;
                },
                s0: function () {
                    return useNavigate;
                },
            });
            var history__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(82717),
                react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
            /**
             * React Router v6.3.0
             *
             * Copyright (c) Remix Software Inc.
             *
             * This source code is licensed under the MIT license found in the
             * LICENSE.md file in the root directory of this source tree.
             *
             * @license MIT
             */ let NavigationContext = (0, react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null),
                LocationContext = (0, react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null),
                RouteContext = (0, react__WEBPACK_IMPORTED_MODULE_0__.createContext)({ outlet: null, matches: [] });
            function invariant(cond, message) {
                if (!cond) throw Error(message);
            }
            let paramRe = /^:\w+$/,
                isSplat = (s) => "*" === s;
            function matchPath(pattern, pathname) {
                var path, caseSensitive, end;
                let paramNames, regexpSource;
                "string" == typeof pattern && (pattern = { path: pattern, caseSensitive: !1, end: !0 });
                let [matcher, paramNames1] =
                        ((path = pattern.path),
                        (caseSensitive = pattern.caseSensitive),
                        (end = pattern.end),
                        void 0 === caseSensitive && (caseSensitive = !1),
                        void 0 === end && (end = !0),
                        (paramNames = []),
                        (regexpSource =
                            "^" +
                            path
                                .replace(/\/*\*?$/, "")
                                .replace(/^\/*/, "/")
                                .replace(/[\\.*+^$?{}|()[\]]/g, "\\$&")
                                .replace(/:(\w+)/g, (_, paramName) => (paramNames.push(paramName), "([^\\/]+)"))),
                        path.endsWith("*") ? (paramNames.push("*"), (regexpSource += "*" === path || "/*" === path ? "(.*)$" : "(?:\\/(.+)|\\/*)$")) : (regexpSource += end ? "\\/*$" : "(?:(?=[.~-]|%[0-9A-F]{2})|\\b|\\/|$)"),
                        [RegExp(regexpSource, caseSensitive ? void 0 : "i"), paramNames]),
                    match = pathname.match(matcher);
                if (!match) return null;
                let matchedPathname = match[0],
                    pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1"),
                    captureGroups = match.slice(1),
                    params = paramNames1.reduce((memo, paramName, index) => {
                        if ("*" === paramName) {
                            let splatValue = captureGroups[index] || "";
                            pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
                        }
                        return (
                            (memo[paramName] = (function (value, paramName) {
                                try {
                                    return decodeURIComponent(value);
                                } catch (error) {
                                    return value;
                                }
                            })(captureGroups[index] || "", 0)),
                            memo
                        );
                    }, {});
                return { params, pathname: matchedPathname, pathnameBase, pattern };
            }
            function resolveTo(toArg, routePathnames, locationPathname) {
                let from,
                    to = "string" == typeof toArg ? (0, history__WEBPACK_IMPORTED_MODULE_1__.cP)(toArg) : toArg,
                    toPathname = "" === toArg || "" === to.pathname ? "/" : to.pathname;
                if (null == toPathname) from = locationPathname;
                else {
                    let routePathnameIndex = routePathnames.length - 1;
                    if (toPathname.startsWith("..")) {
                        let toSegments = toPathname.split("/");
                        for (; ".." === toSegments[0]; ) toSegments.shift(), (routePathnameIndex -= 1);
                        to.pathname = toSegments.join("/");
                    }
                    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
                }
                let path = (function (to, fromPathname) {
                    let segments;
                    void 0 === fromPathname && (fromPathname = "/");
                    let { pathname: toPathname, search = "", hash = "" } = "string" == typeof to ? (0, history__WEBPACK_IMPORTED_MODULE_1__.cP)(to) : to,
                        pathname = toPathname
                            ? toPathname.startsWith("/")
                                ? toPathname
                                : ((segments = fromPathname.replace(/\/+$/, "").split("/")),
                                  toPathname.split("/").forEach((segment) => {
                                      ".." === segment ? segments.length > 1 && segments.pop() : "." !== segment && segments.push(segment);
                                  }),
                                  segments.length > 1 ? segments.join("/") : "/")
                            : fromPathname;
                    return { pathname, search: normalizeSearch(search), hash: normalizeHash(hash) };
                })(to, from);
                return toPathname && "/" !== toPathname && toPathname.endsWith("/") && !path.pathname.endsWith("/") && (path.pathname += "/"), path;
            }
            function stripBasename(pathname, basename) {
                if ("/" === basename) return pathname;
                if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) return null;
                let nextChar = pathname.charAt(basename.length);
                return nextChar && "/" !== nextChar ? null : pathname.slice(basename.length) || "/";
            }
            let joinPaths = (paths) => paths.join("/").replace(/\/\/+/g, "/"),
                normalizePathname = (pathname) => pathname.replace(/\/+$/, "").replace(/^\/*/, "/"),
                normalizeSearch = (search) => (search && "?" !== search ? (search.startsWith("?") ? search : "?" + search) : ""),
                normalizeHash = (hash) => (hash && "#" !== hash ? (hash.startsWith("#") ? hash : "#" + hash) : "");
            function useHref(to) {
                useInRouterContext() || invariant(!1);
                let { basename, navigator: navigator1 } = (0, react__WEBPACK_IMPORTED_MODULE_0__.useContext)(NavigationContext),
                    { hash, pathname, search } = useResolvedPath(to),
                    joinedPathname = pathname;
                if ("/" !== basename) {
                    let toPathname = "" === to || "" === to.pathname ? "/" : "string" == typeof to ? (0, history__WEBPACK_IMPORTED_MODULE_1__.cP)(to).pathname : to.pathname,
                        endsWithSlash = null != toPathname && toPathname.endsWith("/");
                    joinedPathname = "/" === pathname ? basename + (endsWithSlash ? "/" : "") : joinPaths([basename, pathname]);
                }
                return navigator1.createHref({ pathname: joinedPathname, search, hash });
            }
            function useInRouterContext() {
                return null != (0, react__WEBPACK_IMPORTED_MODULE_0__.useContext)(LocationContext);
            }
            function useLocation() {
                return useInRouterContext() || invariant(!1), (0, react__WEBPACK_IMPORTED_MODULE_0__.useContext)(LocationContext).location;
            }
            function useMatch(pattern) {
                useInRouterContext() || invariant(!1);
                let { pathname } = useLocation();
                return (0, react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => matchPath(pattern, pathname), [pathname, pattern]);
            }
            function useNavigate() {
                useInRouterContext() || invariant(!1);
                let { basename, navigator: navigator1 } = (0, react__WEBPACK_IMPORTED_MODULE_0__.useContext)(NavigationContext),
                    { matches } = (0, react__WEBPACK_IMPORTED_MODULE_0__.useContext)(RouteContext),
                    { pathname: locationPathname } = useLocation(),
                    routePathnamesJson = JSON.stringify(matches.map((match) => match.pathnameBase)),
                    activeRef = (0, react__WEBPACK_IMPORTED_MODULE_0__.useRef)(!1);
                return (
                    (0, react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
                        activeRef.current = !0;
                    }),
                    (0, react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(
                        function (to, options) {
                            if ((void 0 === options && (options = {}), !activeRef.current)) return;
                            if ("number" == typeof to) {
                                navigator1.go(to);
                                return;
                            }
                            let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname);
                            "/" !== basename && (path.pathname = joinPaths([basename, path.pathname])), (options.replace ? navigator1.replace : navigator1.push)(path, options.state);
                        },
                        [basename, navigator1, routePathnamesJson, locationPathname]
                    )
                );
            }
            let OutletContext = (0, react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
            function useParams() {
                let { matches } = (0, react__WEBPACK_IMPORTED_MODULE_0__.useContext)(RouteContext),
                    routeMatch = matches[matches.length - 1];
                return routeMatch ? routeMatch.params : {};
            }
            function useResolvedPath(to) {
                let { matches } = (0, react__WEBPACK_IMPORTED_MODULE_0__.useContext)(RouteContext),
                    { pathname: locationPathname } = useLocation(),
                    routePathnamesJson = JSON.stringify(matches.map((match) => match.pathnameBase));
                return (0, react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname), [to, routePathnamesJson, locationPathname]);
            }
            function Outlet(props) {
                var context;
                let outlet;
                return (
                    (context = props.context),
                    (outlet = (0, react__WEBPACK_IMPORTED_MODULE_0__.useContext)(RouteContext).outlet) ? (0, react__WEBPACK_IMPORTED_MODULE_0__.createElement)(OutletContext.Provider, { value: context }, outlet) : outlet
                );
            }
            function Route(_props) {
                invariant(!1);
            }
            function Router(_ref3) {
                let { basename: basenameProp = "/", children = null, location: locationProp, navigationType = history__WEBPACK_IMPORTED_MODULE_1__.aU.Pop, navigator: navigator1, static: staticProp = !1 } = _ref3;
                useInRouterContext() && invariant(!1);
                let basename = normalizePathname(basenameProp),
                    navigationContext = (0, react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => ({ basename, navigator: navigator1, static: staticProp }), [basename, navigator1, staticProp]);
                "string" == typeof locationProp && (locationProp = (0, history__WEBPACK_IMPORTED_MODULE_1__.cP)(locationProp));
                let { pathname = "/", search = "", hash = "", state = null, key = "default" } = locationProp,
                    location1 = (0, react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
                        let trailingPathname = stripBasename(pathname, basename);
                        return null == trailingPathname ? null : { pathname: trailingPathname, search, hash, state, key };
                    }, [basename, pathname, search, hash, state, key]);
                return null == location1
                    ? null
                    : (0, react__WEBPACK_IMPORTED_MODULE_0__.createElement)(
                          NavigationContext.Provider,
                          { value: navigationContext },
                          (0, react__WEBPACK_IMPORTED_MODULE_0__.createElement)(LocationContext.Provider, { children: children, value: { location: location1, navigationType } })
                      );
            }
            function Routes(_ref4) {
                let { children, location: location1 } = _ref4;
                return (function (routes, locationArg) {
                    var _parsedLocationArg$pa, matches, parentMatches;
                    let location1;
                    useInRouterContext() || invariant(!1);
                    let { matches: parentMatches1 } = (0, react__WEBPACK_IMPORTED_MODULE_0__.useContext)(RouteContext),
                        routeMatch = parentMatches1[parentMatches1.length - 1],
                        parentParams = routeMatch ? routeMatch.params : {};
                    routeMatch && routeMatch.pathname;
                    let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/";
                    routeMatch && routeMatch.route;
                    let locationFromContext = useLocation();
                    if (locationArg) {
                        let parsedLocationArg = "string" == typeof locationArg ? (0, history__WEBPACK_IMPORTED_MODULE_1__.cP)(locationArg) : locationArg;
                        "/" === parentPathnameBase || (null == (_parsedLocationArg$pa = parsedLocationArg.pathname) ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase)) || invariant(!1), (location1 = parsedLocationArg);
                    } else location1 = locationFromContext;
                    let pathname = location1.pathname || "/",
                        matches1 = (function (routes, locationArg, basename) {
                            void 0 === basename && (basename = "/");
                            let pathname = stripBasename(("string" == typeof locationArg ? (0, history__WEBPACK_IMPORTED_MODULE_1__.cP)(locationArg) : locationArg).pathname || "/", basename);
                            if (null == pathname) return null;
                            let branches = (function flattenRoutes(routes, branches, parentsMeta, parentPath) {
                                return (
                                    void 0 === branches && (branches = []),
                                    void 0 === parentsMeta && (parentsMeta = []),
                                    void 0 === parentPath && (parentPath = ""),
                                    routes.forEach((route, index) => {
                                        let meta = { relativePath: route.path || "", caseSensitive: !0 === route.caseSensitive, childrenIndex: index, route };
                                        meta.relativePath.startsWith("/") && (meta.relativePath.startsWith(parentPath) || invariant(!1), (meta.relativePath = meta.relativePath.slice(parentPath.length)));
                                        let path = joinPaths([parentPath, meta.relativePath]),
                                            routesMeta = parentsMeta.concat(meta);
                                        if ((route.children && route.children.length > 0 && (!0 !== route.index || invariant(!1), flattenRoutes(route.children, branches, routesMeta, path)), null != route.path || route.index)) {
                                            var index1;
                                            let segments, initialScore;
                                            branches.push({
                                                path,
                                                score:
                                                    ((index1 = route.index),
                                                    (initialScore = (segments = path.split("/")).length),
                                                    segments.some(isSplat) && (initialScore += -2),
                                                    index1 && (initialScore += 2),
                                                    segments.filter((s) => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? 3 : "" === segment ? 1 : 10), initialScore)),
                                                routesMeta,
                                            });
                                        }
                                    }),
                                    branches
                                );
                            })(routes);
                            !(function (branches) {
                                branches.sort((a, b) => {
                                    var a1, b1;
                                    return a.score !== b.score
                                        ? b.score - a.score
                                        : ((a1 = a.routesMeta.map((meta) => meta.childrenIndex)),
                                          (b1 = b.routesMeta.map((meta) => meta.childrenIndex)),
                                          a1.length === b1.length && a1.slice(0, -1).every((n, i) => n === b1[i]) ? a1[a1.length - 1] - b1[b1.length - 1] : 0);
                                });
                            })(branches);
                            let matches = null;
                            for (let i = 0; null == matches && i < branches.length; ++i)
                                matches = (function (branch, pathname) {
                                    let { routesMeta } = branch,
                                        matchedParams = {},
                                        matchedPathname = "/",
                                        matches = [];
                                    for (let i = 0; i < routesMeta.length; ++i) {
                                        let meta = routesMeta[i],
                                            end = i === routesMeta.length - 1,
                                            remainingPathname = "/" === matchedPathname ? pathname : pathname.slice(matchedPathname.length) || "/",
                                            match = matchPath({ path: meta.relativePath, caseSensitive: meta.caseSensitive, end }, remainingPathname);
                                        if (!match) return null;
                                        Object.assign(matchedParams, match.params);
                                        let route = meta.route;
                                        matches.push({ params: matchedParams, pathname: joinPaths([matchedPathname, match.pathname]), pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])), route }),
                                            "/" !== match.pathnameBase && (matchedPathname = joinPaths([matchedPathname, match.pathnameBase]));
                                    }
                                    return matches;
                                })(branches[i], pathname);
                            return matches;
                        })(routes, { pathname: "/" === parentPathnameBase ? pathname : pathname.slice(parentPathnameBase.length) || "/" });
                    return (
                        (matches =
                            matches1 &&
                            matches1.map((match) =>
                                Object.assign({}, match, {
                                    params: Object.assign({}, parentParams, match.params),
                                    pathname: joinPaths([parentPathnameBase, match.pathname]),
                                    pathnameBase: "/" === match.pathnameBase ? parentPathnameBase : joinPaths([parentPathnameBase, match.pathnameBase]),
                                })
                            )),
                        (void 0 === (parentMatches = parentMatches1) && (parentMatches = []), null == matches)
                            ? null
                            : matches.reduceRight(
                                  (outlet, match, index) =>
                                      (0, react__WEBPACK_IMPORTED_MODULE_0__.createElement)(RouteContext.Provider, {
                                          children: void 0 !== match.route.element ? match.route.element : outlet,
                                          value: { outlet, matches: parentMatches.concat(matches.slice(0, index + 1)) },
                                      }),
                                  null
                              )
                    );
                })(
                    (function createRoutesFromChildren(children) {
                        let routes = [];
                        return (
                            react__WEBPACK_IMPORTED_MODULE_0__.Children.forEach(children, (element) => {
                                if (!(0, react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(element)) return;
                                if (element.type === react__WEBPACK_IMPORTED_MODULE_0__.Fragment) {
                                    routes.push.apply(routes, createRoutesFromChildren(element.props.children));
                                    return;
                                }
                                element.type !== Route && invariant(!1);
                                let route = { caseSensitive: element.props.caseSensitive, element: element.props.element, index: element.props.index, path: element.props.path };
                                element.props.children && (route.children = createRoutesFromChildren(element.props.children)), routes.push(route);
                            }),
                            routes
                        );
                    })(children),
                    location1
                );
            }
        },
        40217: function (__unused_webpack_module, exports, __webpack_require__) {
            !(function (e, t) {
                "use strict";
                function n(e, t, n, o, r, i, u) {
                    try {
                        var l = e[i](u),
                            s = l.value;
                    } catch (e1) {
                        return void n(e1);
                    }
                    l.done ? t(s) : Promise.resolve(s).then(o, r);
                }
                function o(e) {
                    return function () {
                        var t = this,
                            o = arguments;
                        return new Promise(function (r, i) {
                            var u = e.apply(t, o);
                            function l(e) {
                                n(u, r, i, l, s, "next", e);
                            }
                            function s(e) {
                                n(u, r, i, l, s, "throw", e);
                            }
                            l(void 0);
                        });
                    };
                }
                function r() {
                    return (r =
                        Object.assign ||
                        function (e) {
                            for (var t = 1; t < arguments.length; t++) {
                                var n = arguments[t];
                                for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o]);
                            }
                            return e;
                        }).apply(this, arguments);
                }
                function i(e, t) {
                    if (null == e) return {};
                    var n,
                        o,
                        r = {},
                        i = Object.keys(e);
                    for (o = 0; o < i.length; o++) (n = i[o]), t.indexOf(n) >= 0 || (r[n] = e[n]);
                    return r;
                }
                function u(e) {
                    var t = (function (e, t) {
                        if ("object" != typeof e || null === e) return e;
                        var n = e[Symbol.toPrimitive];
                        if (void 0 !== n) {
                            var o = n.call(e, t || "default");
                            if ("object" != typeof o) return o;
                            throw TypeError("@@toPrimitive must return a primitive value.");
                        }
                        return ("string" === t ? String : Number)(e);
                    })(e, "string");
                    return "symbol" == typeof t ? t : String(t);
                }
                t = t && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t;
                var l = { init: "init" },
                    s = function (e) {
                        var t = e.value;
                        return void 0 === t ? "" : t;
                    },
                    a = function () {
                        return t.createElement(t.Fragment, null, "\xa0");
                    },
                    c = { Cell: s, width: 150, minWidth: 0, maxWidth: Number.MAX_SAFE_INTEGER };
                function d() {
                    for (var e = arguments.length, t = Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                    return t.reduce(function (e, t) {
                        var n = t.style,
                            o = t.className;
                        return (
                            (e = r({}, e, {}, i(t, ["style", "className"]))),
                            n && (e.style = e.style ? r({}, e.style || {}, {}, n || {}) : n),
                            o && (e.className = e.className ? e.className + " " + o : o),
                            "" === e.className && delete e.className,
                            e
                        );
                    }, {});
                }
                var f = function (e, t) {
                        return (
                            void 0 === t && (t = {}),
                            function (n) {
                                return (
                                    void 0 === n && (n = {}),
                                    [].concat(e, [n]).reduce(function (e, o) {
                                        return (function e(t, n, o) {
                                            return "function" == typeof n ? e({}, n(t, o)) : Array.isArray(n) ? d.apply(void 0, [t].concat(n)) : d(t, n);
                                        })(e, o, r({}, t, { userProps: n }));
                                    }, {})
                                );
                            }
                        );
                    },
                    p = function (e, t, n, o) {
                        return (
                            void 0 === n && (n = {}),
                            e.reduce(function (e, t) {
                                return t(e, n);
                            }, t)
                        );
                    },
                    g = function (e, t, n) {
                        return (
                            void 0 === n && (n = {}),
                            e.forEach(function (e) {
                                e(t, n);
                            })
                        );
                    };
                function v(e, t, n, o) {
                    e.findIndex(function (e) {
                        return e.pluginName === n;
                    }),
                        t.forEach(function (t) {
                            e.findIndex(function (e) {
                                return e.pluginName === t;
                            });
                        });
                }
                function m(e, t) {
                    return "function" == typeof e ? e(t) : e;
                }
                function h(e) {
                    var n = t.useRef();
                    return (
                        (n.current = e),
                        t.useCallback(function () {
                            return n.current;
                        }, [])
                    );
                }
                var y = "undefined" != typeof document ? t.useLayoutEffect : t.useEffect;
                function w(e, n) {
                    var o = t.useRef(!1);
                    y(function () {
                        o.current && e(), (o.current = !0);
                    }, n);
                }
                function R(e, t, n) {
                    return (
                        void 0 === n && (n = {}),
                        function (o, i) {
                            void 0 === i && (i = {});
                            var u = "string" == typeof o ? t[o] : o;
                            if (void 0 === u) throw (console.info(t), Error("Renderer Error ☝️"));
                            return b(u, r({}, e, { column: t }, n, {}, i));
                        }
                    );
                }
                function b(e, n) {
                    var t1;
                    return ("function" == typeof e && (t1 = Object.getPrototypeOf(e)).prototype && t1.prototype.isReactComponent) ||
                        "function" == typeof e ||
                        ("object" == typeof e && "symbol" == typeof e.$$typeof && ["react.memo", "react.forward_ref"].includes(e.$$typeof.description))
                        ? t.createElement(e, n)
                        : e;
                }
                function C(e) {
                    return G(e, "columns");
                }
                function x(e) {
                    var t = e.id,
                        n = e.accessor,
                        o = e.Header;
                    if ("string" == typeof n) {
                        t = t || n;
                        var r = n.split(".");
                        n = function (e) {
                            return (function (e, t, n) {
                                if (!t) return e;
                                var e1,
                                    o,
                                    r = "function" == typeof t ? t : JSON.stringify(t),
                                    i =
                                        E.get(r) ||
                                        ((e1 = (function e(t, n) {
                                            if ((void 0 === n && (n = []), Array.isArray(t))) for (var o = 0; o < t.length; o += 1) e(t[o], n);
                                            else n.push(t);
                                            return n;
                                        })(t)
                                            .map(function (e) {
                                                return String(e).replace(".", "_");
                                            })
                                            .join(".")
                                            .replace(W, ".")
                                            .replace(O, "")
                                            .split(".")),
                                        E.set(r, e1),
                                        e1);
                                try {
                                    o = i.reduce(function (e, t) {
                                        return e[t];
                                    }, e);
                                } catch (e2) {}
                                return void 0 !== o ? o : void 0;
                            })(e, r);
                        };
                    }
                    if ((!t && "string" == typeof o && o && (t = o), !t && e.columns)) throw (console.error(e), Error('A column ID (or unique "Header" value) is required!'));
                    if (!t) throw (console.error(e), Error("A column ID (or string accessor) is required!"));
                    return Object.assign(e, { id: t, accessor: n }), e;
                }
                function P(e, t) {
                    if (!t) throw Error();
                    return Object.assign(e, r({ Header: a, Footer: a }, c, {}, t, {}, e)), Object.assign(e, { originalWidth: e.width }), e;
                }
                var E = new Map();
                function I() {
                    for (var e = arguments.length, t = Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                    for (var o = 0; o < t.length; o += 1) if (void 0 !== t[o]) return t[o];
                }
                function F(e) {
                    if ("function" == typeof e) return e;
                }
                function G(e, t) {
                    var n = [];
                    return (
                        (function e(o) {
                            o.forEach(function (o) {
                                o[t] ? e(o[t]) : n.push(o);
                            });
                        })(e),
                        n
                    );
                }
                function A(e, t) {
                    var n = t.manualExpandedKey,
                        o = t.expanded,
                        r = t.expandSubRows,
                        i = void 0 === r || r,
                        u = [];
                    return (
                        e.forEach(function (e) {
                            return (function e(t, r) {
                                void 0 === r && (r = !0),
                                    (t.isExpanded = (t.original && t.original[n]) || o[t.id]),
                                    (t.canExpand = t.subRows && !!t.subRows.length),
                                    r && u.push(t),
                                    t.subRows &&
                                        t.subRows.length &&
                                        t.isExpanded &&
                                        t.subRows.forEach(function (t) {
                                            return e(t, i);
                                        });
                            })(e);
                        }),
                        u
                    );
                }
                function k(e, t, n) {
                    return F(e) || t[e] || n[e] || n.text;
                }
                function H(e, t, n) {
                    return e ? e(t, n) : void 0 === t;
                }
                function T() {
                    throw Error("React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.");
                }
                var z = null,
                    W = /\[/g,
                    O = /\]/g,
                    M = function (e) {
                        return r({ role: "table" }, e);
                    },
                    j = function (e) {
                        return r({ role: "rowgroup" }, e);
                    },
                    N = function (e, t) {
                        var n = t.column;
                        return r({ key: "header_" + n.id, colSpan: n.totalVisibleHeaderCount, role: "columnheader" }, e);
                    },
                    L = function (e, t) {
                        var n = t.column;
                        return r({ key: "footer_" + n.id, colSpan: n.totalVisibleHeaderCount }, e);
                    },
                    D = function (e, t) {
                        return r({ key: "headerGroup_" + t.index, role: "row" }, e);
                    },
                    V = function (e, t) {
                        return r({ key: "footerGroup_" + t.index }, e);
                    },
                    _ = function (e, t) {
                        return r({ key: "row_" + t.row.id, role: "row" }, e);
                    },
                    X = function (e, t) {
                        var n = t.cell;
                        return r({ key: "cell_" + n.row.id + "_" + n.column.id, role: "cell" }, e);
                    };
                (l.resetHiddenColumns = "resetHiddenColumns"), (l.toggleHideColumn = "toggleHideColumn"), (l.setHiddenColumns = "setHiddenColumns"), (l.toggleHideAllColumns = "toggleHideAllColumns");
                var K = function (e) {
                    (e.getToggleHiddenProps = [U]),
                        (e.getToggleHideAllColumnsProps = [$]),
                        e.stateReducers.push(J),
                        e.useInstanceBeforeDimensions.push(Y),
                        e.headerGroupsDeps.push(function (e, t) {
                            return [].concat(e, [t.instance.state.hiddenColumns]);
                        }),
                        e.useInstance.push(Q);
                };
                K.pluginName = "useColumnVisibility";
                var U = function (e, t) {
                        var n = t.column;
                        return [
                            e,
                            {
                                onChange: function (e) {
                                    n.toggleHidden(!e.target.checked);
                                },
                                style: { cursor: "pointer" },
                                checked: n.isVisible,
                                title: "Toggle Column Visible",
                            },
                        ];
                    },
                    $ = function (e, t) {
                        var n = t.instance;
                        return [
                            e,
                            {
                                onChange: function (e) {
                                    n.toggleHideAllColumns(!e.target.checked);
                                },
                                style: { cursor: "pointer" },
                                checked: !n.allColumnsHidden && !n.state.hiddenColumns.length,
                                title: "Toggle All Columns Hidden",
                                indeterminate: !n.allColumnsHidden && n.state.hiddenColumns.length,
                            },
                        ];
                    };
                function J(e, t, n, o) {
                    if (t.type === l.init) return r({ hiddenColumns: [] }, e);
                    if (t.type === l.resetHiddenColumns) return r({}, e, { hiddenColumns: o.initialState.hiddenColumns || [] });
                    if (t.type === l.toggleHideColumn) {
                        var i = (void 0 !== t.value ? t.value : !e.hiddenColumns.includes(t.columnId))
                            ? [].concat(e.hiddenColumns, [t.columnId])
                            : e.hiddenColumns.filter(function (e) {
                                  return e !== t.columnId;
                              });
                        return r({}, e, { hiddenColumns: i });
                    }
                    return t.type === l.setHiddenColumns
                        ? r({}, e, { hiddenColumns: m(t.value, e.hiddenColumns) })
                        : t.type === l.toggleHideAllColumns
                        ? r({}, e, {
                              hiddenColumns: (void 0 !== t.value ? t.value : !e.hiddenColumns.length)
                                  ? o.allColumns.map(function (e) {
                                        return e.id;
                                    })
                                  : [],
                          })
                        : void 0;
                }
                function Y(e) {
                    var n = e.headers,
                        o = e.state.hiddenColumns;
                    t.useRef(!1).current;
                    var r = 0;
                    n.forEach(function (e) {
                        return (r += (function e(t, n) {
                            t.isVisible = n && !o.includes(t.id);
                            var r = 0;
                            return (
                                t.headers && t.headers.length
                                    ? t.headers.forEach(function (n) {
                                          return (r += e(n, t.isVisible));
                                      })
                                    : (r = t.isVisible ? 1 : 0),
                                (t.totalVisibleHeaderCount = r),
                                r
                            );
                        })(e, !0));
                    });
                }
                function Q(e) {
                    var n = e.columns,
                        o = e.flatHeaders,
                        r = e.dispatch,
                        i = e.allColumns,
                        u = e.getHooks,
                        s = e.state.hiddenColumns,
                        a = e.autoResetHiddenColumns,
                        d = h(e),
                        p = i.length === s.length,
                        g = t.useCallback(
                            function (e, t) {
                                return r({ type: l.toggleHideColumn, columnId: e, value: t });
                            },
                            [r]
                        ),
                        v = t.useCallback(
                            function (e) {
                                return r({ type: l.setHiddenColumns, value: e });
                            },
                            [r]
                        ),
                        m = t.useCallback(
                            function (e) {
                                return r({ type: l.toggleHideAllColumns, value: e });
                            },
                            [r]
                        ),
                        y = f(u().getToggleHideAllColumnsProps, { instance: d() });
                    o.forEach(function (e) {
                        (e.toggleHidden = function (t) {
                            r({ type: l.toggleHideColumn, columnId: e.id, value: t });
                        }),
                            (e.getToggleHiddenProps = f(u().getToggleHiddenProps, { instance: d(), column: e }));
                    });
                    var R = h(void 0 === a || a);
                    w(
                        function () {
                            R() && r({ type: l.resetHiddenColumns });
                        },
                        [r, n]
                    ),
                        Object.assign(e, { allColumnsHidden: p, toggleHideColumn: g, setHiddenColumns: v, toggleHideAllColumns: m, getToggleHideAllColumnsProps: y });
                }
                var Z = {},
                    ee = {},
                    te = function (e, t, n) {
                        return e;
                    },
                    ne = function (e, t) {
                        return e.subRows || [];
                    },
                    oe = function (e, t, n) {
                        return "" + (n ? [n.id, t].join(".") : t);
                    },
                    re = function (e) {
                        return e;
                    };
                function ie(e) {
                    var t = e.initialState,
                        o = e.defaultColumn,
                        l = e.getSubRows,
                        a = e.getRowId,
                        d = e.stateReducer,
                        p = e.useControlledState;
                    return r({}, i(e, ["initialState", "defaultColumn", "getSubRows", "getRowId", "stateReducer", "useControlledState"]), {
                        initialState: void 0 === t ? Z : t,
                        defaultColumn: void 0 === o ? ee : o,
                        getSubRows: void 0 === l ? ne : l,
                        getRowId: void 0 === a ? oe : a,
                        stateReducer: void 0 === d ? te : d,
                        useControlledState: void 0 === p ? re : p,
                    });
                }
                (l.resetExpanded = "resetExpanded"), (l.toggleRowExpanded = "toggleRowExpanded"), (l.toggleAllRowsExpanded = "toggleAllRowsExpanded");
                var se = function (e) {
                    (e.getToggleAllRowsExpandedProps = [ae]), (e.getToggleRowExpandedProps = [ce]), e.stateReducers.push(de), e.useInstance.push(fe), e.prepareRow.push(pe);
                };
                se.pluginName = "useExpanded";
                var ae = function (e, t) {
                        var n = t.instance;
                        return [
                            e,
                            {
                                onClick: function (e) {
                                    n.toggleAllRowsExpanded();
                                },
                                style: { cursor: "pointer" },
                                title: "Toggle All Rows Expanded",
                            },
                        ];
                    },
                    ce = function (e, t) {
                        var n = t.row;
                        return [
                            e,
                            {
                                onClick: function () {
                                    n.toggleRowExpanded();
                                },
                                style: { cursor: "pointer" },
                                title: "Toggle Row Expanded",
                            },
                        ];
                    };
                function de(e, t, n, o) {
                    if (t.type === l.init) return r({ expanded: {} }, e);
                    if (t.type === l.resetExpanded) return r({}, e, { expanded: o.initialState.expanded || {} });
                    if (t.type === l.toggleAllRowsExpanded) {
                        var s = t.value,
                            a = o.isAllRowsExpanded,
                            c = o.rowsById;
                        if (void 0 !== s ? s : !a) {
                            var d = {};
                            return (
                                Object.keys(c).forEach(function (e) {
                                    d[e] = !0;
                                }),
                                r({}, e, { expanded: d })
                            );
                        }
                        return r({}, e, { expanded: {} });
                    }
                    if (t.type === l.toggleRowExpanded) {
                        var f,
                            p = t.id,
                            g = t.value,
                            v = e.expanded[p],
                            m = void 0 !== g ? g : !v;
                        if (!v && m) return r({}, e, { expanded: r({}, e.expanded, (((f = {})[p] = !0), f)) });
                        if (v && !m) {
                            var h = e.expanded;
                            return h[p], r({}, e, { expanded: i(h, [p].map(u)) });
                        }
                        return e;
                    }
                }
                function fe(e) {
                    var n = e.data,
                        o = e.rows,
                        r = e.rowsById,
                        i = e.manualExpandedKey,
                        u = void 0 === i ? "expanded" : i,
                        s = e.paginateExpandedRows,
                        a = void 0 === s || s,
                        c = e.expandSubRows,
                        d = void 0 === c || c,
                        p = e.autoResetExpanded,
                        m = e.getHooks,
                        y = e.plugins,
                        R = e.state.expanded,
                        b = e.dispatch;
                    v(y, ["useSortBy", "useGroupBy", "usePivotColumns", "useGlobalFilter"], "useExpanded");
                    var S = h(void 0 === p || p),
                        C = Boolean(Object.keys(r).length && Object.keys(R).length);
                    C &&
                        Object.keys(r).some(function (e) {
                            return !R[e];
                        }) &&
                        (C = !1),
                        w(
                            function () {
                                S() && b({ type: l.resetExpanded });
                            },
                            [b, n]
                        );
                    var x = t.useCallback(
                            function (e, t) {
                                b({ type: l.toggleRowExpanded, id: e, value: t });
                            },
                            [b]
                        ),
                        P = t.useCallback(
                            function (e) {
                                return b({ type: l.toggleAllRowsExpanded, value: e });
                            },
                            [b]
                        ),
                        B = t.useMemo(
                            function () {
                                return a ? A(o, { manualExpandedKey: u, expanded: R, expandSubRows: d }) : o;
                            },
                            [a, o, u, R, d]
                        ),
                        E = t.useMemo(
                            function () {
                                var t;
                                return (
                                    (t = 0),
                                    Object.keys(R).forEach(function (e) {
                                        t = Math.max(t, e.split(".").length);
                                    }),
                                    t
                                );
                            },
                            [R]
                        ),
                        I = h(e),
                        F = f(m().getToggleAllRowsExpandedProps, { instance: I() });
                    Object.assign(e, { preExpandedRows: o, expandedRows: B, rows: B, expandedDepth: E, isAllRowsExpanded: C, toggleRowExpanded: x, toggleAllRowsExpanded: P, getToggleAllRowsExpandedProps: F });
                }
                function pe(e, t) {
                    var n = t.instance.getHooks,
                        o = t.instance;
                    (e.toggleRowExpanded = function (t) {
                        return o.toggleRowExpanded(e.id, t);
                    }),
                        (e.getToggleRowExpandedProps = f(n().getToggleRowExpandedProps, { instance: o, row: e }));
                }
                var ge = function (e, t, n) {
                    return (e = e.filter(function (e) {
                        return t.some(function (t) {
                            return String(e.values[t]).toLowerCase().includes(String(n).toLowerCase());
                        });
                    }));
                };
                ge.autoRemove = function (e) {
                    return !e;
                };
                var ve = function (e, t, n) {
                    return e.filter(function (e) {
                        return t.some(function (t) {
                            var o = e.values[t];
                            return void 0 === o || String(o).toLowerCase() === String(n).toLowerCase();
                        });
                    });
                };
                ve.autoRemove = function (e) {
                    return !e;
                };
                var me = function (e, t, n) {
                    return e.filter(function (e) {
                        return t.some(function (t) {
                            var o = e.values[t];
                            return void 0 === o || String(o) === String(n);
                        });
                    });
                };
                me.autoRemove = function (e) {
                    return !e;
                };
                var he = function (e, t, n) {
                    return e.filter(function (e) {
                        return t.some(function (t) {
                            return e.values[t].includes(n);
                        });
                    });
                };
                he.autoRemove = function (e) {
                    return !e || !e.length;
                };
                var ye = function (e, t, n) {
                    return e.filter(function (e) {
                        return t.some(function (t) {
                            var o = e.values[t];
                            return (
                                o &&
                                o.length &&
                                n.every(function (e) {
                                    return o.includes(e);
                                })
                            );
                        });
                    });
                };
                ye.autoRemove = function (e) {
                    return !e || !e.length;
                };
                var we = function (e, t, n) {
                    return e.filter(function (e) {
                        return t.some(function (t) {
                            var o = e.values[t];
                            return (
                                o &&
                                o.length &&
                                n.some(function (e) {
                                    return o.includes(e);
                                })
                            );
                        });
                    });
                };
                we.autoRemove = function (e) {
                    return !e || !e.length;
                };
                var Re = function (e, t, n) {
                    return e.filter(function (e) {
                        return t.some(function (t) {
                            var o = e.values[t];
                            return n.includes(o);
                        });
                    });
                };
                Re.autoRemove = function (e) {
                    return !e || !e.length;
                };
                var be = function (e, t, n) {
                    return e.filter(function (e) {
                        return t.some(function (t) {
                            return e.values[t] === n;
                        });
                    });
                };
                be.autoRemove = function (e) {
                    return void 0 === e;
                };
                var Se = function (e, t, n) {
                    return e.filter(function (e) {
                        return t.some(function (t) {
                            return e.values[t] == n;
                        });
                    });
                };
                Se.autoRemove = function (e) {
                    return null == e;
                };
                var Ce = function (e, t, n) {
                    var o = n || [],
                        r = o[0],
                        i = o[1];
                    if ((r = "number" == typeof r ? r : -1 / 0) > (i = "number" == typeof i ? i : 1 / 0)) {
                        var u = r;
                        (r = i), (i = u);
                    }
                    return e.filter(function (e) {
                        return t.some(function (t) {
                            var n = e.values[t];
                            return n >= r && n <= i;
                        });
                    });
                };
                Ce.autoRemove = function (e) {
                    return !e || ("number" != typeof e[0] && "number" != typeof e[1]);
                };
                var xe = Object.freeze({ __proto__: null, text: ge, exactText: ve, exactTextCase: me, includes: he, includesAll: ye, includesSome: we, includesValue: Re, exact: be, equals: Se, between: Ce });
                (l.resetFilters = "resetFilters"), (l.setFilter = "setFilter"), (l.setAllFilters = "setAllFilters");
                var Pe = function (e) {
                    e.stateReducers.push(Be), e.useInstance.push(Ee);
                };
                function Be(e, t, n, o) {
                    if (t.type === l.init) return r({ filters: [] }, e);
                    if (t.type === l.resetFilters) return r({}, e, { filters: o.initialState.filters || [] });
                    if (t.type === l.setFilter) {
                        var i = t.columnId,
                            u = t.filterValue,
                            s = o.allColumns,
                            a = o.filterTypes,
                            c = s.find(function (e) {
                                return e.id === i;
                            });
                        if (!c) throw Error("React-Table: Could not find a column with id: " + i);
                        var d = k(c.filter, a || {}, xe),
                            f = e.filters.find(function (e) {
                                return e.id === i;
                            }),
                            p = m(u, f && f.value);
                        return H(d.autoRemove, p, c)
                            ? r({}, e, {
                                  filters: e.filters.filter(function (e) {
                                      return e.id !== i;
                                  }),
                              })
                            : r(
                                  {},
                                  e,
                                  f
                                      ? {
                                            filters: e.filters.map(function (e) {
                                                return e.id === i ? { id: i, value: p } : e;
                                            }),
                                        }
                                      : { filters: [].concat(e.filters, [{ id: i, value: p }]) }
                              );
                    }
                    if (t.type === l.setAllFilters) {
                        var g = t.filters,
                            v = o.allColumns,
                            h = o.filterTypes;
                        return r({}, e, {
                            filters: m(g, e.filters).filter(function (e) {
                                var t = v.find(function (t) {
                                    return t.id === e.id;
                                });
                                return !H(k(t.filter, h || {}, xe).autoRemove, e.value, t);
                            }),
                        });
                    }
                }
                function Ee(e) {
                    var n = e.data,
                        o = e.rows,
                        r = e.flatRows,
                        i = e.rowsById,
                        u = e.allColumns,
                        s = e.filterTypes,
                        a = e.manualFilters,
                        c = e.defaultCanFilter,
                        d = void 0 !== c && c,
                        f = e.disableFilters,
                        p = e.state.filters,
                        g = e.dispatch,
                        v = e.autoResetFilters,
                        y = t.useCallback(
                            function (e, t) {
                                g({ type: l.setFilter, columnId: e, filterValue: t });
                            },
                            [g]
                        ),
                        R = t.useCallback(
                            function (e) {
                                g({ type: l.setAllFilters, filters: e });
                            },
                            [g]
                        );
                    u.forEach(function (e) {
                        var t = e.id,
                            n = e.accessor,
                            o = e.defaultCanFilter,
                            r = e.disableFilters;
                        (e.canFilter = n ? I(!0 !== r && void 0, !0 !== f && void 0, !0) : I(o, d, !1)),
                            (e.setFilter = function (t) {
                                return y(e.id, t);
                            });
                        var i = p.find(function (e) {
                            return e.id === t;
                        });
                        e.filterValue = i && i.value;
                    });
                    var b = t.useMemo(
                            function () {
                                if (a || !p.length) return [o, r, i];
                                var e = [],
                                    t = {};
                                return [
                                    (function n(o, r) {
                                        void 0 === r && (r = 0);
                                        var i = o;
                                        return (
                                            (i = p.reduce(function (e, t) {
                                                var n = t.id,
                                                    o = t.value,
                                                    i = u.find(function (e) {
                                                        return e.id === n;
                                                    });
                                                if (!i) return e;
                                                0 === r && (i.preFilteredRows = e);
                                                var l = k(i.filter, s || {}, xe);
                                                return l ? ((i.filteredRows = l(e, [n], o)), i.filteredRows) : (console.warn("Could not find a valid 'column.filter' for column with the ID: " + i.id + "."), e);
                                            }, o)).forEach(function (o) {
                                                e.push(o), (t[o.id] = o), o.subRows && (o.subRows = o.subRows && o.subRows.length > 0 ? n(o.subRows, r + 1) : o.subRows);
                                            }),
                                            i
                                        );
                                    })(o),
                                    e,
                                    t,
                                ];
                            },
                            [a, p, o, r, i, u, s]
                        ),
                        S = b[0],
                        C = b[1],
                        x = b[2];
                    t.useMemo(
                        function () {
                            u.filter(function (e) {
                                return !p.find(function (t) {
                                    return t.id === e.id;
                                });
                            }).forEach(function (e) {
                                (e.preFilteredRows = S), (e.filteredRows = S);
                            });
                        },
                        [S, p, u]
                    );
                    var P = h(void 0 === v || v);
                    w(
                        function () {
                            P() && g({ type: l.resetFilters });
                        },
                        [g, a ? null : n]
                    ),
                        Object.assign(e, { preFilteredRows: o, preFilteredFlatRows: r, preFilteredRowsById: i, filteredRows: S, filteredFlatRows: C, filteredRowsById: x, rows: S, flatRows: C, rowsById: x, setFilter: y, setAllFilters: R });
                }
                (Pe.pluginName = "useFilters"), (l.resetGlobalFilter = "resetGlobalFilter"), (l.setGlobalFilter = "setGlobalFilter");
                var Ie = function (e) {
                    e.stateReducers.push(Fe), e.useInstance.push(Ge);
                };
                function Fe(e, t, n, o) {
                    if (t.type === l.resetGlobalFilter) return r({}, e, { globalFilter: o.initialState.globalFilter || void 0 });
                    if (t.type === l.setGlobalFilter) {
                        var u = t.filterValue,
                            s = o.userFilterTypes,
                            a = k(o.globalFilter, s || {}, xe),
                            c = m(u, e.globalFilter);
                        return H(a.autoRemove, c) ? (e.globalFilter, i(e, ["globalFilter"])) : r({}, e, { globalFilter: c });
                    }
                }
                function Ge(e) {
                    var n = e.data,
                        o = e.rows,
                        r = e.flatRows,
                        i = e.rowsById,
                        u = e.allColumns,
                        s = e.filterTypes,
                        a = e.globalFilter,
                        c = e.manualGlobalFilter,
                        d = e.state.globalFilter,
                        f = e.dispatch,
                        p = e.autoResetGlobalFilter,
                        v = e.disableGlobalFilter,
                        m = t.useCallback(
                            function (e) {
                                f({ type: l.setGlobalFilter, filterValue: e });
                            },
                            [f]
                        ),
                        y = t.useMemo(
                            function () {
                                if (c || void 0 === d) return [o, r, i];
                                var e = [],
                                    t = {},
                                    n = k(a, s || {}, xe);
                                if (!n) return console.warn("Could not find a valid 'globalFilter' option."), o;
                                u.forEach(function (e) {
                                    var t = e.disableGlobalFilter;
                                    e.canFilter = I(!0 !== t && void 0, !0 !== v && void 0, !0);
                                });
                                var l = u.filter(function (e) {
                                    return !0 === e.canFilter;
                                });
                                return [
                                    (function o(r) {
                                        return (
                                            (r = n(
                                                r,
                                                l.map(function (e) {
                                                    return e.id;
                                                }),
                                                d
                                            )).forEach(function (n) {
                                                e.push(n), (t[n.id] = n), (n.subRows = n.subRows && n.subRows.length ? o(n.subRows) : n.subRows);
                                            }),
                                            r
                                        );
                                    })(o),
                                    e,
                                    t,
                                ];
                            },
                            [c, d, a, s, u, o, r, i, v]
                        ),
                        R = y[0],
                        b = y[1],
                        S = y[2],
                        C = h(void 0 === p || p);
                    w(
                        function () {
                            C() && f({ type: l.resetGlobalFilter });
                        },
                        [f, c ? null : n]
                    ),
                        Object.assign(e, {
                            preGlobalFilteredRows: o,
                            preGlobalFilteredFlatRows: r,
                            preGlobalFilteredRowsById: i,
                            globalFilteredRows: R,
                            globalFilteredFlatRows: b,
                            globalFilteredRowsById: S,
                            rows: R,
                            flatRows: b,
                            rowsById: S,
                            setGlobalFilter: m,
                            disableGlobalFilter: v,
                        });
                }
                function Ae(e, t) {
                    return t.reduce(function (e, t) {
                        return e + ("number" == typeof t ? t : 0);
                    }, 0);
                }
                Ie.pluginName = "useGlobalFilter";
                var ke = Object.freeze({
                        __proto__: null,
                        sum: Ae,
                        min: function (e) {
                            var t = e[0] || 0;
                            return (
                                e.forEach(function (e) {
                                    "number" == typeof e && (t = Math.min(t, e));
                                }),
                                t
                            );
                        },
                        max: function (e) {
                            var t = e[0] || 0;
                            return (
                                e.forEach(function (e) {
                                    "number" == typeof e && (t = Math.max(t, e));
                                }),
                                t
                            );
                        },
                        minMax: function (e) {
                            var t = e[0] || 0,
                                n = e[0] || 0;
                            return (
                                e.forEach(function (e) {
                                    "number" == typeof e && ((t = Math.min(t, e)), (n = Math.max(n, e)));
                                }),
                                t + ".." + n
                            );
                        },
                        average: function (e) {
                            return Ae(0, e) / e.length;
                        },
                        median: function (e) {
                            if (!e.length) return null;
                            var t = Math.floor(e.length / 2),
                                n = [].concat(e).sort(function (e, t) {
                                    return e - t;
                                });
                            return e.length % 2 != 0 ? n[t] : (n[t - 1] + n[t]) / 2;
                        },
                        unique: function (e) {
                            return Array.from(new Set(e).values());
                        },
                        uniqueCount: function (e) {
                            return new Set(e).size;
                        },
                        count: function (e) {
                            return e.length;
                        },
                    }),
                    He = [],
                    Te = {};
                (l.resetGroupBy = "resetGroupBy"), (l.setGroupBy = "setGroupBy"), (l.toggleGroupBy = "toggleGroupBy");
                var ze = function (e) {
                    (e.getGroupByToggleProps = [We]),
                        e.stateReducers.push(Oe),
                        e.visibleColumnsDeps.push(function (e, t) {
                            return [].concat(e, [t.instance.state.groupBy]);
                        }),
                        e.visibleColumns.push(Me),
                        e.useInstance.push(Ne),
                        e.prepareRow.push(Le);
                };
                ze.pluginName = "useGroupBy";
                var We = function (e, t) {
                    var n = t.header;
                    return [
                        e,
                        {
                            onClick: n.canGroupBy
                                ? function (e) {
                                      e.persist(), n.toggleGroupBy();
                                  }
                                : void 0,
                            style: { cursor: n.canGroupBy ? "pointer" : void 0 },
                            title: "Toggle GroupBy",
                        },
                    ];
                };
                function Oe(e, t, n, o) {
                    if (t.type === l.init) return r({ groupBy: [] }, e);
                    if (t.type === l.resetGroupBy) return r({}, e, { groupBy: o.initialState.groupBy || [] });
                    if (t.type === l.setGroupBy) return r({}, e, { groupBy: t.value });
                    if (t.type === l.toggleGroupBy) {
                        var i = t.columnId,
                            u = t.value,
                            s = void 0 !== u ? u : !e.groupBy.includes(i);
                        return r(
                            {},
                            e,
                            s
                                ? { groupBy: [].concat(e.groupBy, [i]) }
                                : {
                                      groupBy: e.groupBy.filter(function (e) {
                                          return e !== i;
                                      }),
                                  }
                        );
                    }
                }
                function Me(e, t) {
                    var n = t.instance.state.groupBy,
                        o = n
                            .map(function (t) {
                                return e.find(function (e) {
                                    return e.id === t;
                                });
                            })
                            .filter(Boolean),
                        r = e.filter(function (e) {
                            return !n.includes(e.id);
                        });
                    return (
                        (e = [].concat(o, r)).forEach(function (e) {
                            (e.isGrouped = n.includes(e.id)), (e.groupedIndex = n.indexOf(e.id));
                        }),
                        e
                    );
                }
                var je = {};
                function Ne(e) {
                    var n = e.data,
                        o = e.rows,
                        r = e.flatRows,
                        i = e.rowsById,
                        u = e.allColumns,
                        s = e.flatHeaders,
                        a = e.groupByFn,
                        c = void 0 === a ? De : a,
                        d = e.manualGroupBy,
                        p = e.aggregations,
                        g = void 0 === p ? je : p,
                        m = e.plugins,
                        y = e.state.groupBy,
                        R = e.dispatch,
                        b = e.autoResetGroupBy,
                        C = e.disableGroupBy,
                        x = e.defaultCanGroupBy,
                        P = e.getHooks;
                    v(m, ["useColumnOrder", "useFilters"], "useGroupBy");
                    var B = h(e);
                    u.forEach(function (t) {
                        var n = t.accessor,
                            o = t.defaultGroupBy,
                            r = t.disableGroupBy;
                        (t.canGroupBy = n ? I(t.canGroupBy, !0 !== r && void 0, !0 !== C && void 0, !0) : I(t.canGroupBy, o, x, !1)),
                            t.canGroupBy &&
                                (t.toggleGroupBy = function () {
                                    return e.toggleGroupBy(t.id);
                                }),
                            (t.Aggregated = t.Aggregated || t.Cell);
                    });
                    var E = t.useCallback(
                            function (e, t) {
                                R({ type: l.toggleGroupBy, columnId: e, value: t });
                            },
                            [R]
                        ),
                        F = t.useCallback(
                            function (e) {
                                R({ type: l.setGroupBy, value: e });
                            },
                            [R]
                        );
                    s.forEach(function (e) {
                        e.getGroupByToggleProps = f(P().getGroupByToggleProps, { instance: B(), header: e });
                    });
                    var A = t.useMemo(
                            function () {
                                if (d || !y.length) return [o, r, i, He, Te, r, i];
                                var e = y.filter(function (e) {
                                        return u.find(function (t) {
                                            return t.id === e;
                                        });
                                    }),
                                    t = [],
                                    n = {},
                                    l = [],
                                    s = {},
                                    a = [],
                                    f = {},
                                    p = (function o(r, i, d) {
                                        if ((void 0 === i && (i = 0), i === e.length)) return r;
                                        var p = e[i];
                                        return Object.entries(c(r, p)).map(function (r, c) {
                                            var o1,
                                                r1,
                                                v = r[0],
                                                m = r[1],
                                                h = p + ":" + v,
                                                y = o(m, i + 1, (h = d ? d + ">" + h : h)),
                                                w = i ? G(m, "leafRows") : m,
                                                b = {
                                                    id: h,
                                                    isGrouped: !0,
                                                    groupByID: p,
                                                    groupByVal: v,
                                                    values:
                                                        ((o1 = i),
                                                        (r1 = {}),
                                                        u.forEach(function (i) {
                                                            if (e.includes(i.id)) r1[i.id] = m[0] ? m[0].values[i.id] : null;
                                                            else {
                                                                var u = "function" == typeof i.aggregate ? i.aggregate : g[i.aggregate] || ke[i.aggregate];
                                                                if (u) {
                                                                    var l = m.map(function (e) {
                                                                            return e.values[i.id];
                                                                        }),
                                                                        s = w.map(function (e) {
                                                                            var t = e.values[i.id];
                                                                            if (!o1 && i.aggregateValue) {
                                                                                var n = "function" == typeof i.aggregateValue ? i.aggregateValue : g[i.aggregateValue] || ke[i.aggregateValue];
                                                                                if (!n) throw (console.info({ column: i }), Error("React Table: Invalid column.aggregateValue option for column listed above"));
                                                                                t = n(t, e, i);
                                                                            }
                                                                            return t;
                                                                        });
                                                                    r1[i.id] = u(s, l);
                                                                } else {
                                                                    if (i.aggregate) throw (console.info({ column: i }), Error("React Table: Invalid column.aggregate option for column listed above"));
                                                                    r1[i.id] = null;
                                                                }
                                                            }
                                                        }),
                                                        r1),
                                                    subRows: y,
                                                    leafRows: w,
                                                    depth: i,
                                                    index: c,
                                                };
                                            return (
                                                y.forEach(function (e) {
                                                    t.push(e), (n[e.id] = e), e.isGrouped ? (l.push(e), (s[e.id] = e)) : (a.push(e), (f[e.id] = e));
                                                }),
                                                b
                                            );
                                        });
                                    })(o);
                                return (
                                    p.forEach(function (e) {
                                        t.push(e), (n[e.id] = e), e.isGrouped ? (l.push(e), (s[e.id] = e)) : (a.push(e), (f[e.id] = e));
                                    }),
                                    [p, t, n, l, s, a, f]
                                );
                            },
                            [d, y, o, r, i, u, g, c]
                        ),
                        k = A[0],
                        H = A[1],
                        T = A[2],
                        z = A[3],
                        W = A[4],
                        O = A[5],
                        M = A[6],
                        j = h(void 0 === b || b);
                    w(
                        function () {
                            j() && R({ type: l.resetGroupBy });
                        },
                        [R, d ? null : n]
                    ),
                        Object.assign(e, {
                            preGroupedRows: o,
                            preGroupedFlatRow: r,
                            preGroupedRowsById: i,
                            groupedRows: k,
                            groupedFlatRows: H,
                            groupedRowsById: T,
                            onlyGroupedFlatRows: z,
                            onlyGroupedRowsById: W,
                            nonGroupedFlatRows: O,
                            nonGroupedRowsById: M,
                            rows: k,
                            flatRows: H,
                            rowsById: T,
                            toggleGroupBy: E,
                            setGroupBy: F,
                        });
                }
                function Le(e) {
                    e.allCells.forEach(function (t) {
                        var n;
                        (t.isGrouped = t.column.isGrouped && t.column.id === e.groupByID),
                            (t.isPlaceholder = !t.isGrouped && t.column.isGrouped),
                            (t.isAggregated = !t.isGrouped && !t.isPlaceholder && (null == (n = e.subRows) ? void 0 : n.length));
                    });
                }
                function De(e, t) {
                    return e.reduce(function (e, n, o) {
                        var r = "" + n.values[t];
                        return (e[r] = Array.isArray(e[r]) ? e[r] : []), e[r].push(n), e;
                    }, {});
                }
                var Ve = /([0-9]+)/gm;
                function _e(e, t) {
                    return e === t ? 0 : e > t ? 1 : -1;
                }
                function Xe(e, t, n) {
                    return [e.values[n], t.values[n]];
                }
                function qe(e) {
                    return "number" == typeof e ? (isNaN(e) || e === 1 / 0 || e === -1 / 0 ? "" : String(e)) : "string" == typeof e ? e : "";
                }
                var Ke = Object.freeze({
                    __proto__: null,
                    alphanumeric: function (e, t, n) {
                        var o = Xe(e, t, n),
                            r = o[0],
                            i = o[1];
                        for (r = qe(r), i = qe(i), r = r.split(Ve).filter(Boolean), i = i.split(Ve).filter(Boolean); r.length && i.length; ) {
                            var u = r.shift(),
                                l = i.shift(),
                                s = parseInt(u, 10),
                                a = parseInt(l, 10),
                                c = [s, a].sort();
                            if (isNaN(c[0])) {
                                if (u > l) return 1;
                                if (l > u) return -1;
                            } else {
                                if (isNaN(c[1])) return isNaN(s) ? -1 : 1;
                                if (s > a) return 1;
                                if (a > s) return -1;
                            }
                        }
                        return r.length - i.length;
                    },
                    datetime: function (e, t, n) {
                        var o = Xe(e, t, n),
                            r = o[0],
                            i = o[1];
                        return _e((r = r.getTime()), (i = i.getTime()));
                    },
                    basic: function (e, t, n) {
                        var o = Xe(e, t, n);
                        return _e(o[0], o[1]);
                    },
                    string: function (e, t, n) {
                        var o = Xe(e, t, n),
                            r = o[0],
                            i = o[1];
                        for (r = r.split("").filter(Boolean), i = i.split("").filter(Boolean); r.length && i.length; ) {
                            var u = r.shift(),
                                l = i.shift(),
                                s = u.toLowerCase(),
                                a = l.toLowerCase();
                            if (s > a) return 1;
                            if (a > s) return -1;
                            if (u > l) return 1;
                            if (l > u) return -1;
                        }
                        return r.length - i.length;
                    },
                    number: function (e, t, n) {
                        var o = Xe(e, t, n),
                            r = o[0],
                            i = o[1],
                            u = /[^0-9.]/gi;
                        return _e((r = Number(String(r).replace(u, ""))), (i = Number(String(i).replace(u, ""))));
                    },
                });
                (l.resetSortBy = "resetSortBy"), (l.setSortBy = "setSortBy"), (l.toggleSortBy = "toggleSortBy"), (l.clearSortBy = "clearSortBy"), (c.sortType = "alphanumeric"), (c.sortDescFirst = !1);
                var Ue = function (e) {
                    (e.getSortByToggleProps = [$e]), e.stateReducers.push(Je), e.useInstance.push(Ye);
                };
                Ue.pluginName = "useSortBy";
                var $e = function (e, t) {
                    var n = t.instance,
                        o = t.column,
                        r = n.isMultiSortEvent,
                        i =
                            void 0 === r
                                ? function (e) {
                                      return e.shiftKey;
                                  }
                                : r;
                    return [
                        e,
                        {
                            onClick: o.canSort
                                ? function (e) {
                                      e.persist(), o.toggleSortBy(void 0, !n.disableMultiSort && i(e));
                                  }
                                : void 0,
                            style: { cursor: o.canSort ? "pointer" : void 0 },
                            title: o.canSort ? "Toggle SortBy" : void 0,
                        },
                    ];
                };
                function Je(e, t, n, o) {
                    if (t.type === l.init) return r({ sortBy: [] }, e);
                    if (t.type === l.resetSortBy) return r({}, e, { sortBy: o.initialState.sortBy || [] });
                    if (t.type === l.clearSortBy)
                        return r({}, e, {
                            sortBy: e.sortBy.filter(function (e) {
                                return e.id !== t.columnId;
                            }),
                        });
                    if (t.type === l.setSortBy) return r({}, e, { sortBy: t.sortBy });
                    if (t.type === l.toggleSortBy) {
                        var i,
                            u = t.columnId,
                            s = t.desc,
                            a = t.multi,
                            c = o.allColumns,
                            d = o.disableMultiSort,
                            f = o.disableSortRemove,
                            p = o.disableMultiRemove,
                            g = o.maxMultiSortColCount,
                            v = void 0 === g ? Number.MAX_SAFE_INTEGER : g,
                            m = e.sortBy,
                            h = c.find(function (e) {
                                return e.id === u;
                            }).sortDescFirst,
                            y = m.find(function (e) {
                                return e.id === u;
                            }),
                            w = m.findIndex(function (e) {
                                return e.id === u;
                            }),
                            R = null != s,
                            b = [];
                        return (
                            "toggle" != (i = !d && a ? (y ? "toggle" : "add") : w !== m.length - 1 || 1 !== m.length ? "replace" : y ? "toggle" : "replace") ||
                                f ||
                                R ||
                                (a && p) ||
                                !((y && y.desc && !h) || (!y.desc && h)) ||
                                (i = "remove"),
                            "replace" === i
                                ? (b = [{ id: u, desc: R ? s : h }])
                                : "add" === i
                                ? (b = [].concat(m, [{ id: u, desc: R ? s : h }])).splice(0, b.length - v)
                                : "toggle" === i
                                ? (b = m.map(function (e) {
                                      return e.id === u ? r({}, e, { desc: R ? s : !y.desc }) : e;
                                  }))
                                : "remove" === i &&
                                  (b = m.filter(function (e) {
                                      return e.id !== u;
                                  })),
                            r({}, e, { sortBy: b })
                        );
                    }
                }
                function Ye(e) {
                    var n = e.data,
                        o = e.rows,
                        r = e.flatRows,
                        i = e.allColumns,
                        u = e.orderByFn,
                        s = void 0 === u ? Qe : u,
                        a = e.sortTypes,
                        c = e.manualSortBy,
                        d = e.defaultCanSort,
                        p = e.disableSortBy,
                        g = e.flatHeaders,
                        m = e.state.sortBy,
                        y = e.dispatch,
                        R = e.plugins,
                        b = e.getHooks,
                        S = e.autoResetSortBy;
                    v(R, ["useFilters", "useGlobalFilter", "useGroupBy", "usePivotColumns"], "useSortBy");
                    var x = t.useCallback(
                            function (e) {
                                y({ type: l.setSortBy, sortBy: e });
                            },
                            [y]
                        ),
                        P = t.useCallback(
                            function (e, t, n) {
                                y({ type: l.toggleSortBy, columnId: e, desc: t, multi: n });
                            },
                            [y]
                        ),
                        B = h(e);
                    g.forEach(function (e) {
                        var t = e.accessor,
                            n = e.canSort,
                            o = e.disableSortBy,
                            r = e.id,
                            i = t ? I(!0 !== o && void 0, !0 !== p && void 0, !0) : I(d, n, !1);
                        (e.canSort = i),
                            e.canSort &&
                                ((e.toggleSortBy = function (t, n) {
                                    return P(e.id, t, n);
                                }),
                                (e.clearSortBy = function () {
                                    y({ type: l.clearSortBy, columnId: e.id });
                                })),
                            (e.getSortByToggleProps = f(b().getSortByToggleProps, { instance: B(), column: e }));
                        var u = m.find(function (e) {
                            return e.id === r;
                        });
                        (e.isSorted = !!u),
                            (e.sortedIndex = m.findIndex(function (e) {
                                return e.id === r;
                            })),
                            (e.isSortedDesc = e.isSorted ? u.desc : void 0);
                    });
                    var E = t.useMemo(
                            function () {
                                if (c || !m.length) return [o, r];
                                var e = [],
                                    t = m.filter(function (e) {
                                        return i.find(function (t) {
                                            return t.id === e.id;
                                        });
                                    });
                                return [
                                    (function n(o) {
                                        var r = s(
                                            o,
                                            t.map(function (e) {
                                                var t = i.find(function (t) {
                                                    return t.id === e.id;
                                                });
                                                if (!t) throw Error("React-Table: Could not find a column with id: " + e.id + " while sorting");
                                                var n = t.sortType,
                                                    o = F(n) || (a || {})[n] || Ke[n];
                                                if (!o) throw Error("React-Table: Could not find a valid sortType of '" + n + "' for column '" + e.id + "'.");
                                                return function (t, n) {
                                                    return o(t, n, e.id, e.desc);
                                                };
                                            }),
                                            t.map(function (e) {
                                                var t = i.find(function (t) {
                                                    return t.id === e.id;
                                                });
                                                return t && t.sortInverted ? e.desc : !e.desc;
                                            })
                                        );
                                        return (
                                            r.forEach(function (t) {
                                                e.push(t), t.subRows && 0 !== t.subRows.length && (t.subRows = n(t.subRows));
                                            }),
                                            r
                                        );
                                    })(o),
                                    e,
                                ];
                            },
                            [c, m, o, r, i, s, a]
                        ),
                        G = E[0],
                        A = E[1],
                        k = h(void 0 === S || S);
                    w(
                        function () {
                            k() && y({ type: l.resetSortBy });
                        },
                        [c ? null : n]
                    ),
                        Object.assign(e, { preSortedRows: o, preSortedFlatRows: r, sortedRows: G, sortedFlatRows: A, rows: G, flatRows: A, setSortBy: x, toggleSortBy: P });
                }
                function Qe(e, t, n) {
                    return [].concat(e).sort(function (e, o) {
                        for (var r = 0; r < t.length; r += 1) {
                            var i = t[r],
                                u = !1 === n[r] || "desc" === n[r],
                                l = i(e, o);
                            if (0 !== l) return u ? -l : l;
                        }
                        return n[0] ? e.index - o.index : o.index - e.index;
                    });
                }
                (l.resetPage = "resetPage"), (l.gotoPage = "gotoPage"), (l.setPageSize = "setPageSize");
                var Ze = function (e) {
                    e.stateReducers.push(et), e.useInstance.push(tt);
                };
                function et(e, t, n, o) {
                    if (t.type === l.init) return r({ pageSize: 10, pageIndex: 0 }, e);
                    if (t.type === l.resetPage) return r({}, e, { pageIndex: o.initialState.pageIndex || 0 });
                    if (t.type === l.gotoPage) {
                        var i = o.pageCount,
                            u = o.page,
                            s = m(t.pageIndex, e.pageIndex),
                            a = !1;
                        return s > e.pageIndex ? (a = -1 === i ? u.length >= e.pageSize : s < i) : s < e.pageIndex && (a = s > -1), a ? r({}, e, { pageIndex: s }) : e;
                    }
                    if (t.type === l.setPageSize) {
                        var c = t.pageSize,
                            d = e.pageSize * e.pageIndex;
                        return r({}, e, { pageIndex: Math.floor(d / c), pageSize: c });
                    }
                }
                function tt(e) {
                    var n = e.rows,
                        o = e.autoResetPage,
                        i = e.manualExpandedKey,
                        u = void 0 === i ? "expanded" : i,
                        s = e.plugins,
                        a = e.pageCount,
                        c = e.paginateExpandedRows,
                        d = void 0 === c || c,
                        f = e.expandSubRows,
                        p = void 0 === f || f,
                        g = e.state,
                        m = g.pageSize,
                        y = g.pageIndex,
                        R = g.expanded,
                        b = g.globalFilter,
                        S = g.filters,
                        C = g.groupBy,
                        x = g.sortBy,
                        P = e.dispatch,
                        B = e.data,
                        E = e.manualPagination;
                    v(s, ["useGlobalFilter", "useFilters", "useGroupBy", "useSortBy", "useExpanded"], "usePagination");
                    var I = h(void 0 === o || o);
                    w(
                        function () {
                            I() && P({ type: l.resetPage });
                        },
                        [P, E ? null : B, b, S, C, x]
                    );
                    var F = E ? a : Math.ceil(n.length / m),
                        G = t.useMemo(
                            function () {
                                return F > 0
                                    ? []
                                          .concat(Array(F))
                                          .fill(null)
                                          .map(function (e, t) {
                                              return t;
                                          })
                                    : [];
                            },
                            [F]
                        ),
                        k = t.useMemo(
                            function () {
                                var e;
                                if (E) e = n;
                                else {
                                    var t = m * y;
                                    e = n.slice(t, t + m);
                                }
                                return d ? e : A(e, { manualExpandedKey: u, expanded: R, expandSubRows: p });
                            },
                            [p, R, u, E, y, m, d, n]
                        ),
                        T = -1 === F ? k.length >= m : y < F - 1,
                        z = t.useCallback(
                            function (e) {
                                P({ type: l.gotoPage, pageIndex: e });
                            },
                            [P]
                        ),
                        W = t.useCallback(
                            function () {
                                return z(function (e) {
                                    return e - 1;
                                });
                            },
                            [z]
                        ),
                        O = t.useCallback(
                            function () {
                                return z(function (e) {
                                    return e + 1;
                                });
                            },
                            [z]
                        );
                    Object.assign(e, {
                        pageOptions: G,
                        pageCount: F,
                        page: k,
                        canPreviousPage: y > 0,
                        canNextPage: T,
                        gotoPage: z,
                        previousPage: W,
                        nextPage: O,
                        setPageSize: t.useCallback(
                            function (e) {
                                P({ type: l.setPageSize, pageSize: e });
                            },
                            [P]
                        ),
                    });
                }
                (Ze.pluginName = "usePagination"), (l.resetPivot = "resetPivot"), (l.togglePivot = "togglePivot");
                var nt = function (e) {
                    (e.getPivotToggleProps = [rt]),
                        e.stateReducers.push(it),
                        e.useInstanceAfterData.push(ut),
                        e.allColumns.push(lt),
                        e.accessValue.push(st),
                        e.materializedColumns.push(at),
                        e.materializedColumnsDeps.push(ct),
                        e.visibleColumns.push(dt),
                        e.visibleColumnsDeps.push(ft),
                        e.useInstance.push(pt),
                        e.prepareRow.push(gt);
                };
                nt.pluginName = "usePivotColumns";
                var ot = [],
                    rt = function (e, t) {
                        var n = t.header;
                        return [
                            e,
                            {
                                onClick: n.canPivot
                                    ? function (e) {
                                          e.persist(), n.togglePivot();
                                      }
                                    : void 0,
                                style: { cursor: n.canPivot ? "pointer" : void 0 },
                                title: "Toggle Pivot",
                            },
                        ];
                    };
                function it(e, t, n, o) {
                    if (t.type === l.init) return r({ pivotColumns: ot }, e);
                    if (t.type === l.resetPivot) return r({}, e, { pivotColumns: o.initialState.pivotColumns || ot });
                    if (t.type === l.togglePivot) {
                        var i = t.columnId,
                            u = t.value,
                            s = void 0 !== u ? u : !e.pivotColumns.includes(i);
                        return r(
                            {},
                            e,
                            s
                                ? { pivotColumns: [].concat(e.pivotColumns, [i]) }
                                : {
                                      pivotColumns: e.pivotColumns.filter(function (e) {
                                          return e !== i;
                                      }),
                                  }
                        );
                    }
                }
                function ut(e) {
                    e.allColumns.forEach(function (t) {
                        t.isPivotSource = e.state.pivotColumns.includes(t.id);
                    });
                }
                function lt(e, t) {
                    var n = t.instance;
                    return (
                        e.forEach(function (e) {
                            (e.isPivotSource = n.state.pivotColumns.includes(e.id)), (e.uniqueValues = new Set());
                        }),
                        e
                    );
                }
                function st(e, t) {
                    var n = t.column;
                    return n.uniqueValues && void 0 !== e && n.uniqueValues.add(e), e;
                }
                function at(e, t) {
                    var n = t.instance,
                        o = n.allColumns,
                        i = n.state;
                    if (!i.pivotColumns.length || !i.groupBy || !i.groupBy.length) return e;
                    var u = i.pivotColumns
                            .map(function (e) {
                                return o.find(function (t) {
                                    return t.id === e;
                                });
                            })
                            .filter(Boolean),
                        l = o.filter(function (e) {
                            return !e.isPivotSource && !i.groupBy.includes(e.id) && !i.pivotColumns.includes(e.id);
                        });
                    return [].concat(
                        e,
                        C(
                            (function e(t, n, o) {
                                void 0 === t && (t = 0), void 0 === o && (o = []);
                                var i = u[t];
                                return i
                                    ? Array.from(i.uniqueValues)
                                          .sort()
                                          .map(function (u) {
                                              var l = r({}, i, {
                                                  Header: i.PivotHeader || "string" == typeof i.header ? i.Header + ": " + u : u,
                                                  isPivotGroup: !0,
                                                  parent: n,
                                                  depth: t,
                                                  id: n ? n.id + "." + i.id + "." + u : i.id + "." + u,
                                                  pivotValue: u,
                                              });
                                              return (
                                                  (l.columns = e(
                                                      t + 1,
                                                      l,
                                                      [].concat(o, [
                                                          function (e) {
                                                              return e.values[i.id] === u;
                                                          },
                                                      ])
                                                  )),
                                                  l
                                              );
                                          })
                                    : l.map(function (e) {
                                          return r({}, e, {
                                              canPivot: !1,
                                              isPivoted: !0,
                                              parent: n,
                                              depth: t,
                                              id: "" + (n ? n.id + "." + e.id : e.id),
                                              accessor: function (t, n, r) {
                                                  if (
                                                      o.every(function (e) {
                                                          return e(r);
                                                      })
                                                  )
                                                      return r.values[e.id];
                                              },
                                          });
                                      });
                            })()
                        )
                    );
                }
                function ct(e, t) {
                    var n = t.instance.state;
                    return [].concat(e, [n.pivotColumns, n.groupBy]);
                }
                function dt(e, t) {
                    var n = t.instance.state;
                    return (
                        (e = e.filter(function (e) {
                            return !e.isPivotSource;
                        })),
                        n.pivotColumns.length &&
                            n.groupBy &&
                            n.groupBy.length &&
                            (e = e.filter(function (e) {
                                return e.isGrouped || e.isPivoted;
                            })),
                        e
                    );
                }
                function ft(e, t) {
                    var n = t.instance;
                    return [].concat(e, [n.state.pivotColumns, n.state.groupBy]);
                }
                function pt(e) {
                    var t = e.columns,
                        n = e.allColumns,
                        o = e.flatHeaders,
                        r = e.getHooks,
                        i = e.plugins,
                        u = e.dispatch,
                        s = e.autoResetPivot,
                        c = e.manaulPivot,
                        d = e.disablePivot,
                        p = e.defaultCanPivot;
                    v(i, ["useGroupBy"], "usePivotColumns");
                    var g = h(e);
                    n.forEach(function (t) {
                        var n = t.accessor,
                            o = t.defaultPivot,
                            r = t.disablePivot;
                        (t.canPivot = n ? I(t.canPivot, !0 !== r && void 0, !0 !== d && void 0, !0) : I(t.canPivot, o, p, !1)),
                            t.canPivot &&
                                (t.togglePivot = function () {
                                    return e.togglePivot(t.id);
                                }),
                            (t.Aggregated = t.Aggregated || t.Cell);
                    }),
                        o.forEach(function (e) {
                            e.getPivotToggleProps = f(r().getPivotToggleProps, { instance: g(), header: e });
                        });
                    var m = h(void 0 === s || s);
                    w(
                        function () {
                            m() && u({ type: l.resetPivot });
                        },
                        [u, c ? null : t]
                    ),
                        Object.assign(e, {
                            togglePivot: function (e, t) {
                                u({ type: l.togglePivot, columnId: e, value: t });
                            },
                        });
                }
                function gt(e) {
                    e.allCells.forEach(function (e) {
                        e.isPivoted = e.column.isPivoted;
                    });
                }
                (l.resetSelectedRows = "resetSelectedRows"), (l.toggleAllRowsSelected = "toggleAllRowsSelected"), (l.toggleRowSelected = "toggleRowSelected"), (l.toggleAllPageRowsSelected = "toggleAllPageRowsSelected");
                var vt = function (e) {
                    (e.getToggleRowSelectedProps = [mt]), (e.getToggleAllRowsSelectedProps = [ht]), (e.getToggleAllPageRowsSelectedProps = [yt]), e.stateReducers.push(wt), e.useInstance.push(Rt), e.prepareRow.push(bt);
                };
                vt.pluginName = "useRowSelect";
                var mt = function (e, t) {
                        var n = t.instance,
                            o = t.row,
                            r = n.manualRowSelectedKey;
                        return [
                            e,
                            {
                                onChange: function (e) {
                                    o.toggleRowSelected(e.target.checked);
                                },
                                style: { cursor: "pointer" },
                                checked: !(!o.original || !o.original[void 0 === r ? "isSelected" : r]) || o.isSelected,
                                title: "Toggle Row Selected",
                                indeterminate: o.isSomeSelected,
                            },
                        ];
                    },
                    ht = function (e, t) {
                        var n = t.instance;
                        return [
                            e,
                            {
                                onChange: function (e) {
                                    n.toggleAllRowsSelected(e.target.checked);
                                },
                                style: { cursor: "pointer" },
                                checked: n.isAllRowsSelected,
                                title: "Toggle All Rows Selected",
                                indeterminate: Boolean(!n.isAllRowsSelected && Object.keys(n.state.selectedRowIds).length),
                            },
                        ];
                    },
                    yt = function (e, t) {
                        var n = t.instance;
                        return [
                            e,
                            {
                                onChange: function (e) {
                                    n.toggleAllPageRowsSelected(e.target.checked);
                                },
                                style: { cursor: "pointer" },
                                checked: n.isAllPageRowsSelected,
                                title: "Toggle All Current Page Rows Selected",
                                indeterminate: Boolean(
                                    !n.isAllPageRowsSelected &&
                                        n.page.some(function (e) {
                                            var t = e.id;
                                            return n.state.selectedRowIds[t];
                                        })
                                ),
                            },
                        ];
                    };
                function wt(e, t, n, o) {
                    if (t.type === l.init) return r({ selectedRowIds: {} }, e);
                    if (t.type === l.resetSelectedRows) return r({}, e, { selectedRowIds: o.initialState.selectedRowIds || {} });
                    if (t.type === l.toggleAllRowsSelected) {
                        var i = t.value,
                            u = o.isAllRowsSelected,
                            s = o.rowsById,
                            a = o.nonGroupedRowsById,
                            c = void 0 === a ? s : a,
                            f = Object.assign({}, e.selectedRowIds);
                        return (
                            (void 0 !== i ? i : !u)
                                ? Object.keys(c).forEach(function (e) {
                                      f[e] = !0;
                                  })
                                : Object.keys(c).forEach(function (e) {
                                      delete f[e];
                                  }),
                            r({}, e, { selectedRowIds: f })
                        );
                    }
                    if (t.type === l.toggleRowSelected) {
                        var p = t.id,
                            g = t.value,
                            v = o.rowsById,
                            m = o.selectSubRows,
                            h = void 0 === m || m,
                            y = o.getSubRows,
                            w = e.selectedRowIds[p],
                            R = void 0 !== g ? g : !w;
                        if (w === R) return e;
                        var b = r({}, e.selectedRowIds);
                        return (
                            (function e(t) {
                                var n = v[t];
                                if ((n.isGrouped || (R ? (b[t] = !0) : delete b[t]), h && y(n)))
                                    return y(n).forEach(function (t) {
                                        return e(t.id);
                                    });
                            })(p),
                            r({}, e, { selectedRowIds: b })
                        );
                    }
                    if (t.type === l.toggleAllPageRowsSelected) {
                        var S = t.value,
                            C = o.page,
                            x = o.rowsById,
                            P = o.selectSubRows,
                            B = void 0 === P || P,
                            E = o.isAllPageRowsSelected,
                            I = o.getSubRows,
                            F = void 0 !== S ? S : !E,
                            G = r({}, e.selectedRowIds);
                        return (
                            C.forEach(function (e) {
                                return (function e(t) {
                                    var n = x[t];
                                    if ((n.isGrouped || (F ? (G[t] = !0) : delete G[t]), B && I(n)))
                                        return I(n).forEach(function (t) {
                                            return e(t.id);
                                        });
                                })(e.id);
                            }),
                            r({}, e, { selectedRowIds: G })
                        );
                    }
                    return e;
                }
                function Rt(e) {
                    var n = e.data,
                        o = e.rows,
                        r = e.getHooks,
                        i = e.plugins,
                        u = e.rowsById,
                        s = e.nonGroupedRowsById,
                        a = void 0 === s ? u : s,
                        c = e.autoResetSelectedRows,
                        p = e.state.selectedRowIds,
                        g = e.selectSubRows,
                        m = void 0 === g || g,
                        y = e.dispatch,
                        R = e.page,
                        b = e.getSubRows;
                    v(i, ["useFilters", "useGroupBy", "useSortBy", "useExpanded", "usePagination"], "useRowSelect");
                    var S = t.useMemo(
                            function () {
                                var e = [];
                                return (
                                    o.forEach(function (t) {
                                        var n = m
                                            ? (function e(t, n, o) {
                                                  if (n[t.id]) return !0;
                                                  var r = o(t);
                                                  if (r && r.length) {
                                                      var i = !0,
                                                          u = !1;
                                                      return (
                                                          r.forEach(function (t) {
                                                              (u && !i) || (e(t, n, o) ? (u = !0) : (i = !1));
                                                          }),
                                                          !!i || (!!u && null)
                                                      );
                                                  }
                                                  return !1;
                                              })(t, p, b)
                                            : !!p[t.id];
                                        (t.isSelected = !!n), (t.isSomeSelected = null === n), n && e.push(t);
                                    }),
                                    e
                                );
                            },
                            [o, m, p, b]
                        ),
                        C = Boolean(Object.keys(a).length && Object.keys(p).length),
                        x = C;
                    C &&
                        Object.keys(a).some(function (e) {
                            return !p[e];
                        }) &&
                        (C = !1),
                        C ||
                            (R &&
                                R.length &&
                                R.some(function (e) {
                                    return !p[e.id];
                                }) &&
                                (x = !1));
                    var P = h(void 0 === c || c);
                    w(
                        function () {
                            P() && y({ type: l.resetSelectedRows });
                        },
                        [y, n]
                    );
                    var B = t.useCallback(
                            function (e) {
                                return y({ type: l.toggleAllRowsSelected, value: e });
                            },
                            [y]
                        ),
                        E = t.useCallback(
                            function (e) {
                                return y({ type: l.toggleAllPageRowsSelected, value: e });
                            },
                            [y]
                        ),
                        I = t.useCallback(
                            function (e, t) {
                                return y({ type: l.toggleRowSelected, id: e, value: t });
                            },
                            [y]
                        ),
                        F = h(e),
                        G = f(r().getToggleAllRowsSelectedProps, { instance: F() }),
                        A = f(r().getToggleAllPageRowsSelectedProps, { instance: F() });
                    Object.assign(e, {
                        selectedFlatRows: S,
                        isAllRowsSelected: C,
                        isAllPageRowsSelected: x,
                        toggleRowSelected: I,
                        toggleAllRowsSelected: B,
                        getToggleAllRowsSelectedProps: G,
                        getToggleAllPageRowsSelectedProps: A,
                        toggleAllPageRowsSelected: E,
                    });
                }
                function bt(e, t) {
                    var n = t.instance;
                    (e.toggleRowSelected = function (t) {
                        return n.toggleRowSelected(e.id, t);
                    }),
                        (e.getToggleRowSelectedProps = f(n.getHooks().getToggleRowSelectedProps, { instance: n, row: e }));
                }
                var St = function (e) {
                        return {};
                    },
                    Ct = function (e) {
                        return {};
                    };
                (l.setRowState = "setRowState"), (l.setCellState = "setCellState"), (l.resetRowState = "resetRowState");
                var xt = function (e) {
                    e.stateReducers.push(Pt), e.useInstance.push(Bt), e.prepareRow.push(Et);
                };
                function Pt(e, t, n, o) {
                    var i = o.initialRowStateAccessor,
                        u = void 0 === i ? St : i,
                        s = o.initialCellStateAccessor,
                        c = o.rowsById;
                    if (t.type === l.init) return r({ rowState: {} }, e);
                    if (t.type === l.resetRowState) return r({}, e, { rowState: o.initialState.rowState || {} });
                    if (t.type === l.setRowState) {
                        var d,
                            f = t.rowId,
                            p = t.value,
                            g = void 0 !== e.rowState[f] ? e.rowState[f] : u(c[f]);
                        return r({}, e, { rowState: r({}, e.rowState, (((d = {})[f] = m(p, g)), d)) });
                    }
                    if (t.type === l.setCellState) {
                        var v,
                            h,
                            y,
                            w,
                            R,
                            b = t.rowId,
                            S = t.columnId,
                            C = t.value,
                            x = void 0 !== e.rowState[b] ? e.rowState[b] : u(c[b]),
                            P =
                                void 0 !== (null == x ? void 0 : null == (v = x.cellState) ? void 0 : v[S])
                                    ? x.cellState[S]
                                    : (void 0 === s ? Ct : s)(
                                          null == (h = c[b])
                                              ? void 0
                                              : null == (y = h.cells)
                                              ? void 0
                                              : y.find(function (e) {
                                                    return e.column.id === S;
                                                })
                                      );
                        return r({}, e, { rowState: r({}, e.rowState, (((R = {})[b] = r({}, x, { cellState: r({}, x.cellState || {}, (((w = {})[S] = m(C, P)), w)) })), R)) });
                    }
                }
                function Bt(e) {
                    var n = e.autoResetRowState,
                        r = e.data,
                        i = e.dispatch,
                        u = t.useCallback(
                            function (e, t) {
                                return i({ type: l.setRowState, rowId: e, value: t });
                            },
                            [i]
                        ),
                        s = t.useCallback(
                            function (e, t, n) {
                                return i({ type: l.setCellState, rowId: e, columnId: t, value: n });
                            },
                            [i]
                        ),
                        a = h(void 0 === n || n);
                    w(
                        function () {
                            a() && i({ type: l.resetRowState });
                        },
                        [r]
                    ),
                        Object.assign(e, { setRowState: u, setCellState: s });
                }
                function Et(e, t) {
                    var n = t.instance,
                        o = n.initialRowStateAccessor,
                        i = n.initialCellStateAccessor,
                        u = void 0 === i ? Ct : i,
                        l = n.state.rowState;
                    e &&
                        ((e.state = void 0 !== l[e.id] ? l[e.id] : (void 0 === o ? St : o)(e)),
                        (e.setState = function (t) {
                            return n.setRowState(e.id, t);
                        }),
                        e.cells.forEach(function (t) {
                            e.state.cellState || (e.state.cellState = {}),
                                (t.state = void 0 !== e.state.cellState[t.column.id] ? e.state.cellState[t.column.id] : u(t)),
                                (t.setState = function (o) {
                                    return n.setCellState(e.id, t.column.id, o);
                                });
                        }));
                }
                (xt.pluginName = "useRowState"), (l.resetColumnOrder = "resetColumnOrder"), (l.setColumnOrder = "setColumnOrder");
                var It = function (e) {
                    e.stateReducers.push(Ft),
                        e.visibleColumnsDeps.push(function (e, t) {
                            return [].concat(e, [t.instance.state.columnOrder]);
                        }),
                        e.visibleColumns.push(Gt),
                        e.useInstance.push(At);
                };
                function Ft(e, t, n, o) {
                    return t.type === l.init
                        ? r({ columnOrder: [] }, e)
                        : t.type === l.resetColumnOrder
                        ? r({}, e, { columnOrder: o.initialState.columnOrder || [] })
                        : t.type === l.setColumnOrder
                        ? r({}, e, { columnOrder: m(t.columnOrder, e.columnOrder) })
                        : void 0;
                }
                function Gt(e, t) {
                    var n = t.instance.state.columnOrder;
                    if (!n || !n.length) return e;
                    for (var o = [].concat(n), r = [].concat(e), i = []; r.length && o.length; )
                        !(function () {
                            var e = o.shift(),
                                t = r.findIndex(function (t) {
                                    return t.id === e;
                                });
                            t > -1 && i.push(r.splice(t, 1)[0]);
                        })();
                    return [].concat(i, r);
                }
                function At(e) {
                    var n = e.dispatch;
                    e.setColumnOrder = t.useCallback(
                        function (e) {
                            return n({ type: l.setColumnOrder, columnOrder: e });
                        },
                        [n]
                    );
                }
                (It.pluginName = "useColumnOrder"), (c.canResize = !0), (l.columnStartResizing = "columnStartResizing"), (l.columnResizing = "columnResizing"), (l.columnDoneResizing = "columnDoneResizing"), (l.resetResize = "resetResize");
                var kt = function (e) {
                        (e.getResizerProps = [Ht]), e.getHeaderProps.push({ style: { position: "relative" } }), e.stateReducers.push(Tt), e.useInstance.push(Wt), e.useInstanceBeforeDimensions.push(zt);
                    },
                    Ht = function (e, t) {
                        var n = t.instance,
                            o = t.header,
                            r = n.dispatch,
                            i = function (e, t) {
                                var t1,
                                    n = !1;
                                if ("touchstart" === e.type) {
                                    if (e.touches && e.touches.length > 1) return;
                                    n = !0;
                                }
                                var o = ((t1 = []),
                                    (function e(n) {
                                        n.columns && n.columns.length && n.columns.map(e), t1.push(n);
                                    })(t),
                                    t1).map(function (e) {
                                        return [e.id, e.totalWidth];
                                    }),
                                    i = n ? Math.round(e.touches[0].clientX) : e.clientX,
                                    u = function (e) {
                                        r({ type: l.columnResizing, clientX: e });
                                    },
                                    s = function () {
                                        return r({ type: l.columnDoneResizing });
                                    },
                                    a = {
                                        mouse: {
                                            moveEvent: "mousemove",
                                            moveHandler: function (e) {
                                                return u(e.clientX);
                                            },
                                            upEvent: "mouseup",
                                            upHandler: function (e) {
                                                document.removeEventListener("mousemove", a.mouse.moveHandler), document.removeEventListener("mouseup", a.mouse.upHandler), s();
                                            },
                                        },
                                        touch: {
                                            moveEvent: "touchmove",
                                            moveHandler: function (e) {
                                                return e.cancelable && (e.preventDefault(), e.stopPropagation()), u(e.touches[0].clientX), !1;
                                            },
                                            upEvent: "touchend",
                                            upHandler: function (e) {
                                                document.removeEventListener(a.touch.moveEvent, a.touch.moveHandler), document.removeEventListener(a.touch.upEvent, a.touch.moveHandler), s();
                                            },
                                        },
                                    },
                                    c = n ? a.touch : a.mouse,
                                    d = !!(function () {
                                        if ("boolean" == typeof z) return z;
                                        var e = !1;
                                        try {
                                            var t = {
                                                get passive() {
                                                    return (e = !0), !1;
                                                },
                                            };
                                            window.addEventListener("test", null, t), window.removeEventListener("test", null, t);
                                        } catch (t1) {
                                            e = !1;
                                        }
                                        return (z = e);
                                    })() && { passive: !1 };
                                document.addEventListener(c.moveEvent, c.moveHandler, d),
                                    document.addEventListener(c.upEvent, c.upHandler, d),
                                    r({ type: l.columnStartResizing, columnId: t.id, columnWidth: t.totalWidth, headerIdWidths: o, clientX: i });
                            };
                        return [
                            e,
                            {
                                onMouseDown: function (e) {
                                    return e.persist() || i(e, o);
                                },
                                onTouchStart: function (e) {
                                    return e.persist() || i(e, o);
                                },
                                style: { cursor: "col-resize" },
                                draggable: !1,
                                role: "separator",
                            },
                        ];
                    };
                function Tt(e, t) {
                    if (t.type === l.init) return r({ columnResizing: { columnWidths: {} } }, e);
                    if (t.type === l.resetResize) return r({}, e, { columnResizing: { columnWidths: {} } });
                    if (t.type === l.columnStartResizing) {
                        var n = t.clientX,
                            o = t.columnId,
                            i = t.columnWidth,
                            u = t.headerIdWidths;
                        return r({}, e, { columnResizing: r({}, e.columnResizing, { startX: n, headerIdWidths: u, columnWidth: i, isResizingColumn: o }) });
                    }
                    if (t.type === l.columnResizing) {
                        var s = t.clientX,
                            a = e.columnResizing,
                            c = a.startX,
                            d = a.columnWidth,
                            f = a.headerIdWidths,
                            p = (s - c) / d,
                            g = {};
                        return (
                            (void 0 === f ? [] : f).forEach(function (e) {
                                var t = e[0],
                                    n = e[1];
                                g[t] = Math.max(n + n * p, 0);
                            }),
                            r({}, e, { columnResizing: r({}, e.columnResizing, { columnWidths: r({}, e.columnResizing.columnWidths, {}, g) }) })
                        );
                    }
                    return t.type === l.columnDoneResizing ? r({}, e, { columnResizing: r({}, e.columnResizing, { startX: null, isResizingColumn: null }) }) : void 0;
                }
                kt.pluginName = "useResizeColumns";
                var zt = function (e) {
                    var t = e.flatHeaders,
                        n = e.disableResizing,
                        o = e.getHooks,
                        r = e.state.columnResizing,
                        i = h(e);
                    t.forEach(function (e) {
                        var t = I(!0 !== e.disableResizing && void 0, !0 !== n && void 0, !0);
                        (e.canResize = t), (e.width = r.columnWidths[e.id] || e.originalWidth || e.width), (e.isResizing = r.isResizingColumn === e.id), t && (e.getResizerProps = f(o().getResizerProps, { instance: i(), header: e }));
                    });
                };
                function Wt(e) {
                    var n = e.plugins,
                        o = e.dispatch,
                        r = e.autoResetResize,
                        u = e.columns;
                    v(n, ["useAbsoluteLayout"], "useResizeColumns");
                    var s = h(void 0 === r || r);
                    w(
                        function () {
                            s() && o({ type: l.resetResize });
                        },
                        [u]
                    ),
                        Object.assign(e, {
                            resetResizing: t.useCallback(
                                function () {
                                    return o({ type: l.resetResize });
                                },
                                [o]
                            ),
                        });
                }
                var Ot = { position: "absolute", top: 0 },
                    Mt = function (e) {
                        e.getTableBodyProps.push(jt),
                            e.getRowProps.push(jt),
                            e.getHeaderGroupProps.push(jt),
                            e.getFooterGroupProps.push(jt),
                            e.getHeaderProps.push(function (e, t) {
                                var n = t.column;
                                return [e, { style: r({}, Ot, { left: n.totalLeft + "px", width: n.totalWidth + "px" }) }];
                            }),
                            e.getCellProps.push(function (e, t) {
                                var n = t.cell;
                                return [e, { style: r({}, Ot, { left: n.column.totalLeft + "px", width: n.column.totalWidth + "px" }) }];
                            }),
                            e.getFooterProps.push(function (e, t) {
                                var n = t.column;
                                return [e, { style: r({}, Ot, { left: n.totalLeft + "px", width: n.totalWidth + "px" }) }];
                            });
                    };
                Mt.pluginName = "useAbsoluteLayout";
                var jt = function (e, t) {
                        return [e, { style: { position: "relative", width: t.instance.totalColumnsWidth + "px" } }];
                    },
                    Nt = { display: "inline-block", boxSizing: "border-box" },
                    Lt = function (e, t) {
                        return [e, { style: { display: "flex", width: t.instance.totalColumnsWidth + "px" } }];
                    },
                    Dt = function (e) {
                        e.getRowProps.push(Lt),
                            e.getHeaderGroupProps.push(Lt),
                            e.getFooterGroupProps.push(Lt),
                            e.getHeaderProps.push(function (e, t) {
                                return [e, { style: r({}, Nt, { width: t.column.totalWidth + "px" }) }];
                            }),
                            e.getCellProps.push(function (e, t) {
                                return [e, { style: r({}, Nt, { width: t.cell.column.totalWidth + "px" }) }];
                            }),
                            e.getFooterProps.push(function (e, t) {
                                return [e, { style: r({}, Nt, { width: t.column.totalWidth + "px" }) }];
                            });
                    };
                function Vt(e) {
                    e.getTableProps.push(_t), e.getRowProps.push(Xt), e.getHeaderGroupProps.push(Xt), e.getFooterGroupProps.push(Xt), e.getHeaderProps.push(qt), e.getCellProps.push(Kt), e.getFooterProps.push(Ut);
                }
                (Dt.pluginName = "useBlockLayout"), (Vt.pluginName = "useFlexLayout");
                var _t = function (e, t) {
                        return [e, { style: { minWidth: t.instance.totalColumnsMinWidth + "px" } }];
                    },
                    Xt = function (e, t) {
                        return [e, { style: { display: "flex", flex: "1 0 auto", minWidth: t.instance.totalColumnsMinWidth + "px" } }];
                    },
                    qt = function (e, t) {
                        var n = t.column;
                        return [e, { style: { boxSizing: "border-box", flex: n.totalFlexWidth ? n.totalFlexWidth + " 0 auto" : void 0, minWidth: n.totalMinWidth + "px", width: n.totalWidth + "px" } }];
                    },
                    Kt = function (e, t) {
                        var n = t.cell;
                        return [e, { style: { boxSizing: "border-box", flex: n.column.totalFlexWidth + " 0 auto", minWidth: n.column.totalMinWidth + "px", width: n.column.totalWidth + "px" } }];
                    },
                    Ut = function (e, t) {
                        var n = t.column;
                        return [e, { style: { boxSizing: "border-box", flex: n.totalFlexWidth ? n.totalFlexWidth + " 0 auto" : void 0, minWidth: n.totalMinWidth + "px", width: n.totalWidth + "px" } }];
                    };
                function $t(e) {
                    e.stateReducers.push(Qt), e.getTableProps.push(Jt), e.getHeaderProps.push(Yt);
                }
                $t.pluginName = "useGridLayout";
                var Jt = function (e, t) {
                        return [
                            e,
                            {
                                style: {
                                    display: "grid",
                                    gridTemplateColumns: t.instance.state.gridLayout.columnWidths
                                        .map(function (e) {
                                            return e;
                                        })
                                        .join(" "),
                                },
                            },
                        ];
                    },
                    Yt = function (e, t) {
                        return [e, { id: "header-cell-" + t.column.id, style: { position: "sticky" } }];
                    };
                function Qt(e, t, n, o) {
                    if ("init" === t.type)
                        return r(
                            {
                                gridLayout: {
                                    columnWidths: o.columns.map(function () {
                                        return "auto";
                                    }),
                                },
                            },
                            e
                        );
                    if ("columnStartResizing" === t.type) {
                        var i = t.columnId,
                            u = o.visibleColumns.findIndex(function (e) {
                                return e.id === i;
                            }),
                            l = (function (e) {
                                var t,
                                    n = null == (t = document.getElementById("header-cell-" + e)) ? void 0 : t.offsetWidth;
                                if (void 0 !== n) return n;
                            })(i);
                        return void 0 !== l ? r({}, e, { gridLayout: r({}, e.gridLayout, { columnId: i, columnIndex: u, startingWidth: l }) }) : e;
                    }
                    if ("columnResizing" === t.type) {
                        var s = e.gridLayout,
                            a = s.columnIndex,
                            c = s.startingWidth,
                            d = s.columnWidths,
                            f = c - (e.columnResizing.startX - t.clientX),
                            p = [].concat(d);
                        return (p[a] = f + "px"), r({}, e, { gridLayout: r({}, e.gridLayout, { columnWidths: p }) });
                    }
                }
                (e._UNSTABLE_usePivotColumns = nt),
                    (e.actions = l),
                    (e.defaultColumn = c),
                    (e.defaultGroupByFn = De),
                    (e.defaultOrderByFn = Qe),
                    (e.defaultRenderer = s),
                    (e.emptyRenderer = a),
                    (e.ensurePluginOrder = v),
                    (e.flexRender = b),
                    (e.functionalUpdate = m),
                    (e.loopHooks = g),
                    (e.makePropGetter = f),
                    (e.makeRenderer = R),
                    (e.reduceHooks = p),
                    (e.safeUseLayoutEffect = y),
                    (e.useAbsoluteLayout = Mt),
                    (e.useAsyncDebounce = function (e, n) {
                        void 0 === n && (n = 0);
                        var e1,
                            r = t.useRef({}),
                            i = h(e),
                            u = h(n);
                        return t.useCallback(
                            ((e1 = o(
                                regeneratorRuntime.mark(function e() {
                                    var t,
                                        n,
                                        l,
                                        s = arguments;
                                    return regeneratorRuntime.wrap(function (e) {
                                        for (;;)
                                            switch ((e.prev = e.next)) {
                                                case 0:
                                                    for (n = Array((t = s.length)), l = 0; l < t; l++) n[l] = s[l];
                                                    return (
                                                        r.current.promise ||
                                                            (r.current.promise = new Promise(function (e, t) {
                                                                (r.current.resolve = e), (r.current.reject = t);
                                                            })),
                                                        r.current.timeout && clearTimeout(r.current.timeout),
                                                        (r.current.timeout = setTimeout(
                                                            o(
                                                                regeneratorRuntime.mark(function e() {
                                                                    return regeneratorRuntime.wrap(
                                                                        function (e) {
                                                                            for (;;)
                                                                                switch ((e.prev = e.next)) {
                                                                                    case 0:
                                                                                        return delete r.current.timeout, (e.prev = 1), (e.t0 = r.current), (e.next = 5), i().apply(void 0, n);
                                                                                    case 5:
                                                                                        (e.t1 = e.sent), e.t0.resolve.call(e.t0, e.t1), (e.next = 12);
                                                                                        break;
                                                                                    case 9:
                                                                                        (e.prev = 9), (e.t2 = e.catch(1)), r.current.reject(e.t2);
                                                                                    case 12:
                                                                                        return (e.prev = 12), delete r.current.promise, e.finish(12);
                                                                                    case 15:
                                                                                    case "end":
                                                                                        return e.stop();
                                                                                }
                                                                        },
                                                                        e,
                                                                        null,
                                                                        [[1, 9, 12, 15]]
                                                                    );
                                                                })
                                                            ),
                                                            u()
                                                        )),
                                                        e.abrupt("return", r.current.promise)
                                                    );
                                                case 5:
                                                case "end":
                                                    return e.stop();
                                            }
                                    }, e);
                                })
                            )),
                            function () {
                                return e1.apply(this, arguments);
                            }),
                            [i, u]
                        );
                    }),
                    (e.useBlockLayout = Dt),
                    (e.useColumnOrder = It),
                    (e.useExpanded = se),
                    (e.useFilters = Pe),
                    (e.useFlexLayout = Vt),
                    (e.useGetLatest = h),
                    (e.useGlobalFilter = Ie),
                    (e.useGridLayout = $t),
                    (e.useGroupBy = ze),
                    (e.useMountedLayoutEffect = w),
                    (e.usePagination = Ze),
                    (e.useResizeColumns = kt),
                    (e.useRowSelect = vt),
                    (e.useRowState = xt),
                    (e.useSortBy = Ue),
                    (e.useTable = function (e) {
                        for (var n = arguments.length, o = Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++) o[i - 1] = arguments[i];
                        (e = ie(e)), (o = [K].concat(o));
                        var s = h(t.useRef({}).current);
                        Object.assign(
                            s(),
                            r({}, e, {
                                plugins: o,
                                hooks: {
                                    useOptions: [],
                                    stateReducers: [],
                                    useControlledState: [],
                                    columns: [],
                                    columnsDeps: [],
                                    allColumns: [],
                                    allColumnsDeps: [],
                                    accessValue: [],
                                    materializedColumns: [],
                                    materializedColumnsDeps: [],
                                    useInstanceAfterData: [],
                                    visibleColumns: [],
                                    visibleColumnsDeps: [],
                                    headerGroups: [],
                                    headerGroupsDeps: [],
                                    useInstanceBeforeDimensions: [],
                                    useInstance: [],
                                    prepareRow: [],
                                    getTableProps: [M],
                                    getTableBodyProps: [j],
                                    getHeaderGroupProps: [D],
                                    getFooterGroupProps: [V],
                                    getHeaderProps: [N],
                                    getFooterProps: [L],
                                    getRowProps: [_],
                                    getCellProps: [X],
                                    useFinalInstance: [],
                                },
                            })
                        ),
                            o.filter(Boolean).forEach(function (e) {
                                e(s().hooks);
                            });
                        var a = h(s().hooks);
                        (s().getHooks = a), delete s().hooks, Object.assign(s(), p(a().useOptions, ie(e)));
                        var c = s(),
                            d = c.data,
                            v = c.columns,
                            m = c.initialState,
                            y = c.defaultColumn,
                            w = c.getSubRows,
                            b = c.getRowId,
                            E = c.stateReducer,
                            I = c.useControlledState,
                            F = h(E),
                            G = t.useCallback(
                                function (e, t) {
                                    if (!t.type) throw (console.info({ action: t }), Error("Unknown Action \uD83D\uDC46"));
                                    return [].concat(a().stateReducers, Array.isArray(F()) ? F() : [F()]).reduce(function (n, o) {
                                        return o(n, t, e, s()) || n;
                                    }, e);
                                },
                                [a, F, s]
                            ),
                            A = t.useReducer(G, void 0, function () {
                                return G(m, { type: l.init });
                            }),
                            k = A[0],
                            H = A[1],
                            T1 = p([].concat(a().useControlledState, [I]), k, { instance: s() });
                        Object.assign(s(), { state: T1, dispatch: H });
                        var z = t.useMemo(function () {
                            return (function S(e, t, n) {
                                return (
                                    void 0 === n && (n = 0),
                                    e.map(function (e) {
                                        return x((e = r({}, e, { parent: t, depth: n }))), e.columns && (e.columns = S(e.columns, e, n + 1)), e;
                                    })
                                );
                            })(p(a().columns, v, { instance: s() }));
                        }, [a, s, v].concat(p(a().columnsDeps, [], { instance: s() })));
                        s().columns = z;
                        var W = t.useMemo(function () {
                            return p(a().allColumns, C(z), { instance: s() }).map(x);
                        }, [z, a, s].concat(p(a().allColumnsDeps, [], { instance: s() })));
                        s().allColumns = W;
                        var O = t.useMemo(
                                function () {
                                    for (var e = [], t = [], n = {}, o = [].concat(W); o.length; )
                                        (function (e) {
                                            var t = e.data,
                                                n = e.rows,
                                                o = e.flatRows,
                                                r = e.rowsById,
                                                i = e.column,
                                                u = e.getRowId,
                                                l = e.getSubRows,
                                                s = e.accessValueHooks,
                                                a = e.getInstance;
                                            t.forEach(function (e, c) {
                                                return (function e(n, c, d, f, g) {
                                                    void 0 === d && (d = 0);
                                                    var m = u(n, c, f),
                                                        h = r[m];
                                                    if (h)
                                                        h.subRows &&
                                                            h.originalSubRows.forEach(function (t, n) {
                                                                return e(t, n, d + 1, h);
                                                            });
                                                    else if (
                                                        (((h = { id: m, original: n, index: c, depth: d, cells: [{}] }).cells.map = T),
                                                        (h.cells.filter = T),
                                                        (h.cells.forEach = T),
                                                        (h.cells[0].getCellProps = T),
                                                        (h.values = {}),
                                                        g.push(h),
                                                        o.push(h),
                                                        (r[m] = h),
                                                        (h.originalSubRows = l(n, c)),
                                                        h.originalSubRows)
                                                    ) {
                                                        var y = [];
                                                        h.originalSubRows.forEach(function (t, n) {
                                                            return e(t, n, d + 1, h, y);
                                                        }),
                                                            (h.subRows = y);
                                                    }
                                                    i.accessor && (h.values[i.id] = i.accessor(n, c, h, g, t)), (h.values[i.id] = p(s, h.values[i.id], { row: h, column: i, instance: a() }));
                                                })(e, c, 0, void 0, n);
                                            });
                                        })({ data: d, rows: e, flatRows: t, rowsById: n, column: o.shift(), getRowId: b, getSubRows: w, accessValueHooks: a().accessValue, getInstance: s });
                                    return [e, t, n];
                                },
                                [W, d, b, w, a, s]
                            ),
                            M1 = O[0],
                            j1 = O[1],
                            N1 = O[2];
                        Object.assign(s(), { rows: M1, initialRows: [].concat(M1), flatRows: j1, rowsById: N1 }), g(a().useInstanceAfterData, s());
                        var L1 = t.useMemo(function () {
                            return p(a().visibleColumns, W, { instance: s() }).map(function (e) {
                                return P(e, y);
                            });
                        }, [a, W, s, y].concat(p(a().visibleColumnsDeps, [], { instance: s() })));
                        (W = t.useMemo(
                            function () {
                                var e = [].concat(L1);
                                return (
                                    W.forEach(function (t) {
                                        e.find(function (e) {
                                            return e.id === t.id;
                                        }) || e.push(t);
                                    }),
                                    e
                                );
                            },
                            [W, L1]
                        )),
                            (s().allColumns = W);
                        var D1 = t.useMemo(function () {
                            return p(
                                a().headerGroups,
                                (function (e, t, n) {
                                    void 0 === n &&
                                        (n = function () {
                                            return {};
                                        });
                                    for (
                                        var o = [],
                                            i = e,
                                            u = 0,
                                            l = function () {
                                                return u++;
                                            };
                                        i.length;

                                    )
                                        !(function () {
                                            var e = { headers: [] },
                                                u = [],
                                                s = i.some(function (e) {
                                                    return e.parent;
                                                });
                                            i.forEach(function (o) {
                                                var i,
                                                    a = [].concat(u).reverse()[0];
                                                s &&
                                                    ((i = o.parent
                                                        ? r({}, o.parent, { originalId: o.parent.id, id: o.parent.id + "_" + l(), headers: [o] }, n(o))
                                                        : P(r({ originalId: o.id + "_placeholder", id: o.id + "_placeholder_" + l(), placeholderOf: o, headers: [o] }, n(o)), t)),
                                                    a && a.originalId === i.originalId ? a.headers.push(o) : u.push(i)),
                                                    e.headers.push(o);
                                            }),
                                                o.push(e),
                                                (i = u);
                                        })();
                                    return o.reverse();
                                })(L1, y),
                                s()
                            );
                        }, [a, L1, y, s].concat(p(a().headerGroupsDeps, [], { instance: s() })));
                        s().headerGroups = D1;
                        var V1 = t.useMemo(
                            function () {
                                return D1.length ? D1[0].headers : [];
                            },
                            [D1]
                        );
                        (s().headers = V1),
                            (s().flatHeaders = D1.reduce(function (e, t) {
                                return [].concat(e, t.headers);
                            }, [])),
                            g(a().useInstanceBeforeDimensions, s());
                        var _1 = L1.filter(function (e) {
                            return e.isVisible;
                        })
                            .map(function (e) {
                                return e.id;
                            })
                            .sort()
                            .join("_");
                        (L1 = t.useMemo(
                            function () {
                                return L1.filter(function (e) {
                                    return e.isVisible;
                                });
                            },
                            [L1, _1]
                        )),
                            (s().visibleColumns = L1);
                        var X1 = (function ue(e, t) {
                                void 0 === t && (t = 0);
                                var n = 0,
                                    o = 0,
                                    r = 0,
                                    i = 0;
                                return (
                                    e.forEach(function (e) {
                                        var u = e.headers;
                                        if (((e.totalLeft = t), u && u.length)) {
                                            var l = ue(u, t),
                                                s = l[0],
                                                a = l[1],
                                                c = l[2],
                                                d = l[3];
                                            (e.totalMinWidth = s), (e.totalWidth = a), (e.totalMaxWidth = c), (e.totalFlexWidth = d);
                                        } else (e.totalMinWidth = e.minWidth), (e.totalWidth = Math.min(Math.max(e.minWidth, e.width), e.maxWidth)), (e.totalMaxWidth = e.maxWidth), (e.totalFlexWidth = e.canResize ? e.totalWidth : 0);
                                        e.isVisible && ((t += e.totalWidth), (n += e.totalMinWidth), (o += e.totalWidth), (r += e.totalMaxWidth), (i += e.totalFlexWidth));
                                    }),
                                    [n, o, r, i]
                                );
                            })(V1),
                            U = X1[0],
                            $ = X1[1],
                            J = X1[2];
                        return (
                            (s().totalColumnsMinWidth = U),
                            (s().totalColumnsWidth = $),
                            (s().totalColumnsMaxWidth = J),
                            g(a().useInstance, s()),
                            [].concat(s().flatHeaders, s().allColumns).forEach(function (e) {
                                (e.render = R(s(), e)), (e.getHeaderProps = f(a().getHeaderProps, { instance: s(), column: e })), (e.getFooterProps = f(a().getFooterProps, { instance: s(), column: e }));
                            }),
                            (s().headerGroups = t.useMemo(
                                function () {
                                    return D1.filter(function (e, t) {
                                        return (
                                            (e.headers = e.headers.filter(function (e) {
                                                return e.headers
                                                    ? (function e(t) {
                                                          return t.filter(function (t) {
                                                              return t.headers ? e(t.headers) : t.isVisible;
                                                          }).length;
                                                      })(e.headers)
                                                    : e.isVisible;
                                            })),
                                            !!e.headers.length &&
                                                ((e.getHeaderGroupProps = f(a().getHeaderGroupProps, { instance: s(), headerGroup: e, index: t })),
                                                (e.getFooterGroupProps = f(a().getFooterGroupProps, { instance: s(), headerGroup: e, index: t })),
                                                !0)
                                        );
                                    });
                                },
                                [D1, s, a]
                            )),
                            (s().footerGroups = [].concat(s().headerGroups).reverse()),
                            (s().prepareRow = t.useCallback(
                                function (e) {
                                    (e.getRowProps = f(a().getRowProps, { instance: s(), row: e })),
                                        (e.allCells = W.map(function (t) {
                                            var n = e.values[t.id],
                                                o = { column: t, row: e, value: n };
                                            return (o.getCellProps = f(a().getCellProps, { instance: s(), cell: o })), (o.render = R(s(), t, { row: e, cell: o, value: n })), o;
                                        })),
                                        (e.cells = L1.map(function (t) {
                                            return e.allCells.find(function (e) {
                                                return e.column.id === t.id;
                                            });
                                        })),
                                        g(a().prepareRow, e, { instance: s() });
                                },
                                [a, s, W, L1]
                            )),
                            (s().getTableProps = f(a().getTableProps, { instance: s() })),
                            (s().getTableBodyProps = f(a().getTableBodyProps, { instance: s() })),
                            g(a().useFinalInstance, s()),
                            s()
                        );
                    }),
                    Object.defineProperty(e, "__esModule", { value: !0 });
            })(exports, __webpack_require__(67294));
        },
        79521: function (module, __unused_webpack_exports, __webpack_require__) {
            module.exports = __webpack_require__(40217);
        },
        11728: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294),
                classCallCheck = function (instance, Constructor) {
                    if (!(instance instanceof Constructor)) throw TypeError("Cannot call a class as a function");
                },
                createClass = (function () {
                    function defineProperties(target, props) {
                        for (var i = 0; i < props.length; i++) {
                            var descriptor = props[i];
                            (descriptor.enumerable = descriptor.enumerable || !1), (descriptor.configurable = !0), "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                        }
                    }
                    return function (Constructor, protoProps, staticProps) {
                        return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), Constructor;
                    };
                })(),
                _extends =
                    Object.assign ||
                    function (target) {
                        for (var i = 1; i < arguments.length; i++) {
                            var source = arguments[i];
                            for (var key in source) Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
                        }
                        return target;
                    },
                inherits = function (subClass, superClass) {
                    if ("function" != typeof superClass && null !== superClass) throw TypeError("Super expression must either be null or a function, not " + typeof superClass);
                    (subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: !1, writable: !0, configurable: !0 } })),
                        superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : (subClass.__proto__ = superClass));
                },
                possibleConstructorReturn = function (self1, call) {
                    if (!self1) throw ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return call && ("object" == typeof call || "function" == typeof call) ? call : self1;
                },
                slicedToArray = function (arr, i) {
                    if (Array.isArray(arr)) return arr;
                    if (Symbol.iterator in Object(arr))
                        return (function (arr, i) {
                            var _arr = [],
                                _n = !0,
                                _d = !1,
                                _e = void 0;
                            try {
                                for (var _s, _i = arr[Symbol.iterator](); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !i || _arr.length !== i); _n = !0);
                            } catch (err) {
                                (_d = !0), (_e = err);
                            } finally {
                                try {
                                    !_n && _i.return && _i.return();
                                } finally {
                                    if (_d) throw _e;
                                }
                            }
                            return _arr;
                        })(arr, i);
                    throw TypeError("Invalid attempt to destructure non-iterable instance");
                },
                windowObject = void 0;
            windowObject = "undefined" != typeof window ? window : "undefined" != typeof self ? self : __webpack_require__.g;
            var cancelFrame = null,
                requestFrame = null,
                clearTimeoutFn = windowObject.clearTimeout,
                setTimeoutFn = windowObject.setTimeout,
                cancelAnimationFrameFn = windowObject.cancelAnimationFrame || windowObject.mozCancelAnimationFrame || windowObject.webkitCancelAnimationFrame,
                requestAnimationFrameFn = windowObject.requestAnimationFrame || windowObject.mozRequestAnimationFrame || windowObject.webkitRequestAnimationFrame;
            null == cancelAnimationFrameFn || null == requestAnimationFrameFn
                ? ((cancelFrame = clearTimeoutFn),
                  (requestFrame = function (callback) {
                      return setTimeoutFn(callback, 20);
                  }))
                : ((cancelFrame = function (_ref) {
                      var _ref2 = slicedToArray(_ref, 2),
                          animationFrameID = _ref2[0],
                          timeoutID = _ref2[1];
                      cancelAnimationFrameFn(animationFrameID), clearTimeoutFn(timeoutID);
                  }),
                  (requestFrame = function (callback) {
                      var animationFrameID = requestAnimationFrameFn(function () {
                              clearTimeoutFn(timeoutID), callback();
                          }),
                          timeoutID = setTimeoutFn(function () {
                              cancelAnimationFrameFn(animationFrameID), callback();
                          }, 20);
                      return [animationFrameID, timeoutID];
                  }));
            var AutoSizer = (function (_React$PureComponent) {
                function AutoSizer() {
                    classCallCheck(this, AutoSizer);
                    for (var _ref, _temp, _this, _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                    return (
                        (_temp = _this = possibleConstructorReturn(this, (_ref = AutoSizer.__proto__ || Object.getPrototypeOf(AutoSizer)).call.apply(_ref, [this].concat(args)))),
                        (_this.state = { height: _this.props.defaultHeight || 0, width: _this.props.defaultWidth || 0 }),
                        (_this._onResize = function () {
                            var _this$props = _this.props,
                                disableHeight = _this$props.disableHeight,
                                disableWidth = _this$props.disableWidth,
                                onResize = _this$props.onResize;
                            if (_this._parentNode) {
                                var _height = _this._parentNode.offsetHeight || 0,
                                    _width = _this._parentNode.offsetWidth || 0,
                                    _style = window.getComputedStyle(_this._parentNode) || {},
                                    paddingLeft = parseInt(_style.paddingLeft, 10) || 0,
                                    paddingRight = parseInt(_style.paddingRight, 10) || 0,
                                    paddingTop = parseInt(_style.paddingTop, 10) || 0,
                                    paddingBottom = parseInt(_style.paddingBottom, 10) || 0;
                                ((disableHeight || _this.state.height === _height - paddingTop - paddingBottom) && (disableWidth || _this.state.width === _width - paddingLeft - paddingRight)) ||
                                    (_this.setState({ height: _height - paddingTop - paddingBottom, width: _width - paddingLeft - paddingRight }), onResize({ height: _height, width: _width }));
                            }
                        }),
                        (_this._setRef = function (autoSizer) {
                            _this._autoSizer = autoSizer;
                        }),
                        possibleConstructorReturn(_this, _temp)
                    );
                }
                return (
                    inherits(AutoSizer, _React$PureComponent),
                    createClass(AutoSizer, [
                        {
                            key: "componentDidMount",
                            value: function () {
                                var nonce = this.props.nonce;
                                this._autoSizer &&
                                    this._autoSizer.parentNode &&
                                    this._autoSizer.parentNode.ownerDocument &&
                                    this._autoSizer.parentNode.ownerDocument.defaultView &&
                                    this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement &&
                                    ((this._parentNode = this._autoSizer.parentNode),
                                    (this._detectElementResize = (function (nonce) {
                                        var animationKeyframes = void 0,
                                            animationName = void 0,
                                            animationStartEvent = void 0,
                                            animationStyle = void 0,
                                            checkTriggers = void 0,
                                            resetTriggers = void 0,
                                            scrollListener = void 0,
                                            attachEvent1 = "undefined" != typeof document && document.attachEvent;
                                        if (!attachEvent1) {
                                            (resetTriggers = function (element) {
                                                var triggers = element.__resizeTriggers__,
                                                    expand = triggers.firstElementChild,
                                                    contract = triggers.lastElementChild,
                                                    expandChild = expand.firstElementChild;
                                                (contract.scrollLeft = contract.scrollWidth),
                                                    (contract.scrollTop = contract.scrollHeight),
                                                    (expandChild.style.width = expand.offsetWidth + 1 + "px"),
                                                    (expandChild.style.height = expand.offsetHeight + 1 + "px"),
                                                    (expand.scrollLeft = expand.scrollWidth),
                                                    (expand.scrollTop = expand.scrollHeight);
                                            }),
                                                (checkTriggers = function (element) {
                                                    return element.offsetWidth !== element.__resizeLast__.width || element.offsetHeight !== element.__resizeLast__.height;
                                                }),
                                                (scrollListener = function (e) {
                                                    if (!(e.target.className && "function" == typeof e.target.className.indexOf && 0 > e.target.className.indexOf("contract-trigger") && 0 > e.target.className.indexOf("expand-trigger"))) {
                                                        var element = this;
                                                        resetTriggers(this),
                                                            this.__resizeRAF__ && cancelFrame(this.__resizeRAF__),
                                                            (this.__resizeRAF__ = requestFrame(function () {
                                                                checkTriggers(element) &&
                                                                    ((element.__resizeLast__.width = element.offsetWidth),
                                                                    (element.__resizeLast__.height = element.offsetHeight),
                                                                    element.__resizeListeners__.forEach(function (fn) {
                                                                        fn.call(element, e);
                                                                    }));
                                                            }));
                                                    }
                                                });
                                            var animation = !1,
                                                keyframeprefix = "";
                                            animationStartEvent = "animationstart";
                                            var domPrefixes = "Webkit Moz O ms".split(" "),
                                                startEvents = "webkitAnimationStart animationstart oAnimationStart MSAnimationStart".split(" "),
                                                elm = document.createElement("fakeelement");
                                            if ((void 0 !== elm.style.animationName && (animation = !0), !1 === animation)) {
                                                for (var i = 0; i < domPrefixes.length; i++)
                                                    if (void 0 !== elm.style[domPrefixes[i] + "AnimationName"]) {
                                                        (keyframeprefix = "-" + (0, domPrefixes[i]).toLowerCase() + "-"), (animationStartEvent = startEvents[i]), (animation = !0);
                                                        break;
                                                    }
                                            }
                                            (animationKeyframes = "@" + keyframeprefix + "keyframes " + (animationName = "resizeanim") + " { from { opacity: 0; } to { opacity: 0; } } "),
                                                (animationStyle = keyframeprefix + "animation: 1ms " + animationName + "; ");
                                        }
                                        var createStyles = function (doc) {
                                            if (!doc.getElementById("detectElementResize")) {
                                                var css =
                                                        (animationKeyframes || "") +
                                                        ".resize-triggers { " +
                                                        (animationStyle || "") +
                                                        'visibility: hidden; opacity: 0; } .resize-triggers, .resize-triggers > div, .contract-trigger:before { content: " "; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',
                                                    head = doc.head || doc.getElementsByTagName("head")[0],
                                                    style = doc.createElement("style");
                                                (style.id = "detectElementResize"),
                                                    (style.type = "text/css"),
                                                    null != nonce && style.setAttribute("nonce", nonce),
                                                    style.styleSheet ? (style.styleSheet.cssText = css) : style.appendChild(doc.createTextNode(css)),
                                                    head.appendChild(style);
                                            }
                                        };
                                        return {
                                            addResizeListener: function (element, fn) {
                                                if (attachEvent1) element.attachEvent("onresize", fn);
                                                else {
                                                    if (!element.__resizeTriggers__) {
                                                        var doc = element.ownerDocument,
                                                            elementStyle = windowObject.getComputedStyle(element);
                                                        elementStyle && "static" === elementStyle.position && (element.style.position = "relative"),
                                                            createStyles(doc),
                                                            (element.__resizeLast__ = {}),
                                                            (element.__resizeListeners__ = []),
                                                            ((element.__resizeTriggers__ = doc.createElement("div")).className = "resize-triggers");
                                                        var expandTrigger = doc.createElement("div");
                                                        (expandTrigger.className = "expand-trigger"), expandTrigger.appendChild(doc.createElement("div"));
                                                        var contractTrigger = doc.createElement("div");
                                                        (contractTrigger.className = "contract-trigger"),
                                                            element.__resizeTriggers__.appendChild(expandTrigger),
                                                            element.__resizeTriggers__.appendChild(contractTrigger),
                                                            element.appendChild(element.__resizeTriggers__),
                                                            resetTriggers(element),
                                                            element.addEventListener("scroll", scrollListener, !0),
                                                            animationStartEvent &&
                                                                ((element.__resizeTriggers__.__animationListener__ = function (e) {
                                                                    e.animationName === animationName && resetTriggers(element);
                                                                }),
                                                                element.__resizeTriggers__.addEventListener(animationStartEvent, element.__resizeTriggers__.__animationListener__));
                                                    }
                                                    element.__resizeListeners__.push(fn);
                                                }
                                            },
                                            removeResizeListener: function (element, fn) {
                                                if (attachEvent1) element.detachEvent("onresize", fn);
                                                else if ((element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1), !element.__resizeListeners__.length)) {
                                                    element.removeEventListener("scroll", scrollListener, !0),
                                                        element.__resizeTriggers__.__animationListener__ &&
                                                            (element.__resizeTriggers__.removeEventListener(animationStartEvent, element.__resizeTriggers__.__animationListener__), (element.__resizeTriggers__.__animationListener__ = null));
                                                    try {
                                                        element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);
                                                    } catch (e) {}
                                                }
                                            },
                                        };
                                    })(nonce)),
                                    this._detectElementResize.addResizeListener(this._parentNode, this._onResize),
                                    this._onResize());
                            },
                        },
                        {
                            key: "componentWillUnmount",
                            value: function () {
                                this._detectElementResize && this._parentNode && this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);
                            },
                        },
                        {
                            key: "render",
                            value: function () {
                                var _props = this.props,
                                    children = _props.children,
                                    className = _props.className,
                                    disableHeight = _props.disableHeight,
                                    disableWidth = _props.disableWidth,
                                    style = _props.style,
                                    _state = this.state,
                                    height = _state.height,
                                    width = _state.width,
                                    outerStyle = { overflow: "visible" },
                                    childParams = {},
                                    bailoutOnChildren = !1;
                                return (
                                    disableHeight || (0 === height && (bailoutOnChildren = !0), (outerStyle.height = 0), (childParams.height = height)),
                                    disableWidth || (0 === width && (bailoutOnChildren = !0), (outerStyle.width = 0), (childParams.width = width)),
                                    (0, react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", { className: className, ref: this._setRef, style: _extends({}, outerStyle, style) }, !bailoutOnChildren && children(childParams))
                                );
                            },
                        },
                    ]),
                    AutoSizer
                );
            })(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent);
            (AutoSizer.defaultProps = { onResize: function () {}, disableHeight: !1, disableWidth: !1, style: {} }), (__webpack_exports__.Z = AutoSizer);
        },
        79785: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var Buffer = __webpack_require__(48764).Buffer,
                inherits = __webpack_require__(35717),
                HashBase = __webpack_require__(3349),
                ARRAY16 = Array(16),
                zl = [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    7,
                    4,
                    13,
                    1,
                    10,
                    6,
                    15,
                    3,
                    12,
                    0,
                    9,
                    5,
                    2,
                    14,
                    11,
                    8,
                    3,
                    10,
                    14,
                    4,
                    9,
                    15,
                    8,
                    1,
                    2,
                    7,
                    0,
                    6,
                    13,
                    11,
                    5,
                    12,
                    1,
                    9,
                    11,
                    10,
                    0,
                    8,
                    12,
                    4,
                    13,
                    3,
                    7,
                    15,
                    14,
                    5,
                    6,
                    2,
                    4,
                    0,
                    5,
                    9,
                    7,
                    12,
                    2,
                    10,
                    14,
                    1,
                    3,
                    8,
                    11,
                    6,
                    15,
                    13,
                ],
                zr = [
                    5,
                    14,
                    7,
                    0,
                    9,
                    2,
                    11,
                    4,
                    13,
                    6,
                    15,
                    8,
                    1,
                    10,
                    3,
                    12,
                    6,
                    11,
                    3,
                    7,
                    0,
                    13,
                    5,
                    10,
                    14,
                    15,
                    8,
                    12,
                    4,
                    9,
                    1,
                    2,
                    15,
                    5,
                    1,
                    3,
                    7,
                    14,
                    6,
                    9,
                    11,
                    8,
                    12,
                    2,
                    10,
                    0,
                    4,
                    13,
                    8,
                    6,
                    4,
                    1,
                    3,
                    11,
                    15,
                    0,
                    5,
                    12,
                    2,
                    13,
                    9,
                    7,
                    10,
                    14,
                    12,
                    15,
                    10,
                    4,
                    1,
                    5,
                    8,
                    7,
                    6,
                    2,
                    13,
                    14,
                    0,
                    3,
                    9,
                    11,
                ],
                sl = [
                    11,
                    14,
                    15,
                    12,
                    5,
                    8,
                    7,
                    9,
                    11,
                    13,
                    14,
                    15,
                    6,
                    7,
                    9,
                    8,
                    7,
                    6,
                    8,
                    13,
                    11,
                    9,
                    7,
                    15,
                    7,
                    12,
                    15,
                    9,
                    11,
                    7,
                    13,
                    12,
                    11,
                    13,
                    6,
                    7,
                    14,
                    9,
                    13,
                    15,
                    14,
                    8,
                    13,
                    6,
                    5,
                    12,
                    7,
                    5,
                    11,
                    12,
                    14,
                    15,
                    14,
                    15,
                    9,
                    8,
                    9,
                    14,
                    5,
                    6,
                    8,
                    6,
                    5,
                    12,
                    9,
                    15,
                    5,
                    11,
                    6,
                    8,
                    13,
                    12,
                    5,
                    12,
                    13,
                    14,
                    11,
                    8,
                    5,
                    6,
                ],
                sr = [
                    8,
                    9,
                    9,
                    11,
                    13,
                    15,
                    15,
                    5,
                    7,
                    7,
                    8,
                    11,
                    14,
                    14,
                    12,
                    6,
                    9,
                    13,
                    15,
                    7,
                    12,
                    8,
                    9,
                    11,
                    7,
                    7,
                    12,
                    7,
                    6,
                    15,
                    13,
                    11,
                    9,
                    7,
                    15,
                    11,
                    8,
                    6,
                    6,
                    14,
                    12,
                    13,
                    5,
                    14,
                    13,
                    13,
                    7,
                    5,
                    15,
                    5,
                    8,
                    11,
                    14,
                    14,
                    6,
                    14,
                    6,
                    9,
                    12,
                    9,
                    12,
                    5,
                    15,
                    8,
                    8,
                    5,
                    12,
                    9,
                    12,
                    5,
                    14,
                    6,
                    8,
                    13,
                    6,
                    5,
                    15,
                    13,
                    11,
                    11,
                ];
            function RIPEMD160() {
                HashBase.call(this, 64), (this._a = 1732584193), (this._b = 4023233417), (this._c = 2562383102), (this._d = 271733878), (this._e = 3285377520);
            }
            function rotl(x, n) {
                return (x << n) | (x >>> (32 - n));
            }
            inherits(RIPEMD160, HashBase),
                (RIPEMD160.prototype._update = function () {
                    for (
                        var a,
                            b,
                            c,
                            d,
                            e,
                            m,
                            s,
                            a1,
                            b1,
                            c1,
                            d1,
                            e1,
                            m1,
                            s1,
                            a2,
                            b2,
                            c2,
                            d2,
                            e2,
                            m2,
                            s2,
                            a3,
                            b3,
                            c3,
                            d3,
                            e3,
                            m3,
                            s3,
                            a4,
                            b4,
                            c4,
                            d4,
                            e4,
                            m4,
                            s4,
                            a5,
                            b5,
                            c5,
                            d5,
                            e5,
                            m5,
                            s5,
                            a6,
                            b6,
                            c6,
                            d6,
                            e6,
                            m6,
                            s6,
                            a7,
                            b7,
                            c7,
                            d7,
                            e7,
                            m7,
                            s7,
                            a8,
                            b8,
                            c8,
                            d8,
                            e8,
                            m8,
                            s8,
                            a9,
                            b9,
                            c9,
                            d9,
                            e9,
                            m9,
                            s9,
                            tl,
                            tr,
                            words = ARRAY16,
                            j = 0;
                        j < 16;
                        ++j
                    )
                        words[j] = this._block.readInt32LE(4 * j);
                    for (var al = 0 | this._a, bl = 0 | this._b, cl = 0 | this._c, dl = 0 | this._d, el = 0 | this._e, ar = 0 | this._a, br = 0 | this._b, cr = 0 | this._c, dr = 0 | this._d, er = 0 | this._e, i = 0; i < 80; i += 1)
                        i < 16
                            ? ((a = al),
                              (b = bl),
                              (c = cl),
                              (d = dl),
                              (e = el),
                              (tl = (rotl((a + (b ^ c ^ d) + words[zl[i]] + 0) | 0, sl[i]) + e) | 0),
                              (a1 = ar),
                              (b1 = br),
                              (c1 = cr),
                              (d1 = dr),
                              (e1 = er),
                              (tr = (rotl((a1 + (b1 ^ (c1 | ~d1)) + words[zr[i]] + 1352829926) | 0, sr[i]) + e1) | 0))
                            : i < 32
                            ? ((a2 = al),
                              (b2 = bl),
                              (c2 = cl),
                              (d2 = dl),
                              (e2 = el),
                              (tl = (rotl((a2 + ((b2 & c2) | (~b2 & d2)) + words[zl[i]] + 1518500249) | 0, sl[i]) + e2) | 0),
                              (a3 = ar),
                              (b3 = br),
                              (c3 = cr),
                              (d3 = dr),
                              (e3 = er),
                              (tr = (rotl((a3 + ((b3 & d3) | (c3 & ~d3)) + words[zr[i]] + 1548603684) | 0, sr[i]) + e3) | 0))
                            : i < 48
                            ? ((a4 = al),
                              (b4 = bl),
                              (c4 = cl),
                              (d4 = dl),
                              (e4 = el),
                              (tl = (rotl((a4 + ((b4 | ~c4) ^ d4) + words[zl[i]] + 1859775393) | 0, sl[i]) + e4) | 0),
                              (a5 = ar),
                              (b5 = br),
                              (c5 = cr),
                              (d5 = dr),
                              (e5 = er),
                              (tr = (rotl((a5 + ((b5 | ~c5) ^ d5) + words[zr[i]] + 1836072691) | 0, sr[i]) + e5) | 0))
                            : i < 64
                            ? ((a6 = al),
                              (b6 = bl),
                              (c6 = cl),
                              (d6 = dl),
                              (e6 = el),
                              (tl = (rotl((a6 + ((b6 & d6) | (c6 & ~d6)) + words[zl[i]] + 2400959708) | 0, sl[i]) + e6) | 0),
                              (a7 = ar),
                              (b7 = br),
                              (c7 = cr),
                              (d7 = dr),
                              (e7 = er),
                              (tr = (rotl((a7 + ((b7 & c7) | (~b7 & d7)) + words[zr[i]] + 2053994217) | 0, sr[i]) + e7) | 0))
                            : ((a8 = al),
                              (b8 = bl),
                              (c8 = cl),
                              (d8 = dl),
                              (e8 = el),
                              (tl = (rotl((a8 + (b8 ^ (c8 | ~d8)) + words[zl[i]] + 2840853838) | 0, sl[i]) + e8) | 0),
                              (a9 = ar),
                              (b9 = br),
                              (c9 = cr),
                              (d9 = dr),
                              (e9 = er),
                              (tr = (rotl((a9 + (b9 ^ c9 ^ d9) + words[zr[i]] + 0) | 0, sr[i]) + e9) | 0)),
                            (al = el),
                            (el = dl),
                            (dl = rotl(cl, 10)),
                            (cl = bl),
                            (bl = tl),
                            (ar = er),
                            (er = dr),
                            (dr = rotl(cr, 10)),
                            (cr = br),
                            (br = tr);
                    var t = (this._b + cl + dr) | 0;
                    (this._b = (this._c + dl + er) | 0), (this._c = (this._d + el + ar) | 0), (this._d = (this._e + al + br) | 0), (this._e = (this._a + bl + cr) | 0), (this._a = t);
                }),
                (RIPEMD160.prototype._digest = function () {
                    (this._block[this._blockOffset++] = 128),
                        this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), (this._blockOffset = 0)),
                        this._block.fill(0, this._blockOffset, 56),
                        this._block.writeUInt32LE(this._length[0], 56),
                        this._block.writeUInt32LE(this._length[1], 60),
                        this._update();
                    var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20);
                    return buffer.writeInt32LE(this._a, 0), buffer.writeInt32LE(this._b, 4), buffer.writeInt32LE(this._c, 8), buffer.writeInt32LE(this._d, 12), buffer.writeInt32LE(this._e, 16), buffer;
                }),
                (module.exports = RIPEMD160);
        },
        51675: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var Buffer = __webpack_require__(48764).Buffer,
                __importDefault =
                    (this && this.__importDefault) ||
                    function (mod) {
                        return mod && mod.__esModule ? mod : { default: mod };
                    };
            Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.getLength = exports.decode = exports.encode = void 0);
            var bn_js_1 = __importDefault(__webpack_require__(33493));
            function safeParseInt(v, base) {
                if ("0" === v[0] && "0" === v[1]) throw Error("invalid RLP: extra zeros");
                return parseInt(v, base);
            }
            function encodeLength(len, offset) {
                if (len < 56) return Buffer.from([len + offset]);
                var hexLength = intToHex(len),
                    firstByte = intToHex(offset + 55 + hexLength.length / 2);
                return Buffer.from(firstByte + hexLength, "hex");
            }
            function isHexPrefixed(str) {
                return "0x" === str.slice(0, 2);
            }
            function intToHex(integer) {
                if (integer < 0) throw Error("Invalid integer as argument, must be unsigned!");
                var hex = integer.toString(16);
                return hex.length % 2 ? "0" + hex : hex;
            }
            function toBuffer(v) {
                if (!Buffer.isBuffer(v)) {
                    var a, hex;
                    if ("string" == typeof v) return isHexPrefixed(v) ? Buffer.from((a = "string" != typeof v ? v : isHexPrefixed(v) ? v.slice(2) : v).length % 2 ? "0" + a : a, "hex") : Buffer.from(v);
                    if ("number" == typeof v || "bigint" == typeof v) return v ? ((hex = intToHex(v)), Buffer.from(hex, "hex")) : Buffer.from([]);
                    if (null == v) return Buffer.from([]);
                    if (v instanceof Uint8Array) return Buffer.from(v);
                    else if (bn_js_1.default.isBN(v)) return Buffer.from(v.toArray());
                    else throw Error("invalid type");
                }
                return v;
            }
            (exports.encode = function encode(input) {
                if (Array.isArray(input)) {
                    for (var output = [], i = 0; i < input.length; i++) output.push(encode(input[i]));
                    var buf = Buffer.concat(output);
                    return Buffer.concat([encodeLength(buf.length, 192), buf]);
                }
                var inputBuf = toBuffer(input);
                return 1 === inputBuf.length && inputBuf[0] < 128 ? inputBuf : Buffer.concat([encodeLength(inputBuf.length, 128), inputBuf]);
            }),
                (exports.decode = function (input, stream) {
                    if ((void 0 === stream && (stream = !1), !input || 0 === input.length)) return Buffer.from([]);
                    var decoded = (function _decode(input) {
                        var length,
                            llength,
                            data,
                            innerRemainder,
                            d,
                            decoded = [],
                            firstByte = input[0];
                        if (firstByte <= 127) return { data: input.slice(0, 1), remainder: input.slice(1) };
                        if (firstByte <= 183) {
                            if (((length = firstByte - 127), (data = 128 === firstByte ? Buffer.from([]) : input.slice(1, length)), 2 === length && data[0] < 128)) throw Error("invalid rlp encoding: byte must be less 0x80");
                            return { data: data, remainder: input.slice(length) };
                        }
                        if (firstByte <= 191) {
                            if (((llength = firstByte - 182), input.length - 1 < llength)) throw Error("invalid RLP: not enough bytes for string length");
                            if ((length = safeParseInt(input.slice(1, llength).toString("hex"), 16)) <= 55) throw Error("invalid RLP: expected string length to be greater than 55");
                            if ((data = input.slice(llength, length + llength)).length < length) throw Error("invalid RLP: not enough bytes for string");
                            return { data: data, remainder: input.slice(length + llength) };
                        }
                        if (firstByte <= 247) {
                            for (length = firstByte - 191, innerRemainder = input.slice(1, length); innerRemainder.length; ) (d = _decode(innerRemainder)), decoded.push(d.data), (innerRemainder = d.remainder);
                            return { data: decoded, remainder: input.slice(length) };
                        }
                        (llength = firstByte - 246), (length = safeParseInt(input.slice(1, llength).toString("hex"), 16));
                        var totalLength = llength + length;
                        if (totalLength > input.length) throw Error("invalid rlp: total length is larger than the data");
                        if (0 === (innerRemainder = input.slice(llength, totalLength)).length) throw Error("invalid rlp, List has a invalid length");
                        for (; innerRemainder.length; ) (d = _decode(innerRemainder)), decoded.push(d.data), (innerRemainder = d.remainder);
                        return { data: decoded, remainder: input.slice(totalLength) };
                    })(toBuffer(input));
                    if (stream) return decoded;
                    if (0 !== decoded.remainder.length) throw Error("invalid remainder");
                    return decoded.data;
                }),
                (exports.getLength = function (input) {
                    if (!input || 0 === input.length) return Buffer.from([]);
                    var inputBuffer = toBuffer(input),
                        firstByte = inputBuffer[0];
                    if (firstByte <= 127) return inputBuffer.length;
                    if (firstByte <= 183) return firstByte - 127;
                    if (firstByte <= 191) return firstByte - 182;
                    if (firstByte <= 247) return firstByte - 191;
                    var llength = firstByte - 246,
                        length_1 = safeParseInt(inputBuffer.slice(1, llength).toString("hex"), 16);
                    return llength + length_1;
                });
        },
        33493: function (module, __unused_webpack_exports, __webpack_require__) {
            !(function (module, exports) {
                "use strict";
                function assert(val, msg) {
                    if (!val) throw Error(msg || "Assertion failed");
                }
                function inherits(ctor, superCtor) {
                    ctor.super_ = superCtor;
                    var TempCtor = function () {};
                    (TempCtor.prototype = superCtor.prototype), (ctor.prototype = new TempCtor()), (ctor.prototype.constructor = ctor);
                }
                function BN(number, base, endian) {
                    if (BN.isBN(number)) return number;
                    (this.negative = 0),
                        (this.words = null),
                        (this.length = 0),
                        (this.red = null),
                        null !== number && (("le" === base || "be" === base) && ((endian = base), (base = 10)), this._init(number || 0, base || 10, endian || "be"));
                }
                "object" == typeof module ? (module.exports = BN) : (exports.BN = BN), (BN.BN = BN), (BN.wordSize = 26);
                try {
                    Buffer = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : __webpack_require__(6567).Buffer;
                } catch (e) {}
                function parseHex4Bits(string, index) {
                    var c = string.charCodeAt(index);
                    return c >= 48 && c <= 57 ? c - 48 : c >= 65 && c <= 70 ? c - 55 : c >= 97 && c <= 102 ? c - 87 : void assert(!1, "Invalid character in " + string);
                }
                function parseHexByte(string, lowerBound, index) {
                    var r = parseHex4Bits(string, index);
                    return index - 1 >= lowerBound && (r |= parseHex4Bits(string, index - 1) << 4), r;
                }
                function parseBase(str, start, end, mul) {
                    for (var r = 0, b = 0, len = Math.min(str.length, end), i = start; i < len; i++) {
                        var c = str.charCodeAt(i) - 48;
                        (r *= mul), (b = c >= 49 ? c - 49 + 10 : c >= 17 ? c - 17 + 10 : c), assert(c >= 0 && b < mul, "Invalid character"), (r += b);
                    }
                    return r;
                }
                function move(dest, src) {
                    (dest.words = src.words), (dest.length = src.length), (dest.negative = src.negative), (dest.red = src.red);
                }
                if (
                    ((BN.isBN = function (num) {
                        return num instanceof BN || (null !== num && "object" == typeof num && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words));
                    }),
                    (BN.max = function (left, right) {
                        return left.cmp(right) > 0 ? left : right;
                    }),
                    (BN.min = function (left, right) {
                        return 0 > left.cmp(right) ? left : right;
                    }),
                    (BN.prototype._init = function (number, base, endian) {
                        if ("number" == typeof number) return this._initNumber(number, base, endian);
                        if ("object" == typeof number) return this._initArray(number, base, endian);
                        "hex" === base && (base = 16), assert(base === (0 | base) && base >= 2 && base <= 36);
                        var start = 0;
                        "-" === (number = number.toString().replace(/\s+/g, ""))[0] && (start++, (this.negative = 1)),
                            start < number.length && (16 === base ? this._parseHex(number, start, endian) : (this._parseBase(number, base, start), "le" === endian && this._initArray(this.toArray(), base, endian)));
                    }),
                    (BN.prototype._initNumber = function (number, base, endian) {
                        number < 0 && ((this.negative = 1), (number = -number)),
                            number < 67108864
                                ? ((this.words = [67108863 & number]), (this.length = 1))
                                : number < 4503599627370496
                                ? ((this.words = [67108863 & number, (number / 67108864) & 67108863]), (this.length = 2))
                                : (assert(number < 9007199254740992), (this.words = [67108863 & number, (number / 67108864) & 67108863, 1]), (this.length = 3)),
                            "le" === endian && this._initArray(this.toArray(), base, endian);
                    }),
                    (BN.prototype._initArray = function (number, base, endian) {
                        if ((assert("number" == typeof number.length), number.length <= 0)) return (this.words = [0]), (this.length = 1), this;
                        (this.length = Math.ceil(number.length / 3)), (this.words = Array(this.length));
                        for (var j, w, i = 0; i < this.length; i++) this.words[i] = 0;
                        var off = 0;
                        if ("be" === endian)
                            for (i = number.length - 1, j = 0; i >= 0; i -= 3)
                                (w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16)), (this.words[j] |= (w << off) & 67108863), (this.words[j + 1] = (w >>> (26 - off)) & 67108863), (off += 24) >= 26 && ((off -= 26), j++);
                        else if ("le" === endian)
                            for (i = 0, j = 0; i < number.length; i += 3)
                                (w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16)), (this.words[j] |= (w << off) & 67108863), (this.words[j + 1] = (w >>> (26 - off)) & 67108863), (off += 24) >= 26 && ((off -= 26), j++);
                        return this._strip();
                    }),
                    (BN.prototype._parseHex = function (number, start, endian) {
                        (this.length = Math.ceil((number.length - start) / 6)), (this.words = Array(this.length));
                        for (var w, i = 0; i < this.length; i++) this.words[i] = 0;
                        var off = 0,
                            j = 0;
                        if ("be" === endian)
                            for (i = number.length - 1; i >= start; i -= 2) (w = parseHexByte(number, start, i) << off), (this.words[j] |= 67108863 & w), off >= 18 ? ((off -= 18), (j += 1), (this.words[j] |= w >>> 26)) : (off += 8);
                        else
                            for (i = (number.length - start) % 2 == 0 ? start + 1 : start; i < number.length; i += 2)
                                (w = parseHexByte(number, start, i) << off), (this.words[j] |= 67108863 & w), off >= 18 ? ((off -= 18), (j += 1), (this.words[j] |= w >>> 26)) : (off += 8);
                        this._strip();
                    }),
                    (BN.prototype._parseBase = function (number, base, start) {
                        (this.words = [0]), (this.length = 1);
                        for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base) limbLen++;
                        limbLen--, (limbPow = (limbPow / base) | 0);
                        for (var total = number.length - start, mod = total % limbLen, end = Math.min(total, total - mod) + start, word = 0, i = start; i < end; i += limbLen)
                            (word = parseBase(number, i, i + limbLen, base)), this.imuln(limbPow), this.words[0] + word < 67108864 ? (this.words[0] += word) : this._iaddn(word);
                        if (0 !== mod) {
                            var pow = 1;
                            for (word = parseBase(number, i, number.length, base), i = 0; i < mod; i++) pow *= base;
                            this.imuln(pow), this.words[0] + word < 67108864 ? (this.words[0] += word) : this._iaddn(word);
                        }
                        this._strip();
                    }),
                    (BN.prototype.copy = function (dest) {
                        dest.words = Array(this.length);
                        for (var i = 0; i < this.length; i++) dest.words[i] = this.words[i];
                        (dest.length = this.length), (dest.negative = this.negative), (dest.red = this.red);
                    }),
                    (BN.prototype._move = function (dest) {
                        move(dest, this);
                    }),
                    (BN.prototype.clone = function () {
                        var r = new BN(null);
                        return this.copy(r), r;
                    }),
                    (BN.prototype._expand = function (size) {
                        for (; this.length < size; ) this.words[this.length++] = 0;
                        return this;
                    }),
                    (BN.prototype._strip = function () {
                        for (; this.length > 1 && 0 === this.words[this.length - 1]; ) this.length--;
                        return this._normSign();
                    }),
                    (BN.prototype._normSign = function () {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
                    }),
                    "undefined" != typeof Symbol && "function" == typeof Symbol.for)
                )
                    try {
                        BN.prototype[Symbol.for("nodejs.util.inspect.custom")] = inspect;
                    } catch (e1) {
                        BN.prototype.inspect = inspect;
                    }
                else BN.prototype.inspect = inspect;
                function inspect() {
                    return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
                }
                var Buffer,
                    zeros = [
                        "",
                        "0",
                        "00",
                        "000",
                        "0000",
                        "00000",
                        "000000",
                        "0000000",
                        "00000000",
                        "000000000",
                        "0000000000",
                        "00000000000",
                        "000000000000",
                        "0000000000000",
                        "00000000000000",
                        "000000000000000",
                        "0000000000000000",
                        "00000000000000000",
                        "000000000000000000",
                        "0000000000000000000",
                        "00000000000000000000",
                        "000000000000000000000",
                        "0000000000000000000000",
                        "00000000000000000000000",
                        "000000000000000000000000",
                        "0000000000000000000000000",
                    ],
                    groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                    groupBases = [
                        0,
                        0,
                        33554432,
                        43046721,
                        16777216,
                        48828125,
                        60466176,
                        40353607,
                        16777216,
                        43046721,
                        1e7,
                        19487171,
                        35831808,
                        62748517,
                        7529536,
                        11390625,
                        16777216,
                        24137569,
                        34012224,
                        47045881,
                        64e6,
                        4084101,
                        5153632,
                        6436343,
                        7962624,
                        9765625,
                        11881376,
                        14348907,
                        17210368,
                        20511149,
                        243e5,
                        28629151,
                        33554432,
                        39135393,
                        45435424,
                        52521875,
                        60466176,
                    ];
                function smallMulTo(self1, num, out) {
                    out.negative = num.negative ^ self1.negative;
                    var len = (self1.length + num.length) | 0;
                    (out.length = len), (len = (len - 1) | 0);
                    var a = 0 | self1.words[0],
                        b = 0 | num.words[0],
                        r = a * b,
                        lo = 67108863 & r,
                        carry = (r / 67108864) | 0;
                    out.words[0] = lo;
                    for (var k = 1; k < len; k++) {
                        for (var ncarry = carry >>> 26, rword = 67108863 & carry, maxJ = Math.min(k, num.length - 1), j = Math.max(0, k - self1.length + 1); j <= maxJ; j++) {
                            var i = (k - j) | 0;
                            (ncarry += ((r = (a = 0 | self1.words[i]) * (b = 0 | num.words[j]) + rword) / 67108864) | 0), (rword = 67108863 & r);
                        }
                        (out.words[k] = 0 | rword), (carry = 0 | ncarry);
                    }
                    return 0 !== carry ? (out.words[k] = 0 | carry) : out.length--, out._strip();
                }
                (BN.prototype.toString = function (base, padding) {
                    if (((padding = 0 | padding || 1), 16 === (base = base || 10) || "hex" === base)) {
                        out = "";
                        for (var out, off = 0, carry = 0, i = 0; i < this.length; i++) {
                            var w = this.words[i],
                                word = (((w << off) | carry) & 16777215).toString(16);
                            (out = 0 != (carry = (w >>> (24 - off)) & 16777215) || i !== this.length - 1 ? zeros[6 - word.length] + word + out : word + out), (off += 2) >= 26 && ((off -= 26), i--);
                        }
                        for (0 !== carry && (out = carry.toString(16) + out); out.length % padding != 0; ) out = "0" + out;
                        return 0 !== this.negative && (out = "-" + out), out;
                    }
                    if (base === (0 | base) && base >= 2 && base <= 36) {
                        var groupSize = groupSizes[base],
                            groupBase = groupBases[base];
                        out = "";
                        var c = this.clone();
                        for (c.negative = 0; !c.isZero(); ) {
                            var r = c.modrn(groupBase).toString(base);
                            out = (c = c.idivn(groupBase)).isZero() ? r + out : zeros[groupSize - r.length] + r + out;
                        }
                        for (this.isZero() && (out = "0" + out); out.length % padding != 0; ) out = "0" + out;
                        return 0 !== this.negative && (out = "-" + out), out;
                    }
                    assert(!1, "Base should be between 2 and 36");
                }),
                    (BN.prototype.toNumber = function () {
                        var ret = this.words[0];
                        return (
                            2 === this.length
                                ? (ret += 67108864 * this.words[1])
                                : 3 === this.length && 1 === this.words[2]
                                ? (ret += 4503599627370496 + 67108864 * this.words[1])
                                : this.length > 2 && assert(!1, "Number can only safely store up to 53 bits"),
                            0 !== this.negative ? -ret : ret
                        );
                    }),
                    (BN.prototype.toJSON = function () {
                        return this.toString(16, 2);
                    }),
                    Buffer &&
                        (BN.prototype.toBuffer = function (endian, length) {
                            return this.toArrayLike(Buffer, endian, length);
                        }),
                    (BN.prototype.toArray = function (endian, length) {
                        return this.toArrayLike(Array, endian, length);
                    }),
                    (BN.prototype.toArrayLike = function (ArrayType, endian, length) {
                        this._strip();
                        var byteLength = this.byteLength(),
                            reqLength = length || Math.max(1, byteLength);
                        assert(byteLength <= reqLength, "byte array longer than desired length"), assert(reqLength > 0, "Requested array length <= 0");
                        var res = ArrayType.allocUnsafe ? ArrayType.allocUnsafe(reqLength) : new ArrayType(reqLength);
                        return this["_toArrayLike" + ("le" === endian ? "LE" : "BE")](res, byteLength), res;
                    }),
                    (BN.prototype._toArrayLikeLE = function (res, byteLength) {
                        for (var position = 0, carry = 0, i = 0, shift = 0; i < this.length; i++) {
                            var word = (this.words[i] << shift) | carry;
                            (res[position++] = 255 & word),
                                position < res.length && (res[position++] = (word >> 8) & 255),
                                position < res.length && (res[position++] = (word >> 16) & 255),
                                6 === shift ? (position < res.length && (res[position++] = (word >> 24) & 255), (carry = 0), (shift = 0)) : ((carry = word >>> 24), (shift += 2));
                        }
                        if (position < res.length) for (res[position++] = carry; position < res.length; ) res[position++] = 0;
                    }),
                    (BN.prototype._toArrayLikeBE = function (res, byteLength) {
                        for (var position = res.length - 1, carry = 0, i = 0, shift = 0; i < this.length; i++) {
                            var word = (this.words[i] << shift) | carry;
                            (res[position--] = 255 & word),
                                position >= 0 && (res[position--] = (word >> 8) & 255),
                                position >= 0 && (res[position--] = (word >> 16) & 255),
                                6 === shift ? (position >= 0 && (res[position--] = (word >> 24) & 255), (carry = 0), (shift = 0)) : ((carry = word >>> 24), (shift += 2));
                        }
                        if (position >= 0) for (res[position--] = carry; position >= 0; ) res[position--] = 0;
                    }),
                    Math.clz32
                        ? (BN.prototype._countBits = function (w) {
                              return 32 - Math.clz32(w);
                          })
                        : (BN.prototype._countBits = function (w) {
                              var t = w,
                                  r = 0;
                              return t >= 4096 && ((r += 13), (t >>>= 13)), t >= 64 && ((r += 7), (t >>>= 7)), t >= 8 && ((r += 4), (t >>>= 4)), t >= 2 && ((r += 2), (t >>>= 2)), r + t;
                          }),
                    (BN.prototype._zeroBits = function (w) {
                        if (0 === w) return 26;
                        var t = w,
                            r = 0;
                        return (8191 & t) == 0 && ((r += 13), (t >>>= 13)), (127 & t) == 0 && ((r += 7), (t >>>= 7)), (15 & t) == 0 && ((r += 4), (t >>>= 4)), (3 & t) == 0 && ((r += 2), (t >>>= 2)), (1 & t) == 0 && r++, r;
                    }),
                    (BN.prototype.bitLength = function () {
                        var w = this.words[this.length - 1],
                            hi = this._countBits(w);
                        return (this.length - 1) * 26 + hi;
                    }),
                    (BN.prototype.zeroBits = function () {
                        if (this.isZero()) return 0;
                        for (var r = 0, i = 0; i < this.length; i++) {
                            var b = this._zeroBits(this.words[i]);
                            if (((r += b), 26 !== b)) break;
                        }
                        return r;
                    }),
                    (BN.prototype.byteLength = function () {
                        return Math.ceil(this.bitLength() / 8);
                    }),
                    (BN.prototype.toTwos = function (width) {
                        return 0 !== this.negative ? this.abs().inotn(width).iaddn(1) : this.clone();
                    }),
                    (BN.prototype.fromTwos = function (width) {
                        return this.testn(width - 1) ? this.notn(width).iaddn(1).ineg() : this.clone();
                    }),
                    (BN.prototype.isNeg = function () {
                        return 0 !== this.negative;
                    }),
                    (BN.prototype.neg = function () {
                        return this.clone().ineg();
                    }),
                    (BN.prototype.ineg = function () {
                        return this.isZero() || (this.negative ^= 1), this;
                    }),
                    (BN.prototype.iuor = function (num) {
                        for (; this.length < num.length; ) this.words[this.length++] = 0;
                        for (var i = 0; i < num.length; i++) this.words[i] = this.words[i] | num.words[i];
                        return this._strip();
                    }),
                    (BN.prototype.ior = function (num) {
                        return assert((this.negative | num.negative) == 0), this.iuor(num);
                    }),
                    (BN.prototype.or = function (num) {
                        return this.length > num.length ? this.clone().ior(num) : num.clone().ior(this);
                    }),
                    (BN.prototype.uor = function (num) {
                        return this.length > num.length ? this.clone().iuor(num) : num.clone().iuor(this);
                    }),
                    (BN.prototype.iuand = function (num) {
                        var b;
                        b = this.length > num.length ? num : this;
                        for (var i = 0; i < b.length; i++) this.words[i] = this.words[i] & num.words[i];
                        return (this.length = b.length), this._strip();
                    }),
                    (BN.prototype.iand = function (num) {
                        return assert((this.negative | num.negative) == 0), this.iuand(num);
                    }),
                    (BN.prototype.and = function (num) {
                        return this.length > num.length ? this.clone().iand(num) : num.clone().iand(this);
                    }),
                    (BN.prototype.uand = function (num) {
                        return this.length > num.length ? this.clone().iuand(num) : num.clone().iuand(this);
                    }),
                    (BN.prototype.iuxor = function (num) {
                        this.length > num.length ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var a, b, i = 0; i < b.length; i++) this.words[i] = a.words[i] ^ b.words[i];
                        if (this !== a) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return (this.length = a.length), this._strip();
                    }),
                    (BN.prototype.ixor = function (num) {
                        return assert((this.negative | num.negative) == 0), this.iuxor(num);
                    }),
                    (BN.prototype.xor = function (num) {
                        return this.length > num.length ? this.clone().ixor(num) : num.clone().ixor(this);
                    }),
                    (BN.prototype.uxor = function (num) {
                        return this.length > num.length ? this.clone().iuxor(num) : num.clone().iuxor(this);
                    }),
                    (BN.prototype.inotn = function (width) {
                        assert("number" == typeof width && width >= 0);
                        var bytesNeeded = 0 | Math.ceil(width / 26),
                            bitsLeft = width % 26;
                        this._expand(bytesNeeded), bitsLeft > 0 && bytesNeeded--;
                        for (var i = 0; i < bytesNeeded; i++) this.words[i] = 67108863 & ~this.words[i];
                        return bitsLeft > 0 && (this.words[i] = ~this.words[i] & (67108863 >> (26 - bitsLeft))), this._strip();
                    }),
                    (BN.prototype.notn = function (width) {
                        return this.clone().inotn(width);
                    }),
                    (BN.prototype.setn = function (bit, val) {
                        assert("number" == typeof bit && bit >= 0);
                        var off = (bit / 26) | 0,
                            wbit = bit % 26;
                        return this._expand(off + 1), val ? (this.words[off] = this.words[off] | (1 << wbit)) : (this.words[off] = this.words[off] & ~(1 << wbit)), this._strip();
                    }),
                    (BN.prototype.iadd = function (num) {
                        if (0 !== this.negative && 0 === num.negative) return (this.negative = 0), (r = this.isub(num)), (this.negative ^= 1), this._normSign();
                        if (0 === this.negative && 0 !== num.negative) return (num.negative = 0), (r = this.isub(num)), (num.negative = 1), r._normSign();
                        this.length > num.length ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var r, a, b, carry = 0, i = 0; i < b.length; i++) (r = (0 | a.words[i]) + (0 | b.words[i]) + carry), (this.words[i] = 67108863 & r), (carry = r >>> 26);
                        for (; 0 !== carry && i < a.length; i++) (r = (0 | a.words[i]) + carry), (this.words[i] = 67108863 & r), (carry = r >>> 26);
                        if (((this.length = a.length), 0 !== carry)) (this.words[this.length] = carry), this.length++;
                        else if (a !== this) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return this;
                    }),
                    (BN.prototype.add = function (num) {
                        var res;
                        return 0 !== num.negative && 0 === this.negative
                            ? ((num.negative = 0), (res = this.sub(num)), (num.negative ^= 1), res)
                            : 0 === num.negative && 0 !== this.negative
                            ? ((this.negative = 0), (res = num.sub(this)), (this.negative = 1), res)
                            : this.length > num.length
                            ? this.clone().iadd(num)
                            : num.clone().iadd(this);
                    }),
                    (BN.prototype.isub = function (num) {
                        if (0 !== num.negative) {
                            num.negative = 0;
                            var a,
                                b,
                                r = this.iadd(num);
                            return (num.negative = 1), r._normSign();
                        }
                        if (0 !== this.negative) return (this.negative = 0), this.iadd(num), (this.negative = 1), this._normSign();
                        var cmp = this.cmp(num);
                        if (0 === cmp) return (this.negative = 0), (this.length = 1), (this.words[0] = 0), this;
                        cmp > 0 ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var carry = 0, i = 0; i < b.length; i++) (carry = (r = (0 | a.words[i]) - (0 | b.words[i]) + carry) >> 26), (this.words[i] = 67108863 & r);
                        for (; 0 !== carry && i < a.length; i++) (carry = (r = (0 | a.words[i]) + carry) >> 26), (this.words[i] = 67108863 & r);
                        if (0 === carry && i < a.length && a !== this) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return (this.length = Math.max(this.length, i)), a !== this && (this.negative = 1), this._strip();
                    }),
                    (BN.prototype.sub = function (num) {
                        return this.clone().isub(num);
                    });
                var comb10MulTo = function (self1, num, out) {
                    var lo,
                        mid,
                        hi,
                        a = self1.words,
                        b = num.words,
                        o = out.words,
                        c = 0,
                        a0 = 0 | a[0],
                        al0 = 8191 & a0,
                        ah0 = a0 >>> 13,
                        a1 = 0 | a[1],
                        al1 = 8191 & a1,
                        ah1 = a1 >>> 13,
                        a2 = 0 | a[2],
                        al2 = 8191 & a2,
                        ah2 = a2 >>> 13,
                        a3 = 0 | a[3],
                        al3 = 8191 & a3,
                        ah3 = a3 >>> 13,
                        a4 = 0 | a[4],
                        al4 = 8191 & a4,
                        ah4 = a4 >>> 13,
                        a5 = 0 | a[5],
                        al5 = 8191 & a5,
                        ah5 = a5 >>> 13,
                        a6 = 0 | a[6],
                        al6 = 8191 & a6,
                        ah6 = a6 >>> 13,
                        a7 = 0 | a[7],
                        al7 = 8191 & a7,
                        ah7 = a7 >>> 13,
                        a8 = 0 | a[8],
                        al8 = 8191 & a8,
                        ah8 = a8 >>> 13,
                        a9 = 0 | a[9],
                        al9 = 8191 & a9,
                        ah9 = a9 >>> 13,
                        b0 = 0 | b[0],
                        bl0 = 8191 & b0,
                        bh0 = b0 >>> 13,
                        b1 = 0 | b[1],
                        bl1 = 8191 & b1,
                        bh1 = b1 >>> 13,
                        b2 = 0 | b[2],
                        bl2 = 8191 & b2,
                        bh2 = b2 >>> 13,
                        b3 = 0 | b[3],
                        bl3 = 8191 & b3,
                        bh3 = b3 >>> 13,
                        b4 = 0 | b[4],
                        bl4 = 8191 & b4,
                        bh4 = b4 >>> 13,
                        b5 = 0 | b[5],
                        bl5 = 8191 & b5,
                        bh5 = b5 >>> 13,
                        b6 = 0 | b[6],
                        bl6 = 8191 & b6,
                        bh6 = b6 >>> 13,
                        b7 = 0 | b[7],
                        bl7 = 8191 & b7,
                        bh7 = b7 >>> 13,
                        b8 = 0 | b[8],
                        bl8 = 8191 & b8,
                        bh8 = b8 >>> 13,
                        b9 = 0 | b[9],
                        bl9 = 8191 & b9,
                        bh9 = b9 >>> 13;
                    (out.negative = self1.negative ^ num.negative), (out.length = 19);
                    var w0 = (((c + (lo = Math.imul(al0, bl0))) | 0) + ((8191 & (mid = ((mid = Math.imul(al0, bh0)) + Math.imul(ah0, bl0)) | 0)) << 13)) | 0;
                    (c = ((((hi = Math.imul(ah0, bh0)) + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0), (w0 &= 67108863), (lo = Math.imul(al1, bl0)), (mid = ((mid = Math.imul(al1, bh0)) + Math.imul(ah1, bl0)) | 0), (hi = Math.imul(ah1, bh0));
                    var w1 = (((c + (lo = (lo + Math.imul(al0, bl1)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh1)) | 0) + Math.imul(ah0, bl1)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh1)) | 0) + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0),
                        (w1 &= 67108863),
                        (lo = Math.imul(al2, bl0)),
                        (mid = ((mid = Math.imul(al2, bh0)) + Math.imul(ah2, bl0)) | 0),
                        (hi = Math.imul(ah2, bh0)),
                        (lo = (lo + Math.imul(al1, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh1)) | 0) + Math.imul(ah1, bl1)) | 0),
                        (hi = (hi + Math.imul(ah1, bh1)) | 0);
                    var w2 = (((c + (lo = (lo + Math.imul(al0, bl2)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh2)) | 0) + Math.imul(ah0, bl2)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh2)) | 0) + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0),
                        (w2 &= 67108863),
                        (lo = Math.imul(al3, bl0)),
                        (mid = ((mid = Math.imul(al3, bh0)) + Math.imul(ah3, bl0)) | 0),
                        (hi = Math.imul(ah3, bh0)),
                        (lo = (lo + Math.imul(al2, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh1)) | 0) + Math.imul(ah2, bl1)) | 0),
                        (hi = (hi + Math.imul(ah2, bh1)) | 0),
                        (lo = (lo + Math.imul(al1, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh2)) | 0) + Math.imul(ah1, bl2)) | 0),
                        (hi = (hi + Math.imul(ah1, bh2)) | 0);
                    var w3 = (((c + (lo = (lo + Math.imul(al0, bl3)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh3)) | 0) + Math.imul(ah0, bl3)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh3)) | 0) + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0),
                        (w3 &= 67108863),
                        (lo = Math.imul(al4, bl0)),
                        (mid = ((mid = Math.imul(al4, bh0)) + Math.imul(ah4, bl0)) | 0),
                        (hi = Math.imul(ah4, bh0)),
                        (lo = (lo + Math.imul(al3, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh1)) | 0) + Math.imul(ah3, bl1)) | 0),
                        (hi = (hi + Math.imul(ah3, bh1)) | 0),
                        (lo = (lo + Math.imul(al2, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh2)) | 0) + Math.imul(ah2, bl2)) | 0),
                        (hi = (hi + Math.imul(ah2, bh2)) | 0),
                        (lo = (lo + Math.imul(al1, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh3)) | 0) + Math.imul(ah1, bl3)) | 0),
                        (hi = (hi + Math.imul(ah1, bh3)) | 0);
                    var w4 = (((c + (lo = (lo + Math.imul(al0, bl4)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh4)) | 0) + Math.imul(ah0, bl4)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh4)) | 0) + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0),
                        (w4 &= 67108863),
                        (lo = Math.imul(al5, bl0)),
                        (mid = ((mid = Math.imul(al5, bh0)) + Math.imul(ah5, bl0)) | 0),
                        (hi = Math.imul(ah5, bh0)),
                        (lo = (lo + Math.imul(al4, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh1)) | 0) + Math.imul(ah4, bl1)) | 0),
                        (hi = (hi + Math.imul(ah4, bh1)) | 0),
                        (lo = (lo + Math.imul(al3, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh2)) | 0) + Math.imul(ah3, bl2)) | 0),
                        (hi = (hi + Math.imul(ah3, bh2)) | 0),
                        (lo = (lo + Math.imul(al2, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh3)) | 0) + Math.imul(ah2, bl3)) | 0),
                        (hi = (hi + Math.imul(ah2, bh3)) | 0),
                        (lo = (lo + Math.imul(al1, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh4)) | 0) + Math.imul(ah1, bl4)) | 0),
                        (hi = (hi + Math.imul(ah1, bh4)) | 0);
                    var w5 = (((c + (lo = (lo + Math.imul(al0, bl5)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh5)) | 0) + Math.imul(ah0, bl5)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh5)) | 0) + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0),
                        (w5 &= 67108863),
                        (lo = Math.imul(al6, bl0)),
                        (mid = ((mid = Math.imul(al6, bh0)) + Math.imul(ah6, bl0)) | 0),
                        (hi = Math.imul(ah6, bh0)),
                        (lo = (lo + Math.imul(al5, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh1)) | 0) + Math.imul(ah5, bl1)) | 0),
                        (hi = (hi + Math.imul(ah5, bh1)) | 0),
                        (lo = (lo + Math.imul(al4, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh2)) | 0) + Math.imul(ah4, bl2)) | 0),
                        (hi = (hi + Math.imul(ah4, bh2)) | 0),
                        (lo = (lo + Math.imul(al3, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh3)) | 0) + Math.imul(ah3, bl3)) | 0),
                        (hi = (hi + Math.imul(ah3, bh3)) | 0),
                        (lo = (lo + Math.imul(al2, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh4)) | 0) + Math.imul(ah2, bl4)) | 0),
                        (hi = (hi + Math.imul(ah2, bh4)) | 0),
                        (lo = (lo + Math.imul(al1, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh5)) | 0) + Math.imul(ah1, bl5)) | 0),
                        (hi = (hi + Math.imul(ah1, bh5)) | 0);
                    var w6 = (((c + (lo = (lo + Math.imul(al0, bl6)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh6)) | 0) + Math.imul(ah0, bl6)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh6)) | 0) + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0),
                        (w6 &= 67108863),
                        (lo = Math.imul(al7, bl0)),
                        (mid = ((mid = Math.imul(al7, bh0)) + Math.imul(ah7, bl0)) | 0),
                        (hi = Math.imul(ah7, bh0)),
                        (lo = (lo + Math.imul(al6, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh1)) | 0) + Math.imul(ah6, bl1)) | 0),
                        (hi = (hi + Math.imul(ah6, bh1)) | 0),
                        (lo = (lo + Math.imul(al5, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh2)) | 0) + Math.imul(ah5, bl2)) | 0),
                        (hi = (hi + Math.imul(ah5, bh2)) | 0),
                        (lo = (lo + Math.imul(al4, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh3)) | 0) + Math.imul(ah4, bl3)) | 0),
                        (hi = (hi + Math.imul(ah4, bh3)) | 0),
                        (lo = (lo + Math.imul(al3, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh4)) | 0) + Math.imul(ah3, bl4)) | 0),
                        (hi = (hi + Math.imul(ah3, bh4)) | 0),
                        (lo = (lo + Math.imul(al2, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh5)) | 0) + Math.imul(ah2, bl5)) | 0),
                        (hi = (hi + Math.imul(ah2, bh5)) | 0),
                        (lo = (lo + Math.imul(al1, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh6)) | 0) + Math.imul(ah1, bl6)) | 0),
                        (hi = (hi + Math.imul(ah1, bh6)) | 0);
                    var w7 = (((c + (lo = (lo + Math.imul(al0, bl7)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh7)) | 0) + Math.imul(ah0, bl7)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh7)) | 0) + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0),
                        (w7 &= 67108863),
                        (lo = Math.imul(al8, bl0)),
                        (mid = ((mid = Math.imul(al8, bh0)) + Math.imul(ah8, bl0)) | 0),
                        (hi = Math.imul(ah8, bh0)),
                        (lo = (lo + Math.imul(al7, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh1)) | 0) + Math.imul(ah7, bl1)) | 0),
                        (hi = (hi + Math.imul(ah7, bh1)) | 0),
                        (lo = (lo + Math.imul(al6, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh2)) | 0) + Math.imul(ah6, bl2)) | 0),
                        (hi = (hi + Math.imul(ah6, bh2)) | 0),
                        (lo = (lo + Math.imul(al5, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh3)) | 0) + Math.imul(ah5, bl3)) | 0),
                        (hi = (hi + Math.imul(ah5, bh3)) | 0),
                        (lo = (lo + Math.imul(al4, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh4)) | 0) + Math.imul(ah4, bl4)) | 0),
                        (hi = (hi + Math.imul(ah4, bh4)) | 0),
                        (lo = (lo + Math.imul(al3, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh5)) | 0) + Math.imul(ah3, bl5)) | 0),
                        (hi = (hi + Math.imul(ah3, bh5)) | 0),
                        (lo = (lo + Math.imul(al2, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh6)) | 0) + Math.imul(ah2, bl6)) | 0),
                        (hi = (hi + Math.imul(ah2, bh6)) | 0),
                        (lo = (lo + Math.imul(al1, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh7)) | 0) + Math.imul(ah1, bl7)) | 0),
                        (hi = (hi + Math.imul(ah1, bh7)) | 0);
                    var w8 = (((c + (lo = (lo + Math.imul(al0, bl8)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh8)) | 0) + Math.imul(ah0, bl8)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh8)) | 0) + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0),
                        (w8 &= 67108863),
                        (lo = Math.imul(al9, bl0)),
                        (mid = ((mid = Math.imul(al9, bh0)) + Math.imul(ah9, bl0)) | 0),
                        (hi = Math.imul(ah9, bh0)),
                        (lo = (lo + Math.imul(al8, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh1)) | 0) + Math.imul(ah8, bl1)) | 0),
                        (hi = (hi + Math.imul(ah8, bh1)) | 0),
                        (lo = (lo + Math.imul(al7, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh2)) | 0) + Math.imul(ah7, bl2)) | 0),
                        (hi = (hi + Math.imul(ah7, bh2)) | 0),
                        (lo = (lo + Math.imul(al6, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh3)) | 0) + Math.imul(ah6, bl3)) | 0),
                        (hi = (hi + Math.imul(ah6, bh3)) | 0),
                        (lo = (lo + Math.imul(al5, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh4)) | 0) + Math.imul(ah5, bl4)) | 0),
                        (hi = (hi + Math.imul(ah5, bh4)) | 0),
                        (lo = (lo + Math.imul(al4, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh5)) | 0) + Math.imul(ah4, bl5)) | 0),
                        (hi = (hi + Math.imul(ah4, bh5)) | 0),
                        (lo = (lo + Math.imul(al3, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh6)) | 0) + Math.imul(ah3, bl6)) | 0),
                        (hi = (hi + Math.imul(ah3, bh6)) | 0),
                        (lo = (lo + Math.imul(al2, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh7)) | 0) + Math.imul(ah2, bl7)) | 0),
                        (hi = (hi + Math.imul(ah2, bh7)) | 0),
                        (lo = (lo + Math.imul(al1, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh8)) | 0) + Math.imul(ah1, bl8)) | 0),
                        (hi = (hi + Math.imul(ah1, bh8)) | 0);
                    var w9 = (((c + (lo = (lo + Math.imul(al0, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh9)) | 0) + Math.imul(ah0, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh9)) | 0) + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0),
                        (w9 &= 67108863),
                        (lo = Math.imul(al9, bl1)),
                        (mid = ((mid = Math.imul(al9, bh1)) + Math.imul(ah9, bl1)) | 0),
                        (hi = Math.imul(ah9, bh1)),
                        (lo = (lo + Math.imul(al8, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh2)) | 0) + Math.imul(ah8, bl2)) | 0),
                        (hi = (hi + Math.imul(ah8, bh2)) | 0),
                        (lo = (lo + Math.imul(al7, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh3)) | 0) + Math.imul(ah7, bl3)) | 0),
                        (hi = (hi + Math.imul(ah7, bh3)) | 0),
                        (lo = (lo + Math.imul(al6, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh4)) | 0) + Math.imul(ah6, bl4)) | 0),
                        (hi = (hi + Math.imul(ah6, bh4)) | 0),
                        (lo = (lo + Math.imul(al5, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh5)) | 0) + Math.imul(ah5, bl5)) | 0),
                        (hi = (hi + Math.imul(ah5, bh5)) | 0),
                        (lo = (lo + Math.imul(al4, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh6)) | 0) + Math.imul(ah4, bl6)) | 0),
                        (hi = (hi + Math.imul(ah4, bh6)) | 0),
                        (lo = (lo + Math.imul(al3, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh7)) | 0) + Math.imul(ah3, bl7)) | 0),
                        (hi = (hi + Math.imul(ah3, bh7)) | 0),
                        (lo = (lo + Math.imul(al2, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh8)) | 0) + Math.imul(ah2, bl8)) | 0),
                        (hi = (hi + Math.imul(ah2, bh8)) | 0);
                    var w10 = (((c + (lo = (lo + Math.imul(al1, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al1, bh9)) | 0) + Math.imul(ah1, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah1, bh9)) | 0) + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0),
                        (w10 &= 67108863),
                        (lo = Math.imul(al9, bl2)),
                        (mid = ((mid = Math.imul(al9, bh2)) + Math.imul(ah9, bl2)) | 0),
                        (hi = Math.imul(ah9, bh2)),
                        (lo = (lo + Math.imul(al8, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh3)) | 0) + Math.imul(ah8, bl3)) | 0),
                        (hi = (hi + Math.imul(ah8, bh3)) | 0),
                        (lo = (lo + Math.imul(al7, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh4)) | 0) + Math.imul(ah7, bl4)) | 0),
                        (hi = (hi + Math.imul(ah7, bh4)) | 0),
                        (lo = (lo + Math.imul(al6, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh5)) | 0) + Math.imul(ah6, bl5)) | 0),
                        (hi = (hi + Math.imul(ah6, bh5)) | 0),
                        (lo = (lo + Math.imul(al5, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh6)) | 0) + Math.imul(ah5, bl6)) | 0),
                        (hi = (hi + Math.imul(ah5, bh6)) | 0),
                        (lo = (lo + Math.imul(al4, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh7)) | 0) + Math.imul(ah4, bl7)) | 0),
                        (hi = (hi + Math.imul(ah4, bh7)) | 0),
                        (lo = (lo + Math.imul(al3, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh8)) | 0) + Math.imul(ah3, bl8)) | 0),
                        (hi = (hi + Math.imul(ah3, bh8)) | 0);
                    var w11 = (((c + (lo = (lo + Math.imul(al2, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al2, bh9)) | 0) + Math.imul(ah2, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah2, bh9)) | 0) + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0),
                        (w11 &= 67108863),
                        (lo = Math.imul(al9, bl3)),
                        (mid = ((mid = Math.imul(al9, bh3)) + Math.imul(ah9, bl3)) | 0),
                        (hi = Math.imul(ah9, bh3)),
                        (lo = (lo + Math.imul(al8, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh4)) | 0) + Math.imul(ah8, bl4)) | 0),
                        (hi = (hi + Math.imul(ah8, bh4)) | 0),
                        (lo = (lo + Math.imul(al7, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh5)) | 0) + Math.imul(ah7, bl5)) | 0),
                        (hi = (hi + Math.imul(ah7, bh5)) | 0),
                        (lo = (lo + Math.imul(al6, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh6)) | 0) + Math.imul(ah6, bl6)) | 0),
                        (hi = (hi + Math.imul(ah6, bh6)) | 0),
                        (lo = (lo + Math.imul(al5, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh7)) | 0) + Math.imul(ah5, bl7)) | 0),
                        (hi = (hi + Math.imul(ah5, bh7)) | 0),
                        (lo = (lo + Math.imul(al4, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh8)) | 0) + Math.imul(ah4, bl8)) | 0),
                        (hi = (hi + Math.imul(ah4, bh8)) | 0);
                    var w12 = (((c + (lo = (lo + Math.imul(al3, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al3, bh9)) | 0) + Math.imul(ah3, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah3, bh9)) | 0) + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0),
                        (w12 &= 67108863),
                        (lo = Math.imul(al9, bl4)),
                        (mid = ((mid = Math.imul(al9, bh4)) + Math.imul(ah9, bl4)) | 0),
                        (hi = Math.imul(ah9, bh4)),
                        (lo = (lo + Math.imul(al8, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh5)) | 0) + Math.imul(ah8, bl5)) | 0),
                        (hi = (hi + Math.imul(ah8, bh5)) | 0),
                        (lo = (lo + Math.imul(al7, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh6)) | 0) + Math.imul(ah7, bl6)) | 0),
                        (hi = (hi + Math.imul(ah7, bh6)) | 0),
                        (lo = (lo + Math.imul(al6, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh7)) | 0) + Math.imul(ah6, bl7)) | 0),
                        (hi = (hi + Math.imul(ah6, bh7)) | 0),
                        (lo = (lo + Math.imul(al5, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh8)) | 0) + Math.imul(ah5, bl8)) | 0),
                        (hi = (hi + Math.imul(ah5, bh8)) | 0);
                    var w13 = (((c + (lo = (lo + Math.imul(al4, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al4, bh9)) | 0) + Math.imul(ah4, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah4, bh9)) | 0) + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0),
                        (w13 &= 67108863),
                        (lo = Math.imul(al9, bl5)),
                        (mid = ((mid = Math.imul(al9, bh5)) + Math.imul(ah9, bl5)) | 0),
                        (hi = Math.imul(ah9, bh5)),
                        (lo = (lo + Math.imul(al8, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh6)) | 0) + Math.imul(ah8, bl6)) | 0),
                        (hi = (hi + Math.imul(ah8, bh6)) | 0),
                        (lo = (lo + Math.imul(al7, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh7)) | 0) + Math.imul(ah7, bl7)) | 0),
                        (hi = (hi + Math.imul(ah7, bh7)) | 0),
                        (lo = (lo + Math.imul(al6, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh8)) | 0) + Math.imul(ah6, bl8)) | 0),
                        (hi = (hi + Math.imul(ah6, bh8)) | 0);
                    var w14 = (((c + (lo = (lo + Math.imul(al5, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al5, bh9)) | 0) + Math.imul(ah5, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah5, bh9)) | 0) + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0),
                        (w14 &= 67108863),
                        (lo = Math.imul(al9, bl6)),
                        (mid = ((mid = Math.imul(al9, bh6)) + Math.imul(ah9, bl6)) | 0),
                        (hi = Math.imul(ah9, bh6)),
                        (lo = (lo + Math.imul(al8, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh7)) | 0) + Math.imul(ah8, bl7)) | 0),
                        (hi = (hi + Math.imul(ah8, bh7)) | 0),
                        (lo = (lo + Math.imul(al7, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh8)) | 0) + Math.imul(ah7, bl8)) | 0),
                        (hi = (hi + Math.imul(ah7, bh8)) | 0);
                    var w15 = (((c + (lo = (lo + Math.imul(al6, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al6, bh9)) | 0) + Math.imul(ah6, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah6, bh9)) | 0) + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0),
                        (w15 &= 67108863),
                        (lo = Math.imul(al9, bl7)),
                        (mid = ((mid = Math.imul(al9, bh7)) + Math.imul(ah9, bl7)) | 0),
                        (hi = Math.imul(ah9, bh7)),
                        (lo = (lo + Math.imul(al8, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh8)) | 0) + Math.imul(ah8, bl8)) | 0),
                        (hi = (hi + Math.imul(ah8, bh8)) | 0);
                    var w16 = (((c + (lo = (lo + Math.imul(al7, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al7, bh9)) | 0) + Math.imul(ah7, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah7, bh9)) | 0) + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0),
                        (w16 &= 67108863),
                        (lo = Math.imul(al9, bl8)),
                        (mid = ((mid = Math.imul(al9, bh8)) + Math.imul(ah9, bl8)) | 0),
                        (hi = Math.imul(ah9, bh8));
                    var w17 = (((c + (lo = (lo + Math.imul(al8, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al8, bh9)) | 0) + Math.imul(ah8, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah8, bh9)) | 0) + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0), (w17 &= 67108863);
                    var w18 = (((c + (lo = Math.imul(al9, bl9))) | 0) + ((8191 & (mid = ((mid = Math.imul(al9, bh9)) + Math.imul(ah9, bl9)) | 0)) << 13)) | 0;
                    return (
                        (c = ((((hi = Math.imul(ah9, bh9)) + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0),
                        (w18 &= 67108863),
                        (o[0] = w0),
                        (o[1] = w1),
                        (o[2] = w2),
                        (o[3] = w3),
                        (o[4] = w4),
                        (o[5] = w5),
                        (o[6] = w6),
                        (o[7] = w7),
                        (o[8] = w8),
                        (o[9] = w9),
                        (o[10] = w10),
                        (o[11] = w11),
                        (o[12] = w12),
                        (o[13] = w13),
                        (o[14] = w14),
                        (o[15] = w15),
                        (o[16] = w16),
                        (o[17] = w17),
                        (o[18] = w18),
                        0 !== c && ((o[19] = c), out.length++),
                        out
                    );
                };
                function bigMulTo(self1, num, out) {
                    (out.negative = num.negative ^ self1.negative), (out.length = self1.length + num.length);
                    for (var carry = 0, hncarry = 0, k = 0; k < out.length - 1; k++) {
                        var ncarry = hncarry;
                        hncarry = 0;
                        for (var rword = 67108863 & carry, maxJ = Math.min(k, num.length - 1), j = Math.max(0, k - self1.length + 1); j <= maxJ; j++) {
                            var i = k - j,
                                r = (0 | self1.words[i]) * (0 | num.words[j]),
                                lo = 67108863 & r;
                            (ncarry = (ncarry + ((r / 67108864) | 0)) | 0), (rword = 67108863 & (lo = (lo + rword) | 0)), (hncarry += (ncarry = (ncarry + (lo >>> 26)) | 0) >>> 26), (ncarry &= 67108863);
                        }
                        (out.words[k] = rword), (carry = ncarry), (ncarry = hncarry);
                    }
                    return 0 !== carry ? (out.words[k] = carry) : out.length--, out._strip();
                }
                function FFTM(x, y) {
                    (this.x = x), (this.y = y);
                }
                Math.imul || (comb10MulTo = smallMulTo),
                    (BN.prototype.mulTo = function (num, out) {
                        var res,
                            len = this.length + num.length;
                        return 10 === this.length && 10 === num.length ? comb10MulTo(this, num, out) : len < 63 ? smallMulTo(this, num, out) : bigMulTo(this, num, out);
                    }),
                    (FFTM.prototype.makeRBT = function (N) {
                        for (var t = Array(N), l = BN.prototype._countBits(N) - 1, i = 0; i < N; i++) t[i] = this.revBin(i, l, N);
                        return t;
                    }),
                    (FFTM.prototype.revBin = function (x, l, N) {
                        if (0 === x || x === N - 1) return x;
                        for (var rb = 0, i = 0; i < l; i++) (rb |= (1 & x) << (l - i - 1)), (x >>= 1);
                        return rb;
                    }),
                    (FFTM.prototype.permute = function (rbt, rws, iws, rtws, itws, N) {
                        for (var i = 0; i < N; i++) (rtws[i] = rws[rbt[i]]), (itws[i] = iws[rbt[i]]);
                    }),
                    (FFTM.prototype.transform = function (rws, iws, rtws, itws, N, rbt) {
                        this.permute(rbt, rws, iws, rtws, itws, N);
                        for (var s = 1; s < N; s <<= 1)
                            for (var l = s << 1, rtwdf = Math.cos((2 * Math.PI) / l), itwdf = Math.sin((2 * Math.PI) / l), p = 0; p < N; p += l)
                                for (var rtwdf_ = rtwdf, itwdf_ = itwdf, j = 0; j < s; j++) {
                                    var re = rtws[p + j],
                                        ie = itws[p + j],
                                        ro = rtws[p + j + s],
                                        io = itws[p + j + s],
                                        rx = rtwdf_ * ro - itwdf_ * io;
                                    (io = rtwdf_ * io + itwdf_ * ro),
                                        (ro = rx),
                                        (rtws[p + j] = re + ro),
                                        (itws[p + j] = ie + io),
                                        (rtws[p + j + s] = re - ro),
                                        (itws[p + j + s] = ie - io),
                                        j !== l && ((rx = rtwdf * rtwdf_ - itwdf * itwdf_), (itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_), (rtwdf_ = rx));
                                }
                    }),
                    (FFTM.prototype.guessLen13b = function (n, m) {
                        var N = 1 | Math.max(m, n),
                            odd = 1 & N,
                            i = 0;
                        for (N = (N / 2) | 0; N; N >>>= 1) i++;
                        return 1 << (i + 1 + odd);
                    }),
                    (FFTM.prototype.conjugate = function (rws, iws, N) {
                        if (!(N <= 1))
                            for (var i = 0; i < N / 2; i++) {
                                var t = rws[i];
                                (rws[i] = rws[N - i - 1]), (rws[N - i - 1] = t), (t = iws[i]), (iws[i] = -iws[N - i - 1]), (iws[N - i - 1] = -t);
                            }
                    }),
                    (FFTM.prototype.normalize13b = function (ws, N) {
                        for (var carry = 0, i = 0; i < N / 2; i++) {
                            var w = 8192 * Math.round(ws[2 * i + 1] / N) + Math.round(ws[2 * i] / N) + carry;
                            (ws[i] = 67108863 & w), (carry = w < 67108864 ? 0 : (w / 67108864) | 0);
                        }
                        return ws;
                    }),
                    (FFTM.prototype.convert13b = function (ws, len, rws, N) {
                        for (var carry = 0, i = 0; i < len; i++) (carry += 0 | ws[i]), (rws[2 * i] = 8191 & carry), (carry >>>= 13), (rws[2 * i + 1] = 8191 & carry), (carry >>>= 13);
                        for (i = 2 * len; i < N; ++i) rws[i] = 0;
                        assert(0 === carry), assert((-8192 & carry) == 0);
                    }),
                    (FFTM.prototype.stub = function (N) {
                        for (var ph = Array(N), i = 0; i < N; i++) ph[i] = 0;
                        return ph;
                    }),
                    (FFTM.prototype.mulp = function (x, y, out) {
                        var N = 2 * this.guessLen13b(x.length, y.length),
                            rbt = this.makeRBT(N),
                            _ = this.stub(N),
                            rws = Array(N),
                            rwst = Array(N),
                            iwst = Array(N),
                            nrws = Array(N),
                            nrwst = Array(N),
                            niwst = Array(N),
                            rmws = out.words;
                        (rmws.length = N), this.convert13b(x.words, x.length, rws, N), this.convert13b(y.words, y.length, nrws, N), this.transform(rws, _, rwst, iwst, N, rbt), this.transform(nrws, _, nrwst, niwst, N, rbt);
                        for (var i = 0; i < N; i++) {
                            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
                            (iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i]), (rwst[i] = rx);
                        }
                        return (
                            this.conjugate(rwst, iwst, N),
                            this.transform(rwst, iwst, rmws, _, N, rbt),
                            this.conjugate(rmws, _, N),
                            this.normalize13b(rmws, N),
                            (out.negative = x.negative ^ y.negative),
                            (out.length = x.length + y.length),
                            out._strip()
                        );
                    }),
                    (BN.prototype.mul = function (num) {
                        var out = new BN(null);
                        return (out.words = Array(this.length + num.length)), this.mulTo(num, out);
                    }),
                    (BN.prototype.mulf = function (num) {
                        var out = new BN(null);
                        return (out.words = Array(this.length + num.length)), bigMulTo(this, num, out);
                    }),
                    (BN.prototype.imul = function (num) {
                        return this.clone().mulTo(num, this);
                    }),
                    (BN.prototype.imuln = function (num) {
                        var isNegNum = num < 0;
                        isNegNum && (num = -num), assert("number" == typeof num), assert(num < 67108864);
                        for (var carry = 0, i = 0; i < this.length; i++) {
                            var w = (0 | this.words[i]) * num,
                                lo = (67108863 & w) + (67108863 & carry);
                            (carry >>= 26), (carry = ((w / 67108864) | 0) + (lo >>> 26)), (this.words[i] = 67108863 & lo);
                        }
                        return 0 !== carry && ((this.words[i] = carry), this.length++), isNegNum ? this.ineg() : this;
                    }),
                    (BN.prototype.muln = function (num) {
                        return this.clone().imuln(num);
                    }),
                    (BN.prototype.sqr = function () {
                        return this.mul(this);
                    }),
                    (BN.prototype.isqr = function () {
                        return this.imul(this.clone());
                    }),
                    (BN.prototype.pow = function (num) {
                        var w = (function (num) {
                            for (var w = Array(num.bitLength()), bit = 0; bit < w.length; bit++) {
                                var off = (bit / 26) | 0,
                                    wbit = bit % 26;
                                w[bit] = (num.words[off] >>> wbit) & 1;
                            }
                            return w;
                        })(num);
                        if (0 === w.length) return new BN(1);
                        for (var res = this, i = 0; i < w.length && 0 === w[i]; i++, res = res.sqr());
                        if (++i < w.length) for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) 0 !== w[i] && (res = res.mul(q));
                        return res;
                    }),
                    (BN.prototype.iushln = function (bits) {
                        assert("number" == typeof bits && bits >= 0);
                        var i,
                            r = bits % 26,
                            s = (bits - r) / 26,
                            carryMask = (67108863 >>> (26 - r)) << (26 - r);
                        if (0 !== r) {
                            var carry = 0;
                            for (i = 0; i < this.length; i++) {
                                var newCarry = this.words[i] & carryMask,
                                    c = ((0 | this.words[i]) - newCarry) << r;
                                (this.words[i] = c | carry), (carry = newCarry >>> (26 - r));
                            }
                            carry && ((this.words[i] = carry), this.length++);
                        }
                        if (0 !== s) {
                            for (i = this.length - 1; i >= 0; i--) this.words[i + s] = this.words[i];
                            for (i = 0; i < s; i++) this.words[i] = 0;
                            this.length += s;
                        }
                        return this._strip();
                    }),
                    (BN.prototype.ishln = function (bits) {
                        return assert(0 === this.negative), this.iushln(bits);
                    }),
                    (BN.prototype.iushrn = function (bits, hint, extended) {
                        assert("number" == typeof bits && bits >= 0), (h = hint ? (hint - (hint % 26)) / 26 : 0);
                        var h,
                            r = bits % 26,
                            s = Math.min((bits - r) / 26, this.length),
                            mask = 67108863 ^ ((67108863 >>> r) << r),
                            maskedWords = extended;
                        if (((h -= s), (h = Math.max(0, h)), maskedWords)) {
                            for (var i = 0; i < s; i++) maskedWords.words[i] = this.words[i];
                            maskedWords.length = s;
                        }
                        if (0 === s);
                        else if (this.length > s) for (this.length -= s, i = 0; i < this.length; i++) this.words[i] = this.words[i + s];
                        else (this.words[0] = 0), (this.length = 1);
                        var carry = 0;
                        for (i = this.length - 1; i >= 0 && (0 !== carry || i >= h); i--) {
                            var word = 0 | this.words[i];
                            (this.words[i] = (carry << (26 - r)) | (word >>> r)), (carry = word & mask);
                        }
                        return maskedWords && 0 !== carry && (maskedWords.words[maskedWords.length++] = carry), 0 === this.length && ((this.words[0] = 0), (this.length = 1)), this._strip();
                    }),
                    (BN.prototype.ishrn = function (bits, hint, extended) {
                        return assert(0 === this.negative), this.iushrn(bits, hint, extended);
                    }),
                    (BN.prototype.shln = function (bits) {
                        return this.clone().ishln(bits);
                    }),
                    (BN.prototype.ushln = function (bits) {
                        return this.clone().iushln(bits);
                    }),
                    (BN.prototype.shrn = function (bits) {
                        return this.clone().ishrn(bits);
                    }),
                    (BN.prototype.ushrn = function (bits) {
                        return this.clone().iushrn(bits);
                    }),
                    (BN.prototype.testn = function (bit) {
                        assert("number" == typeof bit && bit >= 0);
                        var r = bit % 26,
                            s = (bit - r) / 26;
                        return !(this.length <= s) && !!(this.words[s] & (1 << r));
                    }),
                    (BN.prototype.imaskn = function (bits) {
                        assert("number" == typeof bits && bits >= 0);
                        var r = bits % 26,
                            s = (bits - r) / 26;
                        return (assert(0 === this.negative, "imaskn works only with positive numbers"), this.length <= s)
                            ? this
                            : (0 !== r && s++, (this.length = Math.min(s, this.length)), 0 !== r && (this.words[this.length - 1] &= 67108863 ^ ((67108863 >>> r) << r)), this._strip());
                    }),
                    (BN.prototype.maskn = function (bits) {
                        return this.clone().imaskn(bits);
                    }),
                    (BN.prototype.iaddn = function (num) {
                        return (assert("number" == typeof num), assert(num < 67108864), num < 0)
                            ? this.isubn(-num)
                            : 0 !== this.negative
                            ? 1 === this.length && (0 | this.words[0]) <= num
                                ? ((this.words[0] = num - (0 | this.words[0])), (this.negative = 0), this)
                                : ((this.negative = 0), this.isubn(num), (this.negative = 1), this)
                            : this._iaddn(num);
                    }),
                    (BN.prototype._iaddn = function (num) {
                        this.words[0] += num;
                        for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) (this.words[i] -= 67108864), i === this.length - 1 ? (this.words[i + 1] = 1) : this.words[i + 1]++;
                        return (this.length = Math.max(this.length, i + 1)), this;
                    }),
                    (BN.prototype.isubn = function (num) {
                        if ((assert("number" == typeof num), assert(num < 67108864), num < 0)) return this.iaddn(-num);
                        if (0 !== this.negative) return (this.negative = 0), this.iaddn(num), (this.negative = 1), this;
                        if (((this.words[0] -= num), 1 === this.length && this.words[0] < 0)) (this.words[0] = -this.words[0]), (this.negative = 1);
                        else for (var i = 0; i < this.length && this.words[i] < 0; i++) (this.words[i] += 67108864), (this.words[i + 1] -= 1);
                        return this._strip();
                    }),
                    (BN.prototype.addn = function (num) {
                        return this.clone().iaddn(num);
                    }),
                    (BN.prototype.subn = function (num) {
                        return this.clone().isubn(num);
                    }),
                    (BN.prototype.iabs = function () {
                        return (this.negative = 0), this;
                    }),
                    (BN.prototype.abs = function () {
                        return this.clone().iabs();
                    }),
                    (BN.prototype._ishlnsubmul = function (num, mul, shift) {
                        var i,
                            w,
                            len = num.length + shift;
                        this._expand(len);
                        var carry = 0;
                        for (i = 0; i < num.length; i++) {
                            w = (0 | this.words[i + shift]) + carry;
                            var right = (0 | num.words[i]) * mul;
                            (w -= 67108863 & right), (carry = (w >> 26) - ((right / 67108864) | 0)), (this.words[i + shift] = 67108863 & w);
                        }
                        for (; i < this.length - shift; i++) (carry = (w = (0 | this.words[i + shift]) + carry) >> 26), (this.words[i + shift] = 67108863 & w);
                        if (0 === carry) return this._strip();
                        for (assert(-1 === carry), carry = 0, i = 0; i < this.length; i++) (carry = (w = -(0 | this.words[i]) + carry) >> 26), (this.words[i] = 67108863 & w);
                        return (this.negative = 1), this._strip();
                    }),
                    (BN.prototype._wordDiv = function (num, mode) {
                        var q,
                            shift = this.length - num.length,
                            a = this.clone(),
                            b = num,
                            bhi = 0 | b.words[b.length - 1];
                        0 != (shift = 26 - this._countBits(bhi)) && ((b = b.ushln(shift)), a.iushln(shift), (bhi = 0 | b.words[b.length - 1]));
                        var m = a.length - b.length;
                        if ("mod" !== mode) {
                            ((q = new BN(null)).length = m + 1), (q.words = Array(q.length));
                            for (var i = 0; i < q.length; i++) q.words[i] = 0;
                        }
                        var diff = a.clone()._ishlnsubmul(b, 1, m);
                        0 === diff.negative && ((a = diff), q && (q.words[m] = 1));
                        for (var j = m - 1; j >= 0; j--) {
                            var qj = (0 | a.words[b.length + j]) * 67108864 + (0 | a.words[b.length + j - 1]);
                            for (qj = Math.min((qj / bhi) | 0, 67108863), a._ishlnsubmul(b, qj, j); 0 !== a.negative; ) qj--, (a.negative = 0), a._ishlnsubmul(b, 1, j), a.isZero() || (a.negative ^= 1);
                            q && (q.words[j] = qj);
                        }
                        return q && q._strip(), a._strip(), "div" !== mode && 0 !== shift && a.iushrn(shift), { div: q || null, mod: a };
                    }),
                    (BN.prototype.divmod = function (num, mode, positive) {
                        var div, mod, res;
                        return (assert(!num.isZero()), this.isZero())
                            ? { div: new BN(0), mod: new BN(0) }
                            : 0 !== this.negative && 0 === num.negative
                            ? ((res = this.neg().divmod(num, mode)), "mod" !== mode && (div = res.div.neg()), "div" !== mode && ((mod = res.mod.neg()), positive && 0 !== mod.negative && mod.iadd(num)), { div: div, mod: mod })
                            : 0 === this.negative && 0 !== num.negative
                            ? ((res = this.divmod(num.neg(), mode)), "mod" !== mode && (div = res.div.neg()), { div: div, mod: res.mod })
                            : (this.negative & num.negative) != 0
                            ? ((res = this.neg().divmod(num.neg(), mode)), "div" !== mode && ((mod = res.mod.neg()), positive && 0 !== mod.negative && mod.isub(num)), { div: res.div, mod: mod })
                            : num.length > this.length || 0 > this.cmp(num)
                            ? { div: new BN(0), mod: this }
                            : 1 === num.length
                            ? "div" === mode
                                ? { div: this.divn(num.words[0]), mod: null }
                                : "mod" === mode
                                ? { div: null, mod: new BN(this.modrn(num.words[0])) }
                                : { div: this.divn(num.words[0]), mod: new BN(this.modrn(num.words[0])) }
                            : this._wordDiv(num, mode);
                    }),
                    (BN.prototype.div = function (num) {
                        return this.divmod(num, "div", !1).div;
                    }),
                    (BN.prototype.mod = function (num) {
                        return this.divmod(num, "mod", !1).mod;
                    }),
                    (BN.prototype.umod = function (num) {
                        return this.divmod(num, "mod", !0).mod;
                    }),
                    (BN.prototype.divRound = function (num) {
                        var dm = this.divmod(num);
                        if (dm.mod.isZero()) return dm.div;
                        var mod = 0 !== dm.div.negative ? dm.mod.isub(num) : dm.mod,
                            half = num.ushrn(1),
                            r2 = num.andln(1),
                            cmp = mod.cmp(half);
                        return cmp < 0 || (1 === r2 && 0 === cmp) ? dm.div : 0 !== dm.div.negative ? dm.div.isubn(1) : dm.div.iaddn(1);
                    }),
                    (BN.prototype.modrn = function (num) {
                        var isNegNum = num < 0;
                        isNegNum && (num = -num), assert(num <= 67108863);
                        for (var p = 67108864 % num, acc = 0, i = this.length - 1; i >= 0; i--) acc = (p * acc + (0 | this.words[i])) % num;
                        return isNegNum ? -acc : acc;
                    }),
                    (BN.prototype.modn = function (num) {
                        return this.modrn(num);
                    }),
                    (BN.prototype.idivn = function (num) {
                        var isNegNum = num < 0;
                        isNegNum && (num = -num), assert(num <= 67108863);
                        for (var carry = 0, i = this.length - 1; i >= 0; i--) {
                            var w = (0 | this.words[i]) + 67108864 * carry;
                            (this.words[i] = (w / num) | 0), (carry = w % num);
                        }
                        return this._strip(), isNegNum ? this.ineg() : this;
                    }),
                    (BN.prototype.divn = function (num) {
                        return this.clone().idivn(num);
                    }),
                    (BN.prototype.egcd = function (p) {
                        assert(0 === p.negative), assert(!p.isZero());
                        var x = this,
                            y = p.clone();
                        x = 0 !== x.negative ? x.umod(p) : x.clone();
                        for (var A = new BN(1), B = new BN(0), C = new BN(0), D = new BN(1), g = 0; x.isEven() && y.isEven(); ) x.iushrn(1), y.iushrn(1), ++g;
                        for (var yp = y.clone(), xp = x.clone(); !x.isZero(); ) {
                            for (var i = 0, im = 1; (x.words[0] & im) == 0 && i < 26; ++i, im <<= 1);
                            if (i > 0) for (x.iushrn(i); i-- > 0; ) (A.isOdd() || B.isOdd()) && (A.iadd(yp), B.isub(xp)), A.iushrn(1), B.iushrn(1);
                            for (var j = 0, jm = 1; (y.words[0] & jm) == 0 && j < 26; ++j, jm <<= 1);
                            if (j > 0) for (y.iushrn(j); j-- > 0; ) (C.isOdd() || D.isOdd()) && (C.iadd(yp), D.isub(xp)), C.iushrn(1), D.iushrn(1);
                            x.cmp(y) >= 0 ? (x.isub(y), A.isub(C), B.isub(D)) : (y.isub(x), C.isub(A), D.isub(B));
                        }
                        return { a: C, b: D, gcd: y.iushln(g) };
                    }),
                    (BN.prototype._invmp = function (p) {
                        assert(0 === p.negative), assert(!p.isZero());
                        var res,
                            a = this,
                            b = p.clone();
                        a = 0 !== a.negative ? a.umod(p) : a.clone();
                        for (var x1 = new BN(1), x2 = new BN(0), delta = b.clone(); a.cmpn(1) > 0 && b.cmpn(1) > 0; ) {
                            for (var i = 0, im = 1; (a.words[0] & im) == 0 && i < 26; ++i, im <<= 1);
                            if (i > 0) for (a.iushrn(i); i-- > 0; ) x1.isOdd() && x1.iadd(delta), x1.iushrn(1);
                            for (var j = 0, jm = 1; (b.words[0] & jm) == 0 && j < 26; ++j, jm <<= 1);
                            if (j > 0) for (b.iushrn(j); j-- > 0; ) x2.isOdd() && x2.iadd(delta), x2.iushrn(1);
                            a.cmp(b) >= 0 ? (a.isub(b), x1.isub(x2)) : (b.isub(a), x2.isub(x1));
                        }
                        return 0 > (res = 0 === a.cmpn(1) ? x1 : x2).cmpn(0) && res.iadd(p), res;
                    }),
                    (BN.prototype.gcd = function (num) {
                        if (this.isZero()) return num.abs();
                        if (num.isZero()) return this.abs();
                        var a = this.clone(),
                            b = num.clone();
                        (a.negative = 0), (b.negative = 0);
                        for (var shift = 0; a.isEven() && b.isEven(); shift++) a.iushrn(1), b.iushrn(1);
                        for (;;) {
                            for (; a.isEven(); ) a.iushrn(1);
                            for (; b.isEven(); ) b.iushrn(1);
                            var r = a.cmp(b);
                            if (r < 0) {
                                var t = a;
                                (a = b), (b = t);
                            } else if (0 === r || 0 === b.cmpn(1)) break;
                            a.isub(b);
                        }
                        return b.iushln(shift);
                    }),
                    (BN.prototype.invm = function (num) {
                        return this.egcd(num).a.umod(num);
                    }),
                    (BN.prototype.isEven = function () {
                        return (1 & this.words[0]) == 0;
                    }),
                    (BN.prototype.isOdd = function () {
                        return (1 & this.words[0]) == 1;
                    }),
                    (BN.prototype.andln = function (num) {
                        return this.words[0] & num;
                    }),
                    (BN.prototype.bincn = function (bit) {
                        assert("number" == typeof bit);
                        var r = bit % 26,
                            s = (bit - r) / 26,
                            q = 1 << r;
                        if (this.length <= s) return this._expand(s + 1), (this.words[s] |= q), this;
                        for (var carry = q, i = s; 0 !== carry && i < this.length; i++) {
                            var w = 0 | this.words[i];
                            (w += carry), (carry = w >>> 26), (w &= 67108863), (this.words[i] = w);
                        }
                        return 0 !== carry && ((this.words[i] = carry), this.length++), this;
                    }),
                    (BN.prototype.isZero = function () {
                        return 1 === this.length && 0 === this.words[0];
                    }),
                    (BN.prototype.cmpn = function (num) {
                        var res,
                            negative = num < 0;
                        if (0 !== this.negative && !negative) return -1;
                        if (0 === this.negative && negative) return 1;
                        if ((this._strip(), this.length > 1)) res = 1;
                        else {
                            negative && (num = -num), assert(num <= 67108863, "Number is too big");
                            var w = 0 | this.words[0];
                            res = w === num ? 0 : w < num ? -1 : 1;
                        }
                        return 0 !== this.negative ? 0 | -res : res;
                    }),
                    (BN.prototype.cmp = function (num) {
                        if (0 !== this.negative && 0 === num.negative) return -1;
                        if (0 === this.negative && 0 !== num.negative) return 1;
                        var res = this.ucmp(num);
                        return 0 !== this.negative ? 0 | -res : res;
                    }),
                    (BN.prototype.ucmp = function (num) {
                        if (this.length > num.length) return 1;
                        if (this.length < num.length) return -1;
                        for (var res = 0, i = this.length - 1; i >= 0; i--) {
                            var a = 0 | this.words[i],
                                b = 0 | num.words[i];
                            if (a !== b) {
                                a < b ? (res = -1) : a > b && (res = 1);
                                break;
                            }
                        }
                        return res;
                    }),
                    (BN.prototype.gtn = function (num) {
                        return 1 === this.cmpn(num);
                    }),
                    (BN.prototype.gt = function (num) {
                        return 1 === this.cmp(num);
                    }),
                    (BN.prototype.gten = function (num) {
                        return this.cmpn(num) >= 0;
                    }),
                    (BN.prototype.gte = function (num) {
                        return this.cmp(num) >= 0;
                    }),
                    (BN.prototype.ltn = function (num) {
                        return -1 === this.cmpn(num);
                    }),
                    (BN.prototype.lt = function (num) {
                        return -1 === this.cmp(num);
                    }),
                    (BN.prototype.lten = function (num) {
                        return 0 >= this.cmpn(num);
                    }),
                    (BN.prototype.lte = function (num) {
                        return 0 >= this.cmp(num);
                    }),
                    (BN.prototype.eqn = function (num) {
                        return 0 === this.cmpn(num);
                    }),
                    (BN.prototype.eq = function (num) {
                        return 0 === this.cmp(num);
                    }),
                    (BN.red = function (num) {
                        return new Red(num);
                    }),
                    (BN.prototype.toRed = function (ctx) {
                        return assert(!this.red, "Already a number in reduction context"), assert(0 === this.negative, "red works only with positives"), ctx.convertTo(this)._forceRed(ctx);
                    }),
                    (BN.prototype.fromRed = function () {
                        return assert(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
                    }),
                    (BN.prototype._forceRed = function (ctx) {
                        return (this.red = ctx), this;
                    }),
                    (BN.prototype.forceRed = function (ctx) {
                        return assert(!this.red, "Already a number in reduction context"), this._forceRed(ctx);
                    }),
                    (BN.prototype.redAdd = function (num) {
                        return assert(this.red, "redAdd works only with red numbers"), this.red.add(this, num);
                    }),
                    (BN.prototype.redIAdd = function (num) {
                        return assert(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, num);
                    }),
                    (BN.prototype.redSub = function (num) {
                        return assert(this.red, "redSub works only with red numbers"), this.red.sub(this, num);
                    }),
                    (BN.prototype.redISub = function (num) {
                        return assert(this.red, "redISub works only with red numbers"), this.red.isub(this, num);
                    }),
                    (BN.prototype.redShl = function (num) {
                        return assert(this.red, "redShl works only with red numbers"), this.red.shl(this, num);
                    }),
                    (BN.prototype.redMul = function (num) {
                        return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, num), this.red.mul(this, num);
                    }),
                    (BN.prototype.redIMul = function (num) {
                        return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, num), this.red.imul(this, num);
                    }),
                    (BN.prototype.redSqr = function () {
                        return assert(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
                    }),
                    (BN.prototype.redISqr = function () {
                        return assert(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
                    }),
                    (BN.prototype.redSqrt = function () {
                        return assert(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
                    }),
                    (BN.prototype.redInvm = function () {
                        return assert(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
                    }),
                    (BN.prototype.redNeg = function () {
                        return assert(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
                    }),
                    (BN.prototype.redPow = function (num) {
                        return assert(this.red && !num.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, num);
                    });
                var primes = { k256: null, p224: null, p192: null, p25519: null };
                function MPrime(name, p) {
                    (this.name = name), (this.p = new BN(p, 16)), (this.n = this.p.bitLength()), (this.k = new BN(1).iushln(this.n).isub(this.p)), (this.tmp = this._tmp());
                }
                function K256() {
                    MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
                }
                function P224() {
                    MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
                }
                function P192() {
                    MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
                }
                function P25519() {
                    MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
                }
                function Red(m) {
                    if ("string" == typeof m) {
                        var prime = BN._prime(m);
                        (this.m = prime.p), (this.prime = prime);
                    } else assert(m.gtn(1), "modulus must be greater than 1"), (this.m = m), (this.prime = null);
                }
                function Mont(m) {
                    Red.call(this, m),
                        (this.shift = this.m.bitLength()),
                        this.shift % 26 != 0 && (this.shift += 26 - (this.shift % 26)),
                        (this.r = new BN(1).iushln(this.shift)),
                        (this.r2 = this.imod(this.r.sqr())),
                        (this.rinv = this.r._invmp(this.m)),
                        (this.minv = this.rinv.mul(this.r).isubn(1).div(this.m)),
                        (this.minv = this.minv.umod(this.r)),
                        (this.minv = this.r.sub(this.minv));
                }
                (MPrime.prototype._tmp = function () {
                    var tmp = new BN(null);
                    return (tmp.words = Array(Math.ceil(this.n / 13))), tmp;
                }),
                    (MPrime.prototype.ireduce = function (num) {
                        var rlen,
                            r = num;
                        do this.split(r, this.tmp), (rlen = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength());
                        while (rlen > this.n);
                        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
                        return 0 === cmp ? ((r.words[0] = 0), (r.length = 1)) : cmp > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r;
                    }),
                    (MPrime.prototype.split = function (input, out) {
                        input.iushrn(this.n, 0, out);
                    }),
                    (MPrime.prototype.imulK = function (num) {
                        return num.imul(this.k);
                    }),
                    inherits(K256, MPrime),
                    (K256.prototype.split = function (input, output) {
                        for (var outLen = Math.min(input.length, 9), i = 0; i < outLen; i++) output.words[i] = input.words[i];
                        if (((output.length = outLen), input.length <= 9)) {
                            (input.words[0] = 0), (input.length = 1);
                            return;
                        }
                        var prev = input.words[9];
                        for (i = 10, output.words[output.length++] = 4194303 & prev; i < input.length; i++) {
                            var next = 0 | input.words[i];
                            (input.words[i - 10] = ((4194303 & next) << 4) | (prev >>> 22)), (prev = next);
                        }
                        (prev >>>= 22), (input.words[i - 10] = prev), 0 === prev && input.length > 10 ? (input.length -= 10) : (input.length -= 9);
                    }),
                    (K256.prototype.imulK = function (num) {
                        (num.words[num.length] = 0), (num.words[num.length + 1] = 0), (num.length += 2);
                        for (var lo = 0, i = 0; i < num.length; i++) {
                            var w = 0 | num.words[i];
                            (lo += 977 * w), (num.words[i] = 67108863 & lo), (lo = 64 * w + ((lo / 67108864) | 0));
                        }
                        return 0 === num.words[num.length - 1] && (num.length--, 0 === num.words[num.length - 1] && num.length--), num;
                    }),
                    inherits(P224, MPrime),
                    inherits(P192, MPrime),
                    inherits(P25519, MPrime),
                    (P25519.prototype.imulK = function (num) {
                        for (var carry = 0, i = 0; i < num.length; i++) {
                            var hi = (0 | num.words[i]) * 19 + carry,
                                lo = 67108863 & hi;
                            (hi >>>= 26), (num.words[i] = lo), (carry = hi);
                        }
                        return 0 !== carry && (num.words[num.length++] = carry), num;
                    }),
                    (BN._prime = function (name) {
                        var prime;
                        if (primes[name]) return primes[name];
                        if ("k256" === name) prime = new K256();
                        else if ("p224" === name) prime = new P224();
                        else if ("p192" === name) prime = new P192();
                        else if ("p25519" === name) prime = new P25519();
                        else throw Error("Unknown prime " + name);
                        return (primes[name] = prime), prime;
                    }),
                    (Red.prototype._verify1 = function (a) {
                        assert(0 === a.negative, "red works only with positives"), assert(a.red, "red works only with red numbers");
                    }),
                    (Red.prototype._verify2 = function (a, b) {
                        assert((a.negative | b.negative) == 0, "red works only with positives"), assert(a.red && a.red === b.red, "red works only with red numbers");
                    }),
                    (Red.prototype.imod = function (a) {
                        return this.prime ? this.prime.ireduce(a)._forceRed(this) : (move(a, a.umod(this.m)._forceRed(this)), a);
                    }),
                    (Red.prototype.neg = function (a) {
                        return a.isZero() ? a.clone() : this.m.sub(a)._forceRed(this);
                    }),
                    (Red.prototype.add = function (a, b) {
                        this._verify2(a, b);
                        var res = a.add(b);
                        return res.cmp(this.m) >= 0 && res.isub(this.m), res._forceRed(this);
                    }),
                    (Red.prototype.iadd = function (a, b) {
                        this._verify2(a, b);
                        var res = a.iadd(b);
                        return res.cmp(this.m) >= 0 && res.isub(this.m), res;
                    }),
                    (Red.prototype.sub = function (a, b) {
                        this._verify2(a, b);
                        var res = a.sub(b);
                        return 0 > res.cmpn(0) && res.iadd(this.m), res._forceRed(this);
                    }),
                    (Red.prototype.isub = function (a, b) {
                        this._verify2(a, b);
                        var res = a.isub(b);
                        return 0 > res.cmpn(0) && res.iadd(this.m), res;
                    }),
                    (Red.prototype.shl = function (a, num) {
                        return this._verify1(a), this.imod(a.ushln(num));
                    }),
                    (Red.prototype.imul = function (a, b) {
                        return this._verify2(a, b), this.imod(a.imul(b));
                    }),
                    (Red.prototype.mul = function (a, b) {
                        return this._verify2(a, b), this.imod(a.mul(b));
                    }),
                    (Red.prototype.isqr = function (a) {
                        return this.imul(a, a.clone());
                    }),
                    (Red.prototype.sqr = function (a) {
                        return this.mul(a, a);
                    }),
                    (Red.prototype.sqrt = function (a) {
                        if (a.isZero()) return a.clone();
                        var mod3 = this.m.andln(3);
                        if ((assert(mod3 % 2 == 1), 3 === mod3)) {
                            var pow = this.m.add(new BN(1)).iushrn(2);
                            return this.pow(a, pow);
                        }
                        for (var q = this.m.subn(1), s = 0; !q.isZero() && 0 === q.andln(1); ) s++, q.iushrn(1);
                        assert(!q.isZero());
                        var one = new BN(1).toRed(this),
                            nOne = one.redNeg(),
                            lpow = this.m.subn(1).iushrn(1),
                            z = this.m.bitLength();
                        for (z = new BN(2 * z * z).toRed(this); 0 !== this.pow(z, lpow).cmp(nOne); ) z.redIAdd(nOne);
                        for (var c = this.pow(z, q), r = this.pow(a, q.addn(1).iushrn(1)), t = this.pow(a, q), m = s; 0 !== t.cmp(one); ) {
                            for (var tmp = t, i = 0; 0 !== tmp.cmp(one); i++) tmp = tmp.redSqr();
                            assert(i < m);
                            var b = this.pow(c, new BN(1).iushln(m - i - 1));
                            (r = r.redMul(b)), (c = b.redSqr()), (t = t.redMul(c)), (m = i);
                        }
                        return r;
                    }),
                    (Red.prototype.invm = function (a) {
                        var inv = a._invmp(this.m);
                        return 0 !== inv.negative ? ((inv.negative = 0), this.imod(inv).redNeg()) : this.imod(inv);
                    }),
                    (Red.prototype.pow = function (a, num) {
                        if (num.isZero()) return new BN(1).toRed(this);
                        if (0 === num.cmpn(1)) return a.clone();
                        var wnd = Array(16);
                        (wnd[0] = new BN(1).toRed(this)), (wnd[1] = a);
                        for (var i = 2; i < wnd.length; i++) wnd[i] = this.mul(wnd[i - 1], a);
                        var res = wnd[0],
                            current = 0,
                            currentLen = 0,
                            start = num.bitLength() % 26;
                        for (0 === start && (start = 26), i = num.length - 1; i >= 0; i--) {
                            for (var word = num.words[i], j = start - 1; j >= 0; j--) {
                                var bit = (word >> j) & 1;
                                if ((res !== wnd[0] && (res = this.sqr(res)), 0 === bit && 0 === current)) {
                                    currentLen = 0;
                                    continue;
                                }
                                (current <<= 1), (current |= bit), (4 == ++currentLen || (0 === i && 0 === j)) && ((res = this.mul(res, wnd[current])), (currentLen = 0), (current = 0));
                            }
                            start = 26;
                        }
                        return res;
                    }),
                    (Red.prototype.convertTo = function (num) {
                        var r = num.umod(this.m);
                        return r === num ? r.clone() : r;
                    }),
                    (Red.prototype.convertFrom = function (num) {
                        var res = num.clone();
                        return (res.red = null), res;
                    }),
                    (BN.mont = function (num) {
                        return new Mont(num);
                    }),
                    inherits(Mont, Red),
                    (Mont.prototype.convertTo = function (num) {
                        return this.imod(num.ushln(this.shift));
                    }),
                    (Mont.prototype.convertFrom = function (num) {
                        var r = this.imod(num.mul(this.rinv));
                        return (r.red = null), r;
                    }),
                    (Mont.prototype.imul = function (a, b) {
                        if (a.isZero() || b.isZero()) return (a.words[0] = 0), (a.length = 1), a;
                        var t = a.imul(b),
                            c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            u = t.isub(c).iushrn(this.shift),
                            res = u;
                        return u.cmp(this.m) >= 0 ? (res = u.isub(this.m)) : 0 > u.cmpn(0) && (res = u.iadd(this.m)), res._forceRed(this);
                    }),
                    (Mont.prototype.mul = function (a, b) {
                        if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
                        var t = a.mul(b),
                            c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            u = t.isub(c).iushrn(this.shift),
                            res = u;
                        return u.cmp(this.m) >= 0 ? (res = u.isub(this.m)) : 0 > u.cmpn(0) && (res = u.iadd(this.m)), res._forceRed(this);
                    }),
                    (Mont.prototype.invm = function (a) {
                        return this.imod(a._invmp(this.m).mul(this.r2))._forceRed(this);
                    });
            })((module = __webpack_require__.nmd(module)), this);
        },
        89509: function (module, exports, __webpack_require__) {
            /*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */ var buffer = __webpack_require__(48764),
                Buffer = buffer.Buffer;
            function copyProps(src, dst) {
                for (var key in src) dst[key] = src[key];
            }
            function SafeBuffer(arg, encodingOrOffset, length) {
                return Buffer(arg, encodingOrOffset, length);
            }
            Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow ? (module.exports = buffer) : (copyProps(buffer, exports), (exports.Buffer = SafeBuffer)),
                (SafeBuffer.prototype = Object.create(Buffer.prototype)),
                copyProps(Buffer, SafeBuffer),
                (SafeBuffer.from = function (arg, encodingOrOffset, length) {
                    if ("number" == typeof arg) throw TypeError("Argument must not be a number");
                    return Buffer(arg, encodingOrOffset, length);
                }),
                (SafeBuffer.alloc = function (size, fill, encoding) {
                    if ("number" != typeof size) throw TypeError("Argument must be a number");
                    var buf = Buffer(size);
                    return void 0 !== fill ? ("string" == typeof encoding ? buf.fill(fill, encoding) : buf.fill(fill)) : buf.fill(0), buf;
                }),
                (SafeBuffer.allocUnsafe = function (size) {
                    if ("number" != typeof size) throw TypeError("Argument must be a number");
                    return Buffer(size);
                }),
                (SafeBuffer.allocUnsafeSlow = function (size) {
                    if ("number" != typeof size) throw TypeError("Argument must be a number");
                    return buffer.SlowBuffer(size);
                });
        },
        37253: function (module, __unused_webpack_exports, __webpack_require__) {
            let util = __webpack_require__(89539),
                EventEmitter = __webpack_require__(17187);
            var R = "object" == typeof Reflect ? Reflect : null,
                ReflectApply =
                    R && "function" == typeof R.apply
                        ? R.apply
                        : function (target, receiver, args) {
                              return Function.prototype.apply.call(target, receiver, args);
                          };
            function SafeEventEmitter() {
                EventEmitter.call(this);
            }
            function safeApply(handler, context, args) {
                try {
                    ReflectApply(handler, context, args);
                } catch (err) {
                    setTimeout(() => {
                        throw err;
                    });
                }
            }
            (module.exports = SafeEventEmitter),
                util.inherits(SafeEventEmitter, EventEmitter),
                (SafeEventEmitter.prototype.emit = function (type) {
                    for (var args = [], i = 1; i < arguments.length; i++) args.push(arguments[i]);
                    var doError = "error" === type,
                        events = this._events;
                    if (void 0 !== events) doError = doError && void 0 === events.error;
                    else if (!doError) return !1;
                    if (doError) {
                        if ((args.length > 0 && (er = args[0]), er instanceof Error)) throw er;
                        var er,
                            err = Error("Unhandled error." + (er ? " (" + er.message + ")" : ""));
                        throw ((err.context = er), err);
                    }
                    var handler = events[type];
                    if (void 0 === handler) return !1;
                    if ("function" == typeof handler) safeApply(handler, this, args);
                    else
                        for (
                            var len = handler.length,
                                listeners = (function (arr, n) {
                                    for (var copy = Array(n), i = 0; i < n; ++i) copy[i] = arr[i];
                                    return copy;
                                })(handler, len),
                                i = 0;
                            i < len;
                            ++i
                        )
                            safeApply(listeners[i], this, args);
                    return !0;
                });
        },
        17221: function (module, __unused_webpack_exports, __webpack_require__) {
            module.exports = __webpack_require__(59119)(__webpack_require__(58573));
        },
        58573: function (module, __unused_webpack_exports, __webpack_require__) {
            let EC = __webpack_require__(86266).ec,
                ec = new EC("secp256k1"),
                ecparams = ec.curve,
                BN = ecparams.n.constructor;
            function loadPublicKey(pubkey) {
                let first = pubkey[0];
                switch (first) {
                    case 2:
                    case 3:
                        if (33 !== pubkey.length) return null;
                        return (function (first, xbuf) {
                            let x = new BN(xbuf);
                            if (x.cmp(ecparams.p) >= 0) return null;
                            let y = (x = x.toRed(ecparams.red)).redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt();
                            return (3 === first) !== y.isOdd() && (y = y.redNeg()), ec.keyPair({ pub: { x: x, y: y } });
                        })(first, pubkey.subarray(1, 33));
                    case 4:
                    case 6:
                    case 7:
                        if (65 !== pubkey.length) return null;
                        return (function (first, xbuf, ybuf) {
                            let x = new BN(xbuf),
                                y = new BN(ybuf);
                            if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0 || ((x = x.toRed(ecparams.red)), (y = y.toRed(ecparams.red)), (6 === first || 7 === first) && y.isOdd() !== (7 === first))) return null;
                            let x3 = x.redSqr().redIMul(x);
                            return y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero() ? ec.keyPair({ pub: { x: x, y: y } }) : null;
                        })(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65));
                    default:
                        return null;
                }
            }
            function savePublicKey(output, point) {
                let pubkey = point.encode(null, 33 === output.length);
                for (let i = 0; i < output.length; ++i) output[i] = pubkey[i];
            }
            module.exports = {
                contextRandomize: () => 0,
                privateKeyVerify(seckey) {
                    let bn = new BN(seckey);
                    return 0 > bn.cmp(ecparams.n) && !bn.isZero() ? 0 : 1;
                },
                privateKeyNegate(seckey) {
                    let bn = new BN(seckey),
                        negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, "be", 32);
                    return seckey.set(negate), 0;
                },
                privateKeyTweakAdd(seckey, tweak) {
                    let bn = new BN(tweak);
                    if (bn.cmp(ecparams.n) >= 0 || (bn.iadd(new BN(seckey)), bn.cmp(ecparams.n) >= 0 && bn.isub(ecparams.n), bn.isZero())) return 1;
                    let tweaked = bn.toArrayLike(Uint8Array, "be", 32);
                    return seckey.set(tweaked), 0;
                },
                privateKeyTweakMul(seckey, tweak) {
                    let bn = new BN(tweak);
                    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1;
                    bn.imul(new BN(seckey)), bn.cmp(ecparams.n) >= 0 && (bn = bn.umod(ecparams.n));
                    let tweaked = bn.toArrayLike(Uint8Array, "be", 32);
                    return seckey.set(tweaked), 0;
                },
                publicKeyVerify(pubkey) {
                    let pair = loadPublicKey(pubkey);
                    return null === pair ? 1 : 0;
                },
                publicKeyCreate(output, seckey) {
                    let bn = new BN(seckey);
                    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1;
                    let point = ec.keyFromPrivate(seckey).getPublic();
                    return savePublicKey(output, point), 0;
                },
                publicKeyConvert(output, pubkey) {
                    let pair = loadPublicKey(pubkey);
                    if (null === pair) return 1;
                    let point = pair.getPublic();
                    return savePublicKey(output, point), 0;
                },
                publicKeyNegate(output, pubkey) {
                    let pair = loadPublicKey(pubkey);
                    if (null === pair) return 1;
                    let point = pair.getPublic();
                    return (point.y = point.y.redNeg()), savePublicKey(output, point), 0;
                },
                publicKeyCombine(output, pubkeys) {
                    let pairs = Array(pubkeys.length);
                    for (let i = 0; i < pubkeys.length; ++i) if (((pairs[i] = loadPublicKey(pubkeys[i])), null === pairs[i])) return 1;
                    let point = pairs[0].getPublic();
                    for (let i1 = 1; i1 < pairs.length; ++i1) point = point.add(pairs[i1].pub);
                    return point.isInfinity() ? 2 : (savePublicKey(output, point), 0);
                },
                publicKeyTweakAdd(output, pubkey, tweak) {
                    let pair = loadPublicKey(pubkey);
                    if (null === pair) return 1;
                    if ((tweak = new BN(tweak)).cmp(ecparams.n) >= 0) return 2;
                    let point = pair.getPublic().add(ecparams.g.mul(tweak));
                    return point.isInfinity() ? 2 : (savePublicKey(output, point), 0);
                },
                publicKeyTweakMul(output, pubkey, tweak) {
                    let pair = loadPublicKey(pubkey);
                    if (null === pair) return 1;
                    if ((tweak = new BN(tweak)).cmp(ecparams.n) >= 0 || tweak.isZero()) return 2;
                    let point = pair.getPublic().mul(tweak);
                    return savePublicKey(output, point), 0;
                },
                signatureNormalize(sig) {
                    let r = new BN(sig.subarray(0, 32)),
                        s = new BN(sig.subarray(32, 64));
                    return r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0 ? 1 : (1 === s.cmp(ec.nh) && sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, "be", 32), 32), 0);
                },
                signatureExport(obj, sig) {
                    let sigR = sig.subarray(0, 32),
                        sigS = sig.subarray(32, 64);
                    if (new BN(sigR).cmp(ecparams.n) >= 0 || new BN(sigS).cmp(ecparams.n) >= 0) return 1;
                    let { output } = obj,
                        r = output.subarray(4, 37);
                    (r[0] = 0), r.set(sigR, 1);
                    let lenR = 33,
                        posR = 0;
                    for (; lenR > 1 && 0 === r[posR] && !(128 & r[posR + 1]); --lenR, ++posR);
                    if (128 & (r = r.subarray(posR))[0] || (lenR > 1 && 0 === r[0] && !(128 & r[1]))) return 1;
                    let s = output.subarray(39, 72);
                    (s[0] = 0), s.set(sigS, 1);
                    let lenS = 33,
                        posS = 0;
                    for (; lenS > 1 && 0 === s[posS] && !(128 & s[posS + 1]); --lenS, ++posS);
                    return 128 & (s = s.subarray(posS))[0] || (lenS > 1 && 0 === s[0] && !(128 & s[1]))
                        ? 1
                        : ((obj.outputlen = 6 + lenR + lenS),
                          (output[0] = 48),
                          (output[1] = obj.outputlen - 2),
                          (output[2] = 2),
                          (output[3] = r.length),
                          output.set(r, 4),
                          (output[4 + lenR] = 2),
                          (output[5 + lenR] = s.length),
                          output.set(s, 6 + lenR),
                          0);
                },
                signatureImport(output, sig) {
                    if (sig.length < 8 || sig.length > 72 || 48 !== sig[0] || sig[1] !== sig.length - 2 || 2 !== sig[2]) return 1;
                    let lenR = sig[3];
                    if (0 === lenR || 5 + lenR >= sig.length || 2 !== sig[4 + lenR]) return 1;
                    let lenS = sig[5 + lenR];
                    if (0 === lenS || 6 + lenR + lenS !== sig.length || 128 & sig[4] || (lenR > 1 && 0 === sig[4] && !(128 & sig[5])) || 128 & sig[lenR + 6] || (lenS > 1 && 0 === sig[lenR + 6] && !(128 & sig[lenR + 7]))) return 1;
                    let sigR = sig.subarray(4, 4 + lenR);
                    if ((33 === sigR.length && 0 === sigR[0] && (sigR = sigR.subarray(1)), sigR.length > 32)) return 1;
                    let sigS = sig.subarray(6 + lenR);
                    if ((33 === sigS.length && 0 === sigS[0] && (sigS = sigS.slice(1)), sigS.length > 32)) throw Error("S length is too long");
                    let r = new BN(sigR);
                    r.cmp(ecparams.n) >= 0 && (r = new BN(0));
                    let s = new BN(sig.subarray(6 + lenR));
                    return s.cmp(ecparams.n) >= 0 && (s = new BN(0)), output.set(r.toArrayLike(Uint8Array, "be", 32), 0), output.set(s.toArrayLike(Uint8Array, "be", 32), 32), 0;
                },
                ecdsaSign(obj, message, seckey, data, noncefn) {
                    let sig;
                    if (noncefn) {
                        let _noncefn = noncefn;
                        noncefn = (counter) => {
                            let nonce = _noncefn(message, seckey, null, data, counter),
                                isValid = nonce instanceof Uint8Array && 32 === nonce.length;
                            if (!isValid) throw Error("This is the way");
                            return new BN(nonce);
                        };
                    }
                    let d = new BN(seckey);
                    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1;
                    try {
                        sig = ec.sign(message, seckey, { canonical: !0, k: noncefn, pers: data });
                    } catch (err) {
                        return 1;
                    }
                    return obj.signature.set(sig.r.toArrayLike(Uint8Array, "be", 32), 0), obj.signature.set(sig.s.toArrayLike(Uint8Array, "be", 32), 32), (obj.recid = sig.recoveryParam), 0;
                },
                ecdsaVerify(sig, msg32, pubkey) {
                    let sigObj = { r: sig.subarray(0, 32), s: sig.subarray(32, 64) },
                        sigr = new BN(sigObj.r),
                        sigs = new BN(sigObj.s);
                    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1;
                    if (1 === sigs.cmp(ec.nh) || sigr.isZero() || sigs.isZero()) return 3;
                    let pair = loadPublicKey(pubkey);
                    if (null === pair) return 2;
                    let point = pair.getPublic(),
                        isValid = ec.verify(msg32, sigObj, point);
                    return isValid ? 0 : 3;
                },
                ecdsaRecover(output, sig, recid, msg32) {
                    let point;
                    let sigObj = { r: sig.slice(0, 32), s: sig.slice(32, 64) },
                        sigr = new BN(sigObj.r),
                        sigs = new BN(sigObj.s);
                    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1;
                    if (sigr.isZero() || sigs.isZero()) return 2;
                    try {
                        point = ec.recoverPubKey(msg32, sigObj, recid);
                    } catch (err) {
                        return 2;
                    }
                    return savePublicKey(output, point), 0;
                },
                ecdh(output, pubkey, seckey, data, hashfn, xbuf, ybuf) {
                    let pair = loadPublicKey(pubkey);
                    if (null === pair) return 1;
                    let scalar = new BN(seckey);
                    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2;
                    let point = pair.getPublic().mul(scalar);
                    if (void 0 === hashfn) {
                        let data1 = point.encode(null, !0),
                            sha256 = ec.hash().update(data1).digest();
                        for (let i = 0; i < 32; ++i) output[i] = sha256[i];
                    } else {
                        xbuf || (xbuf = new Uint8Array(32));
                        let x = point.getX().toArray("be", 32);
                        for (let i1 = 0; i1 < 32; ++i1) xbuf[i1] = x[i1];
                        ybuf || (ybuf = new Uint8Array(32));
                        let y = point.getY().toArray("be", 32);
                        for (let i2 = 0; i2 < 32; ++i2) ybuf[i2] = y[i2];
                        let hash = hashfn(xbuf, ybuf, data),
                            isValid = hash instanceof Uint8Array && hash.length === output.length;
                        if (!isValid) return 2;
                        output.set(hash);
                    }
                    return 0;
                },
            };
        },
        59119: function (module) {
            let errors = {
                IMPOSSIBLE_CASE: "Impossible case. Please create issue.",
                TWEAK_ADD: "The tweak was out of range or the resulted private key is invalid",
                TWEAK_MUL: "The tweak was out of range or equal to zero",
                CONTEXT_RANDOMIZE_UNKNOW: "Unknow error on context randomization",
                SECKEY_INVALID: "Private Key is invalid",
                PUBKEY_PARSE: "Public Key could not be parsed",
                PUBKEY_SERIALIZE: "Public Key serialization error",
                PUBKEY_COMBINE: "The sum of the public keys is not valid",
                SIG_PARSE: "Signature could not be parsed",
                SIGN: "The nonce generation function failed, or the private key was invalid",
                RECOVER: "Public key could not be recover",
                ECDH: "Scalar was invalid (zero or overflow)",
            };
            function assert(cond, msg) {
                if (!cond) throw Error(msg);
            }
            function isUint8Array(name, value, length) {
                if ((assert(value instanceof Uint8Array, `Expected ${name} to be an Uint8Array`), void 0 !== length)) {
                    if (Array.isArray(length)) {
                        let numbers = length.join(", "),
                            msg = `Expected ${name} to be an Uint8Array with length [${numbers}]`;
                        assert(length.includes(value.length), msg);
                    } else {
                        let msg1 = `Expected ${name} to be an Uint8Array with length ${length}`;
                        assert(value.length === length, msg1);
                    }
                }
            }
            function isCompressed(value) {
                assert("Boolean" === toTypeString(value), "Expected compressed to be a Boolean");
            }
            function getAssertedOutput(output = (len) => new Uint8Array(len), length) {
                return "function" == typeof output && (output = output(length)), isUint8Array("output", output, length), output;
            }
            function toTypeString(value) {
                return Object.prototype.toString.call(value).slice(8, -1);
            }
            module.exports = (secp256k1) => ({
                contextRandomize(seed) {
                    if ((assert(null === seed || seed instanceof Uint8Array, "Expected seed to be an Uint8Array or null"), null !== seed && isUint8Array("seed", seed, 32), 1 === secp256k1.contextRandomize(seed)))
                        throw Error(errors.CONTEXT_RANDOMIZE_UNKNOW);
                },
                privateKeyVerify: (seckey) => (isUint8Array("private key", seckey, 32), 0 === secp256k1.privateKeyVerify(seckey)),
                privateKeyNegate(seckey) {
                    switch ((isUint8Array("private key", seckey, 32), secp256k1.privateKeyNegate(seckey))) {
                        case 0:
                            return seckey;
                        case 1:
                            throw Error(errors.IMPOSSIBLE_CASE);
                    }
                },
                privateKeyTweakAdd(seckey, tweak) {
                    switch ((isUint8Array("private key", seckey, 32), isUint8Array("tweak", tweak, 32), secp256k1.privateKeyTweakAdd(seckey, tweak))) {
                        case 0:
                            return seckey;
                        case 1:
                            throw Error(errors.TWEAK_ADD);
                    }
                },
                privateKeyTweakMul(seckey, tweak) {
                    switch ((isUint8Array("private key", seckey, 32), isUint8Array("tweak", tweak, 32), secp256k1.privateKeyTweakMul(seckey, tweak))) {
                        case 0:
                            return seckey;
                        case 1:
                            throw Error(errors.TWEAK_MUL);
                    }
                },
                publicKeyVerify: (pubkey) => (isUint8Array("public key", pubkey, [33, 65]), 0 === secp256k1.publicKeyVerify(pubkey)),
                publicKeyCreate(seckey, compressed = !0, output) {
                    switch ((isUint8Array("private key", seckey, 32), isCompressed(compressed), (output = getAssertedOutput(output, compressed ? 33 : 65)), secp256k1.publicKeyCreate(output, seckey))) {
                        case 0:
                            return output;
                        case 1:
                            throw Error(errors.SECKEY_INVALID);
                        case 2:
                            throw Error(errors.PUBKEY_SERIALIZE);
                    }
                },
                publicKeyConvert(pubkey, compressed = !0, output) {
                    switch ((isUint8Array("public key", pubkey, [33, 65]), isCompressed(compressed), (output = getAssertedOutput(output, compressed ? 33 : 65)), secp256k1.publicKeyConvert(output, pubkey))) {
                        case 0:
                            return output;
                        case 1:
                            throw Error(errors.PUBKEY_PARSE);
                        case 2:
                            throw Error(errors.PUBKEY_SERIALIZE);
                    }
                },
                publicKeyNegate(pubkey, compressed = !0, output) {
                    switch ((isUint8Array("public key", pubkey, [33, 65]), isCompressed(compressed), (output = getAssertedOutput(output, compressed ? 33 : 65)), secp256k1.publicKeyNegate(output, pubkey))) {
                        case 0:
                            return output;
                        case 1:
                            throw Error(errors.PUBKEY_PARSE);
                        case 2:
                            throw Error(errors.IMPOSSIBLE_CASE);
                        case 3:
                            throw Error(errors.PUBKEY_SERIALIZE);
                    }
                },
                publicKeyCombine(pubkeys, compressed = !0, output) {
                    for (let pubkey of (assert(Array.isArray(pubkeys), "Expected public keys to be an Array"), assert(pubkeys.length > 0, "Expected public keys array will have more than zero items"), pubkeys))
                        isUint8Array("public key", pubkey, [33, 65]);
                    switch ((isCompressed(compressed), (output = getAssertedOutput(output, compressed ? 33 : 65)), secp256k1.publicKeyCombine(output, pubkeys))) {
                        case 0:
                            return output;
                        case 1:
                            throw Error(errors.PUBKEY_PARSE);
                        case 2:
                            throw Error(errors.PUBKEY_COMBINE);
                        case 3:
                            throw Error(errors.PUBKEY_SERIALIZE);
                    }
                },
                publicKeyTweakAdd(pubkey, tweak, compressed = !0, output) {
                    switch (
                        (isUint8Array("public key", pubkey, [33, 65]),
                        isUint8Array("tweak", tweak, 32),
                        isCompressed(compressed),
                        (output = getAssertedOutput(output, compressed ? 33 : 65)),
                        secp256k1.publicKeyTweakAdd(output, pubkey, tweak))
                    ) {
                        case 0:
                            return output;
                        case 1:
                            throw Error(errors.PUBKEY_PARSE);
                        case 2:
                            throw Error(errors.TWEAK_ADD);
                    }
                },
                publicKeyTweakMul(pubkey, tweak, compressed = !0, output) {
                    switch (
                        (isUint8Array("public key", pubkey, [33, 65]),
                        isUint8Array("tweak", tweak, 32),
                        isCompressed(compressed),
                        (output = getAssertedOutput(output, compressed ? 33 : 65)),
                        secp256k1.publicKeyTweakMul(output, pubkey, tweak))
                    ) {
                        case 0:
                            return output;
                        case 1:
                            throw Error(errors.PUBKEY_PARSE);
                        case 2:
                            throw Error(errors.TWEAK_MUL);
                    }
                },
                signatureNormalize(sig) {
                    switch ((isUint8Array("signature", sig, 64), secp256k1.signatureNormalize(sig))) {
                        case 0:
                            return sig;
                        case 1:
                            throw Error(errors.SIG_PARSE);
                    }
                },
                signatureExport(sig, output) {
                    isUint8Array("signature", sig, 64), (output = getAssertedOutput(output, 72));
                    let obj = { output, outputlen: 72 };
                    switch (secp256k1.signatureExport(obj, sig)) {
                        case 0:
                            return output.slice(0, obj.outputlen);
                        case 1:
                            throw Error(errors.SIG_PARSE);
                        case 2:
                            throw Error(errors.IMPOSSIBLE_CASE);
                    }
                },
                signatureImport(sig, output) {
                    switch ((isUint8Array("signature", sig), (output = getAssertedOutput(output, 64)), secp256k1.signatureImport(output, sig))) {
                        case 0:
                            return output;
                        case 1:
                            throw Error(errors.SIG_PARSE);
                        case 2:
                            throw Error(errors.IMPOSSIBLE_CASE);
                    }
                },
                ecdsaSign(msg32, seckey, options = {}, output) {
                    isUint8Array("message", msg32, 32),
                        isUint8Array("private key", seckey, 32),
                        assert("Object" === toTypeString(options), "Expected options to be an Object"),
                        void 0 !== options.data && isUint8Array("options.data", options.data),
                        void 0 !== options.noncefn && assert("Function" === toTypeString(options.noncefn), "Expected options.noncefn to be a Function"),
                        (output = getAssertedOutput(output, 64));
                    let obj = { signature: output, recid: null };
                    switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {
                        case 0:
                            return obj;
                        case 1:
                            throw Error(errors.SIGN);
                        case 2:
                            throw Error(errors.IMPOSSIBLE_CASE);
                    }
                },
                ecdsaVerify(sig, msg32, pubkey) {
                    switch ((isUint8Array("signature", sig, 64), isUint8Array("message", msg32, 32), isUint8Array("public key", pubkey, [33, 65]), secp256k1.ecdsaVerify(sig, msg32, pubkey))) {
                        case 0:
                            return !0;
                        case 3:
                            return !1;
                        case 1:
                            throw Error(errors.SIG_PARSE);
                        case 2:
                            throw Error(errors.PUBKEY_PARSE);
                    }
                },
                ecdsaRecover(sig, recid, msg32, compressed = !0, output) {
                    switch (
                        (isUint8Array("signature", sig, 64),
                        assert("Number" === toTypeString(recid) && recid >= 0 && recid <= 3, "Expected recovery id to be a Number within interval [0, 3]"),
                        isUint8Array("message", msg32, 32),
                        isCompressed(compressed),
                        (output = getAssertedOutput(output, compressed ? 33 : 65)),
                        secp256k1.ecdsaRecover(output, sig, recid, msg32))
                    ) {
                        case 0:
                            return output;
                        case 1:
                            throw Error(errors.SIG_PARSE);
                        case 2:
                            throw Error(errors.RECOVER);
                        case 3:
                            throw Error(errors.IMPOSSIBLE_CASE);
                    }
                },
                ecdh(pubkey, seckey, options = {}, output) {
                    switch (
                        (isUint8Array("public key", pubkey, [33, 65]),
                        isUint8Array("private key", seckey, 32),
                        assert("Object" === toTypeString(options), "Expected options to be an Object"),
                        void 0 !== options.data && isUint8Array("options.data", options.data),
                        void 0 !== options.hashfn
                            ? (assert("Function" === toTypeString(options.hashfn), "Expected options.hashfn to be a Function"),
                              void 0 !== options.xbuf && isUint8Array("options.xbuf", options.xbuf, 32),
                              void 0 !== options.ybuf && isUint8Array("options.ybuf", options.ybuf, 32),
                              isUint8Array("output", output))
                            : (output = getAssertedOutput(output, 32)),
                        secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf))
                    ) {
                        case 0:
                            return output;
                        case 1:
                            throw Error(errors.PUBKEY_PARSE);
                        case 2:
                            throw Error(errors.ECDH);
                    }
                },
            });
        },
        80045: function (module, __unused_webpack_exports, __webpack_require__) {
            var nextTick,
                process = __webpack_require__(34155);
            (nextTick = function (fn) {
                setTimeout(fn, 0);
            }),
                void 0 !== process && process && "function" == typeof process.nextTick && (nextTick = process.nextTick),
                (module.exports = function (capacity) {
                    var semaphore = {
                        capacity: capacity || 1,
                        current: 0,
                        queue: [],
                        firstHere: !1,
                        take: function () {
                            if (!1 === semaphore.firstHere) {
                                semaphore.current++, (semaphore.firstHere = !0);
                                var isFirst = 1;
                            } else var isFirst = 0;
                            var item = { n: 1 };
                            "function" == typeof arguments[0] ? (item.task = arguments[0]) : (item.n = arguments[0]), arguments.length >= 2 && ("function" == typeof arguments[1] ? (item.task = arguments[1]) : (item.n = arguments[1]));
                            var task = item.task;
                            if (
                                ((item.task = function () {
                                    task(semaphore.leave);
                                }),
                                semaphore.current + item.n - isFirst > semaphore.capacity)
                            )
                                return 1 === isFirst && (semaphore.current--, (semaphore.firstHere = !1)), semaphore.queue.push(item);
                            (semaphore.current += item.n - isFirst), item.task(semaphore.leave), 1 === isFirst && (semaphore.firstHere = !1);
                        },
                        leave: function (n) {
                            if (((n = n || 1), (semaphore.current -= n), !semaphore.queue.length)) {
                                if (semaphore.current < 0) throw Error("leave called too many times.");
                                return;
                            }
                            var item = semaphore.queue[0];
                            item.n + semaphore.current > semaphore.capacity || (semaphore.queue.shift(), (semaphore.current += item.n), nextTick(item.task));
                        },
                        available: function (n) {
                            return (n = n || 1), semaphore.current + n <= semaphore.capacity;
                        },
                    };
                    return semaphore;
                });
        },
        24189: function (module, __unused_webpack_exports, __webpack_require__) {
            var Buffer = __webpack_require__(89509).Buffer;
            function Hash(blockSize, finalSize) {
                (this._block = Buffer.alloc(blockSize)), (this._finalSize = finalSize), (this._blockSize = blockSize), (this._len = 0);
            }
            (Hash.prototype.update = function (data, enc) {
                "string" == typeof data && ((enc = enc || "utf8"), (data = Buffer.from(data, enc)));
                for (var block = this._block, blockSize = this._blockSize, length = data.length, accum = this._len, offset = 0; offset < length; ) {
                    for (var assigned = accum % blockSize, remainder = Math.min(length - offset, blockSize - assigned), i = 0; i < remainder; i++) block[assigned + i] = data[offset + i];
                    (accum += remainder), (offset += remainder), accum % blockSize == 0 && this._update(block);
                }
                return (this._len += length), this;
            }),
                (Hash.prototype.digest = function (enc) {
                    var rem = this._len % this._blockSize;
                    (this._block[rem] = 128), this._block.fill(0, rem + 1), rem >= this._finalSize && (this._update(this._block), this._block.fill(0));
                    var bits = 8 * this._len;
                    if (bits <= 4294967295) this._block.writeUInt32BE(bits, this._blockSize - 4);
                    else {
                        var lowBits = (4294967295 & bits) >>> 0;
                        this._block.writeUInt32BE((bits - lowBits) / 4294967296, this._blockSize - 8), this._block.writeUInt32BE(lowBits, this._blockSize - 4);
                    }
                    this._update(this._block);
                    var hash = this._hash();
                    return enc ? hash.toString(enc) : hash;
                }),
                (Hash.prototype._update = function () {
                    throw Error("_update must be implemented by subclass");
                }),
                (module.exports = Hash);
        },
        89072: function (module, __unused_webpack_exports, __webpack_require__) {
            var exports = (module.exports = function (algorithm) {
                var Algorithm = exports[(algorithm = algorithm.toLowerCase())];
                if (!Algorithm) throw Error(algorithm + " is not supported (we accept pull requests)");
                return new Algorithm();
            });
            (exports.sha = __webpack_require__(74448)),
                (exports.sha1 = __webpack_require__(18336)),
                (exports.sha224 = __webpack_require__(48432)),
                (exports.sha256 = __webpack_require__(67499)),
                (exports.sha384 = __webpack_require__(51686)),
                (exports.sha512 = __webpack_require__(87816));
        },
        74448: function (module, __unused_webpack_exports, __webpack_require__) {
            var inherits = __webpack_require__(35717),
                Hash = __webpack_require__(24189),
                Buffer = __webpack_require__(89509).Buffer,
                K = [1518500249, 1859775393, -1894007588, -899497514],
                W = Array(80);
            function Sha() {
                this.init(), (this._w = W), Hash.call(this, 64, 56);
            }
            inherits(Sha, Hash),
                (Sha.prototype.init = function () {
                    return (this._a = 1732584193), (this._b = 4023233417), (this._c = 2562383102), (this._d = 271733878), (this._e = 3285377520), this;
                }),
                (Sha.prototype._update = function (M) {
                    for (var W = this._w, a = 0 | this._a, b = 0 | this._b, c = 0 | this._c, d = 0 | this._d, e = 0 | this._e, i = 0; i < 16; ++i) W[i] = M.readInt32BE(4 * i);
                    for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
                    for (var j = 0; j < 80; ++j) {
                        var num,
                            b1,
                            c1,
                            d1,
                            num1,
                            s = ~~(j / 20),
                            t = ((((num = a) << 5) | (num >>> 27)) + ((b1 = b), (c1 = c), (d1 = d), 0 === s ? (b1 & c1) | (~b1 & d1) : 2 === s ? (b1 & c1) | (b1 & d1) | (c1 & d1) : b1 ^ c1 ^ d1) + e + W[j] + K[s]) | 0;
                        (e = d), (d = c), (c = ((num1 = b) << 30) | (num1 >>> 2)), (b = a), (a = t);
                    }
                    (this._a = (a + this._a) | 0), (this._b = (b + this._b) | 0), (this._c = (c + this._c) | 0), (this._d = (d + this._d) | 0), (this._e = (e + this._e) | 0);
                }),
                (Sha.prototype._hash = function () {
                    var H = Buffer.allocUnsafe(20);
                    return H.writeInt32BE(0 | this._a, 0), H.writeInt32BE(0 | this._b, 4), H.writeInt32BE(0 | this._c, 8), H.writeInt32BE(0 | this._d, 12), H.writeInt32BE(0 | this._e, 16), H;
                }),
                (module.exports = Sha);
        },
        18336: function (module, __unused_webpack_exports, __webpack_require__) {
            var inherits = __webpack_require__(35717),
                Hash = __webpack_require__(24189),
                Buffer = __webpack_require__(89509).Buffer,
                K = [1518500249, 1859775393, -1894007588, -899497514],
                W = Array(80);
            function Sha1() {
                this.init(), (this._w = W), Hash.call(this, 64, 56);
            }
            inherits(Sha1, Hash),
                (Sha1.prototype.init = function () {
                    return (this._a = 1732584193), (this._b = 4023233417), (this._c = 2562383102), (this._d = 271733878), (this._e = 3285377520), this;
                }),
                (Sha1.prototype._update = function (M) {
                    for (var W = this._w, a = 0 | this._a, b = 0 | this._b, c = 0 | this._c, d = 0 | this._d, e = 0 | this._e, i = 0; i < 16; ++i) W[i] = M.readInt32BE(4 * i);
                    for (; i < 80; ++i) W[i] = ((num = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]) << 1) | (num >>> 31);
                    for (var j = 0; j < 80; ++j) {
                        var num,
                            num1,
                            b1,
                            c1,
                            d1,
                            num2,
                            s = ~~(j / 20),
                            t = ((((num1 = a) << 5) | (num1 >>> 27)) + ((b1 = b), (c1 = c), (d1 = d), 0 === s ? (b1 & c1) | (~b1 & d1) : 2 === s ? (b1 & c1) | (b1 & d1) | (c1 & d1) : b1 ^ c1 ^ d1) + e + W[j] + K[s]) | 0;
                        (e = d), (d = c), (c = ((num2 = b) << 30) | (num2 >>> 2)), (b = a), (a = t);
                    }
                    (this._a = (a + this._a) | 0), (this._b = (b + this._b) | 0), (this._c = (c + this._c) | 0), (this._d = (d + this._d) | 0), (this._e = (e + this._e) | 0);
                }),
                (Sha1.prototype._hash = function () {
                    var H = Buffer.allocUnsafe(20);
                    return H.writeInt32BE(0 | this._a, 0), H.writeInt32BE(0 | this._b, 4), H.writeInt32BE(0 | this._c, 8), H.writeInt32BE(0 | this._d, 12), H.writeInt32BE(0 | this._e, 16), H;
                }),
                (module.exports = Sha1);
        },
        48432: function (module, __unused_webpack_exports, __webpack_require__) {
            var inherits = __webpack_require__(35717),
                Sha256 = __webpack_require__(67499),
                Hash = __webpack_require__(24189),
                Buffer = __webpack_require__(89509).Buffer,
                W = Array(64);
            function Sha224() {
                this.init(), (this._w = W), Hash.call(this, 64, 56);
            }
            inherits(Sha224, Sha256),
                (Sha224.prototype.init = function () {
                    return (this._a = 3238371032), (this._b = 914150663), (this._c = 812702999), (this._d = 4144912697), (this._e = 4290775857), (this._f = 1750603025), (this._g = 1694076839), (this._h = 3204075428), this;
                }),
                (Sha224.prototype._hash = function () {
                    var H = Buffer.allocUnsafe(28);
                    return H.writeInt32BE(this._a, 0), H.writeInt32BE(this._b, 4), H.writeInt32BE(this._c, 8), H.writeInt32BE(this._d, 12), H.writeInt32BE(this._e, 16), H.writeInt32BE(this._f, 20), H.writeInt32BE(this._g, 24), H;
                }),
                (module.exports = Sha224);
        },
        67499: function (module, __unused_webpack_exports, __webpack_require__) {
            var inherits = __webpack_require__(35717),
                Hash = __webpack_require__(24189),
                Buffer = __webpack_require__(89509).Buffer,
                K = [
                    1116352408,
                    1899447441,
                    3049323471,
                    3921009573,
                    961987163,
                    1508970993,
                    2453635748,
                    2870763221,
                    3624381080,
                    310598401,
                    607225278,
                    1426881987,
                    1925078388,
                    2162078206,
                    2614888103,
                    3248222580,
                    3835390401,
                    4022224774,
                    264347078,
                    604807628,
                    770255983,
                    1249150122,
                    1555081692,
                    1996064986,
                    2554220882,
                    2821834349,
                    2952996808,
                    3210313671,
                    3336571891,
                    3584528711,
                    113926993,
                    338241895,
                    666307205,
                    773529912,
                    1294757372,
                    1396182291,
                    1695183700,
                    1986661051,
                    2177026350,
                    2456956037,
                    2730485921,
                    2820302411,
                    3259730800,
                    3345764771,
                    3516065817,
                    3600352804,
                    4094571909,
                    275423344,
                    430227734,
                    506948616,
                    659060556,
                    883997877,
                    958139571,
                    1322822218,
                    1537002063,
                    1747873779,
                    1955562222,
                    2024104815,
                    2227730452,
                    2361852424,
                    2428436474,
                    2756734187,
                    3204031479,
                    3329325298,
                ],
                W = Array(64);
            function Sha256() {
                this.init(), (this._w = W), Hash.call(this, 64, 56);
            }
            inherits(Sha256, Hash),
                (Sha256.prototype.init = function () {
                    return (this._a = 1779033703), (this._b = 3144134277), (this._c = 1013904242), (this._d = 2773480762), (this._e = 1359893119), (this._f = 2600822924), (this._g = 528734635), (this._h = 1541459225), this;
                }),
                (Sha256.prototype._update = function (M) {
                    for (var W = this._w, a = 0 | this._a, b = 0 | this._b, c = 0 | this._c, d = 0 | this._d, e = 0 | this._e, f = 0 | this._f, g = 0 | this._g, h = 0 | this._h, i = 0; i < 16; ++i) W[i] = M.readInt32BE(4 * i);
                    for (; i < 64; ++i)
                        W[i] = (((((x = W[i - 2]) >>> 17) | (x << 15)) ^ ((x >>> 19) | (x << 13)) ^ (x >>> 10)) + W[i - 7] + ((((x1 = W[i - 15]) >>> 7) | (x1 << 25)) ^ ((x1 >>> 18) | (x1 << 14)) ^ (x1 >>> 3)) + W[i - 16]) | 0;
                    for (var j = 0; j < 64; ++j) {
                        var x,
                            x1,
                            x2,
                            x3,
                            y,
                            z,
                            x4,
                            x5,
                            y1,
                            T1 = (h + ((((x2 = e) >>> 6) | (x2 << 26)) ^ ((x2 >>> 11) | (x2 << 21)) ^ ((x2 >>> 25) | (x2 << 7))) + ((x3 = e), (y = f), (z = g) ^ (x3 & (y ^ z))) + K[j] + W[j]) | 0,
                            T2 = (((((x4 = a) >>> 2) | (x4 << 30)) ^ ((x4 >>> 13) | (x4 << 19)) ^ ((x4 >>> 22) | (x4 << 10))) + (((x5 = a) & (y1 = b)) | (c & (x5 | y1)))) | 0;
                        (h = g), (g = f), (f = e), (e = (d + T1) | 0), (d = c), (c = b), (b = a), (a = (T1 + T2) | 0);
                    }
                    (this._a = (a + this._a) | 0),
                        (this._b = (b + this._b) | 0),
                        (this._c = (c + this._c) | 0),
                        (this._d = (d + this._d) | 0),
                        (this._e = (e + this._e) | 0),
                        (this._f = (f + this._f) | 0),
                        (this._g = (g + this._g) | 0),
                        (this._h = (h + this._h) | 0);
                }),
                (Sha256.prototype._hash = function () {
                    var H = Buffer.allocUnsafe(32);
                    return (
                        H.writeInt32BE(this._a, 0),
                        H.writeInt32BE(this._b, 4),
                        H.writeInt32BE(this._c, 8),
                        H.writeInt32BE(this._d, 12),
                        H.writeInt32BE(this._e, 16),
                        H.writeInt32BE(this._f, 20),
                        H.writeInt32BE(this._g, 24),
                        H.writeInt32BE(this._h, 28),
                        H
                    );
                }),
                (module.exports = Sha256);
        },
        51686: function (module, __unused_webpack_exports, __webpack_require__) {
            var inherits = __webpack_require__(35717),
                SHA512 = __webpack_require__(87816),
                Hash = __webpack_require__(24189),
                Buffer = __webpack_require__(89509).Buffer,
                W = Array(160);
            function Sha384() {
                this.init(), (this._w = W), Hash.call(this, 128, 112);
            }
            inherits(Sha384, SHA512),
                (Sha384.prototype.init = function () {
                    return (
                        (this._ah = 3418070365),
                        (this._bh = 1654270250),
                        (this._ch = 2438529370),
                        (this._dh = 355462360),
                        (this._eh = 1731405415),
                        (this._fh = 2394180231),
                        (this._gh = 3675008525),
                        (this._hh = 1203062813),
                        (this._al = 3238371032),
                        (this._bl = 914150663),
                        (this._cl = 812702999),
                        (this._dl = 4144912697),
                        (this._el = 4290775857),
                        (this._fl = 1750603025),
                        (this._gl = 1694076839),
                        (this._hl = 3204075428),
                        this
                    );
                }),
                (Sha384.prototype._hash = function () {
                    var H = Buffer.allocUnsafe(48);
                    function writeInt64BE(h, l, offset) {
                        H.writeInt32BE(h, offset), H.writeInt32BE(l, offset + 4);
                    }
                    return (
                        writeInt64BE(this._ah, this._al, 0),
                        writeInt64BE(this._bh, this._bl, 8),
                        writeInt64BE(this._ch, this._cl, 16),
                        writeInt64BE(this._dh, this._dl, 24),
                        writeInt64BE(this._eh, this._el, 32),
                        writeInt64BE(this._fh, this._fl, 40),
                        H
                    );
                }),
                (module.exports = Sha384);
        },
        87816: function (module, __unused_webpack_exports, __webpack_require__) {
            var inherits = __webpack_require__(35717),
                Hash = __webpack_require__(24189),
                Buffer = __webpack_require__(89509).Buffer,
                K = [
                    1116352408,
                    3609767458,
                    1899447441,
                    602891725,
                    3049323471,
                    3964484399,
                    3921009573,
                    2173295548,
                    961987163,
                    4081628472,
                    1508970993,
                    3053834265,
                    2453635748,
                    2937671579,
                    2870763221,
                    3664609560,
                    3624381080,
                    2734883394,
                    310598401,
                    1164996542,
                    607225278,
                    1323610764,
                    1426881987,
                    3590304994,
                    1925078388,
                    4068182383,
                    2162078206,
                    991336113,
                    2614888103,
                    633803317,
                    3248222580,
                    3479774868,
                    3835390401,
                    2666613458,
                    4022224774,
                    944711139,
                    264347078,
                    2341262773,
                    604807628,
                    2007800933,
                    770255983,
                    1495990901,
                    1249150122,
                    1856431235,
                    1555081692,
                    3175218132,
                    1996064986,
                    2198950837,
                    2554220882,
                    3999719339,
                    2821834349,
                    766784016,
                    2952996808,
                    2566594879,
                    3210313671,
                    3203337956,
                    3336571891,
                    1034457026,
                    3584528711,
                    2466948901,
                    113926993,
                    3758326383,
                    338241895,
                    168717936,
                    666307205,
                    1188179964,
                    773529912,
                    1546045734,
                    1294757372,
                    1522805485,
                    1396182291,
                    2643833823,
                    1695183700,
                    2343527390,
                    1986661051,
                    1014477480,
                    2177026350,
                    1206759142,
                    2456956037,
                    344077627,
                    2730485921,
                    1290863460,
                    2820302411,
                    3158454273,
                    3259730800,
                    3505952657,
                    3345764771,
                    106217008,
                    3516065817,
                    3606008344,
                    3600352804,
                    1432725776,
                    4094571909,
                    1467031594,
                    275423344,
                    851169720,
                    430227734,
                    3100823752,
                    506948616,
                    1363258195,
                    659060556,
                    3750685593,
                    883997877,
                    3785050280,
                    958139571,
                    3318307427,
                    1322822218,
                    3812723403,
                    1537002063,
                    2003034995,
                    1747873779,
                    3602036899,
                    1955562222,
                    1575990012,
                    2024104815,
                    1125592928,
                    2227730452,
                    2716904306,
                    2361852424,
                    442776044,
                    2428436474,
                    593698344,
                    2756734187,
                    3733110249,
                    3204031479,
                    2999351573,
                    3329325298,
                    3815920427,
                    3391569614,
                    3928383900,
                    3515267271,
                    566280711,
                    3940187606,
                    3454069534,
                    4118630271,
                    4000239992,
                    116418474,
                    1914138554,
                    174292421,
                    2731055270,
                    289380356,
                    3203993006,
                    460393269,
                    320620315,
                    685471733,
                    587496836,
                    852142971,
                    1086792851,
                    1017036298,
                    365543100,
                    1126000580,
                    2618297676,
                    1288033470,
                    3409855158,
                    1501505948,
                    4234509866,
                    1607167915,
                    987167468,
                    1816402316,
                    1246189591,
                ],
                W = Array(160);
            function Sha512() {
                this.init(), (this._w = W), Hash.call(this, 128, 112);
            }
            function sigma0(x, xl) {
                return ((x >>> 28) | (xl << 4)) ^ ((xl >>> 2) | (x << 30)) ^ ((xl >>> 7) | (x << 25));
            }
            function sigma1(x, xl) {
                return ((x >>> 14) | (xl << 18)) ^ ((x >>> 18) | (xl << 14)) ^ ((xl >>> 9) | (x << 23));
            }
            function getCarry(a, b) {
                return a >>> 0 < b >>> 0 ? 1 : 0;
            }
            inherits(Sha512, Hash),
                (Sha512.prototype.init = function () {
                    return (
                        (this._ah = 1779033703),
                        (this._bh = 3144134277),
                        (this._ch = 1013904242),
                        (this._dh = 2773480762),
                        (this._eh = 1359893119),
                        (this._fh = 2600822924),
                        (this._gh = 528734635),
                        (this._hh = 1541459225),
                        (this._al = 4089235720),
                        (this._bl = 2227873595),
                        (this._cl = 4271175723),
                        (this._dl = 1595750129),
                        (this._el = 2917565137),
                        (this._fl = 725511199),
                        (this._gl = 4215389547),
                        (this._hl = 327033209),
                        this
                    );
                }),
                (Sha512.prototype._update = function (M) {
                    for (
                        var W = this._w,
                            ah = 0 | this._ah,
                            bh = 0 | this._bh,
                            ch = 0 | this._ch,
                            dh = 0 | this._dh,
                            eh = 0 | this._eh,
                            fh = 0 | this._fh,
                            gh = 0 | this._gh,
                            hh = 0 | this._hh,
                            al = 0 | this._al,
                            bl = 0 | this._bl,
                            cl = 0 | this._cl,
                            dl = 0 | this._dl,
                            el = 0 | this._el,
                            fl = 0 | this._fl,
                            gl = 0 | this._gl,
                            hl = 0 | this._hl,
                            i = 0;
                        i < 32;
                        i += 2
                    )
                        (W[i] = M.readInt32BE(4 * i)), (W[i + 1] = M.readInt32BE(4 * i + 4));
                    for (; i < 160; i += 2) {
                        var x,
                            xl,
                            x1,
                            xl1,
                            x2,
                            xl2,
                            x3,
                            xl3,
                            xh = W[i - 30],
                            xl4 = W[i - 30 + 1],
                            gamma0 = (((x = xh) >>> 1) | ((xl = xl4) << 31)) ^ ((x >>> 8) | (xl << 24)) ^ (x >>> 7),
                            gamma0l = (((x1 = xl4) >>> 1) | ((xl1 = xh) << 31)) ^ ((x1 >>> 8) | (xl1 << 24)) ^ ((x1 >>> 7) | (xl1 << 25));
                        (xh = W[i - 4]), (xl4 = W[i - 4 + 1]);
                        var gamma1 = (((x2 = xh) >>> 19) | ((xl2 = xl4) << 13)) ^ ((xl2 >>> 29) | (x2 << 3)) ^ (x2 >>> 6),
                            gamma1l = (((x3 = xl4) >>> 19) | ((xl3 = xh) << 13)) ^ ((xl3 >>> 29) | (x3 << 3)) ^ ((x3 >>> 6) | (xl3 << 26)),
                            Wi7h = W[i - 14],
                            Wi7l = W[i - 14 + 1],
                            Wi16h = W[i - 32],
                            Wi16l = W[i - 32 + 1],
                            Wil = (gamma0l + Wi7l) | 0,
                            Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0;
                        (Wih = ((Wih = (Wih + gamma1 + getCarry((Wil = (Wil + gamma1l) | 0), gamma1l)) | 0) + Wi16h + getCarry((Wil = (Wil + Wi16l) | 0), Wi16l)) | 0), (W[i] = Wih), (W[i + 1] = Wil);
                    }
                    for (var j = 0; j < 160; j += 2) {
                        (Wih = W[j]), (Wil = W[j + 1]);
                        var x4,
                            y,
                            x5,
                            y1,
                            x6,
                            y2,
                            z,
                            x7,
                            y3,
                            z1,
                            majh = ((x4 = ah) & (y = bh)) | (ch & (x4 | y)),
                            majl = ((x5 = al) & (y1 = bl)) | (cl & (x5 | y1)),
                            sigma0h = sigma0(ah, al),
                            sigma0l = sigma0(al, ah),
                            sigma1h = sigma1(eh, el),
                            sigma1l = sigma1(el, eh),
                            Kih = K[j],
                            Kil = K[j + 1],
                            chh = ((x6 = eh), (y2 = fh), (z = gh) ^ (x6 & (y2 ^ z))),
                            chl = ((x7 = el), (y3 = fl), (z1 = gl) ^ (x7 & (y3 ^ z1))),
                            t1l = (hl + sigma1l) | 0,
                            t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0;
                        t1h = ((t1h = ((t1h = (t1h + chh + getCarry((t1l = (t1l + chl) | 0), chl)) | 0) + Kih + getCarry((t1l = (t1l + Kil) | 0), Kil)) | 0) + Wih + getCarry((t1l = (t1l + Wil) | 0), Wil)) | 0;
                        var t2l = (sigma0l + majl) | 0,
                            t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0;
                        (hh = gh),
                            (hl = gl),
                            (gh = fh),
                            (gl = fl),
                            (fh = eh),
                            (fl = el),
                            (eh = (dh + t1h + getCarry((el = (dl + t1l) | 0), dl)) | 0),
                            (dh = ch),
                            (dl = cl),
                            (ch = bh),
                            (cl = bl),
                            (bh = ah),
                            (bl = al),
                            (ah = (t1h + t2h + getCarry((al = (t1l + t2l) | 0), t1l)) | 0);
                    }
                    (this._al = (this._al + al) | 0),
                        (this._bl = (this._bl + bl) | 0),
                        (this._cl = (this._cl + cl) | 0),
                        (this._dl = (this._dl + dl) | 0),
                        (this._el = (this._el + el) | 0),
                        (this._fl = (this._fl + fl) | 0),
                        (this._gl = (this._gl + gl) | 0),
                        (this._hl = (this._hl + hl) | 0),
                        (this._ah = (this._ah + ah + getCarry(this._al, al)) | 0),
                        (this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0),
                        (this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0),
                        (this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0),
                        (this._eh = (this._eh + eh + getCarry(this._el, el)) | 0),
                        (this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0),
                        (this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0),
                        (this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0);
                }),
                (Sha512.prototype._hash = function () {
                    var H = Buffer.allocUnsafe(64);
                    function writeInt64BE(h, l, offset) {
                        H.writeInt32BE(h, offset), H.writeInt32BE(l, offset + 4);
                    }
                    return (
                        writeInt64BE(this._ah, this._al, 0),
                        writeInt64BE(this._bh, this._bl, 8),
                        writeInt64BE(this._ch, this._cl, 16),
                        writeInt64BE(this._dh, this._dl, 24),
                        writeInt64BE(this._eh, this._el, 32),
                        writeInt64BE(this._fh, this._fl, 40),
                        writeInt64BE(this._gh, this._gl, 48),
                        writeInt64BE(this._hh, this._hl, 56),
                        H
                    );
                }),
                (module.exports = Sha512);
        },
        96774: function (module) {
            module.exports = function (objA, objB, compare, compareContext) {
                var ret = compare ? compare.call(compareContext, objA, objB) : void 0;
                if (void 0 !== ret) return !!ret;
                if (objA === objB) return !0;
                if ("object" != typeof objA || !objA || "object" != typeof objB || !objB) return !1;
                var keysA = Object.keys(objA),
                    keysB = Object.keys(objB);
                if (keysA.length !== keysB.length) return !1;
                for (var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB), idx = 0; idx < keysA.length; idx++) {
                    var key = keysA[idx];
                    if (!bHasOwnProperty(key)) return !1;
                    var valueA = objA[key],
                        valueB = objB[key];
                    if (!1 === (ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0) || (void 0 === ret && valueA !== valueB)) return !1;
                }
                return !0;
            };
        },
        80500: function (module) {
            "use strict";
            module.exports = (string, separator) => {
                if (!("string" == typeof string && "string" == typeof separator)) throw TypeError("Expected the arguments to be of type `string`");
                if ("" === separator) return [string];
                let separatorIndex = string.indexOf(separator);
                return -1 === separatorIndex ? [string] : [string.slice(0, separatorIndex), string.slice(separatorIndex + separator.length)];
            };
        },
        70610: function (module) {
            "use strict";
            module.exports = (str) => encodeURIComponent(str).replace(/[!'()*]/g, (x) => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);
        },
        6941: function (__unused_webpack_module, exports, __webpack_require__) {
            var Buffer = __webpack_require__(48764).Buffer,
                isBufferEncoding =
                    Buffer.isEncoding ||
                    function (encoding) {
                        switch (encoding && encoding.toLowerCase()) {
                            case "hex":
                            case "utf8":
                            case "utf-8":
                            case "ascii":
                            case "binary":
                            case "base64":
                            case "ucs2":
                            case "ucs-2":
                            case "utf16le":
                            case "utf-16le":
                            case "raw":
                                return !0;
                            default:
                                return !1;
                        }
                    },
                StringDecoder = (exports.s = function (encoding) {
                    switch (
                        ((this.encoding = (encoding || "utf8").toLowerCase().replace(/[-_]/, "")),
                        !(function (encoding) {
                            if (encoding && !isBufferEncoding(encoding)) throw Error("Unknown encoding: " + encoding);
                        })(encoding),
                        this.encoding)
                    ) {
                        case "utf8":
                            this.surrogateSize = 3;
                            break;
                        case "ucs2":
                        case "utf16le":
                            (this.surrogateSize = 2), (this.detectIncompleteChar = utf16DetectIncompleteChar);
                            break;
                        case "base64":
                            (this.surrogateSize = 3), (this.detectIncompleteChar = base64DetectIncompleteChar);
                            break;
                        default:
                            this.write = passThroughWrite;
                            return;
                    }
                    (this.charBuffer = new Buffer(6)), (this.charReceived = 0), (this.charLength = 0);
                });
            function passThroughWrite(buffer) {
                return buffer.toString(this.encoding);
            }
            function utf16DetectIncompleteChar(buffer) {
                (this.charReceived = buffer.length % 2), (this.charLength = this.charReceived ? 2 : 0);
            }
            function base64DetectIncompleteChar(buffer) {
                (this.charReceived = buffer.length % 3), (this.charLength = this.charReceived ? 3 : 0);
            }
            (StringDecoder.prototype.write = function (buffer) {
                for (var charStr = ""; this.charLength; ) {
                    var available = buffer.length >= this.charLength - this.charReceived ? this.charLength - this.charReceived : buffer.length;
                    if ((buffer.copy(this.charBuffer, this.charReceived, 0, available), (this.charReceived += available), this.charReceived < this.charLength)) return "";
                    buffer = buffer.slice(available, buffer.length);
                    var charCode = (charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding)).charCodeAt(charStr.length - 1);
                    if (charCode >= 55296 && charCode <= 56319) {
                        (this.charLength += this.surrogateSize), (charStr = "");
                        continue;
                    }
                    if (((this.charReceived = this.charLength = 0), 0 === buffer.length)) return charStr;
                    break;
                }
                this.detectIncompleteChar(buffer);
                var end = buffer.length;
                this.charLength && (buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end), (end -= this.charReceived));
                var end = (charStr += buffer.toString(this.encoding, 0, end)).length - 1,
                    charCode = charStr.charCodeAt(end);
                if (charCode >= 55296 && charCode <= 56319) {
                    var size = this.surrogateSize;
                    return (this.charLength += size), (this.charReceived += size), this.charBuffer.copy(this.charBuffer, size, 0, size), buffer.copy(this.charBuffer, 0, 0, size), charStr.substring(0, end);
                }
                return charStr;
            }),
                (StringDecoder.prototype.detectIncompleteChar = function (buffer) {
                    for (var i = buffer.length >= 3 ? 3 : buffer.length; i > 0; i--) {
                        var c = buffer[buffer.length - i];
                        if (1 == i && c >> 5 == 6) {
                            this.charLength = 2;
                            break;
                        }
                        if (i <= 2 && c >> 4 == 14) {
                            this.charLength = 3;
                            break;
                        }
                        if (i <= 3 && c >> 3 == 30) {
                            this.charLength = 4;
                            break;
                        }
                    }
                    this.charReceived = i;
                }),
                (StringDecoder.prototype.end = function (buffer) {
                    var res = "";
                    if ((buffer && buffer.length && (res = this.write(buffer)), this.charReceived)) {
                        var cr = this.charReceived,
                            buf = this.charBuffer,
                            enc = this.encoding;
                        res += buf.slice(0, cr).toString(enc);
                    }
                    return res;
                });
        },
        49604: function (module, __unused_webpack_exports, __webpack_require__) {
            var isHexPrefixed = __webpack_require__(23944);
            module.exports = function (str) {
                return "string" != typeof str ? str : isHexPrefixed(str) ? str.slice(2) : str;
            };
        },
        87379: function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                f6: function () {
                    return Fe;
                },
                iv: function () {
                    return Ce;
                },
                ZP: function () {
                    return styled_components_browser_esm;
                },
                F4: function () {
                    return Ue;
                },
                Fg: function () {
                    return Ze;
                },
            });
            var t,
                cache,
                t1,
                react_is = __webpack_require__(59864),
                react = __webpack_require__(67294),
                shallowequal = __webpack_require__(96774),
                shallowequal_default = __webpack_require__.n(shallowequal),
                stylis_browser_esm = function (W) {
                    function X(d, c, e) {
                        var h = c.trim().split(ia);
                        c = h;
                        var a = h.length,
                            m = d.length;
                        switch (m) {
                            case 0:
                            case 1:
                                var b = 0;
                                for (d = 0 === m ? "" : d[0] + " "; b < a; ++b) c[b] = Z(d, c[b], e).trim();
                                break;
                            default:
                                var v = (b = 0);
                                for (c = []; b < a; ++b) for (var n = 0; n < m; ++n) c[v++] = Z(d[n] + " ", h[b], e).trim();
                        }
                        return c;
                    }
                    function Z(d, c, e) {
                        var h = c.charCodeAt(0);
                        switch ((33 > h && (h = (c = c.trim()).charCodeAt(0)), h)) {
                            case 38:
                                return c.replace(F, "$1" + d.trim());
                            case 58:
                                return d.trim() + c.replace(F, "$1" + d.trim());
                            default:
                                if (0 < 1 * e && 0 < c.indexOf("\f")) return c.replace(F, (58 === d.charCodeAt(0) ? "" : "$1") + d.trim());
                        }
                        return d + c;
                    }
                    function P(d, c, e, h) {
                        var a = d + ";",
                            m = 2 * c + 3 * e + 4 * h;
                        if (944 === m) {
                            d = a.indexOf(":", 9) + 1;
                            var b = a.substring(d, a.length - 1).trim();
                            return (b = a.substring(0, d).trim() + b + ";"), 1 === w || (2 === w && L(b, 1)) ? "-webkit-" + b + b : b;
                        }
                        if (0 === w || (2 === w && !L(a, 1))) return a;
                        switch (m) {
                            case 1015:
                                return 97 === a.charCodeAt(10) ? "-webkit-" + a + a : a;
                            case 951:
                                return 116 === a.charCodeAt(3) ? "-webkit-" + a + a : a;
                            case 963:
                                return 110 === a.charCodeAt(5) ? "-webkit-" + a + a : a;
                            case 1009:
                                if (100 !== a.charCodeAt(4)) break;
                            case 969:
                            case 942:
                                return "-webkit-" + a + a;
                            case 978:
                                return "-webkit-" + a + "-moz-" + a + a;
                            case 1019:
                            case 983:
                                return "-webkit-" + a + "-moz-" + a + "-ms-" + a + a;
                            case 883:
                                if (45 === a.charCodeAt(8)) return "-webkit-" + a + a;
                                if (0 < a.indexOf("image-set(", 11)) return a.replace(ja, "$1-webkit-$2") + a;
                                break;
                            case 932:
                                if (45 === a.charCodeAt(4))
                                    switch (a.charCodeAt(5)) {
                                        case 103:
                                            return "-webkit-box-" + a.replace("-grow", "") + "-webkit-" + a + "-ms-" + a.replace("grow", "positive") + a;
                                        case 115:
                                            return "-webkit-" + a + "-ms-" + a.replace("shrink", "negative") + a;
                                        case 98:
                                            return "-webkit-" + a + "-ms-" + a.replace("basis", "preferred-size") + a;
                                    }
                                return "-webkit-" + a + "-ms-" + a + a;
                            case 964:
                                return "-webkit-" + a + "-ms-flex-" + a + a;
                            case 1023:
                                if (99 !== a.charCodeAt(8)) break;
                                return "-webkit-box-pack" + (b = a.substring(a.indexOf(":", 15)).replace("flex-", "").replace("space-between", "justify")) + "-webkit-" + a + "-ms-flex-pack" + b + a;
                            case 1005:
                                return ka.test(a) ? a.replace(aa, ":-webkit-") + a.replace(aa, ":-moz-") + a : a;
                            case 1e3:
                                switch (((c = (b = a.substring(13).trim()).indexOf("-") + 1), b.charCodeAt(0) + b.charCodeAt(c))) {
                                    case 226:
                                        b = a.replace(G, "tb");
                                        break;
                                    case 232:
                                        b = a.replace(G, "tb-rl");
                                        break;
                                    case 220:
                                        b = a.replace(G, "lr");
                                        break;
                                    default:
                                        return a;
                                }
                                return "-webkit-" + a + "-ms-" + b + a;
                            case 1017:
                                if (-1 === a.indexOf("sticky", 9)) break;
                            case 975:
                                switch (((c = (a = d).length - 10), (m = (b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(":", 7) + 1).trim()).charCodeAt(0) + (0 | b.charCodeAt(7))))) {
                                    case 203:
                                        if (111 > b.charCodeAt(8)) break;
                                    case 115:
                                        a = a.replace(b, "-webkit-" + b) + ";" + a;
                                        break;
                                    case 207:
                                    case 102:
                                        a = a.replace(b, "-webkit-" + (102 < m ? "inline-" : "") + "box") + ";" + a.replace(b, "-webkit-" + b) + ";" + a.replace(b, "-ms-" + b + "box") + ";" + a;
                                }
                                return a + ";";
                            case 938:
                                if (45 === a.charCodeAt(5))
                                    switch (a.charCodeAt(6)) {
                                        case 105:
                                            return (b = a.replace("-items", "")), "-webkit-" + a + "-webkit-box-" + b + "-ms-flex-" + b + a;
                                        case 115:
                                            return "-webkit-" + a + "-ms-flex-item-" + a.replace(ba, "") + a;
                                        default:
                                            return "-webkit-" + a + "-ms-flex-line-pack" + a.replace("align-content", "").replace(ba, "") + a;
                                    }
                                break;
                            case 973:
                            case 989:
                                if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;
                            case 931:
                            case 953:
                                if (!0 === la.test(d))
                                    return 115 === (b = d.substring(d.indexOf(":") + 1)).charCodeAt(0)
                                        ? P(d.replace("stretch", "fill-available"), c, e, h).replace(":fill-available", ":stretch")
                                        : a.replace(b, "-webkit-" + b) + a.replace(b, "-moz-" + b.replace("fill-", "")) + a;
                                break;
                            case 962:
                                if (((a = "-webkit-" + a + (102 === a.charCodeAt(5) ? "-ms-" + a : "") + a), 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf("transform", 10)))
                                    return a.substring(0, a.indexOf(";", 27) + 1).replace(ma, "$1-webkit-$2") + a;
                        }
                        return a;
                    }
                    function L(d, c) {
                        var e = d.indexOf(1 === c ? ":" : "{"),
                            h = d.substring(0, 3 !== c ? e : 10);
                        return (e = d.substring(e + 1, d.length - 1)), R(2 !== c ? h : h.replace(na, "$1"), e, c);
                    }
                    function ea(d, c) {
                        var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));
                        return e !== c + ";" ? e.replace(oa, " or ($1)").substring(4) : "(" + c + ")";
                    }
                    function H(d, c, e, h, a, m, b, v, n, q) {
                        for (var w, g = 0, x = c; g < A; ++g)
                            switch ((w = S[g].call(B, d, x, e, h, a, m, b, v, n, q))) {
                                case void 0:
                                case !1:
                                case !0:
                                case null:
                                    break;
                                default:
                                    x = w;
                            }
                        if (x !== c) return x;
                    }
                    function U(d) {
                        return void 0 !== (d = d.prefix) && ((R = null), d ? ("function" != typeof d ? (w = 1) : ((w = 2), (R = d))) : (w = 0)), U;
                    }
                    function B(d, c) {
                        var e = d;
                        if ((33 > e.charCodeAt(0) && (e = e.trim()), (e = [e]), 0 < A)) {
                            var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);
                            void 0 !== h && "string" == typeof h && (c = h);
                        }
                        var a = (function M(d, c, e, h, a) {
                            for (var q, g, k, y, C, m = 0, b = 0, v = 0, n = 0, x = 0, K = 0, u = (k = q = 0), l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, f = "", p = "", F = "", G = ""; l < B; ) {
                                if (((g = e.charCodeAt(l)), l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), (n = v = m = 0), B++, J++), 0 === b + n + v + m)) {
                                    if (l === J && (0 < r && (f = f.replace(N, "")), 0 < f.trim().length)) {
                                        switch (g) {
                                            case 32:
                                            case 9:
                                            case 59:
                                            case 13:
                                            case 10:
                                                break;
                                            default:
                                                f += e.charAt(l);
                                        }
                                        g = 59;
                                    }
                                    switch (g) {
                                        case 123:
                                            for (q = (f = f.trim()).charCodeAt(0), k = 1, t = ++l; l < B; ) {
                                                switch ((g = e.charCodeAt(l))) {
                                                    case 123:
                                                        k++;
                                                        break;
                                                    case 125:
                                                        k--;
                                                        break;
                                                    case 47:
                                                        switch ((g = e.charCodeAt(l + 1))) {
                                                            case 42:
                                                            case 47:
                                                                a: {
                                                                    for (u = l + 1; u < J; ++u)
                                                                        switch (e.charCodeAt(u)) {
                                                                            case 47:
                                                                                if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {
                                                                                    l = u + 1;
                                                                                    break a;
                                                                                }
                                                                                break;
                                                                            case 10:
                                                                                if (47 === g) {
                                                                                    l = u + 1;
                                                                                    break a;
                                                                                }
                                                                        }
                                                                    l = u;
                                                                }
                                                        }
                                                        break;
                                                    case 91:
                                                        g++;
                                                    case 40:
                                                        g++;
                                                    case 34:
                                                    case 39:
                                                        for (; l++ < J && e.charCodeAt(l) !== g; );
                                                }
                                                if (0 === k) break;
                                                l++;
                                            }
                                            if (((k = e.substring(t, l)), 0 === q && (q = (f = f.replace(ca, "").trim()).charCodeAt(0)), 64 === q)) {
                                                switch ((0 < r && (f = f.replace(N, "")), (g = f.charCodeAt(1)))) {
                                                    case 100:
                                                    case 109:
                                                    case 115:
                                                    case 45:
                                                        r = c;
                                                        break;
                                                    default:
                                                        r = O;
                                                }
                                                if (
                                                    ((t = (k = M(c, r, k, g, a + 1)).length),
                                                    0 < A && ((r = X(O, f, I)), (C = H(3, k, r, c, D, z, t, g, a, h)), (f = r.join("")), void 0 !== C && 0 === (t = (k = C.trim()).length) && ((g = 0), (k = ""))),
                                                    0 < t)
                                                )
                                                    switch (g) {
                                                        case 115:
                                                            f = f.replace(da, ea);
                                                        case 100:
                                                        case 109:
                                                        case 45:
                                                            k = f + "{" + k + "}";
                                                            break;
                                                        case 107:
                                                            (k = (f = f.replace(fa, "$1 $2")) + "{" + k + "}"), (k = 1 === w || (2 === w && L("@" + k, 3)) ? "@-webkit-" + k + "@" + k : "@" + k);
                                                            break;
                                                        default:
                                                            (k = f + k), 112 === h && ((p += k), (k = ""));
                                                    }
                                                else k = "";
                                            } else k = M(c, X(c, f, I), k, h, a + 1);
                                            (F += k), (k = I = r = u = q = 0), (f = ""), (g = e.charCodeAt(++l));
                                            break;
                                        case 125:
                                        case 59:
                                            if (1 < (t = (f = (0 < r ? f.replace(N, "") : f).trim()).length))
                                                switch (
                                                    (0 === u && (45 === (q = f.charCodeAt(0)) || (96 < q && 123 > q)) && (t = (f = f.replace(" ", ":")).length),
                                                    0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = "\0\0"),
                                                    (q = f.charCodeAt(0)),
                                                    (g = f.charCodeAt(1)),
                                                    q)
                                                ) {
                                                    case 0:
                                                        break;
                                                    case 64:
                                                        if (105 === g || 99 === g) {
                                                            G += f + e.charAt(l);
                                                            break;
                                                        }
                                                    default:
                                                        58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));
                                                }
                                            (I = r = u = q = 0), (f = ""), (g = e.charCodeAt(++l));
                                    }
                                }
                                switch (g) {
                                    case 13:
                                    case 10:
                                        47 === b ? (b = 0) : 0 === 1 + q && 107 !== h && 0 < f.length && ((r = 1), (f += "\0")), 0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h), (z = 1), D++;
                                        break;
                                    case 59:
                                    case 125:
                                        if (0 === b + n + v + m) {
                                            z++;
                                            break;
                                        }
                                    default:
                                        switch ((z++, (y = e.charAt(l)), g)) {
                                            case 9:
                                            case 32:
                                                if (0 === n + m + b)
                                                    switch (x) {
                                                        case 44:
                                                        case 58:
                                                        case 9:
                                                        case 32:
                                                            y = "";
                                                            break;
                                                        default:
                                                            32 !== g && (y = " ");
                                                    }
                                                break;
                                            case 0:
                                                y = "\\0";
                                                break;
                                            case 12:
                                                y = "\\f";
                                                break;
                                            case 11:
                                                y = "\\v";
                                                break;
                                            case 38:
                                                0 === n + b + m && ((r = I = 1), (y = "\f" + y));
                                                break;
                                            case 108:
                                                if (0 === n + b + m + E && 0 < u)
                                                    switch (l - u) {
                                                        case 2:
                                                            112 === x && 58 === e.charCodeAt(l - 3) && (E = x);
                                                        case 8:
                                                            111 === K && (E = K);
                                                    }
                                                break;
                                            case 58:
                                                0 === n + b + m && (u = l);
                                                break;
                                            case 44:
                                                0 === b + v + n + m && ((r = 1), (y += "\r"));
                                                break;
                                            case 34:
                                            case 39:
                                                0 === b && (n = n === g ? 0 : 0 === n ? g : n);
                                                break;
                                            case 91:
                                                0 === n + b + v && m++;
                                                break;
                                            case 93:
                                                0 === n + b + v && m--;
                                                break;
                                            case 41:
                                                0 === n + b + m && v--;
                                                break;
                                            case 40:
                                                0 === n + b + m && (0 === q && (2 * x + 3 * K == 533 || (q = 1)), v++);
                                                break;
                                            case 64:
                                                0 === b + v + n + m + u + k && (k = 1);
                                                break;
                                            case 42:
                                            case 47:
                                                if (!(0 < n + m + v))
                                                    switch (b) {
                                                        case 0:
                                                            switch (2 * g + 3 * e.charCodeAt(l + 1)) {
                                                                case 235:
                                                                    b = 47;
                                                                    break;
                                                                case 220:
                                                                    (t = l), (b = 42);
                                                            }
                                                            break;
                                                        case 42:
                                                            47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), (y = ""), (b = 0));
                                                    }
                                        }
                                        0 === b && (f += y);
                                }
                                (K = x), (x = g), l++;
                            }
                            if (0 < (t = p.length)) {
                                if (((r = c), 0 < A && void 0 !== (C = H(2, p, r, d, D, z, t, h, a, h)) && 0 === (p = C).length)) return G + p + F;
                                if (((p = r.join(",") + "{" + p + "}"), 0 != w * E)) {
                                    switch ((2 !== w || L(p, 2) || (E = 0), E)) {
                                        case 111:
                                            p = p.replace(ha, ":-moz-$1") + p;
                                            break;
                                        case 112:
                                            p = p.replace(Q, "::-webkit-input-$1") + p.replace(Q, "::-moz-$1") + p.replace(Q, ":-ms-input-$1") + p;
                                    }
                                    E = 0;
                                }
                            }
                            return G + p + F;
                        })(O, e, c, 0, 0);
                        return 0 < A && void 0 !== (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0)) && (a = h), (E = 0), (z = D = 1), a;
                    }
                    var ca = /^\0+/g,
                        N = /[\0\r\f]/g,
                        aa = /: */g,
                        ka = /zoo|gra/,
                        ma = /([,: ])(transform)/g,
                        ia = /,\r+?/g,
                        F = /([\t\r\n ])*\f?&/g,
                        fa = /@(k\w+)\s*(\S*)\s*/,
                        Q = /::(place)/g,
                        ha = /:(read-only)/g,
                        G = /[svh]\w+-[tblr]{2}/,
                        da = /\(\s*(.*)\s*\)/g,
                        oa = /([\s\S]*?);/g,
                        ba = /-self|flex-/g,
                        na = /[^]*?(:[rp][el]a[\w-]+)[^]*/,
                        la = /stretch|:\s*\w+\-(?:conte|avail)/,
                        ja = /([^-])(image-set\()/,
                        z = 1,
                        D = 1,
                        E = 0,
                        w = 1,
                        O = [],
                        S = [],
                        A = 0,
                        R = null,
                        Y = 0;
                    return (
                        (B.use = function T(d) {
                            switch (d) {
                                case void 0:
                                case null:
                                    A = S.length = 0;
                                    break;
                                default:
                                    if ("function" == typeof d) S[A++] = d;
                                    else if ("object" == typeof d) for (var c = 0, e = d.length; c < e; ++c) T(d[c]);
                                    else Y = 0 | !!d;
                            }
                            return T;
                        }),
                        (B.set = U),
                        void 0 !== W && U(W),
                        B
                    );
                },
                unitless_browser_esm = {
                    animationIterationCount: 1,
                    borderImageOutset: 1,
                    borderImageSlice: 1,
                    borderImageWidth: 1,
                    boxFlex: 1,
                    boxFlexGroup: 1,
                    boxOrdinalGroup: 1,
                    columnCount: 1,
                    columns: 1,
                    flex: 1,
                    flexGrow: 1,
                    flexPositive: 1,
                    flexShrink: 1,
                    flexNegative: 1,
                    flexOrder: 1,
                    gridRow: 1,
                    gridRowEnd: 1,
                    gridRowSpan: 1,
                    gridRowStart: 1,
                    gridColumn: 1,
                    gridColumnEnd: 1,
                    gridColumnSpan: 1,
                    gridColumnStart: 1,
                    msGridRow: 1,
                    msGridRowSpan: 1,
                    msGridColumn: 1,
                    msGridColumnSpan: 1,
                    fontWeight: 1,
                    lineHeight: 1,
                    opacity: 1,
                    order: 1,
                    orphans: 1,
                    tabSize: 1,
                    widows: 1,
                    zIndex: 1,
                    zoom: 1,
                    WebkitLineClamp: 1,
                    fillOpacity: 1,
                    floodOpacity: 1,
                    stopOpacity: 1,
                    strokeDasharray: 1,
                    strokeDashoffset: 1,
                    strokeMiterlimit: 1,
                    strokeOpacity: 1,
                    strokeWidth: 1,
                },
                reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,
                index =
                    ((cache = {}),
                    function (arg) {
                        return void 0 === cache[arg] && (cache[arg] = reactPropsRegex.test(arg) || (111 === arg.charCodeAt(0) && 110 === arg.charCodeAt(1) && 91 > arg.charCodeAt(2))), cache[arg];
                    }),
                hoist_non_react_statics_cjs = __webpack_require__(8679),
                hoist_non_react_statics_cjs_default = __webpack_require__.n(hoist_non_react_statics_cjs),
                process = __webpack_require__(34155);
            function v() {
                return (v =
                    Object.assign ||
                    function (e) {
                        for (var t = 1; t < arguments.length; t++) {
                            var n = arguments[t];
                            for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
                        }
                        return e;
                    }).apply(this, arguments);
            }
            var g = function (e, t) {
                    for (var n = [e[0]], r = 0, o = t.length; r < o; r += 1) n.push(t[r], e[r + 1]);
                    return n;
                },
                S = function (t) {
                    return null !== t && "object" == typeof t && "[object Object]" === (t.toString ? t.toString() : Object.prototype.toString.call(t)) && !(0, react_is.typeOf)(t);
                },
                w = Object.freeze([]),
                E = Object.freeze({});
            function b(e) {
                return "function" == typeof e;
            }
            function _(e) {
                return e.displayName || e.name || "Component";
            }
            function N(e) {
                return e && "string" == typeof e.styledComponentId;
            }
            var A = (void 0 !== process && ({ BUILD_ID: "F0-wW3zApC63H1SDF0KpF" }.REACT_APP_SC_ATTR || { BUILD_ID: "F0-wW3zApC63H1SDF0KpF" }.SC_ATTR)) || "data-styled",
                I = "undefined" != typeof window && "HTMLElement" in window,
                P = Boolean(
                    "boolean" == typeof SC_DISABLE_SPEEDY
                        ? SC_DISABLE_SPEEDY
                        : void 0 !== process && void 0 !== { BUILD_ID: "F0-wW3zApC63H1SDF0KpF" }.REACT_APP_SC_DISABLE_SPEEDY && "" !== { BUILD_ID: "F0-wW3zApC63H1SDF0KpF" }.REACT_APP_SC_DISABLE_SPEEDY
                        ? "false" !== { BUILD_ID: "F0-wW3zApC63H1SDF0KpF" }.REACT_APP_SC_DISABLE_SPEEDY && { BUILD_ID: "F0-wW3zApC63H1SDF0KpF" }.REACT_APP_SC_DISABLE_SPEEDY
                        : void 0 !== process &&
                          void 0 !== { BUILD_ID: "F0-wW3zApC63H1SDF0KpF" }.SC_DISABLE_SPEEDY &&
                          "" !== { BUILD_ID: "F0-wW3zApC63H1SDF0KpF" }.SC_DISABLE_SPEEDY &&
                          "false" !== { BUILD_ID: "F0-wW3zApC63H1SDF0KpF" }.SC_DISABLE_SPEEDY &&
                          { BUILD_ID: "F0-wW3zApC63H1SDF0KpF" }.SC_DISABLE_SPEEDY
                );
            function j(e) {
                for (var t = arguments.length, n = Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                throw Error("An error occurred. See https://git.io/JUIaE#" + e + " for more information." + (n.length > 0 ? " Args: " + n.join(", ") : ""));
            }
            var T = (function () {
                    function e(e) {
                        (this.groupSizes = new Uint32Array(512)), (this.length = 512), (this.tag = e);
                    }
                    var t = e.prototype;
                    return (
                        (t.indexOfGroup = function (e) {
                            for (var t = 0, n = 0; n < e; n++) t += this.groupSizes[n];
                            return t;
                        }),
                        (t.insertRules = function (e, t) {
                            if (e >= this.groupSizes.length) {
                                for (var n = this.groupSizes, r = n.length, o = r; e >= o; ) (o <<= 1) < 0 && j(16, "" + e);
                                (this.groupSizes = new Uint32Array(o)), this.groupSizes.set(n), (this.length = o);
                                for (var s = r; s < o; s++) this.groupSizes[s] = 0;
                            }
                            for (var i = this.indexOfGroup(e + 1), a = 0, c = t.length; a < c; a++) this.tag.insertRule(i, t[a]) && (this.groupSizes[e]++, i++);
                        }),
                        (t.clearGroup = function (e) {
                            if (e < this.length) {
                                var t = this.groupSizes[e],
                                    n = this.indexOfGroup(e),
                                    r = n + t;
                                this.groupSizes[e] = 0;
                                for (var o = n; o < r; o++) this.tag.deleteRule(n);
                            }
                        }),
                        (t.getGroup = function (e) {
                            var t = "";
                            if (e >= this.length || 0 === this.groupSizes[e]) return t;
                            for (var n = this.groupSizes[e], r = this.indexOfGroup(e), o = r + n, s = r; s < o; s++) t += this.tag.getRule(s) + "/*!sc*/\n";
                            return t;
                        }),
                        e
                    );
                })(),
                x = new Map(),
                k = new Map(),
                V = 1,
                B = function (e) {
                    if (x.has(e)) return x.get(e);
                    for (; k.has(V); ) V++;
                    var t = V++;
                    return x.set(e, t), k.set(t, e), t;
                },
                M = function (e, t) {
                    t >= V && (V = t + 1), x.set(e, t), k.set(t, e);
                },
                G = "style[" + A + '][data-styled-version="5.3.3"]',
                L = RegExp("^" + A + '\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'),
                F = function (e, t, n) {
                    for (var r, o = n.split(","), s = 0, i = o.length; s < i; s++) (r = o[s]) && e.registerName(t, r);
                },
                Y = function (e, t) {
                    for (var n = (t.textContent || "").split("/*!sc*/\n"), r = [], o = 0, s = n.length; o < s; o++) {
                        var i = n[o].trim();
                        if (i) {
                            var a = i.match(L);
                            if (a) {
                                var c = 0 | parseInt(a[1], 10),
                                    u = a[2];
                                0 !== c && (M(u, c), F(e, u, a[3]), e.getTag().insertRules(c, r)), (r.length = 0);
                            } else r.push(i);
                        }
                    }
                },
                q = function () {
                    return "undefined" != typeof window && void 0 !== window.__webpack_nonce__ ? window.__webpack_nonce__ : null;
                },
                H = function (e) {
                    var t = document.head,
                        n = e || t,
                        r = document.createElement("style"),
                        o = (function (e) {
                            for (var t = e.childNodes, n = t.length; n >= 0; n--) {
                                var r = t[n];
                                if (r && 1 === r.nodeType && r.hasAttribute(A)) return r;
                            }
                        })(n),
                        s = void 0 !== o ? o.nextSibling : null;
                    r.setAttribute(A, "active"), r.setAttribute("data-styled-version", "5.3.3");
                    var i = q();
                    return i && r.setAttribute("nonce", i), n.insertBefore(r, s), r;
                },
                $ = (function () {
                    function e(e) {
                        var t = (this.element = H(e));
                        t.appendChild(document.createTextNode("")),
                            (this.sheet = (function (e) {
                                if (e.sheet) return e.sheet;
                                for (var t = document.styleSheets, n = 0, r = t.length; n < r; n++) {
                                    var o = t[n];
                                    if (o.ownerNode === e) return o;
                                }
                                j(17);
                            })(t)),
                            (this.length = 0);
                    }
                    var t = e.prototype;
                    return (
                        (t.insertRule = function (e, t) {
                            try {
                                return this.sheet.insertRule(t, e), this.length++, !0;
                            } catch (e1) {
                                return !1;
                            }
                        }),
                        (t.deleteRule = function (e) {
                            this.sheet.deleteRule(e), this.length--;
                        }),
                        (t.getRule = function (e) {
                            var t = this.sheet.cssRules[e];
                            return void 0 !== t && "string" == typeof t.cssText ? t.cssText : "";
                        }),
                        e
                    );
                })(),
                W = (function () {
                    function e(e) {
                        var t = (this.element = H(e));
                        (this.nodes = t.childNodes), (this.length = 0);
                    }
                    var t = e.prototype;
                    return (
                        (t.insertRule = function (e, t) {
                            if (e <= this.length && e >= 0) {
                                var n = document.createTextNode(t),
                                    r = this.nodes[e];
                                return this.element.insertBefore(n, r || null), this.length++, !0;
                            }
                            return !1;
                        }),
                        (t.deleteRule = function (e) {
                            this.element.removeChild(this.nodes[e]), this.length--;
                        }),
                        (t.getRule = function (e) {
                            return e < this.length ? this.nodes[e].textContent : "";
                        }),
                        e
                    );
                })(),
                U = (function () {
                    function e(e) {
                        (this.rules = []), (this.length = 0);
                    }
                    var t = e.prototype;
                    return (
                        (t.insertRule = function (e, t) {
                            return e <= this.length && (this.rules.splice(e, 0, t), this.length++, !0);
                        }),
                        (t.deleteRule = function (e) {
                            this.rules.splice(e, 1), this.length--;
                        }),
                        (t.getRule = function (e) {
                            return e < this.length ? this.rules[e] : "";
                        }),
                        e
                    );
                })(),
                J = I,
                X = { isServer: !I, useCSSOMInjection: !P },
                Z = (function () {
                    function e(e, t, n) {
                        void 0 === e && (e = E),
                            void 0 === t && (t = {}),
                            (this.options = v({}, X, {}, e)),
                            (this.gs = t),
                            (this.names = new Map(n)),
                            (this.server = !!e.isServer),
                            !this.server &&
                                I &&
                                J &&
                                ((J = !1),
                                (function (e) {
                                    for (var t = document.querySelectorAll(G), n = 0, r = t.length; n < r; n++) {
                                        var o = t[n];
                                        o && "active" !== o.getAttribute(A) && (Y(e, o), o.parentNode && o.parentNode.removeChild(o));
                                    }
                                })(this));
                    }
                    e.registerId = function (e) {
                        return B(e);
                    };
                    var t = e.prototype;
                    return (
                        (t.reconstructWithOptions = function (t, n) {
                            return void 0 === n && (n = !0), new e(v({}, this.options, {}, t), this.gs, (n && this.names) || void 0);
                        }),
                        (t.allocateGSInstance = function (e) {
                            return (this.gs[e] = (this.gs[e] || 0) + 1);
                        }),
                        (t.getTag = function () {
                            var e, t, n, r, o;
                            return this.tag || (this.tag = ((n = (t = this.options).isServer), (r = t.useCSSOMInjection), (o = t.target), (e = n ? new U(o) : r ? new $(o) : new W(o)), new T(e)));
                        }),
                        (t.hasNameForId = function (e, t) {
                            return this.names.has(e) && this.names.get(e).has(t);
                        }),
                        (t.registerName = function (e, t) {
                            if ((B(e), this.names.has(e))) this.names.get(e).add(t);
                            else {
                                var n = new Set();
                                n.add(t), this.names.set(e, n);
                            }
                        }),
                        (t.insertRules = function (e, t, n) {
                            this.registerName(e, t), this.getTag().insertRules(B(e), n);
                        }),
                        (t.clearNames = function (e) {
                            this.names.has(e) && this.names.get(e).clear();
                        }),
                        (t.clearRules = function (e) {
                            this.getTag().clearGroup(B(e)), this.clearNames(e);
                        }),
                        (t.clearTag = function () {
                            this.tag = void 0;
                        }),
                        (t.toString = function () {
                            return (function (e) {
                                for (var t = e.getTag(), n = t.length, r = "", o = 0; o < n; o++) {
                                    var e1,
                                        s = ((e1 = o), k.get(e1));
                                    if (void 0 !== s) {
                                        var i = e.names.get(s),
                                            a = t.getGroup(o);
                                        if (i && a && i.size) {
                                            var c = A + ".g" + o + '[id="' + s + '"]',
                                                u = "";
                                            void 0 !== i &&
                                                i.forEach(function (e) {
                                                    e.length > 0 && (u += e + ",");
                                                }),
                                                (r += "" + a + c + '{content:"' + u + '"}/*!sc*/\n');
                                        }
                                    }
                                }
                                return r;
                            })(this);
                        }),
                        e
                    );
                })(),
                K = /(a)(d)/gi,
                Q = function (e) {
                    return String.fromCharCode(e + (e > 25 ? 39 : 97));
                };
            function ee(e) {
                var t,
                    n = "";
                for (t = Math.abs(e); t > 52; t = (t / 52) | 0) n = Q(t % 52) + n;
                return (Q(t % 52) + n).replace(K, "$1-$2");
            }
            var te = function (e, t) {
                    for (var n = t.length; n; ) e = (33 * e) ^ t.charCodeAt(--n);
                    return e;
                },
                ne = function (e) {
                    return te(5381, e);
                };
            function re(e) {
                for (var t = 0; t < e.length; t += 1) {
                    var n = e[t];
                    if (b(n) && !N(n)) return !1;
                }
                return !0;
            }
            var oe = ne("5.3.3"),
                se = (function () {
                    function e(e, t, n) {
                        (this.rules = e), (this.staticRulesId = ""), (this.isStatic = (void 0 === n || n.isStatic) && re(e)), (this.componentId = t), (this.baseHash = te(oe, t)), (this.baseStyle = n), Z.registerId(t);
                    }
                    return (
                        (e.prototype.generateAndInjectStyles = function (e, t, n) {
                            var r = this.componentId,
                                o = [];
                            if ((this.baseStyle && o.push(this.baseStyle.generateAndInjectStyles(e, t, n)), this.isStatic && !n.hash)) {
                                if (this.staticRulesId && t.hasNameForId(r, this.staticRulesId)) o.push(this.staticRulesId);
                                else {
                                    var s = Ne(this.rules, e, t, n).join(""),
                                        i = ee(te(this.baseHash, s) >>> 0);
                                    if (!t.hasNameForId(r, i)) {
                                        var a = n(s, "." + i, void 0, r);
                                        t.insertRules(r, i, a);
                                    }
                                    o.push(i), (this.staticRulesId = i);
                                }
                            } else {
                                for (var c = this.rules.length, u = te(this.baseHash, n.hash), l = "", d = 0; d < c; d++) {
                                    var h = this.rules[d];
                                    if ("string" == typeof h) l += h;
                                    else if (h) {
                                        var p = Ne(h, e, t, n),
                                            f = Array.isArray(p) ? p.join("") : p;
                                        (u = te(u, f + d)), (l += f);
                                    }
                                }
                                if (l) {
                                    var m = ee(u >>> 0);
                                    if (!t.hasNameForId(r, m)) {
                                        var y = n(l, "." + m, void 0, r);
                                        t.insertRules(r, m, y);
                                    }
                                    o.push(m);
                                }
                            }
                            return o.join(" ");
                        }),
                        e
                    );
                })(),
                ie = /^\s*\/\/.*$/gm,
                ae = [":", "[", ".", "#"];
            function ce(e) {
                var t,
                    n,
                    r,
                    o,
                    s = void 0 === e ? E : e,
                    i = s.options,
                    c = s.plugins,
                    u = void 0 === c ? w : c,
                    l = new stylis_browser_esm(void 0 === i ? E : i),
                    d = [],
                    h = (function (e) {
                        function t(t) {
                            if (t)
                                try {
                                    e(t + "}");
                                } catch (e1) {}
                        }
                        return function (n, r, o, s, i, a, c, u, l, d) {
                            switch (n) {
                                case 1:
                                    if (0 === l && 64 === r.charCodeAt(0)) return e(r + ";"), "";
                                    break;
                                case 2:
                                    if (0 === u) return r + "/*|*/";
                                    break;
                                case 3:
                                    switch (u) {
                                        case 102:
                                        case 112:
                                            return e(o[0] + r), "";
                                        default:
                                            return r + (0 === d ? "/*|*/" : "");
                                    }
                                case -2:
                                    r.split("/*|*/}").forEach(t);
                            }
                        };
                    })(function (e) {
                        d.push(e);
                    }),
                    f = function (e, r, s) {
                        return (0 === r && -1 !== ae.indexOf(s[n.length])) || s.match(o) ? e : "." + t;
                    };
                function m(e, s, i, a) {
                    void 0 === a && (a = "&");
                    var c = e.replace(ie, "");
                    return (t = a), (r = RegExp("\\" + (n = s) + "\\b", "g")), (o = RegExp("(\\" + n + "\\b){2,}")), l(i || !s ? "" : s, s && i ? i + " " + s + " { " + c + " }" : c);
                }
                return (
                    l.use(
                        [].concat(u, [
                            function (e, t, o) {
                                2 === e && o.length && o[0].lastIndexOf(n) > 0 && (o[0] = o[0].replace(r, f));
                            },
                            h,
                            function (e) {
                                if (-2 === e) {
                                    var t = d;
                                    return (d = []), t;
                                }
                            },
                        ])
                    ),
                    (m.hash = u.length
                        ? u
                              .reduce(function (e, t) {
                                  return t.name || j(15), te(e, t.name);
                              }, 5381)
                              .toString()
                        : ""),
                    m
                );
            }
            var ue = react.createContext(),
                de = (ue.Consumer, react.createContext()),
                he = (de.Consumer, new Z()),
                pe = ce();
            function fe() {
                return (0, react.useContext)(ue) || he;
            }
            function ye(e) {
                var t = (0, react.useState)(e.stylisPlugins),
                    n = t[0],
                    s = t[1],
                    c = fe(),
                    u = (0, react.useMemo)(
                        function () {
                            var t = c;
                            return e.sheet ? (t = e.sheet) : e.target && (t = t.reconstructWithOptions({ target: e.target }, !1)), e.disableCSSOMInjection && (t = t.reconstructWithOptions({ useCSSOMInjection: !1 })), t;
                        },
                        [e.disableCSSOMInjection, e.sheet, e.target]
                    ),
                    l = (0, react.useMemo)(
                        function () {
                            return ce({ options: { prefix: !e.disableVendorPrefixes }, plugins: n });
                        },
                        [e.disableVendorPrefixes, n]
                    );
                return (
                    (0, react.useEffect)(
                        function () {
                            shallowequal_default()(n, e.stylisPlugins) || s(e.stylisPlugins);
                        },
                        [e.stylisPlugins]
                    ),
                    react.createElement(ue.Provider, { value: u }, react.createElement(de.Provider, { value: l }, e.children))
                );
            }
            var ve = (function () {
                    function e(e, t) {
                        var n = this;
                        (this.inject = function (e, t) {
                            void 0 === t && (t = pe);
                            var r = n.name + t.hash;
                            e.hasNameForId(n.id, r) || e.insertRules(n.id, r, t(n.rules, r, "@keyframes"));
                        }),
                            (this.toString = function () {
                                return j(12, String(n.name));
                            }),
                            (this.name = e),
                            (this.id = "sc-keyframes-" + e),
                            (this.rules = t);
                    }
                    return (
                        (e.prototype.getName = function (e) {
                            return void 0 === e && (e = pe), this.name + e.hash;
                        }),
                        e
                    );
                })(),
                ge = /([A-Z])/,
                Se = /([A-Z])/g,
                we = /^ms-/,
                Ee = function (e) {
                    return "-" + e.toLowerCase();
                };
            function be(e) {
                return ge.test(e) ? e.replace(Se, Ee).replace(we, "-ms-") : e;
            }
            var _e = function (e) {
                return null == e || !1 === e || "" === e;
            };
            function Ne(e, n, r, o) {
                if (Array.isArray(e)) {
                    for (var s, i = [], a = 0, c = e.length; a < c; a += 1) "" !== (s = Ne(e[a], n, r, o)) && (Array.isArray(s) ? i.push.apply(i, s) : i.push(s));
                    return i;
                }
                return _e(e)
                    ? ""
                    : N(e)
                    ? "." + e.styledComponentId
                    : b(e)
                    ? "function" != typeof e || (e.prototype && e.prototype.isReactComponent) || !n
                        ? e
                        : Ne(e(n), n, r, o)
                    : e instanceof ve
                    ? r
                        ? (e.inject(r, o), e.getName(o))
                        : e
                    : S(e)
                    ? (function e(t, n) {
                          var r,
                              o,
                              s = [];
                          for (var i in t)
                              t.hasOwnProperty(i) &&
                                  !_e(t[i]) &&
                                  ((Array.isArray(t[i]) && t[i].isCss) || b(t[i])
                                      ? s.push(be(i) + ":", t[i], ";")
                                      : S(t[i])
                                      ? s.push.apply(s, e(t[i], i))
                                      : s.push(be(i) + ": " + ((r = i), null == (o = t[i]) || "boolean" == typeof o || "" === o ? "" : "number" != typeof o || 0 === o || r in unitless_browser_esm ? String(o).trim() : o + "px") + ";"));
                          return n ? [n + " {"].concat(s, ["}"]) : s;
                      })(e)
                    : e.toString();
            }
            var Ae = function (e) {
                return Array.isArray(e) && (e.isCss = !0), e;
            };
            function Ce(e) {
                for (var t = arguments.length, n = Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                return b(e) || S(e) ? Ae(Ne(g(w, [e].concat(n)))) : 0 === n.length && 1 === e.length && "string" == typeof e[0] ? e : Ae(Ne(g(e, n)));
            }
            var De = /[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,
                je = /(^-|-$)/g;
            function Te(e) {
                return e.replace(De, "-").replace(je, "");
            }
            var xe = function (e) {
                return ee(ne(e) >>> 0);
            };
            function ke(e) {
                return "string" == typeof e;
            }
            var Ve = function (e) {
                    return "function" == typeof e || ("object" == typeof e && null !== e && !Array.isArray(e));
                },
                Ge = react.createContext();
            function Fe(e) {
                var t = (0, react.useContext)(Ge),
                    n = (0, react.useMemo)(
                        function () {
                            var e1;
                            return (e1 = e.theme) ? (b(e1) ? e1(t) : Array.isArray(e1) || "object" != typeof e1 ? j(8) : t ? v({}, t, {}, e1) : e1) : j(14);
                        },
                        [e.theme, t]
                    );
                return e.children ? react.createElement(Ge.Provider, { value: n }, e.children) : null;
            }
            Ge.Consumer;
            var Ye = {},
                He = function (e) {
                    return (function e(t, r, o) {
                        if ((void 0 === o && (o = E), !(0, react_is.isValidElementType)(r))) return j(1, String(r));
                        var s = function () {
                            return t(r, o, Ce.apply(void 0, arguments));
                        };
                        return (
                            (s.withConfig = function (n) {
                                return e(t, r, v({}, o, {}, n));
                            }),
                            (s.attrs = function (n) {
                                return e(t, r, v({}, o, { attrs: Array.prototype.concat(o.attrs, n).filter(Boolean) }));
                            }),
                            s
                        );
                    })(function qe(e, t, n) {
                        var o = N(e),
                            i = !ke(e),
                            a = t.attrs,
                            c = void 0 === a ? w : a,
                            d = t.componentId,
                            h =
                                void 0 === d
                                    ? ((e1 = t.displayName), (t1 = t.parentComponentId), (Ye[(n1 = "string" != typeof e1 ? "sc" : Te(e1))] = (Ye[n1] || 0) + 1), (r = n1 + "-" + xe("5.3.3" + n1 + Ye[n1])), t1 ? t1 + "-" + r : r)
                                    : d,
                            p = t.displayName,
                            f = void 0 === p ? (ke(e) ? "styled." + e : "Styled(" + _(e) + ")") : p,
                            g = t.displayName && t.componentId ? Te(t.displayName) + "-" + t.componentId : t.componentId || h,
                            S = o && e.attrs ? Array.prototype.concat(e.attrs, c).filter(Boolean) : c,
                            A = t.shouldForwardProp;
                        o &&
                            e.shouldForwardProp &&
                            (A = t.shouldForwardProp
                                ? function (n, r, o) {
                                      return e.shouldForwardProp(n, r, o) && t.shouldForwardProp(n, r, o);
                                  }
                                : e.shouldForwardProp);
                        var e1,
                            t1,
                            n1,
                            r,
                            C,
                            I = new se(n, g, o ? e.componentStyle : void 0),
                            P = I.isStatic && 0 === c.length,
                            O = function (e, t) {
                                return (function (e, t, n, r) {
                                    var t1,
                                        n1,
                                        e1,
                                        r1,
                                        o,
                                        o1,
                                        s,
                                        o2 = e.attrs,
                                        i = e.componentStyle,
                                        a = e.defaultProps,
                                        c = e.foldedComponentIds,
                                        d = e.shouldForwardProp,
                                        h = e.styledComponentId,
                                        p = e.target,
                                        f =
                                            ((t1 = (0, react.useContext)(Ge)),
                                            void 0 === (n1 = a) && (n1 = E),
                                            void 0 === (e1 = (t.theme !== n1.theme && t.theme) || t1 || n1.theme || E) && (e1 = E),
                                            (r1 = v({}, t, { theme: e1 })),
                                            (o = {}),
                                            o2.forEach(function (e) {
                                                var t,
                                                    n,
                                                    s,
                                                    i = e;
                                                for (t in (b(i) && (i = i(r1)), i)) r1[t] = o[t] = "className" === t ? ((n = o[t]), (s = i[t]), n && s ? n + " " + s : n || s) : i[t];
                                            }),
                                            [r1, o]),
                                        y = f[0],
                                        g = f[1],
                                        S = ((o1 = fe()), (s = (0, react.useContext)(de) || pe), r ? i.generateAndInjectStyles(E, o1, s) : i.generateAndInjectStyles(y, o1, s)),
                                        _ = g.$as || t.$as || g.as || t.as || p,
                                        N = ke(_),
                                        A = g !== t ? v({}, t, {}, g) : t,
                                        C = {};
                                    for (var I in A) "$" !== I[0] && "as" !== I && ("forwardedAs" === I ? (C.as = A[I]) : (d ? d(I, index, _) : !N || index(I)) && (C[I] = A[I]));
                                    return (
                                        t.style && g.style !== t.style && (C.style = v({}, t.style, {}, g.style)),
                                        (C.className = Array.prototype
                                            .concat(c, h, S !== h ? S : null, t.className, g.className)
                                            .filter(Boolean)
                                            .join(" ")),
                                        (C.ref = n),
                                        (0, react.createElement)(_, C)
                                    );
                                })(C, e, t, P);
                            };
                        return (
                            (O.displayName = f),
                            ((C = react.forwardRef(O)).attrs = S),
                            (C.componentStyle = I),
                            (C.displayName = f),
                            (C.shouldForwardProp = A),
                            (C.foldedComponentIds = o ? Array.prototype.concat(e.foldedComponentIds, e.styledComponentId) : w),
                            (C.styledComponentId = g),
                            (C.target = o ? e.target : e),
                            (C.withComponent = function (e) {
                                var r = t.componentId,
                                    o = (function (e, t) {
                                        if (null == e) return {};
                                        var n,
                                            r,
                                            o = {},
                                            s = Object.keys(e);
                                        for (r = 0; r < s.length; r++) t.indexOf((n = s[r])) >= 0 || (o[n] = e[n]);
                                        return o;
                                    })(t, ["componentId"]),
                                    s = r && r + "-" + (ke(e) ? e : Te(_(e)));
                                return qe(e, v({}, o, { attrs: S, componentId: s }), n);
                            }),
                            Object.defineProperty(C, "defaultProps", {
                                get: function () {
                                    return this._foldedDefaultProps;
                                },
                                set: function (t) {
                                    this._foldedDefaultProps = o
                                        ? (function Me(e) {
                                              for (var t = arguments.length, n = Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                              for (var o = 0; o < n.length; o++) {
                                                  var e1,
                                                      i = n[o];
                                                  if (Ve(i))
                                                      for (var a in i)
                                                          "__proto__" !== (e1 = a) &&
                                                              "constructor" !== e1 &&
                                                              "prototype" !== e1 &&
                                                              (function (e, t, n) {
                                                                  var r = e[n];
                                                                  Ve(t) && Ve(r) ? Me(r, t) : (e[n] = t);
                                                              })(e, i[a], a);
                                              }
                                              return e;
                                          })({}, e.defaultProps, t)
                                        : t;
                                },
                            }),
                            (C.toString = function () {
                                return "." + C.styledComponentId;
                            }),
                            i && hoist_non_react_statics_cjs_default()(C, e, { attrs: !0, componentStyle: !0, displayName: !0, foldedComponentIds: !0, shouldForwardProp: !0, styledComponentId: !0, target: !0, withComponent: !0 }),
                            C
                        );
                    }, e);
                };
            function Ue(e) {
                for (var t = arguments.length, n = Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                var o = Ce.apply(void 0, [e].concat(n)).join(""),
                    s = xe(o);
                return new ve(s, o);
            }
            [
                "a",
                "abbr",
                "address",
                "area",
                "article",
                "aside",
                "audio",
                "b",
                "base",
                "bdi",
                "bdo",
                "big",
                "blockquote",
                "body",
                "br",
                "button",
                "canvas",
                "caption",
                "cite",
                "code",
                "col",
                "colgroup",
                "data",
                "datalist",
                "dd",
                "del",
                "details",
                "dfn",
                "dialog",
                "div",
                "dl",
                "dt",
                "em",
                "embed",
                "fieldset",
                "figcaption",
                "figure",
                "footer",
                "form",
                "h1",
                "h2",
                "h3",
                "h4",
                "h5",
                "h6",
                "head",
                "header",
                "hgroup",
                "hr",
                "html",
                "i",
                "iframe",
                "img",
                "input",
                "ins",
                "kbd",
                "keygen",
                "label",
                "legend",
                "li",
                "link",
                "main",
                "map",
                "mark",
                "marquee",
                "menu",
                "menuitem",
                "meta",
                "meter",
                "nav",
                "noscript",
                "object",
                "ol",
                "optgroup",
                "option",
                "output",
                "p",
                "param",
                "picture",
                "pre",
                "progress",
                "q",
                "rp",
                "rt",
                "ruby",
                "s",
                "samp",
                "script",
                "section",
                "select",
                "small",
                "source",
                "span",
                "strong",
                "style",
                "sub",
                "summary",
                "sup",
                "table",
                "tbody",
                "td",
                "textarea",
                "tfoot",
                "th",
                "thead",
                "time",
                "title",
                "tr",
                "track",
                "u",
                "ul",
                "var",
                "video",
                "wbr",
                "circle",
                "clipPath",
                "defs",
                "ellipse",
                "foreignObject",
                "g",
                "image",
                "line",
                "linearGradient",
                "marker",
                "mask",
                "path",
                "pattern",
                "polygon",
                "polyline",
                "radialGradient",
                "rect",
                "stop",
                "svg",
                "text",
                "textPath",
                "tspan",
            ].forEach(function (e) {
                He[e] = He(e);
            }),
                ((t1 = function (e, t) {
                    (this.rules = e), (this.componentId = t), (this.isStatic = re(e)), Z.registerId(this.componentId + 1);
                }.prototype).createStyles = function (e, t, n, r) {
                    var o = r(Ne(this.rules, t, n, r).join(""), ""),
                        s = this.componentId + e;
                    n.insertRules(s, s, o);
                }),
                (t1.removeStyles = function (e, t) {
                    t.clearRules(this.componentId + e);
                }),
                (t1.renderStyles = function (e, t, n, r) {
                    e > 2 && Z.registerId(this.componentId + e), this.removeStyles(e, n), this.createStyles(e, t, n, r);
                }),
                ((t = function () {
                    var e = this;
                    (this._emitSheetCSS = function () {
                        var t = e.instance.toString();
                        if (!t) return "";
                        var n = q();
                        return "<style " + [n && 'nonce="' + n + '"', A + '="true"', 'data-styled-version="5.3.3"'].filter(Boolean).join(" ") + ">" + t + "</style>";
                    }),
                        (this.getStyleTags = function () {
                            return e.sealed ? j(2) : e._emitSheetCSS();
                        }),
                        (this.getStyleElement = function () {
                            if (e.sealed) return j(2);
                            var t,
                                n = (((t = {})[A] = ""), (t["data-styled-version"] = "5.3.3"), (t.dangerouslySetInnerHTML = { __html: e.instance.toString() }), t),
                                o = q();
                            return o && (n.nonce = o), [react.createElement("style", v({}, n, { key: "sc-0-0" }))];
                        }),
                        (this.seal = function () {
                            e.sealed = !0;
                        }),
                        (this.instance = new Z({ isServer: !0 })),
                        (this.sealed = !1);
                }.prototype).collectStyles = function (e) {
                    return this.sealed ? j(2) : react.createElement(ye, { sheet: this.instance }, e);
                }),
                (t.interleaveWithNodeStream = function (e) {
                    return j(3);
                });
            var Ze = function () {
                    return (0, react.useContext)(Ge);
                },
                styled_components_browser_esm = He;
        },
        11742: function (module) {
            module.exports = function () {
                var selection = document.getSelection();
                if (!selection.rangeCount) return function () {};
                for (var active = document.activeElement, ranges = [], i = 0; i < selection.rangeCount; i++) ranges.push(selection.getRangeAt(i));
                switch (active.tagName.toUpperCase()) {
                    case "INPUT":
                    case "TEXTAREA":
                        active.blur();
                        break;
                    default:
                        active = null;
                }
                return (
                    selection.removeAllRanges(),
                    function () {
                        "Caret" === selection.type && selection.removeAllRanges(),
                            selection.rangeCount ||
                                ranges.forEach(function (range) {
                                    selection.addRange(range);
                                }),
                            active && active.focus();
                    }
                );
            };
        },
        65054: function (module, __unused_webpack_exports, __webpack_require__) {
            var Buffer = __webpack_require__(48764).Buffer,
                isTypedArray = __webpack_require__(4501).strict;
            module.exports = function (arr) {
                if (!isTypedArray(arr)) return Buffer.from(arr);
                var buf = Buffer.from(arr.buffer);
                return arr.byteLength !== arr.buffer.byteLength && (buf = buf.slice(arr.byteOffset, arr.byteOffset + arr.byteLength)), buf;
            };
        },
        94927: function (module, __unused_webpack_exports, __webpack_require__) {
            module.exports = function (fn, msg) {
                if (config("noDeprecation")) return fn;
                var warned = !1;
                return function () {
                    if (!warned) {
                        if (config("throwDeprecation")) throw Error(msg);
                        config("traceDeprecation") ? console.trace(msg) : console.warn(msg), (warned = !0);
                    }
                    return fn.apply(this, arguments);
                };
            };
            function config(name) {
                try {
                    if (!__webpack_require__.g.localStorage) return !1;
                } catch (_) {
                    return !1;
                }
                var val = __webpack_require__.g.localStorage[name];
                return null != val && "true" === String(val).toLowerCase();
            }
        },
        20384: function (module) {
            module.exports = function (arg) {
                return arg && "object" == typeof arg && "function" == typeof arg.copy && "function" == typeof arg.fill && "function" == typeof arg.readUInt8;
            };
        },
        55955: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var isArgumentsObject = __webpack_require__(82584),
                isGeneratorFunction = __webpack_require__(48662),
                whichTypedArray = __webpack_require__(86430),
                isTypedArray = __webpack_require__(85692);
            function uncurryThis(f) {
                return f.call.bind(f);
            }
            var BigIntSupported = "undefined" != typeof BigInt,
                SymbolSupported = "undefined" != typeof Symbol,
                ObjectToString = uncurryThis(Object.prototype.toString),
                numberValue = uncurryThis(Number.prototype.valueOf),
                stringValue = uncurryThis(String.prototype.valueOf),
                booleanValue = uncurryThis(Boolean.prototype.valueOf);
            if (BigIntSupported) var bigIntValue = uncurryThis(BigInt.prototype.valueOf);
            if (SymbolSupported) var symbolValue = uncurryThis(Symbol.prototype.valueOf);
            function checkBoxedPrimitive(value, prototypeValueOf) {
                if ("object" != typeof value) return !1;
                try {
                    return prototypeValueOf(value), !0;
                } catch (e) {
                    return !1;
                }
            }
            function isMapToString(value) {
                return "[object Map]" === ObjectToString(value);
            }
            function isSetToString(value) {
                return "[object Set]" === ObjectToString(value);
            }
            function isWeakMapToString(value) {
                return "[object WeakMap]" === ObjectToString(value);
            }
            function isWeakSetToString(value) {
                return "[object WeakSet]" === ObjectToString(value);
            }
            function isArrayBufferToString(value) {
                return "[object ArrayBuffer]" === ObjectToString(value);
            }
            function isArrayBuffer(value) {
                return "undefined" != typeof ArrayBuffer && (isArrayBufferToString.working ? isArrayBufferToString(value) : value instanceof ArrayBuffer);
            }
            function isDataViewToString(value) {
                return "[object DataView]" === ObjectToString(value);
            }
            function isDataView(value) {
                return "undefined" != typeof DataView && (isDataViewToString.working ? isDataViewToString(value) : value instanceof DataView);
            }
            (exports.isArgumentsObject = isArgumentsObject),
                (exports.isGeneratorFunction = isGeneratorFunction),
                (exports.isTypedArray = isTypedArray),
                (exports.isPromise = function (input) {
                    return ("undefined" != typeof Promise && input instanceof Promise) || (null !== input && "object" == typeof input && "function" == typeof input.then && "function" == typeof input.catch);
                }),
                (exports.isArrayBufferView = function (value) {
                    return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(value) : isTypedArray(value) || isDataView(value);
                }),
                (exports.isUint8Array = function (value) {
                    return "Uint8Array" === whichTypedArray(value);
                }),
                (exports.isUint8ClampedArray = function (value) {
                    return "Uint8ClampedArray" === whichTypedArray(value);
                }),
                (exports.isUint16Array = function (value) {
                    return "Uint16Array" === whichTypedArray(value);
                }),
                (exports.isUint32Array = function (value) {
                    return "Uint32Array" === whichTypedArray(value);
                }),
                (exports.isInt8Array = function (value) {
                    return "Int8Array" === whichTypedArray(value);
                }),
                (exports.isInt16Array = function (value) {
                    return "Int16Array" === whichTypedArray(value);
                }),
                (exports.isInt32Array = function (value) {
                    return "Int32Array" === whichTypedArray(value);
                }),
                (exports.isFloat32Array = function (value) {
                    return "Float32Array" === whichTypedArray(value);
                }),
                (exports.isFloat64Array = function (value) {
                    return "Float64Array" === whichTypedArray(value);
                }),
                (exports.isBigInt64Array = function (value) {
                    return "BigInt64Array" === whichTypedArray(value);
                }),
                (exports.isBigUint64Array = function (value) {
                    return "BigUint64Array" === whichTypedArray(value);
                }),
                (isMapToString.working = "undefined" != typeof Map && isMapToString(new Map())),
                (exports.isMap = function (value) {
                    return "undefined" != typeof Map && (isMapToString.working ? isMapToString(value) : value instanceof Map);
                }),
                (isSetToString.working = "undefined" != typeof Set && isSetToString(new Set())),
                (exports.isSet = function (value) {
                    return "undefined" != typeof Set && (isSetToString.working ? isSetToString(value) : value instanceof Set);
                }),
                (isWeakMapToString.working = "undefined" != typeof WeakMap && isWeakMapToString(new WeakMap())),
                (exports.isWeakMap = function (value) {
                    return "undefined" != typeof WeakMap && (isWeakMapToString.working ? isWeakMapToString(value) : value instanceof WeakMap);
                }),
                (isWeakSetToString.working = "undefined" != typeof WeakSet && isWeakSetToString(new WeakSet())),
                (exports.isWeakSet = function (value) {
                    return isWeakSetToString(value);
                }),
                (isArrayBufferToString.working = "undefined" != typeof ArrayBuffer && isArrayBufferToString(new ArrayBuffer())),
                (exports.isArrayBuffer = isArrayBuffer),
                (isDataViewToString.working = "undefined" != typeof ArrayBuffer && "undefined" != typeof DataView && isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))),
                (exports.isDataView = isDataView);
            var SharedArrayBufferCopy = "undefined" != typeof SharedArrayBuffer ? SharedArrayBuffer : void 0;
            function isSharedArrayBufferToString(value) {
                return "[object SharedArrayBuffer]" === ObjectToString(value);
            }
            function isSharedArrayBuffer(value) {
                return (
                    void 0 !== SharedArrayBufferCopy &&
                    (void 0 === isSharedArrayBufferToString.working && (isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy())),
                    isSharedArrayBufferToString.working ? isSharedArrayBufferToString(value) : value instanceof SharedArrayBufferCopy)
                );
            }
            function isNumberObject(value) {
                return checkBoxedPrimitive(value, numberValue);
            }
            function isStringObject(value) {
                return checkBoxedPrimitive(value, stringValue);
            }
            function isBooleanObject(value) {
                return checkBoxedPrimitive(value, booleanValue);
            }
            function isBigIntObject(value) {
                return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);
            }
            function isSymbolObject(value) {
                return SymbolSupported && checkBoxedPrimitive(value, symbolValue);
            }
            (exports.isSharedArrayBuffer = isSharedArrayBuffer),
                (exports.isAsyncFunction = function (value) {
                    return "[object AsyncFunction]" === ObjectToString(value);
                }),
                (exports.isMapIterator = function (value) {
                    return "[object Map Iterator]" === ObjectToString(value);
                }),
                (exports.isSetIterator = function (value) {
                    return "[object Set Iterator]" === ObjectToString(value);
                }),
                (exports.isGeneratorObject = function (value) {
                    return "[object Generator]" === ObjectToString(value);
                }),
                (exports.isWebAssemblyCompiledModule = function (value) {
                    return "[object WebAssembly.Module]" === ObjectToString(value);
                }),
                (exports.isNumberObject = isNumberObject),
                (exports.isStringObject = isStringObject),
                (exports.isBooleanObject = isBooleanObject),
                (exports.isBigIntObject = isBigIntObject),
                (exports.isSymbolObject = isSymbolObject),
                (exports.isBoxedPrimitive = function (value) {
                    return isNumberObject(value) || isStringObject(value) || isBooleanObject(value) || isBigIntObject(value) || isSymbolObject(value);
                }),
                (exports.isAnyArrayBuffer = function (value) {
                    return "undefined" != typeof Uint8Array && (isArrayBuffer(value) || isSharedArrayBuffer(value));
                }),
                ["isProxy", "isExternal", "isModuleNamespaceObject"].forEach(function (method) {
                    Object.defineProperty(exports, method, {
                        enumerable: !1,
                        value: function () {
                            throw Error(method + " is not supported in userland");
                        },
                    });
                });
        },
        89539: function (__unused_webpack_module, exports, __webpack_require__) {
            var process = __webpack_require__(34155),
                getOwnPropertyDescriptors =
                    Object.getOwnPropertyDescriptors ||
                    function (obj) {
                        for (var keys = Object.keys(obj), descriptors = {}, i = 0; i < keys.length; i++) descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);
                        return descriptors;
                    },
                formatRegExp = /%[sdj%]/g;
            (exports.format = function (f) {
                if (!isString(f)) {
                    for (var objects = [], i = 0; i < arguments.length; i++) objects.push(inspect(arguments[i]));
                    return objects.join(" ");
                }
                for (
                    var i = 1,
                        args = arguments,
                        len = args.length,
                        str = String(f).replace(formatRegExp, function (x) {
                            if ("%%" === x) return "%";
                            if (i >= len) return x;
                            switch (x) {
                                case "%s":
                                    return String(args[i++]);
                                case "%d":
                                    return Number(args[i++]);
                                case "%j":
                                    try {
                                        return JSON.stringify(args[i++]);
                                    } catch (_) {
                                        return "[Circular]";
                                    }
                                default:
                                    return x;
                            }
                        }),
                        x = args[i];
                    i < len;
                    x = args[++i]
                )
                    isNull(x) || !isObject(x) ? (str += " " + x) : (str += " " + inspect(x));
                return str;
            }),
                (exports.deprecate = function (fn, msg) {
                    if (void 0 !== process && !0 === process.noDeprecation) return fn;
                    if (void 0 === process)
                        return function () {
                            return exports.deprecate(fn, msg).apply(this, arguments);
                        };
                    var warned = !1;
                    return function () {
                        if (!warned) {
                            if (process.throwDeprecation) throw Error(msg);
                            process.traceDeprecation ? console.trace(msg) : console.error(msg), (warned = !0);
                        }
                        return fn.apply(this, arguments);
                    };
                });
            var debugs = {},
                debugEnvRegex = /^$/;
            if ({ BUILD_ID: "F0-wW3zApC63H1SDF0KpF" }.NODE_DEBUG) {
                var debugEnv = { BUILD_ID: "F0-wW3zApC63H1SDF0KpF" }.NODE_DEBUG;
                debugEnvRegex = RegExp(
                    "^" +
                        (debugEnv = debugEnv
                            .replace(/[|\\{}()[\]^$+?.]/g, "\\$&")
                            .replace(/\*/g, ".*")
                            .replace(/,/g, "$|^")
                            .toUpperCase()) +
                        "$",
                    "i"
                );
            }
            function inspect(obj, opts) {
                var ctx = { seen: [], stylize: stylizeNoColor };
                return (
                    arguments.length >= 3 && (ctx.depth = arguments[2]),
                    arguments.length >= 4 && (ctx.colors = arguments[3]),
                    isBoolean(opts) ? (ctx.showHidden = opts) : opts && exports._extend(ctx, opts),
                    isUndefined(ctx.showHidden) && (ctx.showHidden = !1),
                    isUndefined(ctx.depth) && (ctx.depth = 2),
                    isUndefined(ctx.colors) && (ctx.colors = !1),
                    isUndefined(ctx.customInspect) && (ctx.customInspect = !0),
                    ctx.colors && (ctx.stylize = stylizeWithColor),
                    formatValue(ctx, obj, ctx.depth)
                );
            }
            function stylizeWithColor(str, styleType) {
                var style = inspect.styles[styleType];
                return style ? "\x1b[" + inspect.colors[style][0] + "m" + str + "\x1b[" + inspect.colors[style][1] + "m" : str;
            }
            function stylizeNoColor(str, styleType) {
                return str;
            }
            function formatValue(ctx, value, recurseTimes) {
                if (ctx.customInspect && value && isFunction(value.inspect) && value.inspect !== exports.inspect && !(value.constructor && value.constructor.prototype === value)) {
                    var base,
                        braces,
                        numLinesEst,
                        hash,
                        output,
                        ret = value.inspect(recurseTimes, ctx);
                    return isString(ret) || (ret = formatValue(ctx, ret, recurseTimes)), ret;
                }
                var primitive = (function (ctx, value) {
                    if (isUndefined(value)) return ctx.stylize("undefined", "undefined");
                    if (isString(value)) {
                        var simple = "'" + JSON.stringify(value).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
                        return ctx.stylize(simple, "string");
                    }
                    return isNumber(value) ? ctx.stylize("" + value, "number") : isBoolean(value) ? ctx.stylize("" + value, "boolean") : isNull(value) ? ctx.stylize("null", "null") : void 0;
                })(ctx, value);
                if (primitive) return primitive;
                var keys = Object.keys(value),
                    visibleKeys =
                        ((hash = {}),
                        keys.forEach(function (val, idx) {
                            hash[val] = !0;
                        }),
                        hash);
                if ((ctx.showHidden && (keys = Object.getOwnPropertyNames(value)), isError(value) && (keys.indexOf("message") >= 0 || keys.indexOf("description") >= 0))) return formatError(value);
                if (0 === keys.length) {
                    if (isFunction(value)) {
                        var name = value.name ? ": " + value.name : "";
                        return ctx.stylize("[Function" + name + "]", "special");
                    }
                    if (isRegExp(value)) return ctx.stylize(RegExp.prototype.toString.call(value), "regexp");
                    if (isDate(value)) return ctx.stylize(Date.prototype.toString.call(value), "date");
                    if (isError(value)) return formatError(value);
                }
                var base1 = "",
                    array = !1,
                    braces1 = ["{", "}"];
                return (isArray(value) && ((array = !0), (braces1 = ["[", "]"])),
                isFunction(value) && (base1 = " [Function" + (value.name ? ": " + value.name : "") + "]"),
                isRegExp(value) && (base1 = " " + RegExp.prototype.toString.call(value)),
                isDate(value) && (base1 = " " + Date.prototype.toUTCString.call(value)),
                isError(value) && (base1 = " " + formatError(value)),
                0 !== keys.length || (array && 0 != value.length))
                    ? recurseTimes < 0
                        ? isRegExp(value)
                            ? ctx.stylize(RegExp.prototype.toString.call(value), "regexp")
                            : ctx.stylize("[Object]", "special")
                        : (ctx.seen.push(value),
                          (output = array
                              ? (function (ctx, value, recurseTimes, visibleKeys, keys) {
                                    for (var output = [], i = 0, l = value.length; i < l; ++i) hasOwnProperty(value, String(i)) ? output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), !0)) : output.push("");
                                    return (
                                        keys.forEach(function (key) {
                                            key.match(/^\d+$/) || output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, !0));
                                        }),
                                        output
                                    );
                                })(ctx, value, recurseTimes, visibleKeys, keys)
                              : keys.map(function (key) {
                                    return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
                                })),
                          ctx.seen.pop(),
                          (base = base1),
                          (braces = braces1),
                          (numLinesEst = 0),
                          output.reduce(function (prev, cur) {
                              return numLinesEst++, cur.indexOf("\n") >= 0 && numLinesEst++, prev + cur.replace(/\u001b\[\d\d?m/g, "").length + 1;
                          }, 0) > 60
                              ? braces[0] + ("" === base ? "" : base + "\n ") + " " + output.join(",\n  ") + " " + braces[1]
                              : braces[0] + base + " " + output.join(", ") + " " + braces[1])
                    : braces1[0] + base1 + braces1[1];
            }
            function formatError(value) {
                return "[" + Error.prototype.toString.call(value) + "]";
            }
            function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
                var name, str, desc;
                if (
                    ((desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] }).get
                        ? (str = desc.set ? ctx.stylize("[Getter/Setter]", "special") : ctx.stylize("[Getter]", "special"))
                        : desc.set && (str = ctx.stylize("[Setter]", "special")),
                    hasOwnProperty(visibleKeys, key) || (name = "[" + key + "]"),
                    !str &&
                        (0 > ctx.seen.indexOf(desc.value)
                            ? (str = isNull(recurseTimes) ? formatValue(ctx, desc.value, null) : formatValue(ctx, desc.value, recurseTimes - 1)).indexOf("\n") > -1 &&
                              (str = array
                                  ? str
                                        .split("\n")
                                        .map(function (line) {
                                            return "  " + line;
                                        })
                                        .join("\n")
                                        .substr(2)
                                  : "\n" +
                                    str
                                        .split("\n")
                                        .map(function (line) {
                                            return "   " + line;
                                        })
                                        .join("\n"))
                            : (str = ctx.stylize("[Circular]", "special"))),
                    isUndefined(name))
                ) {
                    if (array && key.match(/^\d+$/)) return str;
                    (name = JSON.stringify("" + key)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)
                        ? ((name = name.substr(1, name.length - 2)), (name = ctx.stylize(name, "name")))
                        : ((name = name
                              .replace(/'/g, "\\'")
                              .replace(/\\"/g, '"')
                              .replace(/(^"|"$)/g, "'")),
                          (name = ctx.stylize(name, "string")));
                }
                return name + ": " + str;
            }
            function isArray(ar) {
                return Array.isArray(ar);
            }
            function isBoolean(arg) {
                return "boolean" == typeof arg;
            }
            function isNull(arg) {
                return null === arg;
            }
            function isNumber(arg) {
                return "number" == typeof arg;
            }
            function isString(arg) {
                return "string" == typeof arg;
            }
            function isUndefined(arg) {
                return void 0 === arg;
            }
            function isRegExp(re) {
                return isObject(re) && "[object RegExp]" === objectToString(re);
            }
            function isObject(arg) {
                return "object" == typeof arg && null !== arg;
            }
            function isDate(d) {
                return isObject(d) && "[object Date]" === objectToString(d);
            }
            function isError(e) {
                return isObject(e) && ("[object Error]" === objectToString(e) || e instanceof Error);
            }
            function isFunction(arg) {
                return "function" == typeof arg;
            }
            function objectToString(o) {
                return Object.prototype.toString.call(o);
            }
            function pad(n) {
                return n < 10 ? "0" + n.toString(10) : n.toString(10);
            }
            (exports.debuglog = function (set) {
                if (!debugs[(set = set.toUpperCase())]) {
                    if (debugEnvRegex.test(set)) {
                        var pid = process.pid;
                        debugs[set] = function () {
                            var msg = exports.format.apply(exports, arguments);
                            console.error("%s %d: %s", set, pid, msg);
                        };
                    } else debugs[set] = function () {};
                }
                return debugs[set];
            }),
                (exports.inspect = inspect),
                (inspect.colors = {
                    bold: [1, 22],
                    italic: [3, 23],
                    underline: [4, 24],
                    inverse: [7, 27],
                    white: [37, 39],
                    grey: [90, 39],
                    black: [30, 39],
                    blue: [34, 39],
                    cyan: [36, 39],
                    green: [32, 39],
                    magenta: [35, 39],
                    red: [31, 39],
                    yellow: [33, 39],
                }),
                (inspect.styles = { special: "cyan", number: "yellow", boolean: "yellow", undefined: "grey", null: "bold", string: "green", date: "magenta", regexp: "red" }),
                (exports.types = __webpack_require__(55955)),
                (exports.isArray = isArray),
                (exports.isBoolean = isBoolean),
                (exports.isNull = isNull),
                (exports.isNullOrUndefined = function (arg) {
                    return null == arg;
                }),
                (exports.isNumber = isNumber),
                (exports.isString = isString),
                (exports.isSymbol = function (arg) {
                    return "symbol" == typeof arg;
                }),
                (exports.isUndefined = isUndefined),
                (exports.isRegExp = isRegExp),
                (exports.types.isRegExp = isRegExp),
                (exports.isObject = isObject),
                (exports.isDate = isDate),
                (exports.types.isDate = isDate),
                (exports.isError = isError),
                (exports.types.isNativeError = isError),
                (exports.isFunction = isFunction),
                (exports.isPrimitive = function (arg) {
                    return null === arg || "boolean" == typeof arg || "number" == typeof arg || "string" == typeof arg || "symbol" == typeof arg || void 0 === arg;
                }),
                (exports.isBuffer = __webpack_require__(20384));
            var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
            function hasOwnProperty(obj, prop) {
                return Object.prototype.hasOwnProperty.call(obj, prop);
            }
            (exports.log = function () {
                var d, time;
                console.log("%s - %s", ((time = [pad((d = new Date()).getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(":")), [d.getDate(), months[d.getMonth()], time].join(" ")), exports.format.apply(exports, arguments));
            }),
                (exports.inherits = __webpack_require__(35717)),
                (exports._extend = function (origin, add) {
                    if (!add || !isObject(add)) return origin;
                    for (var keys = Object.keys(add), i = keys.length; i--; ) origin[keys[i]] = add[keys[i]];
                    return origin;
                });
            var kCustomPromisifiedSymbol = "undefined" != typeof Symbol ? Symbol("util.promisify.custom") : void 0;
            function callbackifyOnRejected(reason, cb) {
                if (!reason) {
                    var newReason = Error("Promise was rejected with a falsy value");
                    (newReason.reason = reason), (reason = newReason);
                }
                return cb(reason);
            }
            (exports.promisify = function (original) {
                if ("function" != typeof original) throw TypeError('The "original" argument must be of type Function');
                if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {
                    var fn = original[kCustomPromisifiedSymbol];
                    if ("function" != typeof fn) throw TypeError('The "util.promisify.custom" argument must be of type Function');
                    return Object.defineProperty(fn, kCustomPromisifiedSymbol, { value: fn, enumerable: !1, writable: !1, configurable: !0 }), fn;
                }
                function fn() {
                    for (
                        var promiseResolve,
                            promiseReject,
                            promise = new Promise(function (resolve, reject) {
                                (promiseResolve = resolve), (promiseReject = reject);
                            }),
                            args = [],
                            i = 0;
                        i < arguments.length;
                        i++
                    )
                        args.push(arguments[i]);
                    args.push(function (err, value) {
                        err ? promiseReject(err) : promiseResolve(value);
                    });
                    try {
                        original.apply(this, args);
                    } catch (err) {
                        promiseReject(err);
                    }
                    return promise;
                }
                return (
                    Object.setPrototypeOf(fn, Object.getPrototypeOf(original)),
                    kCustomPromisifiedSymbol && Object.defineProperty(fn, kCustomPromisifiedSymbol, { value: fn, enumerable: !1, writable: !1, configurable: !0 }),
                    Object.defineProperties(fn, getOwnPropertyDescriptors(original))
                );
            }),
                (exports.promisify.custom = kCustomPromisifiedSymbol),
                (exports.callbackify = function (original) {
                    if ("function" != typeof original) throw TypeError('The "original" argument must be of type Function');
                    function callbackified() {
                        for (var args = [], i = 0; i < arguments.length; i++) args.push(arguments[i]);
                        var maybeCb = args.pop();
                        if ("function" != typeof maybeCb) throw TypeError("The last argument must be of type Function");
                        var self1 = this,
                            cb = function () {
                                return maybeCb.apply(self1, arguments);
                            };
                        original.apply(this, args).then(
                            function (ret) {
                                process.nextTick(cb.bind(null, null, ret));
                            },
                            function (rej) {
                                process.nextTick(callbackifyOnRejected.bind(null, rej, cb));
                            }
                        );
                    }
                    return Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original)), Object.defineProperties(callbackified, getOwnPropertyDescriptors(original)), callbackified;
                });
        },
        12906: function (module, __unused_webpack_exports, __webpack_require__) {
            let EventEmitter = __webpack_require__(17187).EventEmitter,
                inherits = __webpack_require__(89539).inherits,
                ethUtil = __webpack_require__(21964),
                EthBlockTracker = __webpack_require__(75012),
                map = __webpack_require__(94005),
                eachSeries = __webpack_require__(94282),
                Stoplight = __webpack_require__(52698);
            __webpack_require__(6496);
            let createPayload = __webpack_require__(39728),
                noop = function () {};
            function Web3ProviderEngine(opts) {
                let self1 = this;
                EventEmitter.call(self1), self1.setMaxListeners(30), (opts = opts || {});
                let directProvider = { sendAsync: self1._handleAsync.bind(self1) },
                    blockTrackerProvider = opts.blockTrackerProvider || directProvider;
                (self1._blockTracker = opts.blockTracker || new EthBlockTracker({ provider: blockTrackerProvider, pollingInterval: opts.pollingInterval || 4e3, setSkipCacheFlag: !0 })),
                    (self1._ready = new Stoplight()),
                    (self1.currentBlock = null),
                    (self1._providers = []);
            }
            (module.exports = Web3ProviderEngine),
                inherits(Web3ProviderEngine, EventEmitter),
                (Web3ProviderEngine.prototype.start = function (cb = noop) {
                    let self1 = this;
                    self1._ready.go(),
                        self1._blockTracker.on("latest", (blockNumber) => {
                            self1._getBlockByNumberWithRetry(blockNumber, (err, block) => {
                                if (err) {
                                    this.emit("error", err);
                                    return;
                                }
                                if (!block) {
                                    console.log(block), this.emit("error", Error("Could not find block"));
                                    return;
                                }
                                let bufferBlock = {
                                    number: ethUtil.toBuffer(block.number),
                                    hash: ethUtil.toBuffer(block.hash),
                                    parentHash: ethUtil.toBuffer(block.parentHash),
                                    nonce: ethUtil.toBuffer(block.nonce),
                                    mixHash: ethUtil.toBuffer(block.mixHash),
                                    sha3Uncles: ethUtil.toBuffer(block.sha3Uncles),
                                    logsBloom: ethUtil.toBuffer(block.logsBloom),
                                    transactionsRoot: ethUtil.toBuffer(block.transactionsRoot),
                                    stateRoot: ethUtil.toBuffer(block.stateRoot),
                                    receiptsRoot: ethUtil.toBuffer(block.receiptRoot || block.receiptsRoot),
                                    miner: ethUtil.toBuffer(block.miner),
                                    difficulty: ethUtil.toBuffer(block.difficulty),
                                    totalDifficulty: ethUtil.toBuffer(block.totalDifficulty),
                                    size: ethUtil.toBuffer(block.size),
                                    extraData: ethUtil.toBuffer(block.extraData),
                                    gasLimit: ethUtil.toBuffer(block.gasLimit),
                                    gasUsed: ethUtil.toBuffer(block.gasUsed),
                                    timestamp: ethUtil.toBuffer(block.timestamp),
                                    transactions: block.transactions,
                                };
                                self1._setCurrentBlock(bufferBlock), self1.emit("rawBlock", block), self1.emit("latest", block);
                            });
                        }),
                        self1._blockTracker.on("sync", self1.emit.bind(self1, "sync")),
                        self1._blockTracker.on("error", self1.emit.bind(self1, "error")),
                        (self1._running = !0),
                        self1.emit("start");
                }),
                (Web3ProviderEngine.prototype.stop = function () {
                    let self1 = this;
                    self1._blockTracker.removeAllListeners(), (self1._running = !1), self1.emit("stop");
                }),
                (Web3ProviderEngine.prototype.isRunning = function () {
                    return this._running;
                }),
                (Web3ProviderEngine.prototype.addProvider = function (source, index) {
                    "number" == typeof index ? this._providers.splice(index, 0, source) : this._providers.push(source), source.setEngine(this);
                }),
                (Web3ProviderEngine.prototype.removeProvider = function (source) {
                    let index = this._providers.indexOf(source);
                    if (index < 0) throw Error("Provider not found.");
                    this._providers.splice(index, 1);
                }),
                (Web3ProviderEngine.prototype.send = function (payload) {
                    throw Error("Web3ProviderEngine does not support synchronous requests.");
                }),
                (Web3ProviderEngine.prototype.sendAsync = function (payload, cb) {
                    let self1 = this;
                    self1._ready.await(function () {
                        Array.isArray(payload) ? map(payload, self1._handleAsync.bind(self1), cb) : self1._handleAsync(payload, cb);
                    });
                }),
                (Web3ProviderEngine.prototype._getBlockByNumberWithRetry = function (blockNumber, cb) {
                    let self1 = this,
                        retriesRemaining = 5;
                    function attemptRequest() {
                        self1._getBlockByNumber(blockNumber, afterRequest);
                    }
                    function afterRequest(err, block) {
                        if (err) return cb(err);
                        if (!block) {
                            if (retriesRemaining > 0) {
                                retriesRemaining--,
                                    setTimeout(function () {
                                        attemptRequest();
                                    }, 1e3);
                                return;
                            }
                            cb(null, null);
                            return;
                        }
                        cb(null, block);
                    }
                    attemptRequest();
                }),
                (Web3ProviderEngine.prototype._getBlockByNumber = function (blockNumber, cb) {
                    let req = createPayload({ method: "eth_getBlockByNumber", params: [blockNumber, !1], skipCache: !0 });
                    this._handleAsync(req, (err, res) => (err ? cb(err) : cb(null, res.result)));
                }),
                (Web3ProviderEngine.prototype._handleAsync = function (payload, finished) {
                    var self1 = this,
                        currentProvider = -1,
                        result = null,
                        error = null,
                        stack = [];
                    function end(_error, _result) {
                        (error = _error),
                            (result = _result),
                            eachSeries(
                                stack,
                                function (fn, callback) {
                                    fn ? fn(error, result, callback) : callback();
                                },
                                function () {
                                    var resultObj = { id: payload.id, jsonrpc: payload.jsonrpc, result: result };
                                    null != error ? ((resultObj.error = { message: error.stack || error.message || error, code: -32e3 }), finished(error, resultObj)) : finished(null, resultObj);
                                }
                            );
                    }
                    (function next(after) {
                        if (((currentProvider += 1), stack.unshift(after), currentProvider >= self1._providers.length))
                            end(Error('Request for method "' + payload.method + '" not handled by any subprovider. Please check your subprovider configuration to ensure this method is handled.'));
                        else
                            try {
                                self1._providers[currentProvider].handleRequest(payload, next, end);
                            } catch (e) {
                                end(e);
                            }
                    })();
                }),
                (Web3ProviderEngine.prototype._setCurrentBlock = function (block) {
                    let self1 = this;
                    (self1.currentBlock = block), self1.emit("block", block);
                });
        },
        41955: function (module, __unused_webpack_exports, __webpack_require__) {
            let ProviderSubprovider = __webpack_require__(6403),
                createBlockCacheMiddleware = __webpack_require__(37870);
            module.exports = class extends ProviderSubprovider {
                constructor(opts) {
                    super(({ blockTracker }) => createBlockCacheMiddleware(Object.assign({ blockTracker }, opts)));
                }
            };
        },
        28260: function (module, __unused_webpack_exports, __webpack_require__) {
            let ProviderSubprovider = __webpack_require__(6403),
                createFilterMiddleware = __webpack_require__(98406);
            module.exports = class extends ProviderSubprovider {
                constructor() {
                    super(({ blockTracker, provider, engine }) => createFilterMiddleware({ blockTracker, provider }));
                }
            };
        },
        2110: function (module, __unused_webpack_exports, __webpack_require__) {
            let inherits = __webpack_require__(89539).inherits,
                Subprovider = __webpack_require__(30398);
            function FixtureProvider(staticResponses) {
                let self1 = this;
                (staticResponses = staticResponses || {}), (self1.staticResponses = staticResponses);
            }
            (module.exports = FixtureProvider),
                inherits(FixtureProvider, Subprovider),
                (FixtureProvider.prototype.handleRequest = function (payload, next, end) {
                    var staticResponse = this.staticResponses[payload.method];
                    "function" == typeof staticResponse ? staticResponse(payload, next, end) : void 0 !== staticResponse ? setTimeout(() => end(null, staticResponse)) : next();
                });
        },
        78747: function (module, __unused_webpack_exports, __webpack_require__) {
            let waterfall = __webpack_require__(7879),
                parallel = __webpack_require__(80047),
                inherits = __webpack_require__(89539).inherits,
                ethUtil = __webpack_require__(21964),
                sigUtil = __webpack_require__(2843),
                extend = __webpack_require__(47529),
                Semaphore = __webpack_require__(80045),
                Subprovider = __webpack_require__(30398),
                estimateGas = __webpack_require__(28372),
                hexRegex = /^[0-9A-Fa-f]+$/g;
            function HookedWalletSubprovider(opts) {
                let self1 = this;
                (self1.nonceLock = Semaphore(1)),
                    opts.getAccounts && (self1.getAccounts = opts.getAccounts),
                    opts.processTransaction && (self1.processTransaction = opts.processTransaction),
                    opts.processMessage && (self1.processMessage = opts.processMessage),
                    opts.processPersonalMessage && (self1.processPersonalMessage = opts.processPersonalMessage),
                    opts.processTypedMessage && (self1.processTypedMessage = opts.processTypedMessage),
                    (self1.approveTransaction = opts.approveTransaction || self1.autoApprove),
                    (self1.approveMessage = opts.approveMessage || self1.autoApprove),
                    (self1.approvePersonalMessage = opts.approvePersonalMessage || self1.autoApprove),
                    (self1.approveDecryptMessage = opts.approveDecryptMessage || self1.autoApprove),
                    (self1.approveEncryptionPublicKey = opts.approveEncryptionPublicKey || self1.autoApprove),
                    (self1.approveTypedMessage = opts.approveTypedMessage || self1.autoApprove),
                    opts.signTransaction && (self1.signTransaction = opts.signTransaction || mustProvideInConstructor("signTransaction")),
                    opts.signMessage && (self1.signMessage = opts.signMessage || mustProvideInConstructor("signMessage")),
                    opts.signPersonalMessage && (self1.signPersonalMessage = opts.signPersonalMessage || mustProvideInConstructor("signPersonalMessage")),
                    opts.decryptMessage && (self1.decryptMessage = opts.decryptMessage || mustProvideInConstructor("decryptMessage")),
                    opts.encryptionPublicKey && (self1.encryptionPublicKey = opts.encryptionPublicKey || mustProvideInConstructor("encryptionPublicKey")),
                    opts.signTypedMessage && (self1.signTypedMessage = opts.signTypedMessage || mustProvideInConstructor("signTypedMessage")),
                    opts.recoverPersonalSignature && (self1.recoverPersonalSignature = opts.recoverPersonalSignature),
                    opts.publishTransaction && (self1.publishTransaction = opts.publishTransaction),
                    (self1.estimateGas = opts.estimateGas || self1.estimateGas),
                    (self1.getGasPrice = opts.getGasPrice || self1.getGasPrice);
            }
            function toLowerCase(string) {
                return string.toLowerCase();
            }
            function resemblesAddress(string) {
                let fixed = ethUtil.addHexPrefix(string),
                    isValid = ethUtil.isValidAddress(fixed);
                return isValid;
            }
            function resemblesData(string) {
                let fixed = ethUtil.addHexPrefix(string),
                    isValidAddress = ethUtil.isValidAddress(fixed);
                return !isValidAddress && isValidHex(string);
            }
            function isValidHex(data) {
                if ("string" != typeof data) return !1;
                let isHexPrefixed = "0x" === data.slice(0, 2);
                if (!isHexPrefixed) return !1;
                let nonPrefixed = data.slice(2),
                    isValid = nonPrefixed.match(hexRegex);
                return isValid;
            }
            function mustProvideInConstructor(methodName) {
                return function (params, cb) {
                    cb(Error('ProviderEngine - HookedWalletSubprovider - Must provide "' + methodName + '" fn in constructor options'));
                };
            }
            (module.exports = HookedWalletSubprovider),
                inherits(HookedWalletSubprovider, Subprovider),
                (HookedWalletSubprovider.prototype.handleRequest = function (payload, next, end) {
                    let txParams, msgParams, message, address, signature;
                    let self1 = this;
                    switch (((self1._parityRequests = {}), (self1._parityRequestCount = 0), payload.method)) {
                        case "eth_coinbase":
                            self1.getAccounts(function (err, accounts) {
                                if (err) return end(err);
                                end(null, accounts[0] || null);
                            });
                            return;
                        case "eth_accounts":
                            self1.getAccounts(function (err, accounts) {
                                if (err) return end(err);
                                end(null, accounts);
                            });
                            return;
                        case "eth_sendTransaction":
                            (txParams = payload.params[0]), waterfall([(cb) => self1.validateTransaction(txParams, cb), (cb) => self1.processTransaction(txParams, cb)], end);
                            return;
                        case "eth_signTransaction":
                            (txParams = payload.params[0]), waterfall([(cb) => self1.validateTransaction(txParams, cb), (cb) => self1.processSignTransaction(txParams, cb)], end);
                            return;
                        case "eth_sign":
                            (address = payload.params[0]),
                                (message = payload.params[1]),
                                (msgParams = extend(payload.params[2] || {}, { from: address, data: message })),
                                waterfall([(cb) => self1.validateMessage(msgParams, cb), (cb) => self1.processMessage(msgParams, cb)], end);
                            return;
                        case "personal_sign":
                            return (function () {
                                let first = payload.params[0],
                                    second = payload.params[1];
                                resemblesData(second) && resemblesAddress(first)
                                    ? (console.warn("[message, address]. This was previously handled incorrectly, and has been corrected automatically. Please switch this param order for smooth behavior in the future."),
                                      (address = payload.params[0]),
                                      (message = payload.params[1]))
                                    : ((message = payload.params[0]), (address = payload.params[1])),
                                    (msgParams = extend(payload.params[2] || {}, { from: address, data: message })),
                                    waterfall([(cb) => self1.validatePersonalMessage(msgParams, cb), (cb) => self1.processPersonalMessage(msgParams, cb)], end);
                            })();
                        case "eth_decryptMessage":
                            return (function () {
                                let first = payload.params[0],
                                    second = payload.params[1];
                                resemblesData(second) && resemblesAddress(first)
                                    ? (console.warn("[message, address]. This was previously handled incorrectly, and has been corrected automatically. Please switch this param order for smooth behavior in the future."),
                                      (address = payload.params[0]),
                                      (message = payload.params[1]))
                                    : ((message = payload.params[0]), (address = payload.params[1])),
                                    (msgParams = extend(payload.params[2] || {}, { from: address, data: message })),
                                    waterfall([(cb) => self1.validateDecryptMessage(msgParams, cb), (cb) => self1.processDecryptMessage(msgParams, cb)], end);
                            })();
                        case "encryption_public_key":
                            return (function () {
                                let address = payload.params[0];
                                waterfall([(cb) => self1.validateEncryptionPublicKey(address, cb), (cb) => self1.processEncryptionPublicKey(address, cb)], end);
                            })();
                        case "personal_ecRecover":
                            return (message = payload.params[0]), (signature = payload.params[1]), void ((msgParams = extend(payload.params[2] || {}, { sig: signature, data: message })), self1.recoverPersonalSignature(msgParams, end));
                        case "eth_signTypedData":
                        case "eth_signTypedData_v3":
                        case "eth_signTypedData_v4":
                            return (function () {
                                let first = payload.params[0],
                                    second = payload.params[1];
                                resemblesAddress(first) ? ((address = first), (message = second)) : ((message = first), (address = second)),
                                    (msgParams = extend(payload.params[2] || {}, { from: address, data: message })),
                                    waterfall([(cb) => self1.validateTypedMessage(msgParams, cb), (cb) => self1.processTypedMessage(msgParams, cb)], end);
                            })();
                        case "parity_postTransaction":
                            (txParams = payload.params[0]), self1.parityPostTransaction(txParams, end);
                            return;
                        case "parity_postSign":
                            (address = payload.params[0]), (message = payload.params[1]), self1.parityPostSign(address, message, end);
                            return;
                        case "parity_checkRequest":
                            return (function () {
                                let requestId = payload.params[0];
                                self1.parityCheckRequest(requestId, end);
                            })();
                        case "parity_defaultAccount":
                            self1.getAccounts(function (err, accounts) {
                                if (err) return end(err);
                                let account = accounts[0] || null;
                                end(null, account);
                            });
                            return;
                        default:
                            next();
                            return;
                    }
                }),
                (HookedWalletSubprovider.prototype.getAccounts = function (cb) {
                    cb(null, []);
                }),
                (HookedWalletSubprovider.prototype.processTransaction = function (txParams, cb) {
                    let self1 = this;
                    waterfall([(cb) => self1.approveTransaction(txParams, cb), (didApprove, cb) => self1.checkApproval("transaction", didApprove, cb), (cb) => self1.finalizeAndSubmitTx(txParams, cb)], cb);
                }),
                (HookedWalletSubprovider.prototype.processSignTransaction = function (txParams, cb) {
                    let self1 = this;
                    waterfall([(cb) => self1.approveTransaction(txParams, cb), (didApprove, cb) => self1.checkApproval("transaction", didApprove, cb), (cb) => self1.finalizeTx(txParams, cb)], cb);
                }),
                (HookedWalletSubprovider.prototype.processMessage = function (msgParams, cb) {
                    let self1 = this;
                    waterfall([(cb) => self1.approveMessage(msgParams, cb), (didApprove, cb) => self1.checkApproval("message", didApprove, cb), (cb) => self1.signMessage(msgParams, cb)], cb);
                }),
                (HookedWalletSubprovider.prototype.processPersonalMessage = function (msgParams, cb) {
                    let self1 = this;
                    waterfall([(cb) => self1.approvePersonalMessage(msgParams, cb), (didApprove, cb) => self1.checkApproval("message", didApprove, cb), (cb) => self1.signPersonalMessage(msgParams, cb)], cb);
                }),
                (HookedWalletSubprovider.prototype.processDecryptMessage = function (msgParams, cb) {
                    let self1 = this;
                    waterfall([(cb) => self1.approveDecryptMessage(msgParams, cb), (didApprove, cb) => self1.checkApproval("decryptMessage", didApprove, cb), (cb) => self1.decryptMessage(msgParams, cb)], cb);
                }),
                (HookedWalletSubprovider.prototype.processEncryptionPublicKey = function (msgParams, cb) {
                    let self1 = this;
                    waterfall([(cb) => self1.approveEncryptionPublicKey(msgParams, cb), (didApprove, cb) => self1.checkApproval("encryptionPublicKey", didApprove, cb), (cb) => self1.encryptionPublicKey(msgParams, cb)], cb);
                }),
                (HookedWalletSubprovider.prototype.processTypedMessage = function (msgParams, cb) {
                    let self1 = this;
                    waterfall([(cb) => self1.approveTypedMessage(msgParams, cb), (didApprove, cb) => self1.checkApproval("message", didApprove, cb), (cb) => self1.signTypedMessage(msgParams, cb)], cb);
                }),
                (HookedWalletSubprovider.prototype.autoApprove = function (txParams, cb) {
                    cb(null, !0);
                }),
                (HookedWalletSubprovider.prototype.checkApproval = function (type, didApprove, cb) {
                    cb(didApprove ? null : Error("User denied " + type + " signature."));
                }),
                (HookedWalletSubprovider.prototype.parityPostTransaction = function (txParams, cb) {
                    let self1 = this,
                        count = self1._parityRequestCount,
                        reqId = `0x${count.toString(16)}`;
                    self1._parityRequestCount++,
                        self1.emitPayload({ method: "eth_sendTransaction", params: [txParams] }, function (error, res) {
                            if (error) {
                                self1._parityRequests[reqId] = { error };
                                return;
                            }
                            let txHash = res.result;
                            self1._parityRequests[reqId] = txHash;
                        }),
                        cb(null, reqId);
                }),
                (HookedWalletSubprovider.prototype.parityPostSign = function (address, message, cb) {
                    let self1 = this,
                        count = self1._parityRequestCount,
                        reqId = `0x${count.toString(16)}`;
                    self1._parityRequestCount++,
                        self1.emitPayload({ method: "eth_sign", params: [address, message] }, function (error, res) {
                            if (error) {
                                self1._parityRequests[reqId] = { error };
                                return;
                            }
                            let result = res.result;
                            self1._parityRequests[reqId] = result;
                        }),
                        cb(null, reqId);
                }),
                (HookedWalletSubprovider.prototype.parityCheckRequest = function (reqId, cb) {
                    let result = this._parityRequests[reqId] || null;
                    return result ? (result.error ? cb(result.error) : void cb(null, result)) : cb(null, null);
                }),
                (HookedWalletSubprovider.prototype.recoverPersonalSignature = function (msgParams, cb) {
                    let senderHex;
                    try {
                        senderHex = sigUtil.recoverPersonalSignature(msgParams);
                    } catch (err) {
                        return cb(err);
                    }
                    cb(null, senderHex);
                }),
                (HookedWalletSubprovider.prototype.validateTransaction = function (txParams, cb) {
                    if (void 0 === txParams.from) return cb(Error("Undefined address - from address required to sign transaction."));
                    this.validateSender(txParams.from, function (err, senderIsValid) {
                        return err ? cb(err) : senderIsValid ? void cb() : cb(Error(`Unknown address - unable to sign transaction for this address: "${txParams.from}"`));
                    });
                }),
                (HookedWalletSubprovider.prototype.validateMessage = function (msgParams, cb) {
                    if (void 0 === msgParams.from) return cb(Error("Undefined address - from address required to sign message."));
                    this.validateSender(msgParams.from, function (err, senderIsValid) {
                        return err ? cb(err) : senderIsValid ? void cb() : cb(Error(`Unknown address - unable to sign message for this address: "${msgParams.from}"`));
                    });
                }),
                (HookedWalletSubprovider.prototype.validatePersonalMessage = function (msgParams, cb) {
                    return void 0 === msgParams.from
                        ? cb(Error("Undefined address - from address required to sign personal message."))
                        : void 0 === msgParams.data
                        ? cb(Error("Undefined message - message required to sign personal message."))
                        : isValidHex(msgParams.data)
                        ? void this.validateSender(msgParams.from, function (err, senderIsValid) {
                              return err ? cb(err) : senderIsValid ? void cb() : cb(Error(`Unknown address - unable to sign message for this address: "${msgParams.from}"`));
                          })
                        : cb(Error("HookedWalletSubprovider - validateMessage - message was not encoded as hex."));
                }),
                (HookedWalletSubprovider.prototype.validateDecryptMessage = function (msgParams, cb) {
                    return void 0 === msgParams.from
                        ? cb(Error("Undefined address - from address required to decrypt message."))
                        : void 0 === msgParams.data
                        ? cb(Error("Undefined message - message required to decrypt message."))
                        : isValidHex(msgParams.data)
                        ? void this.validateSender(msgParams.from, function (err, senderIsValid) {
                              return err ? cb(err) : senderIsValid ? void cb() : cb(Error(`Unknown address - unable to decrypt message for this address: "${msgParams.from}"`));
                          })
                        : cb(Error("HookedWalletSubprovider - validateDecryptMessage - message was not encoded as hex."));
                }),
                (HookedWalletSubprovider.prototype.validateEncryptionPublicKey = function (address, cb) {
                    this.validateSender(address, function (err, senderIsValid) {
                        return err ? cb(err) : senderIsValid ? void cb() : cb(Error(`Unknown address - unable to obtain encryption public key for this address: "${address}"`));
                    });
                }),
                (HookedWalletSubprovider.prototype.validateTypedMessage = function (msgParams, cb) {
                    return void 0 === msgParams.from
                        ? cb(Error("Undefined address - from address required to sign typed data."))
                        : void 0 === msgParams.data
                        ? cb(Error("Undefined data - message required to sign typed data."))
                        : void this.validateSender(msgParams.from, function (err, senderIsValid) {
                              return err ? cb(err) : senderIsValid ? void cb() : cb(Error(`Unknown address - unable to sign message for this address: "${msgParams.from}"`));
                          });
                }),
                (HookedWalletSubprovider.prototype.validateSender = function (senderAddress, cb) {
                    if (!senderAddress) return cb(null, !1);
                    this.getAccounts(function (err, accounts) {
                        if (err) return cb(err);
                        let senderIsValid = -1 !== accounts.map(toLowerCase).indexOf(senderAddress.toLowerCase());
                        cb(null, senderIsValid);
                    });
                }),
                (HookedWalletSubprovider.prototype.finalizeAndSubmitTx = function (txParams, cb) {
                    let self1 = this;
                    self1.nonceLock.take(function () {
                        waterfall([self1.fillInTxExtras.bind(self1, txParams), self1.signTransaction.bind(self1), self1.publishTransaction.bind(self1)], function (err, txHash) {
                            if ((self1.nonceLock.leave(), err)) return cb(err);
                            cb(null, txHash);
                        });
                    });
                }),
                (HookedWalletSubprovider.prototype.finalizeTx = function (txParams, cb) {
                    let self1 = this;
                    self1.nonceLock.take(function () {
                        waterfall([self1.fillInTxExtras.bind(self1, txParams), self1.signTransaction.bind(self1)], function (err, signedTx) {
                            if ((self1.nonceLock.leave(), err)) return cb(err);
                            cb(null, { raw: signedTx, tx: txParams });
                        });
                    });
                }),
                (HookedWalletSubprovider.prototype.publishTransaction = function (rawTx, cb) {
                    this.emitPayload({ method: "eth_sendRawTransaction", params: [rawTx] }, function (err, res) {
                        if (err) return cb(err);
                        cb(null, res.result);
                    });
                }),
                (HookedWalletSubprovider.prototype.estimateGas = function (txParams, cb) {
                    estimateGas(this.engine, txParams, cb);
                }),
                (HookedWalletSubprovider.prototype.getGasPrice = function (cb) {
                    this.emitPayload({ method: "eth_gasPrice", params: [] }, function (err, res) {
                        if (err) return cb(err);
                        cb(null, res.result);
                    });
                }),
                (HookedWalletSubprovider.prototype.fillInTxExtras = function (txParams, cb) {
                    let address = txParams.from,
                        tasks = {};
                    void 0 === txParams.gasPrice && (tasks.gasPrice = this.getGasPrice.bind(this)),
                        void 0 === txParams.nonce && (tasks.nonce = this.emitPayload.bind(this, { method: "eth_getTransactionCount", params: [address, "pending"] })),
                        void 0 === txParams.gas &&
                            (tasks.gas = this.estimateGas.bind(this, { from: txParams.from, to: txParams.to, value: txParams.value, data: txParams.data, gas: txParams.gas, gasPrice: txParams.gasPrice, nonce: txParams.nonce })),
                        parallel(tasks, function (err, taskResults) {
                            if (err) return cb(err);
                            let result = {};
                            taskResults.gasPrice && (result.gasPrice = taskResults.gasPrice),
                                taskResults.nonce && (result.nonce = taskResults.nonce.result),
                                taskResults.gas && (result.gas = taskResults.gas),
                                cb(null, extend(txParams, result));
                        });
                });
        },
        6403: function (module, __unused_webpack_exports, __webpack_require__) {
            let Subprovider = __webpack_require__(30398);
            module.exports = class extends Subprovider {
                constructor(constructorFn) {
                    if ((super(), !constructorFn)) throw Error("JsonRpcEngineMiddlewareSubprovider - no constructorFn specified");
                    this._constructorFn = constructorFn;
                }
                setEngine(engine) {
                    if (this.middleware) throw Error("JsonRpcEngineMiddlewareSubprovider - subprovider added to engine twice");
                    let blockTracker = engine._blockTracker,
                        middleware = this._constructorFn({ engine, provider: engine, blockTracker });
                    if (!middleware) throw Error("JsonRpcEngineMiddlewareSubprovider - _constructorFn did not return middleware");
                    if ("function" != typeof middleware) throw Error("JsonRpcEngineMiddlewareSubprovider - specified middleware is not a function");
                    this.middleware = middleware;
                }
                handleRequest(req, provEngNext, provEngEnd) {
                    let res = { id: req.id };
                    this.middleware(
                        req,
                        res,
                        function (handler) {
                            provEngNext((err, result, cb) => {
                                err ? (delete res.result, (res.error = { message: err.message || err })) : (res.result = result), handler ? handler(cb) : cb();
                            });
                        },
                        function (err) {
                            if (err) return provEngEnd(err);
                            provEngEnd(null, res.result);
                        }
                    );
                }
            };
        },
        3621: function (module, __unused_webpack_exports, __webpack_require__) {
            var Buffer = __webpack_require__(48764).Buffer;
            let inherits = __webpack_require__(89539).inherits,
                Transaction = __webpack_require__(29847),
                ethUtil = __webpack_require__(21964),
                Subprovider = __webpack_require__(30398),
                blockTagForPayload = __webpack_require__(6496).blockTagForPayload;
            function NonceTrackerSubprovider(opts) {
                let self1 = this;
                self1.nonceCache = {};
            }
            (module.exports = NonceTrackerSubprovider),
                inherits(NonceTrackerSubprovider, Subprovider),
                (NonceTrackerSubprovider.prototype.handleRequest = function (payload, next, end) {
                    let self1 = this;
                    switch (payload.method) {
                        case "eth_getTransactionCount":
                            var blockTag = blockTagForPayload(payload),
                                address = payload.params[0].toLowerCase(),
                                cachedResult = self1.nonceCache[address];
                            "pending" === blockTag
                                ? cachedResult
                                    ? end(null, cachedResult)
                                    : next(function (err, result, cb) {
                                          if (err) return cb();
                                          void 0 === self1.nonceCache[address] && (self1.nonceCache[address] = result), cb();
                                      })
                                : next();
                            return;
                        case "eth_sendRawTransaction":
                            next(function (err, result, cb) {
                                if (err) return cb();
                                var rawTx = payload.params[0];
                                ethUtil.stripHexPrefix(rawTx), Buffer.from(ethUtil.stripHexPrefix(rawTx), "hex");
                                var tx = new Transaction(Buffer.from(ethUtil.stripHexPrefix(rawTx), "hex")),
                                    address = "0x" + tx.getSenderAddress().toString("hex").toLowerCase(),
                                    nonce = ethUtil.bufferToInt(tx.nonce);
                                nonce++;
                                var hexNonce = nonce.toString(16);
                                hexNonce.length % 2 && (hexNonce = "0" + hexNonce), (hexNonce = "0x" + hexNonce), (self1.nonceCache[address] = hexNonce), cb();
                            });
                            return;
                        case "evm_revert":
                            (self1.nonceCache = {}), next();
                            return;
                        default:
                            next();
                            return;
                    }
                });
        },
        30398: function (module, __unused_webpack_exports, __webpack_require__) {
            let createPayload = __webpack_require__(39728);
            function SubProvider() {}
            (module.exports = SubProvider),
                (SubProvider.prototype.setEngine = function (engine) {
                    let self1 = this;
                    self1.engine ||
                        ((self1.engine = engine),
                        engine.on("block", function (block) {
                            self1.currentBlock = block;
                        }),
                        engine.on("start", function () {
                            self1.start();
                        }),
                        engine.on("stop", function () {
                            self1.stop();
                        }));
                }),
                (SubProvider.prototype.handleRequest = function (payload, next, end) {
                    throw Error("Subproviders should override `handleRequest`.");
                }),
                (SubProvider.prototype.emitPayload = function (payload, cb) {
                    this.engine.sendAsync(createPayload(payload), cb);
                }),
                (SubProvider.prototype.stop = function () {}),
                (SubProvider.prototype.start = function () {});
        },
        78191: function (module, __unused_webpack_exports, __webpack_require__) {
            let ProviderSubprovider = __webpack_require__(6403),
                createSubscriptionManager = __webpack_require__(68961);
            module.exports = class extends ProviderSubprovider {
                constructor() {
                    super(({ blockTracker, provider, engine }) => {
                        let { events, middleware } = createSubscriptionManager({ blockTracker, provider });
                        return events.on("notification", (data) => engine.emit("data", null, data)), middleware;
                    });
                }
            };
        },
        39728: function (module, __unused_webpack_exports, __webpack_require__) {
            let getRandomId = __webpack_require__(88620),
                extend = __webpack_require__(47529);
            module.exports = function (data) {
                return extend({ id: getRandomId(), jsonrpc: "2.0", params: [] }, data);
            };
        },
        28372: function (module, __unused_webpack_exports, __webpack_require__) {
            let createPayload = __webpack_require__(39728);
            module.exports = function (provider, txParams, cb) {
                provider.sendAsync(createPayload({ method: "eth_estimateGas", params: [txParams] }), function (err, res) {
                    if (err) return "no contract code at given address" === err.message ? cb(null, "0xcf08") : cb(err);
                    cb(null, res.result);
                });
            };
        },
        88620: function (module) {
            module.exports = function () {
                return Math.floor(Number.MAX_SAFE_INTEGER * Math.random());
            };
        },
        6496: function (module, __unused_webpack_exports, __webpack_require__) {
            let stringify = __webpack_require__(67266);
            function canCache(payload) {
                return "never" !== cacheTypeForPayload(payload);
            }
            function paramsWithoutBlockTag(payload) {
                var index = blockTagParamIndex(payload);
                return index >= payload.params.length ? payload.params : "eth_getBlockByNumber" === payload.method ? payload.params.slice(1) : payload.params.slice(0, index);
            }
            function blockTagParamIndex(payload) {
                switch (payload.method) {
                    case "eth_getStorageAt":
                        return 2;
                    case "eth_getBalance":
                    case "eth_getCode":
                    case "eth_getTransactionCount":
                    case "eth_call":
                    case "eth_estimateGas":
                        return 1;
                    case "eth_getBlockByNumber":
                        return 0;
                    default:
                        return;
                }
            }
            function cacheTypeForPayload(payload) {
                switch (payload.method) {
                    case "web3_clientVersion":
                    case "web3_sha3":
                    case "eth_protocolVersion":
                    case "eth_getBlockTransactionCountByHash":
                    case "eth_getUncleCountByBlockHash":
                    case "eth_getCode":
                    case "eth_getBlockByHash":
                    case "eth_getTransactionByHash":
                    case "eth_getTransactionByBlockHashAndIndex":
                    case "eth_getTransactionReceipt":
                    case "eth_getUncleByBlockHashAndIndex":
                    case "eth_getCompilers":
                    case "eth_compileLLL":
                    case "eth_compileSolidity":
                    case "eth_compileSerpent":
                    case "shh_version":
                        return "perma";
                    case "eth_getBlockByNumber":
                    case "eth_getBlockTransactionCountByNumber":
                    case "eth_getUncleCountByBlockNumber":
                    case "eth_getTransactionByBlockNumberAndIndex":
                    case "eth_getUncleByBlockNumberAndIndex":
                        return "fork";
                    case "eth_gasPrice":
                    case "eth_getBalance":
                    case "eth_getStorageAt":
                    case "eth_getTransactionCount":
                    case "eth_call":
                    case "eth_estimateGas":
                    case "eth_getFilterLogs":
                    case "eth_getLogs":
                    case "eth_blockNumber":
                        return "block";
                    case "net_version":
                    case "net_peerCount":
                    case "net_listening":
                    case "eth_syncing":
                    case "eth_sign":
                    case "eth_coinbase":
                    case "eth_mining":
                    case "eth_hashrate":
                    case "eth_accounts":
                    case "eth_sendTransaction":
                    case "eth_sendRawTransaction":
                    case "eth_newFilter":
                    case "eth_newBlockFilter":
                    case "eth_newPendingTransactionFilter":
                    case "eth_uninstallFilter":
                    case "eth_getFilterChanges":
                    case "eth_getWork":
                    case "eth_submitWork":
                    case "eth_submitHashrate":
                    case "db_putString":
                    case "db_getString":
                    case "db_putHex":
                    case "db_getHex":
                    case "shh_post":
                    case "shh_newIdentity":
                    case "shh_hasIdentity":
                    case "shh_newGroup":
                    case "shh_addToGroup":
                    case "shh_newFilter":
                    case "shh_uninstallFilter":
                    case "shh_getFilterChanges":
                    case "shh_getMessages":
                        return "never";
                }
            }
            module.exports = {
                cacheIdentifierForPayload: function (payload, opts = {}) {
                    if (!canCache(payload)) return null;
                    let { includeBlockRef } = opts,
                        params = includeBlockRef ? payload.params : paramsWithoutBlockTag(payload);
                    return payload.method + ":" + stringify(params);
                },
                canCache: canCache,
                blockTagForPayload: function (payload) {
                    var index = blockTagParamIndex(payload);
                    return index >= payload.params.length ? null : payload.params[index];
                },
                paramsWithoutBlockTag: paramsWithoutBlockTag,
                blockTagParamIndex: blockTagParamIndex,
                cacheTypeForPayload: cacheTypeForPayload,
            };
        },
        52698: function (module, __unused_webpack_exports, __webpack_require__) {
            let EventEmitter = __webpack_require__(17187).EventEmitter,
                inherits = __webpack_require__(89539).inherits;
            function Stoplight() {
                let self1 = this;
                EventEmitter.call(self1), (self1.isLocked = !0);
            }
            (module.exports = Stoplight),
                inherits(Stoplight, EventEmitter),
                (Stoplight.prototype.go = function () {
                    let self1 = this;
                    (self1.isLocked = !1), self1.emit("unlock");
                }),
                (Stoplight.prototype.stop = function () {
                    let self1 = this;
                    (self1.isLocked = !0), self1.emit("lock");
                }),
                (Stoplight.prototype.await = function (fn) {
                    this.isLocked ? this.once("unlock", fn) : setTimeout(fn);
                });
        },
        86430: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var forEach = __webpack_require__(49804),
                availableTypedArrays = __webpack_require__(63083),
                callBound = __webpack_require__(21924),
                $toString = callBound("Object.prototype.toString"),
                hasToStringTag = __webpack_require__(96410)(),
                g = "undefined" == typeof globalThis ? __webpack_require__.g : globalThis,
                typedArrays = availableTypedArrays(),
                $slice = callBound("String.prototype.slice"),
                toStrTags = {},
                gOPD = __webpack_require__(20882),
                getPrototypeOf = Object.getPrototypeOf;
            hasToStringTag &&
                gOPD &&
                getPrototypeOf &&
                forEach(typedArrays, function (typedArray) {
                    if ("function" == typeof g[typedArray]) {
                        var arr = new g[typedArray]();
                        if (Symbol.toStringTag in arr) {
                            var proto = getPrototypeOf(arr),
                                descriptor = gOPD(proto, Symbol.toStringTag);
                            descriptor || (descriptor = gOPD(getPrototypeOf(proto), Symbol.toStringTag)), (toStrTags[typedArray] = descriptor.get);
                        }
                    }
                });
            var tryTypedArrays = function (value) {
                    var foundName = !1;
                    return (
                        forEach(toStrTags, function (getter, typedArray) {
                            if (!foundName)
                                try {
                                    var name = getter.call(value);
                                    name === typedArray && (foundName = name);
                                } catch (e) {}
                        }),
                        foundName
                    );
                },
                isTypedArray = __webpack_require__(85692);
            module.exports = function (value) {
                return !!isTypedArray(value) && (hasToStringTag && Symbol.toStringTag in value ? tryTypedArrays(value) : $slice($toString(value), 8, -1));
            };
        },
        98355: function (__unused_webpack_module, exports) {
            "use strict";
            var extendStatics,
                __extends =
                    (this && this.__extends) ||
                    ((extendStatics =
                        Object.setPrototypeOf ||
                        ({ __proto__: [] } instanceof Array &&
                            function (d, b) {
                                d.__proto__ = b;
                            }) ||
                        function (d, b) {
                            for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
                        }),
                    function (d, b) {
                        function __() {
                            this.constructor = d;
                        }
                        extendStatics(d, b), (d.prototype = null === b ? Object.create(b) : ((__.prototype = b.prototype), new __()));
                    });
            Object.defineProperty(exports, "__esModule", { value: !0 });
            var SecurityError = (function (_super) {
                function SecurityError() {
                    return (null !== _super && _super.apply(this, arguments)) || this;
                }
                return __extends(SecurityError, _super), SecurityError;
            })(Error);
            exports.SecurityError = SecurityError;
            var InvalidStateError = (function (_super) {
                function InvalidStateError() {
                    return (null !== _super && _super.apply(this, arguments)) || this;
                }
                return __extends(InvalidStateError, _super), InvalidStateError;
            })(Error);
            exports.InvalidStateError = InvalidStateError;
            var NetworkError = (function (_super) {
                function NetworkError() {
                    return (null !== _super && _super.apply(this, arguments)) || this;
                }
                return __extends(NetworkError, _super), NetworkError;
            })(Error);
            exports.NetworkError = NetworkError;
            var SyntaxError1 = (function (_super) {
                function SyntaxError1() {
                    return (null !== _super && _super.apply(this, arguments)) || this;
                }
                return __extends(SyntaxError1, _super), SyntaxError1;
            })(Error);
            exports.SyntaxError = SyntaxError1;
        },
        59536: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (function (m) {
                    for (var p in m) exports.hasOwnProperty(p) || (exports[p] = m[p]);
                })(__webpack_require__(96763));
            var xml_http_request_event_target_1 = __webpack_require__(40335);
            exports.XMLHttpRequestEventTarget = xml_http_request_event_target_1.XMLHttpRequestEventTarget;
        },
        67296: function (__unused_webpack_module, exports) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 }),
                (exports.ProgressEvent = function (type) {
                    (this.type = type), (this.bubbles = !1), (this.cancelable = !1), (this.loaded = 0), (this.lengthComputable = !1), (this.total = 0);
                });
        },
        40335: function (__unused_webpack_module, exports) {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: !0 });
            var XMLHttpRequestEventTarget = (function () {
                function XMLHttpRequestEventTarget() {
                    this.listeners = {};
                }
                return (
                    (XMLHttpRequestEventTarget.prototype.addEventListener = function (eventType, listener) {
                        (eventType = eventType.toLowerCase()), (this.listeners[eventType] = this.listeners[eventType] || []), this.listeners[eventType].push(listener.handleEvent || listener);
                    }),
                    (XMLHttpRequestEventTarget.prototype.removeEventListener = function (eventType, listener) {
                        if (((eventType = eventType.toLowerCase()), this.listeners[eventType])) {
                            var index = this.listeners[eventType].indexOf(listener.handleEvent || listener);
                            index < 0 || this.listeners[eventType].splice(index, 1);
                        }
                    }),
                    (XMLHttpRequestEventTarget.prototype.dispatchEvent = function (event) {
                        var eventType = event.type.toLowerCase();
                        if (((event.target = this), this.listeners[eventType])) for (var _i = 0, _a = this.listeners[eventType]; _i < _a.length; _i++) _a[_i].call(this, event);
                        var listener = this["on" + eventType];
                        return listener && listener.call(this, event), !0;
                    }),
                    XMLHttpRequestEventTarget
                );
            })();
            exports.XMLHttpRequestEventTarget = XMLHttpRequestEventTarget;
        },
        77983: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var extendStatics,
                Buffer = __webpack_require__(48764).Buffer,
                __extends =
                    (this && this.__extends) ||
                    ((extendStatics =
                        Object.setPrototypeOf ||
                        ({ __proto__: [] } instanceof Array &&
                            function (d, b) {
                                d.__proto__ = b;
                            }) ||
                        function (d, b) {
                            for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
                        }),
                    function (d, b) {
                        function __() {
                            this.constructor = d;
                        }
                        extendStatics(d, b), (d.prototype = null === b ? Object.create(b) : ((__.prototype = b.prototype), new __()));
                    });
            Object.defineProperty(exports, "__esModule", { value: !0 });
            var XMLHttpRequestUpload = (function (_super) {
                function XMLHttpRequestUpload() {
                    var _this = _super.call(this) || this;
                    return (_this._contentType = null), (_this._body = null), _this._reset(), _this;
                }
                return (
                    __extends(XMLHttpRequestUpload, _super),
                    (XMLHttpRequestUpload.prototype._reset = function () {
                        (this._contentType = null), (this._body = null);
                    }),
                    (XMLHttpRequestUpload.prototype._setData = function (data) {
                        if (null != data) {
                            if ("string" == typeof data) 0 !== data.length && (this._contentType = "text/plain;charset=UTF-8"), (this._body = new Buffer(data, "utf-8"));
                            else if (Buffer.isBuffer(data)) this._body = data;
                            else if (data instanceof ArrayBuffer) {
                                for (var body = new Buffer(data.byteLength), view = new Uint8Array(data), i = 0; i < data.byteLength; i++) body[i] = view[i];
                                this._body = body;
                            } else if (data.buffer && data.buffer instanceof ArrayBuffer) {
                                for (var body = new Buffer(data.byteLength), offset = data.byteOffset, view = new Uint8Array(data.buffer), i = 0; i < data.byteLength; i++) body[i] = view[i + offset];
                                this._body = body;
                            } else throw Error("Unsupported send() data " + data);
                        }
                    }),
                    (XMLHttpRequestUpload.prototype._finalizeHeaders = function (headers, loweredHeaders) {
                        this._contentType && !loweredHeaders["content-type"] && (headers["Content-Type"] = this._contentType), this._body && (headers["Content-Length"] = this._body.length.toString());
                    }),
                    (XMLHttpRequestUpload.prototype._startUpload = function (request) {
                        this._body && request.write(this._body), request.end();
                    }),
                    XMLHttpRequestUpload
                );
            })(__webpack_require__(40335).XMLHttpRequestEventTarget);
            exports.XMLHttpRequestUpload = XMLHttpRequestUpload;
        },
        96763: function (__unused_webpack_module, exports, __webpack_require__) {
            "use strict";
            var extendStatics,
                process = __webpack_require__(34155),
                Buffer = __webpack_require__(48764).Buffer,
                __extends =
                    (this && this.__extends) ||
                    ((extendStatics =
                        Object.setPrototypeOf ||
                        ({ __proto__: [] } instanceof Array &&
                            function (d, b) {
                                d.__proto__ = b;
                            }) ||
                        function (d, b) {
                            for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
                        }),
                    function (d, b) {
                        function __() {
                            this.constructor = d;
                        }
                        extendStatics(d, b), (d.prototype = null === b ? Object.create(b) : ((__.prototype = b.prototype), new __()));
                    }),
                __assign =
                    (this && this.__assign) ||
                    Object.assign ||
                    function (t) {
                        for (var s, i = 1, n = arguments.length; i < n; i++) for (var p in (s = arguments[i])) Object.prototype.hasOwnProperty.call(s, p) && (t[p] = s[p]);
                        return t;
                    };
            Object.defineProperty(exports, "__esModule", { value: !0 });
            var http = __webpack_require__(84701),
                https = __webpack_require__(27966),
                os = __webpack_require__(73461),
                url = __webpack_require__(11987),
                progress_event_1 = __webpack_require__(67296),
                errors_1 = __webpack_require__(98355),
                xml_http_request_event_target_1 = __webpack_require__(40335),
                xml_http_request_upload_1 = __webpack_require__(77983),
                Cookie = __webpack_require__(37866),
                XMLHttpRequest1 = (function (_super) {
                    function XMLHttpRequest1(options) {
                        void 0 === options && (options = {});
                        var _this = _super.call(this) || this;
                        return (
                            (_this.UNSENT = XMLHttpRequest1.UNSENT),
                            (_this.OPENED = XMLHttpRequest1.OPENED),
                            (_this.HEADERS_RECEIVED = XMLHttpRequest1.HEADERS_RECEIVED),
                            (_this.LOADING = XMLHttpRequest1.LOADING),
                            (_this.DONE = XMLHttpRequest1.DONE),
                            (_this.onreadystatechange = null),
                            (_this.readyState = XMLHttpRequest1.UNSENT),
                            (_this.response = null),
                            (_this.responseText = ""),
                            (_this.responseType = ""),
                            (_this.status = 0),
                            (_this.statusText = ""),
                            (_this.timeout = 0),
                            (_this.upload = new xml_http_request_upload_1.XMLHttpRequestUpload()),
                            (_this.responseUrl = ""),
                            (_this.withCredentials = !1),
                            (_this._method = null),
                            (_this._url = null),
                            (_this._sync = !1),
                            (_this._headers = {}),
                            (_this._loweredHeaders = {}),
                            (_this._mimeOverride = null),
                            (_this._request = null),
                            (_this._response = null),
                            (_this._responseParts = null),
                            (_this._responseHeaders = null),
                            (_this._aborting = null),
                            (_this._error = null),
                            (_this._loadedBytes = 0),
                            (_this._totalBytes = 0),
                            (_this._lengthComputable = !1),
                            (_this._restrictedMethods = { CONNECT: !0, TRACE: !0, TRACK: !0 }),
                            (_this._restrictedHeaders = {
                                "accept-charset": !0,
                                "accept-encoding": !0,
                                "access-control-request-headers": !0,
                                "access-control-request-method": !0,
                                connection: !0,
                                "content-length": !0,
                                cookie: !0,
                                cookie2: !0,
                                date: !0,
                                dnt: !0,
                                expect: !0,
                                host: !0,
                                "keep-alive": !0,
                                origin: !0,
                                referer: !0,
                                te: !0,
                                trailer: !0,
                                "transfer-encoding": !0,
                                upgrade: !0,
                                "user-agent": !0,
                                via: !0,
                            }),
                            (_this._privateHeaders = { "set-cookie": !0, "set-cookie2": !0 }),
                            (_this._userAgent = "Mozilla/5.0 (" + os.type() + " " + os.arch() + ") node.js/" + process.versions.node + " v8/" + process.versions.v8),
                            (_this._anonymous = options.anon || !1),
                            _this
                        );
                    }
                    return (
                        __extends(XMLHttpRequest1, _super),
                        (XMLHttpRequest1.prototype.open = function (method, url, async, user, password) {
                            if ((void 0 === async && (async = !0), (method = method.toUpperCase()), this._restrictedMethods[method])) throw new XMLHttpRequest1.SecurityError("HTTP method " + method + " is not allowed in XHR");
                            var xhrUrl = this._parseUrl(url, user, password);
                            this.readyState === XMLHttpRequest1.HEADERS_RECEIVED || (this.readyState, XMLHttpRequest1.LOADING),
                                (this._method = method),
                                (this._url = xhrUrl),
                                (this._sync = !async),
                                (this._headers = {}),
                                (this._loweredHeaders = {}),
                                (this._mimeOverride = null),
                                this._setReadyState(XMLHttpRequest1.OPENED),
                                (this._request = null),
                                (this._response = null),
                                (this.status = 0),
                                (this.statusText = ""),
                                (this._responseParts = []),
                                (this._responseHeaders = null),
                                (this._loadedBytes = 0),
                                (this._totalBytes = 0),
                                (this._lengthComputable = !1);
                        }),
                        (XMLHttpRequest1.prototype.setRequestHeader = function (name, value) {
                            if (this.readyState !== XMLHttpRequest1.OPENED) throw new XMLHttpRequest1.InvalidStateError("XHR readyState must be OPENED");
                            var loweredName = name.toLowerCase();
                            if (this._restrictedHeaders[loweredName] || /^sec-/.test(loweredName) || /^proxy-/.test(loweredName)) {
                                console.warn('Refused to set unsafe header "' + name + '"');
                                return;
                            }
                            (value = value.toString()),
                                null != this._loweredHeaders[loweredName]
                                    ? ((name = this._loweredHeaders[loweredName]), (this._headers[name] = this._headers[name] + ", " + value))
                                    : ((this._loweredHeaders[loweredName] = name), (this._headers[name] = value));
                        }),
                        (XMLHttpRequest1.prototype.send = function (data) {
                            if (this.readyState !== XMLHttpRequest1.OPENED) throw new XMLHttpRequest1.InvalidStateError("XHR readyState must be OPENED");
                            if (this._request) throw new XMLHttpRequest1.InvalidStateError("send() already called");
                            switch (this._url.protocol) {
                                case "file:":
                                    return this._sendFile(data);
                                case "http:":
                                case "https:":
                                    return this._sendHttp(data);
                                default:
                                    throw new XMLHttpRequest1.NetworkError("Unsupported protocol " + this._url.protocol);
                            }
                        }),
                        (XMLHttpRequest1.prototype.abort = function () {
                            null != this._request && (this._request.abort(), this._setError(), this._dispatchProgress("abort"), this._dispatchProgress("loadend"));
                        }),
                        (XMLHttpRequest1.prototype.getResponseHeader = function (name) {
                            if (null == this._responseHeaders || null == name) return null;
                            var loweredName = name.toLowerCase();
                            return this._responseHeaders.hasOwnProperty(loweredName) ? this._responseHeaders[name.toLowerCase()] : null;
                        }),
                        (XMLHttpRequest1.prototype.getAllResponseHeaders = function () {
                            var _this = this;
                            return null == this._responseHeaders
                                ? ""
                                : Object.keys(this._responseHeaders)
                                      .map(function (key) {
                                          return key + ": " + _this._responseHeaders[key];
                                      })
                                      .join("\r\n");
                        }),
                        (XMLHttpRequest1.prototype.overrideMimeType = function (mimeType) {
                            if (this.readyState === XMLHttpRequest1.LOADING || this.readyState === XMLHttpRequest1.DONE) throw new XMLHttpRequest1.InvalidStateError("overrideMimeType() not allowed in LOADING or DONE");
                            this._mimeOverride = mimeType.toLowerCase();
                        }),
                        (XMLHttpRequest1.prototype.nodejsSet = function (options) {
                            if (((this.nodejsHttpAgent = options.httpAgent || this.nodejsHttpAgent), (this.nodejsHttpsAgent = options.httpsAgent || this.nodejsHttpsAgent), options.hasOwnProperty("baseUrl"))) {
                                if (null != options.baseUrl && !url.parse(options.baseUrl, !1, !0).protocol) throw new XMLHttpRequest1.SyntaxError("baseUrl must be an absolute URL");
                                this.nodejsBaseUrl = options.baseUrl;
                            }
                        }),
                        (XMLHttpRequest1.nodejsSet = function (options) {
                            XMLHttpRequest1.prototype.nodejsSet(options);
                        }),
                        (XMLHttpRequest1.prototype._setReadyState = function (readyState) {
                            (this.readyState = readyState), this.dispatchEvent(new progress_event_1.ProgressEvent("readystatechange"));
                        }),
                        (XMLHttpRequest1.prototype._sendFile = function (data) {
                            throw Error("Protocol file: not implemented");
                        }),
                        (XMLHttpRequest1.prototype._sendHttp = function (data) {
                            if (this._sync) throw Error("Synchronous XHR processing not implemented");
                            data && ("GET" === this._method || "HEAD" === this._method) ? (console.warn("Discarding entity body for " + this._method + " requests"), (data = null)) : (data = data || ""),
                                this.upload._setData(data),
                                this._finalizeHeaders(),
                                this._sendHxxpRequest();
                        }),
                        (XMLHttpRequest1.prototype._sendHxxpRequest = function () {
                            var _this = this;
                            if (this.withCredentials) {
                                var cookie = XMLHttpRequest1.cookieJar.getCookies(Cookie.CookieAccessInfo(this._url.hostname, this._url.pathname, "https:" === this._url.protocol)).toValueString();
                                this._headers.cookie = this._headers.cookie2 = cookie;
                            }
                            var _a = "http:" === this._url.protocol ? [http, this.nodejsHttpAgent] : [https, this.nodejsHttpsAgent],
                                hxxp = _a[0],
                                agent = _a[1],
                                request = hxxp.request.bind(hxxp)({ hostname: this._url.hostname, port: +this._url.port, path: this._url.path, auth: this._url.auth, method: this._method, headers: this._headers, agent: agent });
                            (this._request = request),
                                this.timeout &&
                                    request.setTimeout(this.timeout, function () {
                                        return _this._onHttpTimeout(request);
                                    }),
                                request.on("response", function (response) {
                                    return _this._onHttpResponse(request, response);
                                }),
                                request.on("error", function (error) {
                                    return _this._onHttpRequestError(request, error);
                                }),
                                this.upload._startUpload(request),
                                this._request === request && this._dispatchProgress("loadstart");
                        }),
                        (XMLHttpRequest1.prototype._finalizeHeaders = function () {
                            (this._headers = __assign({}, this._headers, { Connection: "keep-alive", Host: this._url.host, "User-Agent": this._userAgent }, this._anonymous ? { Referer: "about:blank" } : {})),
                                this.upload._finalizeHeaders(this._headers, this._loweredHeaders);
                        }),
                        (XMLHttpRequest1.prototype._onHttpResponse = function (request, response) {
                            var _this = this;
                            if (this._request === request) {
                                if (
                                    (this.withCredentials && (response.headers["set-cookie"] || response.headers["set-cookie2"]) && XMLHttpRequest1.cookieJar.setCookies(response.headers["set-cookie"] || response.headers["set-cookie2"]),
                                    [301, 302, 303, 307, 308].indexOf(response.statusCode) >= 0)
                                ) {
                                    (this._url = this._parseUrl(response.headers.location)),
                                        (this._method = "GET"),
                                        this._loweredHeaders["content-type"] && (delete this._headers[this._loweredHeaders["content-type"]], delete this._loweredHeaders["content-type"]),
                                        null != this._headers["Content-Type"] && delete this._headers["Content-Type"],
                                        delete this._headers["Content-Length"],
                                        this.upload._reset(),
                                        this._finalizeHeaders(),
                                        this._sendHxxpRequest();
                                    return;
                                }
                                (this._response = response),
                                    this._response.on("data", function (data) {
                                        return _this._onHttpResponseData(response, data);
                                    }),
                                    this._response.on("end", function () {
                                        return _this._onHttpResponseEnd(response);
                                    }),
                                    this._response.on("close", function () {
                                        return _this._onHttpResponseClose(response);
                                    }),
                                    (this.responseUrl = this._url.href.split("#")[0]),
                                    (this.status = response.statusCode),
                                    (this.statusText = http.STATUS_CODES[this.status]),
                                    this._parseResponseHeaders(response);
                                var lengthString = this._responseHeaders["content-length"] || "";
                                (this._totalBytes = +lengthString), (this._lengthComputable = !!lengthString), this._setReadyState(XMLHttpRequest1.HEADERS_RECEIVED);
                            }
                        }),
                        (XMLHttpRequest1.prototype._onHttpResponseData = function (response, data) {
                            this._response === response &&
                                (this._responseParts.push(new Buffer(data)),
                                (this._loadedBytes += data.length),
                                this.readyState !== XMLHttpRequest1.LOADING && this._setReadyState(XMLHttpRequest1.LOADING),
                                this._dispatchProgress("progress"));
                        }),
                        (XMLHttpRequest1.prototype._onHttpResponseEnd = function (response) {
                            this._response === response &&
                                (this._parseResponse(), (this._request = null), (this._response = null), this._setReadyState(XMLHttpRequest1.DONE), this._dispatchProgress("load"), this._dispatchProgress("loadend"));
                        }),
                        (XMLHttpRequest1.prototype._onHttpResponseClose = function (response) {
                            if (this._response === response) {
                                var request = this._request;
                                this._setError(), request.abort(), this._setReadyState(XMLHttpRequest1.DONE), this._dispatchProgress("error"), this._dispatchProgress("loadend");
                            }
                        }),
                        (XMLHttpRequest1.prototype._onHttpTimeout = function (request) {
                            this._request === request && (this._setError(), request.abort(), this._setReadyState(XMLHttpRequest1.DONE), this._dispatchProgress("timeout"), this._dispatchProgress("loadend"));
                        }),
                        (XMLHttpRequest1.prototype._onHttpRequestError = function (request, error) {
                            this._request === request && (this._setError(), request.abort(), this._setReadyState(XMLHttpRequest1.DONE), this._dispatchProgress("error"), this._dispatchProgress("loadend"));
                        }),
                        (XMLHttpRequest1.prototype._dispatchProgress = function (eventType) {
                            var event = new XMLHttpRequest1.ProgressEvent(eventType);
                            (event.lengthComputable = this._lengthComputable), (event.loaded = this._loadedBytes), (event.total = this._totalBytes), this.dispatchEvent(event);
                        }),
                        (XMLHttpRequest1.prototype._setError = function () {
                            (this._request = null), (this._response = null), (this._responseHeaders = null), (this._responseParts = null);
                        }),
                        (XMLHttpRequest1.prototype._parseUrl = function (urlString, user, password) {
                            var absoluteUrl = null == this.nodejsBaseUrl ? urlString : url.resolve(this.nodejsBaseUrl, urlString),
                                xhrUrl = url.parse(absoluteUrl, !1, !0);
                            xhrUrl.hash = null;
                            var _a = (xhrUrl.auth || "").split(":"),
                                xhrUser = _a[0],
                                xhrPassword = _a[1];
                            return (xhrUser || xhrPassword || user || password) && (xhrUrl.auth = (user || xhrUser || "") + ":" + (password || xhrPassword || "")), xhrUrl;
                        }),
                        (XMLHttpRequest1.prototype._parseResponseHeaders = function (response) {
                            for (var name_1 in ((this._responseHeaders = {}), response.headers)) {
                                var loweredName = name_1.toLowerCase();
                                this._privateHeaders[loweredName] || (this._responseHeaders[loweredName] = response.headers[name_1]);
                            }
                            null != this._mimeOverride && (this._responseHeaders["content-type"] = this._mimeOverride);
                        }),
                        (XMLHttpRequest1.prototype._parseResponse = function () {
                            var buffer = Buffer.concat(this._responseParts);
                            switch (((this._responseParts = null), this.responseType)) {
                                case "json":
                                    this.responseText = null;
                                    try {
                                        this.response = JSON.parse(buffer.toString("utf-8"));
                                    } catch (_a) {
                                        this.response = null;
                                    }
                                    return;
                                case "buffer":
                                    (this.responseText = null), (this.response = buffer);
                                    return;
                                case "arraybuffer":
                                    this.responseText = null;
                                    for (var arrayBuffer = new ArrayBuffer(buffer.length), view = new Uint8Array(arrayBuffer), i = 0; i < buffer.length; i++) view[i] = buffer[i];
                                    this.response = arrayBuffer;
                                    return;
                                default:
                                    try {
                                        this.responseText = buffer.toString(this._parseResponseEncoding());
                                    } catch (_b) {
                                        this.responseText = buffer.toString("binary");
                                    }
                                    this.response = this.responseText;
                            }
                        }),
                        (XMLHttpRequest1.prototype._parseResponseEncoding = function () {
                            return /;\s*charset=(.*)$/.exec(this._responseHeaders["content-type"] || "")[1] || "utf-8";
                        }),
                        (XMLHttpRequest1.ProgressEvent = progress_event_1.ProgressEvent),
                        (XMLHttpRequest1.InvalidStateError = errors_1.InvalidStateError),
                        (XMLHttpRequest1.NetworkError = errors_1.NetworkError),
                        (XMLHttpRequest1.SecurityError = errors_1.SecurityError),
                        (XMLHttpRequest1.SyntaxError = errors_1.SyntaxError),
                        (XMLHttpRequest1.XMLHttpRequestUpload = xml_http_request_upload_1.XMLHttpRequestUpload),
                        (XMLHttpRequest1.UNSENT = 0),
                        (XMLHttpRequest1.OPENED = 1),
                        (XMLHttpRequest1.HEADERS_RECEIVED = 2),
                        (XMLHttpRequest1.LOADING = 3),
                        (XMLHttpRequest1.DONE = 4),
                        (XMLHttpRequest1.cookieJar = Cookie.CookieJar()),
                        XMLHttpRequest1
                    );
                })(xml_http_request_event_target_1.XMLHttpRequestEventTarget);
            (exports.XMLHttpRequest = XMLHttpRequest1), (XMLHttpRequest1.prototype.nodejsHttpAgent = http.globalAgent), (XMLHttpRequest1.prototype.nodejsHttpsAgent = https.globalAgent), (XMLHttpRequest1.prototype.nodejsBaseUrl = null);
        },
        47529: function (module) {
            module.exports = function () {
                for (var target = {}, i = 0; i < arguments.length; i++) {
                    var source = arguments[i];
                    for (var key in source) hasOwnProperty.call(source, key) && (target[key] = source[key]);
                }
                return target;
            };
            var hasOwnProperty = Object.prototype.hasOwnProperty;
        },
        82281: function (module) {
            "use strict";
            var prev,
                alphabet = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".split(""),
                map = {},
                seed = 0,
                i = 0;
            function encode(num) {
                var encoded = "";
                do (encoded = alphabet[num % 64] + encoded), (num = Math.floor(num / 64));
                while (num > 0);
                return encoded;
            }
            function yeast() {
                var now = encode(+new Date());
                return now !== prev ? ((seed = 0), (prev = now)) : now + "." + encode(seed++);
            }
            for (; i < 64; i++) map[alphabet[i]] = i;
            (yeast.encode = encode),
                (yeast.decode = function (str) {
                    var decoded = 0;
                    for (i = 0; i < str.length; i++) decoded = 64 * decoded + map[str.charAt(i)];
                    return decoded;
                }),
                (module.exports = yeast);
        },
        36563: function () {},
        46601: function () {},
        89214: function () {},
        22263: function () {},
        5536: function () {},
        16978: function () {},
        69386: function () {},
        31616: function () {},
        29120: function () {},
        46586: function () {},
        6567: function () {},
        84701: function () {},
        27966: function () {},
        63083: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var possibleNames = ["BigInt64Array", "BigUint64Array", "Float32Array", "Float64Array", "Int16Array", "Int32Array", "Int8Array", "Uint16Array", "Uint32Array", "Uint8Array", "Uint8ClampedArray"],
                g = "undefined" == typeof globalThis ? __webpack_require__.g : globalThis;
            module.exports = function () {
                for (var out = [], i = 0; i < possibleNames.length; i++) "function" == typeof g[possibleNames[i]] && (out[out.length] = possibleNames[i]);
                return out;
            };
        },
        20882: function (module, __unused_webpack_exports, __webpack_require__) {
            "use strict";
            var $gOPD = __webpack_require__(40210)("%Object.getOwnPropertyDescriptor%", !0);
            if ($gOPD)
                try {
                    $gOPD([], "length");
                } catch (e) {
                    $gOPD = null;
                }
            module.exports = $gOPD;
        },
        7297: function (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
            "use strict";
            function _taggedTemplateLiteral(strings, raw) {
                return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
            }
            __webpack_require__.d(__webpack_exports__, {
                Z: function () {
                    return _taggedTemplateLiteral;
                },
            });
        },
        53416: function (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                x0: function () {
                    return nanoid;
                },
            });
            let nanoid = (size = 21) => {
                let id = "",
                    bytes = crypto.getRandomValues(new Uint8Array(size));
                for (; size--; ) {
                    let byte = 63 & bytes[size];
                    byte < 36 ? (id += byte.toString(36)) : byte < 62 ? (id += (byte - 26).toString(36).toUpperCase()) : byte < 63 ? (id += "_") : (id += "-");
                }
                return id;
            };
        },
        18597: function (module) {
            "use strict";
            module.exports = { i8: "6.5.4" };
        },
        16523: function (module) {
            "use strict";
            module.exports = JSON.parse(
                '{"genesisGasLimit":{"v":5000,"d":"Gas limit of the Genesis block."},"genesisDifficulty":{"v":17179869184,"d":"Difficulty of the Genesis block."},"genesisNonce":{"v":"0x0000000000000042","d":"the geneis nonce"},"genesisExtraData":{"v":"0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa","d":"extra data "},"genesisHash":{"v":"0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3","d":"genesis hash"},"genesisStateRoot":{"v":"0xd7f8974fb5ac78d9ac099b9ad5018bedc2ce0a72dad1827a1709da30580f0544","d":"the genesis state root"},"minGasLimit":{"v":5000,"d":"Minimum the gas limit may ever be."},"gasLimitBoundDivisor":{"v":1024,"d":"The bound divisor of the gas limit, used in update calculations."},"minimumDifficulty":{"v":131072,"d":"The minimum that the difficulty may ever be."},"difficultyBoundDivisor":{"v":2048,"d":"The bound divisor of the difficulty, used in the update calculations."},"durationLimit":{"v":13,"d":"The decision boundary on the blocktime duration used to determine whether difficulty should go up or not."},"maximumExtraDataSize":{"v":32,"d":"Maximum size extra data may be after Genesis."},"epochDuration":{"v":30000,"d":"Duration between proof-of-work epochs."},"stackLimit":{"v":1024,"d":"Maximum size of VM stack allowed."},"callCreateDepth":{"v":1024,"d":"Maximum depth of call/create stack."},"tierStepGas":{"v":[0,2,3,5,8,10,20],"d":"Once per operation, for a selection of them."},"expGas":{"v":10,"d":"Once per EXP instuction."},"expByteGas":{"v":10,"d":"Times ceil(log256(exponent)) for the EXP instruction."},"sha3Gas":{"v":30,"d":"Once per SHA3 operation."},"sha3WordGas":{"v":6,"d":"Once per word of the SHA3 operation\'s data."},"sloadGas":{"v":50,"d":"Once per SLOAD operation."},"sstoreSetGas":{"v":20000,"d":"Once per SSTORE operation if the zeroness changes from zero."},"sstoreResetGas":{"v":5000,"d":"Once per SSTORE operation if the zeroness does not change from zero."},"sstoreRefundGas":{"v":15000,"d":"Once per SSTORE operation if the zeroness changes to zero."},"jumpdestGas":{"v":1,"d":"Refunded gas, once per SSTORE operation if the zeroness changes to zero."},"logGas":{"v":375,"d":"Per LOG* operation."},"logDataGas":{"v":8,"d":"Per byte in a LOG* operation\'s data."},"logTopicGas":{"v":375,"d":"Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas."},"createGas":{"v":32000,"d":"Once per CREATE operation & contract-creation transaction."},"callGas":{"v":40,"d":"Once per CALL operation & message call transaction."},"callStipend":{"v":2300,"d":"Free gas given at beginning of call."},"callValueTransferGas":{"v":9000,"d":"Paid for CALL when the value transfor is non-zero."},"callNewAccountGas":{"v":25000,"d":"Paid for CALL when the destination address didn\'t exist prior."},"suicideRefundGas":{"v":24000,"d":"Refunded following a suicide operation."},"memoryGas":{"v":3,"d":"Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL."},"quadCoeffDiv":{"v":512,"d":"Divisor for the quadratic particle of the memory cost equation."},"createDataGas":{"v":200,"d":""},"txGas":{"v":21000,"d":"Per transaction. NOTE: Not payable on data of calls between transactions."},"txCreation":{"v":32000,"d":"the cost of creating a contract via tx"},"txDataZeroGas":{"v":4,"d":"Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions."},"txDataNonZeroGas":{"v":68,"d":"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions."},"copyGas":{"v":3,"d":"Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added."},"ecrecoverGas":{"v":3000,"d":""},"sha256Gas":{"v":60,"d":""},"sha256WordGas":{"v":12,"d":""},"ripemd160Gas":{"v":600,"d":""},"ripemd160WordGas":{"v":120,"d":""},"identityGas":{"v":15,"d":""},"identityWordGas":{"v":3,"d":""},"minerReward":{"v":"5000000000000000000","d":"the amount a miner get rewarded for mining a block"},"ommerReward":{"v":"625000000000000000","d":"The amount of wei a miner of an uncle block gets for being inculded in the blockchain"},"niblingReward":{"v":"156250000000000000","d":"the amount a miner gets for inculding a uncle"},"homeSteadForkNumber":{"v":1150000,"d":"the block that the Homestead fork started at"},"homesteadRepriceForkNumber":{"v":2463000,"d":"the block that the Homestead Reprice (EIP150) fork started at"},"timebombPeriod":{"v":100000,"d":"Exponential difficulty timebomb period"},"freeBlockPeriod":{"v":2}}'
            );
        },
    },
    function (__webpack_require__) {
        var __webpack_exec__ = function (moduleId) {
            return __webpack_require__((__webpack_require__.s = moduleId));
        };
        __webpack_require__.O(0, [774, 179], function () {
            return __webpack_exec__(75492), __webpack_exec__(80880);
        }),
            (_N_E = __webpack_require__.O());
    },
]);
